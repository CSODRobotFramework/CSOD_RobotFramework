<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20161128 21:56:24.285" generator="Robot 3.0 (Python 2.7.12 on win32)">
<suite source="C:\Users\gfung\.jenkins\workspace\COMP-Smoketest-Admin-Side\COMP" id="s1" name="COMP">
<suite source="C:\Users\gfung\.jenkins\workspace\COMP-Smoketest-Admin-Side\COMP\TestSuites" id="s1-s1" name="TestSuites">
<suite source="C:\Users\gfung\.jenkins\workspace\COMP-Smoketest-Admin-Side\COMP\TestSuites\SMP-API-Talent_Pool.robot" id="s1-s1-s1" name="SMP-API-Talent Pool">
<test id="s1-s1-s1-t1" name="POST-API_Talent_Pool_Create_Succ_Return_Name">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:31.343" starttime="20161128 21:56:30.333"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:31.517" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161128 21:56:31.518" starttime="20161128 21:56:31.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:31.519" level="INFO">514</msg>
<status status="PASS" endtime="20161128 21:56:31.519" starttime="20161128 21:56:31.518"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:31.564" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:31.564" starttime="20161128 21:56:31.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:31.566" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161128 21:56:31.566" starttime="20161128 21:56:31.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:31.568" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:31.568" starttime="20161128 21:56:31.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:31.569" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:31.569" starttime="20161128 21:56:31.568"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:31.570" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:31.571" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:31.571" starttime="20161128 21:56:31.570"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:31.572" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:31.573" starttime="20161128 21:56:31.572"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:31.574" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161128 21:56:31.574" starttime="20161128 21:56:31.573"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:31.575" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:31.575" starttime="20161128 21:56:31.575"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:31.576" starttime="20161128 21:56:30.330"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:31.578" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:31.579" starttime="20161128 21:56:31.578"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:31.582" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:31.583" starttime="20161128 21:56:31.579"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:31.650" starttime="20161128 21:56:31.583"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:31.651" starttime="20161128 21:56:31.650"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:31.654" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:31.654" starttime="20161128 21:56:31.652"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:31.655" starttime="20161128 21:56:31.655"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:31.655" starttime="20161128 21:56:31.577"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>InnocentName</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:31.665" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:31.665" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:31.665" starttime="20161128 21:56:31.664"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:31.666" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:31.667" starttime="20161128 21:56:31.666"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:31.668" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161128 21:56:31.668" starttime="20161128 21:56:31.667"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:31.670" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:31.670" starttime="20161128 21:56:31.669"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:31.671" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:31.671" starttime="20161128 21:56:31.670"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:31.673" level="INFO">Request body set to "{ "Title":"InnocentName"}".</msg>
<status status="PASS" endtime="20161128 21:56:31.673" starttime="20161128 21:56:31.672"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:40.079" starttime="20161128 21:56:31.673"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:40.080" starttime="20161128 21:56:40.080"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:40.081" level="INFO">${resBody} = {"TalentpoolId":6551,"Title":"InnocentName","Owner":{"UserId":514,"FirstName":"Juan","LastName":"Valle"},"CreatedDate":"2016-11-29T05:56:38.263","ModifierId":1,"ModifiedDate":"2016-11-29T05:56:38.263"...</msg>
<status status="PASS" endtime="20161128 21:56:40.081" starttime="20161128 21:56:40.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.083" level="INFO">{"TalentpoolId":6551,"Title":"InnocentName","Owner":{"UserId":514,"FirstName":"Juan","LastName":"Valle"},"CreatedDate":"2016-11-29T05:56:38.263","ModifierId":1,"ModifiedDate":"2016-11-29T05:56:38.263","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:40.083" starttime="20161128 21:56:40.082"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:40.084" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'InnocentName', u'TalentpoolId': 6551, u'ModifiedDate': u'2016-11-29T05:56:38.263', u'CreatedDate': u'2016-11-29T05:56:38.263', u'Owner': {u'LastName': u'Valle', u'User...</msg>
<status status="PASS" endtime="20161128 21:56:40.084" starttime="20161128 21:56:40.083"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:40.086" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'InnocentName', u'CreatedDate': u'2016-11-29T05:56:38.263', u'ModifiedDate': u'2016-11-29T05:56:38.263', u'TalentpoolId': 6551, u'Owner': {u'LastName': u'Valle', u'User...</msg>
<status status="PASS" endtime="20161128 21:56:40.086" starttime="20161128 21:56:40.085"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:40.087" level="INFO">${keyValue} = InnocentName</msg>
<status status="PASS" endtime="20161128 21:56:40.087" starttime="20161128 21:56:40.086"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:40.088" starttime="20161128 21:56:31.662"></status>
</kw>
<doc>*Name:*
API_Talent_Pool_Create_Success_Return_Name.

*Description:*
verify new talent pool returns correct name

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:40.088" critical="yes" starttime="20161128 21:56:30.322"></status>
</test>
<test id="s1-s1-s1-t2" name="POST-API_Talent_Pool_Success_NewEntryExist">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:40.159" starttime="20161128 21:56:40.092"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:40.174" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161128 21:56:40.175" starttime="20161128 21:56:40.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.177" level="INFO">48</msg>
<status status="PASS" endtime="20161128 21:56:40.177" starttime="20161128 21:56:40.175"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:40.180" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:40.180" starttime="20161128 21:56:40.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.182" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161128 21:56:40.182" starttime="20161128 21:56:40.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.184" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:40.184" starttime="20161128 21:56:40.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.185" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:40.186" starttime="20161128 21:56:40.185"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:40.187" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:40.187" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:40.187" starttime="20161128 21:56:40.186"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.189" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:40.189" starttime="20161128 21:56:40.188"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.190" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161128 21:56:40.191" starttime="20161128 21:56:40.190"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.192" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:40.192" starttime="20161128 21:56:40.191"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:40.192" starttime="20161128 21:56:40.091"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:40.194" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:40.195" starttime="20161128 21:56:40.194"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:40.199" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:40.199" starttime="20161128 21:56:40.195"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:40.247" starttime="20161128 21:56:40.199"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:40.248" starttime="20161128 21:56:40.248"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:40.250" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:40.250" starttime="20161128 21:56:40.249"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:40.252" starttime="20161128 21:56:40.251"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:40.253" starttime="20161128 21:56:40.193"></status>
</kw>
<kw name="POST_TalentPool_Create_Random_Title" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Title</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:40.276" starttime="20161128 21:56:40.262"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT CONVERT(varchar(255), NEWID())</arg>
</arguments>
<assign>
<var>${SQL_RandomName}</var>
</assign>
<msg timestamp="20161128 21:56:40.278" level="INFO">${SQL_RandomName} = EB6EBB67-3E58-4342-BA20-22A0606CB2BA</msg>
<status status="PASS" endtime="20161128 21:56:40.279" starttime="20161128 21:56:40.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_RandomName}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.280" level="INFO">${SQL_RandomName} = EB6EBB67-3E58-4342-BA20-22A0606CB2BA</msg>
<status status="PASS" endtime="20161128 21:56:40.280" starttime="20161128 21:56:40.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_RandomName}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.281" level="INFO">EB6EBB67-3E58-4342-BA20-22A0606CB2BA</msg>
<status status="PASS" endtime="20161128 21:56:40.282" starttime="20161128 21:56:40.281"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:40.284" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:40.284" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:40.285" starttime="20161128 21:56:40.283"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.286" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:40.286" starttime="20161128 21:56:40.285"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.287" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161128 21:56:40.287" starttime="20161128 21:56:40.287"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.289" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:40.289" starttime="20161128 21:56:40.288"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:40.290" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:40.290" starttime="20161128 21:56:40.289"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SQL_RandomName}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.291" level="INFO">Request body set to "{ "Title":"EB6EBB67-3E58-4342-BA20-22A0606CB2BA"}".</msg>
<status status="PASS" endtime="20161128 21:56:40.292" starttime="20161128 21:56:40.291"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:40.518" starttime="20161128 21:56:40.292"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:40.518" starttime="20161128 21:56:40.518"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 title FROM ou WHERE ou.type_id = 131072 AND title = '${SQL_RandomName}'</arg>
</arguments>
<assign>
<var>${SQL_GetTalentPoolIdByName}</var>
</assign>
<msg timestamp="20161128 21:56:40.557" level="INFO">${SQL_GetTalentPoolIdByName} = EB6EBB67-3E58-4342-BA20-22A0606CB2BA</msg>
<status status="PASS" endtime="20161128 21:56:40.557" starttime="20161128 21:56:40.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GetTalentPoolIdByName}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.559" level="INFO">EB6EBB67-3E58-4342-BA20-22A0606CB2BA</msg>
<status status="PASS" endtime="20161128 21:56:40.559" starttime="20161128 21:56:40.558"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${SQL_GetTalentPoolIdByName}==${SQL_RandomName}"</arg>
<arg>Set Test Message</arg>
<arg>Passed Random Name was matched with Database entry.</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>Passed Random Name was matched with Database entry.</arg>
</arguments>
<msg timestamp="20161128 21:56:40.563" level="INFO">Set test message to:
Passed Random Name was matched with Database entry.</msg>
<status status="PASS" endtime="20161128 21:56:40.563" starttime="20161128 21:56:40.562"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:40.564" starttime="20161128 21:56:40.560"></status>
</kw>
<kw name="Close" library="SQLlibrary">
<status status="PASS" endtime="20161128 21:56:40.566" starttime="20161128 21:56:40.564"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:40.566" starttime="20161128 21:56:40.261"></status>
</kw>
<doc>*Name:*
API_Talent_Pool_Success_NewEntryExist.

*Description:*
verify new talent pool in data base

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:40.566" critical="yes" starttime="20161128 21:56:40.089">Passed Random Name was matched with Database entry.</status>
</test>
<test id="s1-s1-s1-t3" name="POST-API_TPC_Length_0">
<kw name="REST_NOAUTH_Shared_TalentPools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:40.583" starttime="20161128 21:56:40.570"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 talent_pool_shared_user.user_id FROM talent_pool_shared_user JOIN users ON talent_pool_shared_user.user_id = users.user_id WHERE users.culture_lang_id IS NOT NULL GROUP BY talent_pool_shared_user.user_id ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:40.685" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161128 21:56:40.686" starttime="20161128 21:56:40.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.687" level="INFO">48</msg>
<status status="PASS" endtime="20161128 21:56:40.687" starttime="20161128 21:56:40.686"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:40.689" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:40.690" starttime="20161128 21:56:40.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.691" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161128 21:56:40.691" starttime="20161128 21:56:40.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.693" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:40.693" starttime="20161128 21:56:40.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.694" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:40.694" starttime="20161128 21:56:40.694"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:40.695" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:40.696" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:40.696" starttime="20161128 21:56:40.695"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.697" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:40.697" starttime="20161128 21:56:40.696"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.698" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161128 21:56:40.699" starttime="20161128 21:56:40.698"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.701" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:40.701" starttime="20161128 21:56:40.699"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:40.702" starttime="20161128 21:56:40.569"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:40.705" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:40.705" starttime="20161128 21:56:40.704"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:40.709" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:40.709" starttime="20161128 21:56:40.706"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:40.731" starttime="20161128 21:56:40.710"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:40.732" starttime="20161128 21:56:40.732"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:40.734" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:40.734" starttime="20161128 21:56:40.733"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:40.736" starttime="20161128 21:56:40.735"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:40.736" starttime="20161128 21:56:40.703"></status>
</kw>
<kw name="POST_TalentPool_Create_Empty_String" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${EMPTY}</arg>
<arg>Title</arg>
<arg>400</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:40.744" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:40.744" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:40.745" starttime="20161128 21:56:40.744"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.746" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:40.746" starttime="20161128 21:56:40.745"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.747" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161128 21:56:40.747" starttime="20161128 21:56:40.746"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.748" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:40.749" starttime="20161128 21:56:40.748"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:40.750" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20161128 21:56:40.750" starttime="20161128 21:56:40.749"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161128 21:56:40.751" starttime="20161128 21:56:40.751"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"${KEY_NAME_JSON}\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.753" level="INFO">Request body set to "{ "Title":""}".</msg>
<status status="PASS" endtime="20161128 21:56:40.753" starttime="20161128 21:56:40.752"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:40.924" starttime="20161128 21:56:40.753"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:40.925" starttime="20161128 21:56:40.925"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:40.926" level="INFO">${resBody} = {"Message":"Title cannot be empty."}</msg>
<status status="PASS" endtime="20161128 21:56:40.926" starttime="20161128 21:56:40.926"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20161128 21:56:40.928" level="INFO">Set test message to:
The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20161128 21:56:40.928" starttime="20161128 21:56:40.927"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:40.928" starttime="20161128 21:56:40.743"></status>
</kw>
<doc>*Name:*
Api_TPC_Length_0.

*Description:*
verify failure when title length is 0

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:40.929" critical="yes" starttime="20161128 21:56:40.567">The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-s1-t4" name="POST-API_TPC_Length_1">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:40.953" starttime="20161128 21:56:40.932"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:40.979" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161128 21:56:40.979" starttime="20161128 21:56:40.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.980" level="INFO">415</msg>
<status status="PASS" endtime="20161128 21:56:40.980" starttime="20161128 21:56:40.979"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:40.986" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:40.987" starttime="20161128 21:56:40.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.988" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161128 21:56:40.989" starttime="20161128 21:56:40.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.990" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:40.990" starttime="20161128 21:56:40.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.991" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:40.992" starttime="20161128 21:56:40.991"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:40.993" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:40.993" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:40.993" starttime="20161128 21:56:40.992"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.994" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:40.994" starttime="20161128 21:56:40.994"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.995" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161128 21:56:40.996" starttime="20161128 21:56:40.995"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:40.997" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:40.997" starttime="20161128 21:56:40.996"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:40.998" starttime="20161128 21:56:40.931"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:41.000" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:41.000" starttime="20161128 21:56:40.999"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:41.004" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:41.004" starttime="20161128 21:56:41.001"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.024" starttime="20161128 21:56:41.005"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.025" starttime="20161128 21:56:41.025"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:41.026" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:41.027" starttime="20161128 21:56:41.026"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.027" starttime="20161128 21:56:41.027"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:41.028" starttime="20161128 21:56:40.998"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>1</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:41.040" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:41.040" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:41.040" starttime="20161128 21:56:41.039"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.042" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:41.042" starttime="20161128 21:56:41.041"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.044" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161128 21:56:41.044" starttime="20161128 21:56:41.043"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.045" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:41.045" starttime="20161128 21:56:41.044"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:41.046" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:41.046" starttime="20161128 21:56:41.046"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.048" level="INFO">Request body set to "{ "Title":"1"}".</msg>
<status status="PASS" endtime="20161128 21:56:41.048" starttime="20161128 21:56:41.047"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.125" starttime="20161128 21:56:41.048"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.126" starttime="20161128 21:56:41.126"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:41.128" level="INFO">${resBody} = {"TalentpoolId":6553,"Title":"1","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-29T05:56:41.013","ModifierId":1,"ModifiedDate":"2016-11-29T05:56:41.013","IsSh...</msg>
<status status="PASS" endtime="20161128 21:56:41.128" starttime="20161128 21:56:41.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.129" level="INFO">{"TalentpoolId":6553,"Title":"1","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-29T05:56:41.013","ModifierId":1,"ModifiedDate":"2016-11-29T05:56:41.013","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:41.130" starttime="20161128 21:56:41.129"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:41.131" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'1', u'TalentpoolId': 6553, u'ModifiedDate': u'2016-11-29T05:56:41.013', u'CreatedDate': u'2016-11-29T05:56:41.013', u'Owner': {u'LastName': u'Kaplowitz', u'UserId': 41...</msg>
<status status="PASS" endtime="20161128 21:56:41.131" starttime="20161128 21:56:41.130"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:41.133" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'1', u'CreatedDate': u'2016-11-29T05:56:41.013', u'ModifiedDate': u'2016-11-29T05:56:41.013', u'TalentpoolId': 6553, u'Owner': {u'LastName': u'Kaplowitz', u'UserId': 41...</msg>
<status status="PASS" endtime="20161128 21:56:41.133" starttime="20161128 21:56:41.132"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:41.135" level="INFO">${keyValue} = 1</msg>
<status status="PASS" endtime="20161128 21:56:41.135" starttime="20161128 21:56:41.134"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:41.136" starttime="20161128 21:56:41.037"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Length_1

*Description:*
verify success when title length is 1

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:41.136" critical="yes" starttime="20161128 21:56:40.930"></status>
</test>
<test id="s1-s1-s1-t5" name="POST-API_TPC_Length_50">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.157" starttime="20161128 21:56:41.142"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:41.165" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161128 21:56:41.165" starttime="20161128 21:56:41.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.166" level="INFO">514</msg>
<status status="PASS" endtime="20161128 21:56:41.167" starttime="20161128 21:56:41.166"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:41.170" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:41.170" starttime="20161128 21:56:41.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.171" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161128 21:56:41.171" starttime="20161128 21:56:41.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.173" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:41.173" starttime="20161128 21:56:41.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.174" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:41.175" starttime="20161128 21:56:41.174"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:41.176" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:41.176" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:41.176" starttime="20161128 21:56:41.175"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.177" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:41.177" starttime="20161128 21:56:41.177"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.179" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161128 21:56:41.179" starttime="20161128 21:56:41.178"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.180" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:41.180" starttime="20161128 21:56:41.179"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:41.181" starttime="20161128 21:56:41.141"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:41.183" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:41.183" starttime="20161128 21:56:41.182"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:41.187" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:41.187" starttime="20161128 21:56:41.183"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.213" starttime="20161128 21:56:41.188"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.215" starttime="20161128 21:56:41.214"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:41.216" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:41.216" starttime="20161128 21:56:41.215"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.217" starttime="20161128 21:56:41.216"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:41.217" starttime="20161128 21:56:41.181"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>12345678901234567890123456789012345678901234567890</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:41.225" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:41.226" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:41.226" starttime="20161128 21:56:41.225"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.227" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:41.228" starttime="20161128 21:56:41.227"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.229" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161128 21:56:41.229" starttime="20161128 21:56:41.228"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.230" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:41.231" starttime="20161128 21:56:41.230"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:41.232" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:41.232" starttime="20161128 21:56:41.231"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.233" level="INFO">Request body set to "{ "Title":"12345678901234567890123456789012345678901234567890"}".</msg>
<status status="PASS" endtime="20161128 21:56:41.233" starttime="20161128 21:56:41.232"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.280" starttime="20161128 21:56:41.234"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.281" starttime="20161128 21:56:41.280"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:41.282" level="INFO">${resBody} = {"TalentpoolId":6554,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":514,"FirstName":"Juan","LastName":"Valle"},"CreatedDate":"2016-11-29T05:56:41.17","ModifierId":1,"Mo...</msg>
<status status="PASS" endtime="20161128 21:56:41.283" starttime="20161128 21:56:41.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.284" level="INFO">{"TalentpoolId":6554,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":514,"FirstName":"Juan","LastName":"Valle"},"CreatedDate":"2016-11-29T05:56:41.17","ModifierId":1,"ModifiedDate":"2016-11-29T05:56:41.17","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:41.284" starttime="20161128 21:56:41.283"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:41.285" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'TalentpoolId': 6554, u'ModifiedDate': u'2016-11-29T05:56:41.17', u'CreatedDate': u'2016-11-29T05:56:41.17', u'Ow...</msg>
<status status="PASS" endtime="20161128 21:56:41.285" starttime="20161128 21:56:41.284"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:41.287" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'CreatedDate': u'2016-11-29T05:56:41.17', u'ModifiedDate': u'2016-11-29T05:56:41.17', u'TalentpoolId': 6554, u'Ow...</msg>
<status status="PASS" endtime="20161128 21:56:41.287" starttime="20161128 21:56:41.286"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:41.288" level="INFO">${keyValue} = 12345678901234567890123456789012345678901234567890</msg>
<status status="PASS" endtime="20161128 21:56:41.288" starttime="20161128 21:56:41.287"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:41.289" starttime="20161128 21:56:41.224"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Length_50

*Description:*
verify success when title length is 50

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:41.289" critical="yes" starttime="20161128 21:56:41.138"></status>
</test>
<test id="s1-s1-s1-t6" name="POST-API_TPC_Length_51">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.314" starttime="20161128 21:56:41.297"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:41.319" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161128 21:56:41.319" starttime="20161128 21:56:41.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.320" level="INFO">1338</msg>
<status status="PASS" endtime="20161128 21:56:41.320" starttime="20161128 21:56:41.319"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:41.322" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:41.322" starttime="20161128 21:56:41.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.324" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161128 21:56:41.324" starttime="20161128 21:56:41.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.325" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:41.326" starttime="20161128 21:56:41.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.327" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:41.327" starttime="20161128 21:56:41.326"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:41.329" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:41.329" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:41.330" starttime="20161128 21:56:41.328"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.331" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:41.331" starttime="20161128 21:56:41.330"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.332" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161128 21:56:41.332" starttime="20161128 21:56:41.331"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.334" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:41.334" starttime="20161128 21:56:41.333"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:41.334" starttime="20161128 21:56:41.296"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:41.336" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:41.337" starttime="20161128 21:56:41.336"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:41.340" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:41.341" starttime="20161128 21:56:41.337"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.359" starttime="20161128 21:56:41.341"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.361" starttime="20161128 21:56:41.360"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:41.362" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:41.362" starttime="20161128 21:56:41.362"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.363" starttime="20161128 21:56:41.363"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:41.364" starttime="20161128 21:56:41.335"></status>
</kw>
<kw name="POST_TalentPool_Create_Over_Max_Count" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>123456789012345678901234567890123456789012345678901</arg>
<arg>Title</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:41.371" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:41.372" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:41.372" starttime="20161128 21:56:41.371"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.373" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:41.373" starttime="20161128 21:56:41.372"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.374" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161128 21:56:41.375" starttime="20161128 21:56:41.374"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.376" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:41.376" starttime="20161128 21:56:41.375"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:41.377" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:41.377" starttime="20161128 21:56:41.377"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161128 21:56:41.378" starttime="20161128 21:56:41.378"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.379" level="INFO">Request body set to "{ "Title":"123456789012345678901234567890123456789012345678901"}".</msg>
<status status="PASS" endtime="20161128 21:56:41.380" starttime="20161128 21:56:41.379"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.470" starttime="20161128 21:56:41.381"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:41.472" level="INFO">${resBody} = {"Message":"Maximum length for title is 50 characters."}</msg>
<status status="PASS" endtime="20161128 21:56:41.472" starttime="20161128 21:56:41.471"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20161128 21:56:41.473" level="INFO">Set test message to:
The {"Message":"Maximum length for title is 50 characters."} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20161128 21:56:41.473" starttime="20161128 21:56:41.473"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:41.474" starttime="20161128 21:56:41.370"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Length_51

*Description:*
verify failure when title length is 51

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:41.474" critical="yes" starttime="20161128 21:56:41.294">The {"Message":"Maximum length for title is 50 characters."} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-s1-t7" name="POST-API_TPC_Trim_Space">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.498" starttime="20161128 21:56:41.478"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:41.503" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:41.503" starttime="20161128 21:56:41.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.504" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:41.504" starttime="20161128 21:56:41.503"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:41.507" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:41.507" starttime="20161128 21:56:41.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.508" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:41.509" starttime="20161128 21:56:41.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.510" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:41.510" starttime="20161128 21:56:41.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.512" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:41.512" starttime="20161128 21:56:41.511"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:41.513" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:41.513" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:41.513" starttime="20161128 21:56:41.512"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.515" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:41.515" starttime="20161128 21:56:41.514"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.516" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:41.517" starttime="20161128 21:56:41.515"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.518" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:41.518" starttime="20161128 21:56:41.517"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:41.518" starttime="20161128 21:56:41.477"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:41.520" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:41.521" starttime="20161128 21:56:41.520"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:41.525" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:41.525" starttime="20161128 21:56:41.521"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.644" starttime="20161128 21:56:41.525"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.646" starttime="20161128 21:56:41.645"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:41.647" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:41.647" starttime="20161128 21:56:41.646"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.648" starttime="20161128 21:56:41.647"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:41.648" starttime="20161128 21:56:41.519"></status>
</kw>
<kw name="POST_TalentPool_Create_Empty_String" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${SPACE * 3}</arg>
<arg>Title</arg>
<arg>400</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:41.659" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:41.659" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:41.659" starttime="20161128 21:56:41.658"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.661" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:41.661" starttime="20161128 21:56:41.660"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.662" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:41.662" starttime="20161128 21:56:41.662"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.663" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:41.664" starttime="20161128 21:56:41.663"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:41.665" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20161128 21:56:41.665" starttime="20161128 21:56:41.664"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161128 21:56:41.666" starttime="20161128 21:56:41.666"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"${KEY_NAME_JSON}\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.667" level="INFO">Request body set to "{ "Title":"   "}".</msg>
<status status="PASS" endtime="20161128 21:56:41.668" starttime="20161128 21:56:41.667"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.745" starttime="20161128 21:56:41.668"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.746" starttime="20161128 21:56:41.745"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:41.747" level="INFO">${resBody} = {"Message":"Title cannot be empty."}</msg>
<status status="PASS" endtime="20161128 21:56:41.747" starttime="20161128 21:56:41.747"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20161128 21:56:41.749" level="INFO">Set test message to:
The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20161128 21:56:41.749" starttime="20161128 21:56:41.748"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:41.749" starttime="20161128 21:56:41.656"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Space

*Description:*
verify trimming with only space

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:41.750" critical="yes" starttime="20161128 21:56:41.475">The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-s1-t8" name="POST-API_TPC_Trim_TabSpace">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.795" starttime="20161128 21:56:41.754"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:41.800" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161128 21:56:41.800" starttime="20161128 21:56:41.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.801" level="INFO">1338</msg>
<status status="PASS" endtime="20161128 21:56:41.802" starttime="20161128 21:56:41.801"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:41.809" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:41.809" starttime="20161128 21:56:41.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.810" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161128 21:56:41.811" starttime="20161128 21:56:41.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.812" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:41.812" starttime="20161128 21:56:41.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.814" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:41.814" starttime="20161128 21:56:41.813"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:41.815" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:41.815" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:41.816" starttime="20161128 21:56:41.814"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.817" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:41.817" starttime="20161128 21:56:41.816"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.818" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161128 21:56:41.819" starttime="20161128 21:56:41.818"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.820" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:41.820" starttime="20161128 21:56:41.819"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:41.820" starttime="20161128 21:56:41.753"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:41.823" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:41.823" starttime="20161128 21:56:41.822"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:41.827" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:41.827" starttime="20161128 21:56:41.823"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.847" starttime="20161128 21:56:41.828"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.848" starttime="20161128 21:56:41.848"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:41.849" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:41.849" starttime="20161128 21:56:41.849"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.851" starttime="20161128 21:56:41.850"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:41.851" starttime="20161128 21:56:41.821"></status>
</kw>
<kw name="POST_TalentPool_Create_Empty_String" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${EMPTY}</arg>
<arg>Title</arg>
<arg>400</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:41.860" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:41.860" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:41.861" starttime="20161128 21:56:41.859"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.862" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:41.862" starttime="20161128 21:56:41.861"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.863" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161128 21:56:41.863" starttime="20161128 21:56:41.863"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.864" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:41.865" starttime="20161128 21:56:41.864"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:41.866" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20161128 21:56:41.866" starttime="20161128 21:56:41.865"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161128 21:56:41.867" starttime="20161128 21:56:41.866"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"${KEY_NAME_JSON}\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:41.868" level="INFO">Request body set to "{ "Title":""}".</msg>
<status status="PASS" endtime="20161128 21:56:41.868" starttime="20161128 21:56:41.867"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.920" starttime="20161128 21:56:41.869"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:41.921" starttime="20161128 21:56:41.920"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:41.922" level="INFO">${resBody} = {"Message":"Title cannot be empty."}</msg>
<status status="PASS" endtime="20161128 21:56:41.923" starttime="20161128 21:56:41.922"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20161128 21:56:41.924" level="INFO">Set test message to:
The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20161128 21:56:41.924" starttime="20161128 21:56:41.923"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:41.924" starttime="20161128 21:56:41.858"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_TabSpace

*Description:*
verify trimming with only tab-space

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:41.925" critical="yes" starttime="20161128 21:56:41.751">The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-s1-t9" name="POST-API_TPC_Trim_Leading">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.035" starttime="20161128 21:56:41.928"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:42.076" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:42.076" starttime="20161128 21:56:42.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.077" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:42.078" starttime="20161128 21:56:42.077"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:42.081" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:42.082" starttime="20161128 21:56:42.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.083" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:42.084" starttime="20161128 21:56:42.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.086" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:42.086" starttime="20161128 21:56:42.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.088" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:42.089" starttime="20161128 21:56:42.087"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:42.090" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:42.090" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:42.091" starttime="20161128 21:56:42.089"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.092" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:42.093" starttime="20161128 21:56:42.092"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.094" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:42.095" starttime="20161128 21:56:42.093"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.096" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:42.096" starttime="20161128 21:56:42.095"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:42.097" starttime="20161128 21:56:41.928"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:42.099" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:42.099" starttime="20161128 21:56:42.098"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:42.103" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:42.103" starttime="20161128 21:56:42.100"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.122" starttime="20161128 21:56:42.104"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.123" starttime="20161128 21:56:42.122"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:42.124" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:42.124" starttime="20161128 21:56:42.124"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.126" starttime="20161128 21:56:42.125"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:42.127" starttime="20161128 21:56:42.098"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${SPACE * 2}Leading</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:42.138" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:42.138" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:42.139" starttime="20161128 21:56:42.137"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.140" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:42.140" starttime="20161128 21:56:42.139"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.141" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:42.142" starttime="20161128 21:56:42.140"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.143" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:42.144" starttime="20161128 21:56:42.142"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:42.145" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:42.145" starttime="20161128 21:56:42.144"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.146" level="INFO">Request body set to "{ "Title":"  Leading"}".</msg>
<status status="PASS" endtime="20161128 21:56:42.146" starttime="20161128 21:56:42.145"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.342" starttime="20161128 21:56:42.147"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.343" starttime="20161128 21:56:42.343"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:42.345" level="INFO">${resBody} = {"TalentpoolId":6555,"Title":"Leading","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-29T05:56:42.14","ModifierId":1,"Mod...</msg>
<status status="PASS" endtime="20161128 21:56:42.345" starttime="20161128 21:56:42.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.346" level="INFO">{"TalentpoolId":6555,"Title":"Leading","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-29T05:56:42.14","ModifierId":1,"ModifiedDate":"2016-11-29T05:56:42.14","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:42.346" starttime="20161128 21:56:42.345"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:42.347" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'Leading', u'TalentpoolId': 6555, u'ModifiedDate': u'2016-11-29T05:56:42.14', u'CreatedDate': u'2016-11-29T05:56:42.14', u'Owner': {u'LastName': u'TalentPoolAutomationU...</msg>
<status status="PASS" endtime="20161128 21:56:42.348" starttime="20161128 21:56:42.347"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:42.349" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'Leading', u'CreatedDate': u'2016-11-29T05:56:42.14', u'ModifiedDate': u'2016-11-29T05:56:42.14', u'TalentpoolId': 6555, u'Owner': {u'LastName': u'TalentPoolAutomationU...</msg>
<status status="PASS" endtime="20161128 21:56:42.349" starttime="20161128 21:56:42.348"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:42.351" level="INFO">${keyValue} = Leading</msg>
<status status="PASS" endtime="20161128 21:56:42.351" starttime="20161128 21:56:42.350"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:42.351" starttime="20161128 21:56:42.136"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Leading

*Description:*
verify trimming leading spaces

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:42.352" critical="yes" starttime="20161128 21:56:41.926"></status>
</test>
<test id="s1-s1-s1-t10" name="POST-API_TPC_Trim_Trailing">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.378" starttime="20161128 21:56:42.355"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:42.426" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:42.426" starttime="20161128 21:56:42.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.428" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:42.428" starttime="20161128 21:56:42.427"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:42.434" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:42.434" starttime="20161128 21:56:42.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.436" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:42.437" starttime="20161128 21:56:42.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.438" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:42.439" starttime="20161128 21:56:42.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.440" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:42.440" starttime="20161128 21:56:42.439"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:42.441" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:42.441" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:42.442" starttime="20161128 21:56:42.440"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.443" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:42.443" starttime="20161128 21:56:42.442"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.444" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:42.444" starttime="20161128 21:56:42.443"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.445" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:42.446" starttime="20161128 21:56:42.445"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:42.446" starttime="20161128 21:56:42.354"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:42.448" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:42.448" starttime="20161128 21:56:42.448"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:42.452" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:42.452" starttime="20161128 21:56:42.449"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.497" starttime="20161128 21:56:42.453"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.499" starttime="20161128 21:56:42.498"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:42.500" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:42.500" starttime="20161128 21:56:42.499"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.501" starttime="20161128 21:56:42.501"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:42.501" starttime="20161128 21:56:42.447"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Trailing${SPACE * 2}</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:42.510" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:42.510" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:42.510" starttime="20161128 21:56:42.509"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.511" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:42.512" starttime="20161128 21:56:42.511"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.513" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:42.513" starttime="20161128 21:56:42.512"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.514" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:42.515" starttime="20161128 21:56:42.514"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:42.516" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:42.516" starttime="20161128 21:56:42.515"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.517" level="INFO">Request body set to "{ "Title":"Trailing  "}".</msg>
<status status="PASS" endtime="20161128 21:56:42.517" starttime="20161128 21:56:42.516"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.575" starttime="20161128 21:56:42.518"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.576" starttime="20161128 21:56:42.575"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:42.577" level="INFO">${resBody} = {"TalentpoolId":6556,"Title":"Trailing","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-29T05:56:42.483","ModifierId":1,"M...</msg>
<status status="PASS" endtime="20161128 21:56:42.577" starttime="20161128 21:56:42.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.578" level="INFO">{"TalentpoolId":6556,"Title":"Trailing","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-29T05:56:42.483","ModifierId":1,"ModifiedDate":"2016-11-29T05:56:42.483","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:42.579" starttime="20161128 21:56:42.578"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:42.580" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'Trailing', u'TalentpoolId': 6556, u'ModifiedDate': u'2016-11-29T05:56:42.483', u'CreatedDate': u'2016-11-29T05:56:42.483', u'Owner': {u'LastName': u'TalentPoolAutomati...</msg>
<status status="PASS" endtime="20161128 21:56:42.580" starttime="20161128 21:56:42.579"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:42.581" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'Trailing', u'CreatedDate': u'2016-11-29T05:56:42.483', u'ModifiedDate': u'2016-11-29T05:56:42.483', u'TalentpoolId': 6556, u'Owner': {u'LastName': u'TalentPoolAutomati...</msg>
<status status="PASS" endtime="20161128 21:56:42.582" starttime="20161128 21:56:42.581"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:42.583" level="INFO">${keyValue} = Trailing</msg>
<status status="PASS" endtime="20161128 21:56:42.583" starttime="20161128 21:56:42.582"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:42.584" starttime="20161128 21:56:42.508"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Trailing

*Description:*
verify trimming trailing spaces

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:42.584" critical="yes" starttime="20161128 21:56:42.353"></status>
</test>
<test id="s1-s1-s1-t11" name="POST-API_TPC_Trim_Middle">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.623" starttime="20161128 21:56:42.587"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:42.629" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161128 21:56:42.629" starttime="20161128 21:56:42.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.630" level="INFO">1338</msg>
<status status="PASS" endtime="20161128 21:56:42.631" starttime="20161128 21:56:42.630"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:42.638" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:42.638" starttime="20161128 21:56:42.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.641" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161128 21:56:42.641" starttime="20161128 21:56:42.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.643" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:42.644" starttime="20161128 21:56:42.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.646" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:42.646" starttime="20161128 21:56:42.645"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:42.648" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:42.649" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:42.650" starttime="20161128 21:56:42.647"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.652" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:42.652" starttime="20161128 21:56:42.651"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.653" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161128 21:56:42.654" starttime="20161128 21:56:42.653"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.656" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:42.656" starttime="20161128 21:56:42.654"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:42.657" starttime="20161128 21:56:42.587"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:42.659" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:42.659" starttime="20161128 21:56:42.658"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:42.663" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:42.663" starttime="20161128 21:56:42.660"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.697" starttime="20161128 21:56:42.664"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.699" starttime="20161128 21:56:42.698"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:42.700" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:42.700" starttime="20161128 21:56:42.699"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.701" starttime="20161128 21:56:42.700"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:42.701" starttime="20161128 21:56:42.658"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>space between</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:42.711" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:42.711" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:42.711" starttime="20161128 21:56:42.710"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.713" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:42.713" starttime="20161128 21:56:42.712"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.715" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161128 21:56:42.715" starttime="20161128 21:56:42.714"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.716" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:42.716" starttime="20161128 21:56:42.715"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:42.718" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:42.718" starttime="20161128 21:56:42.717"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.719" level="INFO">Request body set to "{ "Title":"space between"}".</msg>
<status status="PASS" endtime="20161128 21:56:42.720" starttime="20161128 21:56:42.718"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.837" starttime="20161128 21:56:42.720"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.839" starttime="20161128 21:56:42.838"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:42.840" level="INFO">${resBody} = {"TalentpoolId":6557,"Title":"space between","Owner":{"UserId":1338,"FirstName":"smaus","LastName":"smaus"},"CreatedDate":"2016-11-29T05:56:42.7","ModifierId":1,"ModifiedDate":"2016-11-29T05:56:42.7",...</msg>
<status status="PASS" endtime="20161128 21:56:42.841" starttime="20161128 21:56:42.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.842" level="INFO">{"TalentpoolId":6557,"Title":"space between","Owner":{"UserId":1338,"FirstName":"smaus","LastName":"smaus"},"CreatedDate":"2016-11-29T05:56:42.7","ModifierId":1,"ModifiedDate":"2016-11-29T05:56:42.7","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:42.842" starttime="20161128 21:56:42.841"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:42.843" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'space between', u'TalentpoolId': 6557, u'ModifiedDate': u'2016-11-29T05:56:42.7', u'CreatedDate': u'2016-11-29T05:56:42.7', u'Owner': {u'LastName': u'smaus', u'UserId'...</msg>
<status status="PASS" endtime="20161128 21:56:42.844" starttime="20161128 21:56:42.843"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:42.845" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'space between', u'CreatedDate': u'2016-11-29T05:56:42.7', u'ModifiedDate': u'2016-11-29T05:56:42.7', u'TalentpoolId': 6557, u'Owner': {u'LastName': u'smaus', u'UserId'...</msg>
<status status="PASS" endtime="20161128 21:56:42.846" starttime="20161128 21:56:42.845"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:42.848" level="INFO">${keyValue} = space between</msg>
<status status="PASS" endtime="20161128 21:56:42.848" starttime="20161128 21:56:42.847"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:42.849" starttime="20161128 21:56:42.708"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Middle

*Description:*
verify no trimming middle spaces

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:42.849" critical="yes" starttime="20161128 21:56:42.585"></status>
</test>
<test id="s1-s1-s1-t12" name="POST-API_TPC_Trim_SpaceAnd50">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.872" starttime="20161128 21:56:42.854"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:42.876" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161128 21:56:42.876" starttime="20161128 21:56:42.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.878" level="INFO">514</msg>
<status status="PASS" endtime="20161128 21:56:42.879" starttime="20161128 21:56:42.877"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:42.882" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:42.882" starttime="20161128 21:56:42.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.884" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161128 21:56:42.885" starttime="20161128 21:56:42.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.887" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:42.887" starttime="20161128 21:56:42.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.889" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:42.890" starttime="20161128 21:56:42.888"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:42.892" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:42.892" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:42.893" starttime="20161128 21:56:42.890"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.895" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:42.895" starttime="20161128 21:56:42.894"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.897" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161128 21:56:42.897" starttime="20161128 21:56:42.896"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.899" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:42.900" starttime="20161128 21:56:42.898"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:42.901" starttime="20161128 21:56:42.853"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:42.904" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:42.904" starttime="20161128 21:56:42.903"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:42.908" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:42.909" starttime="20161128 21:56:42.905"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.939" starttime="20161128 21:56:42.909"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.940" starttime="20161128 21:56:42.940"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:42.941" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:42.941" starttime="20161128 21:56:42.941"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:42.942" starttime="20161128 21:56:42.942"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:42.943" starttime="20161128 21:56:42.902"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>12345678901234567890123456789012345678901234567890${SPACE}</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:42.951" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:42.951" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:42.951" starttime="20161128 21:56:42.950"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.953" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:42.953" starttime="20161128 21:56:42.952"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.954" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161128 21:56:42.954" starttime="20161128 21:56:42.953"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.956" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:42.956" starttime="20161128 21:56:42.955"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:42.957" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:42.957" starttime="20161128 21:56:42.956"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:42.958" level="INFO">Request body set to "{ "Title":"12345678901234567890123456789012345678901234567890 "}".</msg>
<status status="PASS" endtime="20161128 21:56:42.958" starttime="20161128 21:56:42.957"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.069" starttime="20161128 21:56:42.959"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.070" starttime="20161128 21:56:43.070"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:43.072" level="INFO">${resBody} = {"TalentpoolId":6558,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":514,"FirstName":"Juan","LastName":"Valle"},"CreatedDate":"2016-11-29T05:56:42.95","ModifierId":1,"Mo...</msg>
<status status="PASS" endtime="20161128 21:56:43.072" starttime="20161128 21:56:43.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.074" level="INFO">{"TalentpoolId":6558,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":514,"FirstName":"Juan","LastName":"Valle"},"CreatedDate":"2016-11-29T05:56:42.95","ModifierId":1,"ModifiedDate":"2016-11-29T05:56:42.95","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:43.074" starttime="20161128 21:56:43.073"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:43.076" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'TalentpoolId': 6558, u'ModifiedDate': u'2016-11-29T05:56:42.95', u'CreatedDate': u'2016-11-29T05:56:42.95', u'Ow...</msg>
<status status="PASS" endtime="20161128 21:56:43.076" starttime="20161128 21:56:43.075"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:43.077" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'CreatedDate': u'2016-11-29T05:56:42.95', u'ModifiedDate': u'2016-11-29T05:56:42.95', u'TalentpoolId': 6558, u'Ow...</msg>
<status status="PASS" endtime="20161128 21:56:43.078" starttime="20161128 21:56:43.077"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:43.079" level="INFO">${keyValue} = 12345678901234567890123456789012345678901234567890</msg>
<status status="PASS" endtime="20161128 21:56:43.079" starttime="20161128 21:56:43.078"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:43.080" starttime="20161128 21:56:42.949"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_SpaceAnd50

*Description:*
verify trimming happens before submissions attempt

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:43.080" critical="yes" starttime="20161128 21:56:42.851"></status>
</test>
<test id="s1-s1-s1-t13" name="POST-API_TPC_Security_Script">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.137" starttime="20161128 21:56:43.085"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:43.151" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161128 21:56:43.152" starttime="20161128 21:56:43.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.154" level="INFO">415</msg>
<status status="PASS" endtime="20161128 21:56:43.155" starttime="20161128 21:56:43.152"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:43.167" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:43.168" starttime="20161128 21:56:43.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.169" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161128 21:56:43.169" starttime="20161128 21:56:43.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.171" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:43.171" starttime="20161128 21:56:43.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.172" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:43.172" starttime="20161128 21:56:43.172"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:43.174" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:43.174" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:43.174" starttime="20161128 21:56:43.173"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.175" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:43.176" starttime="20161128 21:56:43.175"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.177" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161128 21:56:43.177" starttime="20161128 21:56:43.176"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.178" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:43.179" starttime="20161128 21:56:43.178"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:43.179" starttime="20161128 21:56:43.084"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:43.181" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:43.181" starttime="20161128 21:56:43.181"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:43.185" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:43.186" starttime="20161128 21:56:43.182"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.257" starttime="20161128 21:56:43.186"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.258" starttime="20161128 21:56:43.258"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:43.259" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:43.260" starttime="20161128 21:56:43.259"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.261" starttime="20161128 21:56:43.260"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:43.261" starttime="20161128 21:56:43.180"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>&lt;script&gt;alert(123)&lt;/script&gt;</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:43.270" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:43.270" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:43.270" starttime="20161128 21:56:43.269"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.271" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:43.272" starttime="20161128 21:56:43.271"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.273" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161128 21:56:43.274" starttime="20161128 21:56:43.273"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.275" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:43.275" starttime="20161128 21:56:43.274"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:43.276" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:43.276" starttime="20161128 21:56:43.275"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.277" level="INFO">Request body set to "{ "Title":"&lt;script&gt;alert(123)&lt;/script&gt;"}".</msg>
<status status="PASS" endtime="20161128 21:56:43.277" starttime="20161128 21:56:43.276"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.369" starttime="20161128 21:56:43.278"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.371" starttime="20161128 21:56:43.370"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:43.373" level="INFO">${resBody} = {"TalentpoolId":6559,"Title":"&lt;script&gt;alert(123)&lt;/script&gt;","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-29T05:56:43.263","ModifierId":1,"ModifiedDate":"2016...</msg>
<status status="PASS" endtime="20161128 21:56:43.373" starttime="20161128 21:56:43.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.375" level="INFO">{"TalentpoolId":6559,"Title":"&lt;script&gt;alert(123)&lt;/script&gt;","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-29T05:56:43.263","ModifierId":1,"ModifiedDate":"2016-11-29T05:56:43.263","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:43.376" starttime="20161128 21:56:43.374"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:43.378" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;script&gt;alert(123)&lt;/script&gt;', u'TalentpoolId': 6559, u'ModifiedDate': u'2016-11-29T05:56:43.263', u'CreatedDate': u'2016-11-29T05:56:43.263', u'Owner': {u'LastName': u...</msg>
<status status="PASS" endtime="20161128 21:56:43.378" starttime="20161128 21:56:43.376"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:43.380" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;script&gt;alert(123)&lt;/script&gt;', u'CreatedDate': u'2016-11-29T05:56:43.263', u'ModifiedDate': u'2016-11-29T05:56:43.263', u'TalentpoolId': 6559, u'Owner': {u'LastName': u...</msg>
<status status="PASS" endtime="20161128 21:56:43.380" starttime="20161128 21:56:43.379"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:43.383" level="INFO">${keyValue} = &lt;script&gt;alert(123)&lt;/script&gt;</msg>
<status status="PASS" endtime="20161128 21:56:43.383" starttime="20161128 21:56:43.381"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:43.384" starttime="20161128 21:56:43.268"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Security_Script

*Description:*
verify script injection is allowed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:43.384" critical="yes" starttime="20161128 21:56:43.082"></status>
</test>
<test id="s1-s1-s1-t14" name="POST-API_TPC_Security_SQL">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.411" starttime="20161128 21:56:43.390"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:43.414" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161128 21:56:43.415" starttime="20161128 21:56:43.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.416" level="INFO">415</msg>
<status status="PASS" endtime="20161128 21:56:43.416" starttime="20161128 21:56:43.415"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:43.418" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:43.418" starttime="20161128 21:56:43.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.420" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161128 21:56:43.420" starttime="20161128 21:56:43.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.421" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:43.421" starttime="20161128 21:56:43.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.423" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:43.423" starttime="20161128 21:56:43.422"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:43.425" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:43.425" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:43.426" starttime="20161128 21:56:43.424"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.427" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:43.427" starttime="20161128 21:56:43.426"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.428" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161128 21:56:43.428" starttime="20161128 21:56:43.428"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.430" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:43.430" starttime="20161128 21:56:43.429"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:43.430" starttime="20161128 21:56:43.389"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:43.432" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:43.433" starttime="20161128 21:56:43.432"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:43.437" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:43.437" starttime="20161128 21:56:43.433"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.480" starttime="20161128 21:56:43.438"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.481" starttime="20161128 21:56:43.480"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:43.482" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:43.482" starttime="20161128 21:56:43.481"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.483" starttime="20161128 21:56:43.483"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:43.484" starttime="20161128 21:56:43.431"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>SELECT * FROM Users</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:43.494" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:43.494" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:43.495" starttime="20161128 21:56:43.494"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.496" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:43.496" starttime="20161128 21:56:43.495"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.498" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161128 21:56:43.498" starttime="20161128 21:56:43.497"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.499" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:43.499" starttime="20161128 21:56:43.498"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:43.500" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:43.501" starttime="20161128 21:56:43.500"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.502" level="INFO">Request body set to "{ "Title":"SELECT * FROM Users"}".</msg>
<status status="PASS" endtime="20161128 21:56:43.502" starttime="20161128 21:56:43.501"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.580" starttime="20161128 21:56:43.503"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.581" starttime="20161128 21:56:43.580"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:43.582" level="INFO">${resBody} = {"TalentpoolId":6560,"Title":"SELECT * FROM Users","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-29T05:56:43.483","ModifierId":1,"ModifiedDate":"2016-11-29T0...</msg>
<status status="PASS" endtime="20161128 21:56:43.582" starttime="20161128 21:56:43.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.584" level="INFO">{"TalentpoolId":6560,"Title":"SELECT * FROM Users","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-29T05:56:43.483","ModifierId":1,"ModifiedDate":"2016-11-29T05:56:43.483","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:43.584" starttime="20161128 21:56:43.583"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:43.585" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'SELECT * FROM Users', u'TalentpoolId': 6560, u'ModifiedDate': u'2016-11-29T05:56:43.483', u'CreatedDate': u'2016-11-29T05:56:43.483', u'Owner': {u'LastName': u'Kaplowi...</msg>
<status status="PASS" endtime="20161128 21:56:43.585" starttime="20161128 21:56:43.584"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:43.587" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'SELECT * FROM Users', u'CreatedDate': u'2016-11-29T05:56:43.483', u'ModifiedDate': u'2016-11-29T05:56:43.483', u'TalentpoolId': 6560, u'Owner': {u'LastName': u'Kaplowi...</msg>
<status status="PASS" endtime="20161128 21:56:43.587" starttime="20161128 21:56:43.586"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:43.588" level="INFO">${keyValue} = SELECT * FROM Users</msg>
<status status="PASS" endtime="20161128 21:56:43.588" starttime="20161128 21:56:43.587"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:43.589" starttime="20161128 21:56:43.492"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Security_SQL

*Description:*
verify sql injection fails

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:43.589" critical="yes" starttime="20161128 21:56:43.386"></status>
</test>
<test id="s1-s1-s1-t15" name="POST-API_TPC_Characters_Extended2">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.627" starttime="20161128 21:56:43.593"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:43.635" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161128 21:56:43.635" starttime="20161128 21:56:43.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.636" level="INFO">415</msg>
<status status="PASS" endtime="20161128 21:56:43.637" starttime="20161128 21:56:43.636"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:43.639" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:43.639" starttime="20161128 21:56:43.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.642" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161128 21:56:43.643" starttime="20161128 21:56:43.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.645" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:43.646" starttime="20161128 21:56:43.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.647" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:43.647" starttime="20161128 21:56:43.646"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:43.649" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:43.649" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:43.649" starttime="20161128 21:56:43.648"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.650" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:43.650" starttime="20161128 21:56:43.650"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.652" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161128 21:56:43.652" starttime="20161128 21:56:43.651"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.653" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:43.653" starttime="20161128 21:56:43.652"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:43.653" starttime="20161128 21:56:43.592"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:43.656" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:43.656" starttime="20161128 21:56:43.655"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:43.660" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:43.660" starttime="20161128 21:56:43.656"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.681" starttime="20161128 21:56:43.661"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.683" starttime="20161128 21:56:43.682"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:43.684" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:43.684" starttime="20161128 21:56:43.683"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.685" starttime="20161128 21:56:43.684"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:43.685" starttime="20161128 21:56:43.654"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>&lt;=&gt;?@^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:43.707" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:43.707" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:43.708" starttime="20161128 21:56:43.706"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.709" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:43.709" starttime="20161128 21:56:43.708"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.710" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161128 21:56:43.711" starttime="20161128 21:56:43.710"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.712" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:43.712" starttime="20161128 21:56:43.711"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:43.713" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:43.713" starttime="20161128 21:56:43.712"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.714" level="INFO">Request body set to "{ "Title":"&lt;=&gt;?@^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª"}".</msg>
<status status="PASS" endtime="20161128 21:56:43.715" starttime="20161128 21:56:43.714"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.778" starttime="20161128 21:56:43.716"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.779" starttime="20161128 21:56:43.778"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:43.781" level="INFO">${resBody} = {"TalentpoolId":6561,"Title":"&lt;=&gt;?@^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb6\x...</msg>
<status status="PASS" endtime="20161128 21:56:43.781" starttime="20161128 21:56:43.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.783" level="INFO">{"TalentpoolId":6561,"Title":"&lt;=&gt;?@^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb6\xc3\xb2\xc3\xbb\xc3\xb9\xc3\xbf\xc2\xa2\xc2\xa3\xc2\xa5\xe2\x82\xa7\xc6\x92\xc3\xa1\xc3\xad\xc3\xb3\xc3\xba\xc3\xb1\xc3\x91\xc2\xaa","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-29T05:56:43.67","ModifierId":1,"ModifiedDate":"2016-11-29T05:56:43.67","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:43.783" starttime="20161128 21:56:43.781"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:43.784" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'Tale...</msg>
<status status="PASS" endtime="20161128 21:56:43.784" starttime="20161128 21:56:43.783"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:43.786" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'Crea...</msg>
<status status="PASS" endtime="20161128 21:56:43.786" starttime="20161128 21:56:43.785"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:43.787" level="INFO">${keyValue} = &lt;=&gt;?@^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20161128 21:56:43.787" starttime="20161128 21:56:43.786"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:43.788" starttime="20161128 21:56:43.692"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended2

*Description:*
verify ASCII characters 2

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:43.788" critical="yes" starttime="20161128 21:56:43.590"></status>
</test>
<test id="s1-s1-s1-t16" name="POST-API_TPC_Characters_Extended3">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.840" starttime="20161128 21:56:43.792"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:43.848" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161128 21:56:43.848" starttime="20161128 21:56:43.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.850" level="INFO">1338</msg>
<status status="PASS" endtime="20161128 21:56:43.851" starttime="20161128 21:56:43.849"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:43.860" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:43.861" starttime="20161128 21:56:43.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.862" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161128 21:56:43.863" starttime="20161128 21:56:43.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.865" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:43.865" starttime="20161128 21:56:43.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.867" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:43.867" starttime="20161128 21:56:43.866"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:43.869" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:43.869" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:43.869" starttime="20161128 21:56:43.868"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.870" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:43.871" starttime="20161128 21:56:43.870"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.872" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161128 21:56:43.872" starttime="20161128 21:56:43.871"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.873" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:43.873" starttime="20161128 21:56:43.872"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:43.874" starttime="20161128 21:56:43.791"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:43.876" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:43.876" starttime="20161128 21:56:43.875"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:43.880" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:43.880" starttime="20161128 21:56:43.877"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.912" starttime="20161128 21:56:43.881"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.913" starttime="20161128 21:56:43.913"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:43.914" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:43.915" starttime="20161128 21:56:43.914"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:43.916" starttime="20161128 21:56:43.915"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:43.916" starttime="20161128 21:56:43.875"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>\ º¿¬¬½¼¡«»¦¦¦¦¦¦¦++¦¦++++++--+-+¦¦++--¦-+----++++++</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:43.925" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:43.926" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:43.926" starttime="20161128 21:56:43.925"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.927" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:43.927" starttime="20161128 21:56:43.926"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.929" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161128 21:56:43.929" starttime="20161128 21:56:43.928"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.930" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:43.930" starttime="20161128 21:56:43.929"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:43.931" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:43.931" starttime="20161128 21:56:43.931"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:43.932" level="INFO">Request body set to "{ "Title":" º¿¬¬½¼¡«»¦¦¦¦¦¦¦++¦¦++++++--+-+¦¦++--¦-+----++++++"}".</msg>
<status status="PASS" endtime="20161128 21:56:43.933" starttime="20161128 21:56:43.932"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:44.044" starttime="20161128 21:56:43.933"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:44.046" starttime="20161128 21:56:44.045"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:44.047" level="INFO">${resBody} = {"TalentpoolId":6562,"Title":"\xc2\xba\xc2\xbf\xc2\xac\xc2\xac\xc2\xbd\xc2\xbc\xc2\xa1\xc2\xab\xc2\xbb\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6++\xc2\xa6\xc2\xa6++++++--+-+\xc2\xa6\xc2\...</msg>
<status status="PASS" endtime="20161128 21:56:44.048" starttime="20161128 21:56:44.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.049" level="INFO">{"TalentpoolId":6562,"Title":"\xc2\xba\xc2\xbf\xc2\xac\xc2\xac\xc2\xbd\xc2\xbc\xc2\xa1\xc2\xab\xc2\xbb\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6++\xc2\xa6\xc2\xa6++++++--+-+\xc2\xa6\xc2\xa6++--\xc2\xa6-+----++++++","Owner":{"UserId":1338,"FirstName":"smaus","LastName":"smaus"},"CreatedDate":"2016-11-29T05:56:43.937","ModifierId":1,"ModifiedDate":"2016-11-29T05:56:43.937","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:44.050" starttime="20161128 21:56:44.048"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:44.051" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\xba\xbf\xac\xac\xbd\xbc\xa1\xab\xbb\xa6\xa6\xa6\xa6\xa6\xa6\xa6++\xa6\xa6++++++--+-+\xa6\xa6++--\xa6-+----++++++', u'TalentpoolId': 6562, u'ModifiedDate': u'2016-11-2...</msg>
<status status="PASS" endtime="20161128 21:56:44.051" starttime="20161128 21:56:44.050"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:44.052" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\xba\xbf\xac\xac\xbd\xbc\xa1\xab\xbb\xa6\xa6\xa6\xa6\xa6\xa6\xa6++\xa6\xa6++++++--+-+\xa6\xa6++--\xa6-+----++++++', u'CreatedDate': u'2016-11-29T05:56:43.937', u'Modif...</msg>
<status status="PASS" endtime="20161128 21:56:44.052" starttime="20161128 21:56:44.051"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:44.054" level="INFO">${keyValue} = º¿¬¬½¼¡«»¦¦¦¦¦¦¦++¦¦++++++--+-+¦¦++--¦-+----++++++</msg>
<status status="PASS" endtime="20161128 21:56:44.054" starttime="20161128 21:56:44.053"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:44.054" starttime="20161128 21:56:43.924"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended3

*Description:*
verify ASCII characters 3

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:44.055" critical="yes" starttime="20161128 21:56:43.789"></status>
</test>
<test id="s1-s1-s1-t17" name="POST-API_TPC_Characters_Extended4">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:44.134" starttime="20161128 21:56:44.058"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:44.148" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:44.148" starttime="20161128 21:56:44.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.150" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:44.150" starttime="20161128 21:56:44.149"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:44.160" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:44.160" starttime="20161128 21:56:44.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.162" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:44.162" starttime="20161128 21:56:44.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.164" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:44.164" starttime="20161128 21:56:44.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.165" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:44.165" starttime="20161128 21:56:44.164"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:44.166" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:44.166" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:44.167" starttime="20161128 21:56:44.166"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.168" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:44.169" starttime="20161128 21:56:44.167"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.170" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:44.171" starttime="20161128 21:56:44.169"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.173" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:44.173" starttime="20161128 21:56:44.172"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:44.173" starttime="20161128 21:56:44.057"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:44.175" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:44.176" starttime="20161128 21:56:44.175"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:44.179" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:44.180" starttime="20161128 21:56:44.176"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:44.207" starttime="20161128 21:56:44.180"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:44.208" starttime="20161128 21:56:44.208"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:44.209" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:44.210" starttime="20161128 21:56:44.209"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:44.211" starttime="20161128 21:56:44.210"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:44.211" starttime="20161128 21:56:44.174"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:44.221" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:44.221" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:44.221" starttime="20161128 21:56:44.220"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.222" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:44.223" starttime="20161128 21:56:44.222"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.224" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:44.224" starttime="20161128 21:56:44.223"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.225" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:44.225" starttime="20161128 21:56:44.224"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:44.226" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:44.227" starttime="20161128 21:56:44.226"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.228" level="INFO">Request body set to "{ "Title":"++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ"}".</msg>
<status status="PASS" endtime="20161128 21:56:44.228" starttime="20161128 21:56:44.227"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:44.309" starttime="20161128 21:56:44.228"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:44.311" starttime="20161128 21:56:44.310"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:44.312" level="INFO">${resBody} = {"TalentpoolId":6563,"Title":"++\xc2\xa6_\xc2\xa6\xc2\xa6\xc2\xafa\xc3\x9fGpSs\xc2\xb5tFTOd8fen=\xc2\xb1==()\xc3\xb7\xcb\x9c\xc2\xb0\xe2\x80\xa2\xc2\xb7vn\xc2\xb2\xc2\xa6\xe2\x82\xac\xe2\x80\x9e\xe2\x...</msg>
<status status="PASS" endtime="20161128 21:56:44.312" starttime="20161128 21:56:44.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.315" level="INFO">{"TalentpoolId":6563,"Title":"++\xc2\xa6_\xc2\xa6\xc2\xa6\xc2\xafa\xc3\x9fGpSs\xc2\xb5tFTOd8fen=\xc2\xb1==()\xc3\xb7\xcb\x9c\xc2\xb0\xe2\x80\xa2\xc2\xb7vn\xc2\xb2\xc2\xa6\xe2\x82\xac\xe2\x80\x9e\xe2\x80\xa6\xe2\x80\xa0\xe2\x80\xa1\xcb\x86\xe2\x80\xb0\xc5\xa0\xe2\x80\xb9\xc5\x92\xc5\xbd","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-29T05:56:44.2","ModifierId":1,"ModifiedDate":"2016-11-29T05:56:44.2","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:44.316" starttime="20161128 21:56:44.313"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:44.317" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'++\xa6_\xa6\xa6\xafa\xdfGpSs\xb5tFTOd8fen=\xb1==()\xf7\u02dc\xb0\u2022\xb7vn\xb2\xa6\u20ac\u201e\u2026\u2020\u2021\u02c6\u2030\u0160\u2039\u0152\u017d', u'TalentpoolId...</msg>
<status status="PASS" endtime="20161128 21:56:44.318" starttime="20161128 21:56:44.316"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:44.319" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'++\xa6_\xa6\xa6\xafa\xdfGpSs\xb5tFTOd8fen=\xb1==()\xf7\u02dc\xb0\u2022\xb7vn\xb2\xa6\u20ac\u201e\u2026\u2020\u2021\u02c6\u2030\u0160\u2039\u0152\u017d', u'CreatedDate'...</msg>
<status status="PASS" endtime="20161128 21:56:44.320" starttime="20161128 21:56:44.318"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:44.322" level="INFO">${keyValue} = ++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ</msg>
<status status="PASS" endtime="20161128 21:56:44.322" starttime="20161128 21:56:44.320"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:44.322" starttime="20161128 21:56:44.218"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended4

*Description:*
verify ASCII characters 4

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:44.323" critical="yes" starttime="20161128 21:56:44.056"></status>
</test>
<test id="s1-s1-s1-t18" name="POST-API_TPC_Characters_Extended5">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:44.384" starttime="20161128 21:56:44.326"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:44.398" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161128 21:56:44.399" starttime="20161128 21:56:44.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.400" level="INFO">415</msg>
<status status="PASS" endtime="20161128 21:56:44.400" starttime="20161128 21:56:44.399"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:44.414" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:44.415" starttime="20161128 21:56:44.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.417" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161128 21:56:44.417" starttime="20161128 21:56:44.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.419" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:44.420" starttime="20161128 21:56:44.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.421" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:44.422" starttime="20161128 21:56:44.421"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:44.423" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:44.424" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:44.424" starttime="20161128 21:56:44.423"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.426" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:44.426" starttime="20161128 21:56:44.425"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.428" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161128 21:56:44.428" starttime="20161128 21:56:44.427"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.430" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:44.430" starttime="20161128 21:56:44.429"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:44.431" starttime="20161128 21:56:44.325"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:44.434" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:44.434" starttime="20161128 21:56:44.433"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:44.439" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:44.440" starttime="20161128 21:56:44.435"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:44.482" starttime="20161128 21:56:44.440"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:44.483" starttime="20161128 21:56:44.482"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:44.484" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:44.484" starttime="20161128 21:56:44.483"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:44.485" starttime="20161128 21:56:44.485"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:44.486" starttime="20161128 21:56:44.432"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:44.494" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:44.494" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:44.494" starttime="20161128 21:56:44.493"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.496" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:44.496" starttime="20161128 21:56:44.495"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.497" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161128 21:56:44.497" starttime="20161128 21:56:44.496"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.499" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:44.499" starttime="20161128 21:56:44.498"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:44.500" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:44.500" starttime="20161128 21:56:44.499"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.502" level="INFO">Request body set to "{ "Title":"‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ"}".</msg>
<status status="PASS" endtime="20161128 21:56:44.502" starttime="20161128 21:56:44.501"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:44.575" starttime="20161128 21:56:44.502"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:44.576" starttime="20161128 21:56:44.576"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:44.578" level="INFO">${resBody} = {"TalentpoolId":6564,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\x...</msg>
<status status="PASS" endtime="20161128 21:56:44.578" starttime="20161128 21:56:44.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.580" level="INFO">{"TalentpoolId":6564,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\xc2\xae\xc2\xaf\xc2\xb3\xc2\xb4\xc2\xb8U\xc2\xbe\xc3\x80\xc3\x81\xc3\x82\xc3\x83\xc3\x84\xc3\x85\xc3\x88\xc3\x89\xc3\x8a\xc3\x8b\xc3\x8c\xc3\x8d\xc3\x8e\xc3\x8f\xc3\x90\xc3\x92\xc3\x93\xc3\x94\xc3\x95\xc3\x96\xc3\x97\xc3\x98\xc3\x99\xc3\x9a\xc3\x9b\xc3\x9c","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-29T05:56:44.483","ModifierId":1,"ModifiedDate":"2016-11-29T05:56:44.483","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:44.580" starttime="20161128 21:56:44.579"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:44.581" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20161128 21:56:44.582" starttime="20161128 21:56:44.581"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:44.583" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20161128 21:56:44.583" starttime="20161128 21:56:44.582"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:44.584" level="INFO">${keyValue} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20161128 21:56:44.584" starttime="20161128 21:56:44.583"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:44.585" starttime="20161128 21:56:44.492"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended5

*Description:*
verify ASCII characters 5

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:44.585" critical="yes" starttime="20161128 21:56:44.324"></status>
</test>
<test id="s1-s1-s1-t19" name="POST-API_TPC_Characters_Extended6">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:44.707" starttime="20161128 21:56:44.589"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:44.743" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:44.744" starttime="20161128 21:56:44.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.745" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:44.745" starttime="20161128 21:56:44.745"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:44.748" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:44.749" starttime="20161128 21:56:44.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.750" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:44.750" starttime="20161128 21:56:44.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.752" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:44.752" starttime="20161128 21:56:44.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.753" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:44.753" starttime="20161128 21:56:44.753"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:44.754" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:44.755" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:44.755" starttime="20161128 21:56:44.754"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.756" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:44.757" starttime="20161128 21:56:44.756"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.758" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:44.758" starttime="20161128 21:56:44.757"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.759" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:44.759" starttime="20161128 21:56:44.758"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:44.760" starttime="20161128 21:56:44.588"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:44.762" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:44.762" starttime="20161128 21:56:44.761"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:44.766" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:44.767" starttime="20161128 21:56:44.763"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:44.823" starttime="20161128 21:56:44.767"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:44.824" starttime="20161128 21:56:44.823"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:44.825" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:44.825" starttime="20161128 21:56:44.825"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:44.826" starttime="20161128 21:56:44.826"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:44.827" starttime="20161128 21:56:44.761"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>ÝÞãðýþ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:44.835" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:44.836" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:44.836" starttime="20161128 21:56:44.835"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.837" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:44.837" starttime="20161128 21:56:44.836"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.839" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:44.839" starttime="20161128 21:56:44.838"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.840" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:44.840" starttime="20161128 21:56:44.839"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:44.841" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:44.842" starttime="20161128 21:56:44.841"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.843" level="INFO">Request body set to "{ "Title":"ÝÞãðýþ"}".</msg>
<status status="PASS" endtime="20161128 21:56:44.843" starttime="20161128 21:56:44.842"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:44.991" starttime="20161128 21:56:44.844"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:44.992" starttime="20161128 21:56:44.991"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:44.993" level="INFO">${resBody} = {"TalentpoolId":6565,"Title":"\xc3\x9d\xc3\x9e\xc3\xa3\xc3\xb0\xc3\xbd\xc3\xbe","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"20...</msg>
<status status="PASS" endtime="20161128 21:56:44.994" starttime="20161128 21:56:44.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:44.995" level="INFO">{"TalentpoolId":6565,"Title":"\xc3\x9d\xc3\x9e\xc3\xa3\xc3\xb0\xc3\xbd\xc3\xbe","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-29T05:56:44.827","ModifierId":1,"ModifiedDate":"2016-11-29T05:56:44.827","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:44.995" starttime="20161128 21:56:44.994"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:44.997" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\xdd\xde\xe3\xf0\xfd\xfe', u'TalentpoolId': 6565, u'ModifiedDate': u'2016-11-29T05:56:44.827', u'CreatedDate': u'2016-11-29T05:56:44.827', u'Owner': {u'LastName': u'Ta...</msg>
<status status="PASS" endtime="20161128 21:56:44.997" starttime="20161128 21:56:44.996"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:44.998" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\xdd\xde\xe3\xf0\xfd\xfe', u'CreatedDate': u'2016-11-29T05:56:44.827', u'ModifiedDate': u'2016-11-29T05:56:44.827', u'TalentpoolId': 6565, u'Owner': {u'LastName': u'Ta...</msg>
<status status="PASS" endtime="20161128 21:56:44.998" starttime="20161128 21:56:44.997"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:45.000" level="INFO">${keyValue} = ÝÞãðýþ</msg>
<status status="PASS" endtime="20161128 21:56:45.000" starttime="20161128 21:56:44.999"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:45.000" starttime="20161128 21:56:44.834"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended6

*Description:*
verify ASCII characters 6

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:45.001" critical="yes" starttime="20161128 21:56:44.586"></status>
</test>
<test id="s1-s1-s1-t20" name="POST-API_TPC_Foreign_Russian">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.032" starttime="20161128 21:56:45.005"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:45.065" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:45.066" starttime="20161128 21:56:45.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.067" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:45.068" starttime="20161128 21:56:45.066"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:45.074" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:45.074" starttime="20161128 21:56:45.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.076" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:45.076" starttime="20161128 21:56:45.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.077" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:45.077" starttime="20161128 21:56:45.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.079" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:45.079" starttime="20161128 21:56:45.078"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:45.081" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:45.081" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:45.082" starttime="20161128 21:56:45.080"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.083" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:45.084" starttime="20161128 21:56:45.082"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.085" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:45.086" starttime="20161128 21:56:45.084"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.087" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:45.088" starttime="20161128 21:56:45.086"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:45.088" starttime="20161128 21:56:45.004"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:45.091" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:45.091" starttime="20161128 21:56:45.090"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:45.096" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:45.097" starttime="20161128 21:56:45.092"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.117" starttime="20161128 21:56:45.097"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.118" starttime="20161128 21:56:45.118"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:45.120" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:45.120" starttime="20161128 21:56:45.119"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.121" starttime="20161128 21:56:45.120"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:45.121" starttime="20161128 21:56:45.089"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>ёъяшертыуиопющэасдфгчйкльжзхцвбнмЁЪЯШЕРТЫУИОПЮЩЭЖЬ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:45.130" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:45.130" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:45.131" starttime="20161128 21:56:45.129"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.132" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:45.132" starttime="20161128 21:56:45.131"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.133" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:45.133" starttime="20161128 21:56:45.132"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.134" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:45.135" starttime="20161128 21:56:45.134"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:45.136" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:45.136" starttime="20161128 21:56:45.135"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.137" level="INFO">Request body set to "{ "Title":"ёъяшертыуиопющэасдфгчйкльжзхцвбнмЁЪЯШЕРТЫУИОПЮЩЭЖЬ"}".</msg>
<status status="PASS" endtime="20161128 21:56:45.137" starttime="20161128 21:56:45.137"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.184" starttime="20161128 21:56:45.138"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.185" starttime="20161128 21:56:45.184"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:45.187" level="INFO">${resBody} = {"TalentpoolId":6566,"Title":"\xd1\x91\xd1\x8a\xd1\x8f\xd1\x88\xd0\xb5\xd1\x80\xd1\x82\xd1\x8b\xd1\x83\xd0\xb8\xd0\xbe\xd0\xbf\xd1\x8e\xd1\x89\xd1\x8d\xd0\xb0\xd1\x81\xd0\xb4\xd1\x84\xd0\xb3\xd1\x87\x...</msg>
<status status="PASS" endtime="20161128 21:56:45.187" starttime="20161128 21:56:45.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.189" level="INFO">{"TalentpoolId":6566,"Title":"\xd1\x91\xd1\x8a\xd1\x8f\xd1\x88\xd0\xb5\xd1\x80\xd1\x82\xd1\x8b\xd1\x83\xd0\xb8\xd0\xbe\xd0\xbf\xd1\x8e\xd1\x89\xd1\x8d\xd0\xb0\xd1\x81\xd0\xb4\xd1\x84\xd0\xb3\xd1\x87\xd0\xb9\xd0\xba\xd0\xbb\xd1\x8c\xd0\xb6\xd0\xb7\xd1\x85\xd1\x86\xd0\xb2\xd0\xb1\xd0\xbd\xd0\xbc\xd0\x81\xd0\xaa\xd0\xaf\xd0\xa8\xd0\x95\xd0\xa0\xd0\xa2\xd0\xab\xd0\xa3\xd0\x98\xd0\x9e\xd0\x9f\xd0\xae\xd0\xa9\xd0\xad\xd0\x96\xd0\xac","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-29T05:56:45.077","ModifierId":1,"ModifiedDate":"2016-11-29T05:56:45.077","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:45.190" starttime="20161128 21:56:45.188"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:45.191" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u0451\u044a\u044f\u0448\u0435\u0440\u0442\u044b\u0443\u0438\u043e\u043f\u044e\u0449\u044d\u0430\u0441\u0434\u0444\u0433\u0447\u0439\u043a\u043b\u044c\u0436\u0437\u044...</msg>
<status status="PASS" endtime="20161128 21:56:45.192" starttime="20161128 21:56:45.190"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:45.193" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u0451\u044a\u044f\u0448\u0435\u0440\u0442\u044b\u0443\u0438\u043e\u043f\u044e\u0449\u044d\u0430\u0441\u0434\u0444\u0433\u0447\u0439\u043a\u043b\u044c\u0436\u0437\u044...</msg>
<status status="PASS" endtime="20161128 21:56:45.193" starttime="20161128 21:56:45.192"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:45.195" level="INFO">${keyValue} = ёъяшертыуиопющэасдфгчйкльжзхцвбнмЁЪЯШЕРТЫУИОПЮЩЭЖЬ</msg>
<status status="PASS" endtime="20161128 21:56:45.195" starttime="20161128 21:56:45.194"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:45.196" starttime="20161128 21:56:45.128"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Foreign_Russian

*Description:*
verify russian alphabet

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:45.197" critical="yes" starttime="20161128 21:56:45.002"></status>
</test>
<test id="s1-s1-s1-t21" name="POST-API_TPC_Foreign_Arabic">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.221" starttime="20161128 21:56:45.202"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:45.227" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161128 21:56:45.228" starttime="20161128 21:56:45.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.230" level="INFO">415</msg>
<status status="PASS" endtime="20161128 21:56:45.230" starttime="20161128 21:56:45.229"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:45.233" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:45.234" starttime="20161128 21:56:45.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.235" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161128 21:56:45.236" starttime="20161128 21:56:45.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.237" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:45.238" starttime="20161128 21:56:45.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.239" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:45.240" starttime="20161128 21:56:45.238"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:45.242" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:45.242" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:45.242" starttime="20161128 21:56:45.241"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.244" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:45.244" starttime="20161128 21:56:45.243"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.245" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161128 21:56:45.245" starttime="20161128 21:56:45.244"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.246" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:45.247" starttime="20161128 21:56:45.246"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:45.247" starttime="20161128 21:56:45.201"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:45.249" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:45.249" starttime="20161128 21:56:45.249"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:45.256" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:45.256" starttime="20161128 21:56:45.250"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.280" starttime="20161128 21:56:45.257"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.282" starttime="20161128 21:56:45.281"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:45.284" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:45.284" starttime="20161128 21:56:45.283"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.285" starttime="20161128 21:56:45.284"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:45.285" starttime="20161128 21:56:45.248"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>غظضذخثتشرقصفعسنملكيطحزوهدجباشغظذخثتسرقضفعصنملكيطحز</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:45.296" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:45.296" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:45.296" starttime="20161128 21:56:45.295"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.297" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:45.298" starttime="20161128 21:56:45.297"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.299" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161128 21:56:45.299" starttime="20161128 21:56:45.298"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.300" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:45.300" starttime="20161128 21:56:45.300"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:45.302" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:45.302" starttime="20161128 21:56:45.301"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.303" level="INFO">Request body set to "{ "Title":"غظضذخثتشرقصفعسنملكيطحزوهدجباشغظذخثتسرقضفعصنملكيطحز"}".</msg>
<status status="PASS" endtime="20161128 21:56:45.303" starttime="20161128 21:56:45.302"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.375" starttime="20161128 21:56:45.304"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.377" starttime="20161128 21:56:45.376"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:45.378" level="INFO">${resBody} = {"TalentpoolId":6567,"Title":"\xd8\xba\xd8\xb8\xd8\xb6\xd8\xb0\xd8\xae\xd8\xab\xd8\xaa\xd8\xb4\xd8\xb1\xd9\x82\xd8\xb5\xd9\x81\xd8\xb9\xd8\xb3\xd9\x86\xd9\x85\xd9\x84\xd9\x83\xd9\x8a\xd8\xb7\xd8\xad\x...</msg>
<status status="PASS" endtime="20161128 21:56:45.378" starttime="20161128 21:56:45.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.380" level="INFO">{"TalentpoolId":6567,"Title":"\xd8\xba\xd8\xb8\xd8\xb6\xd8\xb0\xd8\xae\xd8\xab\xd8\xaa\xd8\xb4\xd8\xb1\xd9\x82\xd8\xb5\xd9\x81\xd8\xb9\xd8\xb3\xd9\x86\xd9\x85\xd9\x84\xd9\x83\xd9\x8a\xd8\xb7\xd8\xad\xd8\xb2\xd9\x88\xd9\x87\xd8\xaf\xd8\xac\xd8\xa8\xd8\xa7\xd8\xb4\xd8\xba\xd8\xb8\xd8\xb0\xd8\xae\xd8\xab\xd8\xaa\xd8\xb3\xd8\xb1\xd9\x82\xd8\xb6\xd9\x81\xd8\xb9\xd8\xb5\xd9\x86\xd9\x85\xd9\x84\xd9\x83\xd9\x8a\xd8\xb7\xd8\xad\xd8\xb2","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-29T05:56:45.263","ModifierId":1,"ModifiedDate":"2016-11-29T05:56:45.263","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:45.381" starttime="20161128 21:56:45.379"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:45.382" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u063a\u0638\u0636\u0630\u062e\u062b\u062a\u0634\u0631\u0642\u0635\u0641\u0639\u0633\u0646\u0645\u0644\u0643\u064a\u0637\u062d\u0632\u0648\u0647\u062f\u062c\u0628\u062...</msg>
<status status="PASS" endtime="20161128 21:56:45.382" starttime="20161128 21:56:45.381"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:45.384" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u063a\u0638\u0636\u0630\u062e\u062b\u062a\u0634\u0631\u0642\u0635\u0641\u0639\u0633\u0646\u0645\u0644\u0643\u064a\u0637\u062d\u0632\u0648\u0647\u062f\u062c\u0628\u062...</msg>
<status status="PASS" endtime="20161128 21:56:45.384" starttime="20161128 21:56:45.383"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:45.387" level="INFO">${keyValue} = غظضذخثتشرقصفعسنملكيطحزوهدجباشغظذخثتسرقضفعصنملكيطحز</msg>
<status status="PASS" endtime="20161128 21:56:45.387" starttime="20161128 21:56:45.385"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:45.387" starttime="20161128 21:56:45.294"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Foreign_Arabic

*Description:*
verify arabic alphabet

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:45.388" critical="yes" starttime="20161128 21:56:45.198"></status>
</test>
<test id="s1-s1-s1-t22" name="POST-API_TPC_Access_Does_Not_Exist">
<kw name="REST_NOAUTH_NonExistentUser" library="SMP_Keywords">
<doc>*REST_NOAUTH_NonExistentUser:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.421" starttime="20161128 21:56:45.393"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:45.450" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20161128 21:56:45.450" starttime="20161128 21:56:45.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.451" level="INFO">2347</msg>
<status status="PASS" endtime="20161128 21:56:45.452" starttime="20161128 21:56:45.451"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT 1</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:45.454" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:45.455" starttime="20161128 21:56:45.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.456" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20161128 21:56:45.456" starttime="20161128 21:56:45.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.458" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:45.458" starttime="20161128 21:56:45.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.459" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:45.459" starttime="20161128 21:56:45.458"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:45.460" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:45.460" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:45.461" starttime="20161128 21:56:45.460"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.462" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:45.462" starttime="20161128 21:56:45.461"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.464" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20161128 21:56:45.464" starttime="20161128 21:56:45.463"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.465" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:45.465" starttime="20161128 21:56:45.464"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:45.466" starttime="20161128 21:56:45.392"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:45.468" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:45.468" starttime="20161128 21:56:45.467"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:45.472" level="INFO">Request body set to "{   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_2347",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:45.473" starttime="20161128 21:56:45.469"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.497" starttime="20161128 21:56:45.473"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.498" starttime="20161128 21:56:45.498"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:45.500" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:45.500" starttime="20161128 21:56:45.499"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.501" starttime="20161128 21:56:45.500"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:45.501" starttime="20161128 21:56:45.466"></status>
</kw>
<kw name="POST_TalentPool_Create_Empty_String" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>InnocentName</arg>
<arg>Title</arg>
<arg>500</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:45.510" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:45.510" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:45.510" starttime="20161128 21:56:45.509"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.511" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:45.512" starttime="20161128 21:56:45.511"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.513" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20161128 21:56:45.513" starttime="20161128 21:56:45.512"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.514" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:45.514" starttime="20161128 21:56:45.513"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:45.515" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20161128 21:56:45.516" starttime="20161128 21:56:45.515"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161128 21:56:45.517" starttime="20161128 21:56:45.516"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"${KEY_NAME_JSON}\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.518" level="INFO">Request body set to "{ "Title":"InnocentName"}".</msg>
<status status="PASS" endtime="20161128 21:56:45.518" starttime="20161128 21:56:45.517"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.563" starttime="20161128 21:56:45.519"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.565" starttime="20161128 21:56:45.564"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:45.566" level="INFO">${resBody} = {"Message":"An error has occurred.","ExceptionMessage":"The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_ou_owner_id_user\". The conflict occurred in database \"ces_qa052-auto-smp-...</msg>
<status status="PASS" endtime="20161128 21:56:45.566" starttime="20161128 21:56:45.565"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20161128 21:56:45.567" level="INFO">Set test message to:
The {"Message":"An error has occurred.","ExceptionMessage":"The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_ou_owner_id_user\". The conflict occurred in database \"ces_qa052-auto-smp-API\", table \"dbo.users\", column 'user_id'.\r\nCannot insert the value NULL into column 'ou_id', table 'ces_qa052-auto-smp-API.dbo.ou_tree'; column does not allow nulls. INSERT fails.\r\nCannot insert the value NULL into column 'child_id', table 'ces_qa052-auto-smp-API.dbo.ou_speed'; column does not allow nulls. INSERT fails.\r\nCannot insert the value NULL into column 'ou_id', table 'ces_qa052-auto-smp-API.dbo.ou_audit'; column does not allow nulls. INSERT fails.\r\nThe statement has been terminated.\r\nThe statement has been terminated.\r\nThe statement has been terminated.\r\nThe statement has been terminated.","ExceptionType":"System.Data.SqlClient.SqlException","StackTrace":"   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean&amp; dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task&amp; task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task&amp; task, Boolean asyncWrite)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext,TResult](TTarget target, Func`3 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)\r\n   at System.Data.Entity.Infrastructure.Interception.DbCommandDispatcher.Reader(DbCommand command, DbCommandInterceptionContext interceptionContext)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryInternal[TElement](String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.&lt;&gt;c__DisplayClass65`1.&lt;ExecuteStoreQueryReliably&gt;b__64()\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteInTransaction[T](Func`1 func, IDbExecutionStrategy executionStrategy, Boolean startLocalTransaction, Boolean releaseConnectionOnSuccess)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.&lt;&gt;c__DisplayClass65`1.&lt;ExecuteStoreQueryReliably&gt;b__63()\r\n   at System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute[TResult](Func`1 operation)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryReliably[TElement](String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQuery[TElement](String commandText, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Internal.InternalContext.&lt;&gt;c__DisplayClass14`1.&lt;ExecuteSqlQuery&gt;b__13()\r\n   at System.Data.Entity.Internal.LazyEnumerator`1.MoveNext()\r\n   at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source)\r\n   at Cornerstone.Smp.TalentPool.Data.TalentPoolRepository.AddTalentPool(OuEntity entity) in C:\\TeamCity\\buildAgent\\work\\ad1d4b4f19fc2a49\\src\\TalentPool.Data\\TalentPoolRepository.cs:line 80\r\n   at Cornerstone.Smp.TalentPool.Core.Services.TalentPoolService.CreateTalentPool(TalentPoolRequestModel model) in C:\\TeamCity\\buildAgent\\work\\ad1d4b4f19fc2a49\\src\\TalentPool.Core\\Services\\Impl\\TalentPoolService.cs:line 141\r\n   at Cornerstone.Smp.TalentPool.Api.TalentPoolController.CreateTalentPool(TalentPoolRequestModel request) in C:\\TeamCity\\buildAgent\\work\\ad1d4b4f19fc2a49\\src\\TalentPool.Api\\Controllers\\TalentPoolController.cs:line 73\r\n   at lambda_method(Closure , Object , Object[] )\r\n   at System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.&lt;&gt;c__DisplayClass10.&lt;GetExecutor&gt;b__9(Object instance, Object[] methodParameters)\r\n   at System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(HttpControllerContext controllerContext, IDictionary`2 arguments, CancellationToken cancellationToken)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Controllers.ApiControllerActionInvoker.&lt;InvokeActionAsyncCore&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Controllers.ActionFilterResult.&lt;ExecuteAsync&gt;d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Filters.AuthorizationFilterAttribute.&lt;ExecuteAuthorizationFilterAsyncCore&gt;d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Controllers.ExceptionFilterResult.&lt;ExecuteAsync&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Web.Http.Controllers.ExceptionFilterResult.&lt;ExecuteAsync&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Dispatcher.HttpControllerDispatcher.&lt;SendAsync&gt;d__1.MoveNext()"} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20161128 21:56:45.568" starttime="20161128 21:56:45.567"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:45.568" starttime="20161128 21:56:45.508"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Access_DNE

*Description:*
verify failure when user does not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:45.569" critical="yes" starttime="20161128 21:56:45.390">The {"Message":"An error has occurred.","ExceptionMessage":"The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_ou_owner_id_user\". The conflict occurred in database \"ces_qa052-auto-smp-API\", table \"dbo.users\", column 'user_id'.\r\nCannot insert the value NULL into column 'ou_id', table 'ces_qa052-auto-smp-API.dbo.ou_tree'; column does not allow nulls. INSERT fails.\r\nCannot insert the value NULL into column 'child_id', table 'ces_qa052-auto-smp-API.dbo.ou_speed'; column does not allow nulls. INSERT fails.\r\nCannot insert the value NULL into column 'ou_id', table 'ces_qa052-auto-smp-API.dbo.ou_audit'; column does not allow nulls. INSERT fails.\r\nThe statement has been terminated.\r\nThe statement has been terminated.\r\nThe statement has been terminated.\r\nThe statement has been terminated.","ExceptionType":"System.Data.SqlClient.SqlException","StackTrace":"   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean&amp; dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task&amp; task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task&amp; task, Boolean asyncWrite)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext,TResult](TTarget target, Func`3 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)\r\n   at System.Data.Entity.Infrastructure.Interception.DbCommandDispatcher.Reader(DbCommand command, DbCommandInterceptionContext interceptionContext)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryInternal[TElement](String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.&lt;&gt;c__DisplayClass65`1.&lt;ExecuteStoreQueryReliably&gt;b__64()\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteInTransaction[T](Func`1 func, IDbExecutionStrategy executionStrategy, Boolean startLocalTransaction, Boolean releaseConnectionOnSuccess)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.&lt;&gt;c__DisplayClass65`1.&lt;ExecuteStoreQueryReliably&gt;b__63()\r\n   at System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute[TResult](Func`1 operation)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryReliably[TElement](String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQuery[TElement](String commandText, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Internal.InternalContext.&lt;&gt;c__DisplayClass14`1.&lt;ExecuteSqlQuery&gt;b__13()\r\n   at System.Data.Entity.Internal.LazyEnumerator`1.MoveNext()\r\n   at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source)\r\n   at Cornerstone.Smp.TalentPool.Data.TalentPoolRepository.AddTalentPool(OuEntity entity) in C:\\TeamCity\\buildAgent\\work\\ad1d4b4f19fc2a49\\src\\TalentPool.Data\\TalentPoolRepository.cs:line 80\r\n   at Cornerstone.Smp.TalentPool.Core.Services.TalentPoolService.CreateTalentPool(TalentPoolRequestModel model) in C:\\TeamCity\\buildAgent\\work\\ad1d4b4f19fc2a49\\src\\TalentPool.Core\\Services\\Impl\\TalentPoolService.cs:line 141\r\n   at Cornerstone.Smp.TalentPool.Api.TalentPoolController.CreateTalentPool(TalentPoolRequestModel request) in C:\\TeamCity\\buildAgent\\work\\ad1d4b4f19fc2a49\\src\\TalentPool.Api\\Controllers\\TalentPoolController.cs:line 73\r\n   at lambda_method(Closure , Object , Object[] )\r\n   at System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.&lt;&gt;c__DisplayClass10.&lt;GetExecutor&gt;b__9(Object instance, Object[] methodParameters)\r\n   at System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(HttpControllerContext controllerContext, IDictionary`2 arguments, CancellationToken cancellationToken)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Controllers.ApiControllerActionInvoker.&lt;InvokeActionAsyncCore&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Controllers.ActionFilterResult.&lt;ExecuteAsync&gt;d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Filters.AuthorizationFilterAttribute.&lt;ExecuteAuthorizationFilterAsyncCore&gt;d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Controllers.ExceptionFilterResult.&lt;ExecuteAsync&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Web.Http.Controllers.ExceptionFilterResult.&lt;ExecuteAsync&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Dispatcher.HttpControllerDispatcher.&lt;SendAsync&gt;d__1.MoveNext()"} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-s1-t23" name="GET-API_TPC_GET_Return_ID_Expected">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.598" starttime="20161128 21:56:45.574"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:45.602" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:45.602" starttime="20161128 21:56:45.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.603" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:45.604" starttime="20161128 21:56:45.603"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:45.609" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:45.610" starttime="20161128 21:56:45.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.611" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:45.611" starttime="20161128 21:56:45.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.613" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:45.613" starttime="20161128 21:56:45.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.614" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:45.615" starttime="20161128 21:56:45.614"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:45.616" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:45.616" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:45.616" starttime="20161128 21:56:45.615"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.617" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:45.617" starttime="20161128 21:56:45.617"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.618" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:45.619" starttime="20161128 21:56:45.618"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.620" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:45.620" starttime="20161128 21:56:45.619"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:45.620" starttime="20161128 21:56:45.573"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:45.623" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:45.623" starttime="20161128 21:56:45.623"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:45.627" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:45.627" starttime="20161128 21:56:45.624"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.647" starttime="20161128 21:56:45.628"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.648" starttime="20161128 21:56:45.647"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:45.649" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:45.649" starttime="20161128 21:56:45.648"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.650" starttime="20161128 21:56:45.650"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:45.651" starttime="20161128 21:56:45.621"></status>
</kw>
<kw name="GET_TalentPool" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>TalentpoolId</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.681" starttime="20161128 21:56:45.657"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161128 21:56:45.692" level="INFO">${SQL_TalentPoolIdToGet} = 4447</msg>
<status status="PASS" endtime="20161128 21:56:45.692" starttime="20161128 21:56:45.682"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:45.694" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:45.694" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:45.694" starttime="20161128 21:56:45.693"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.695" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:45.695" starttime="20161128 21:56:45.695"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.696" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:45.697" starttime="20161128 21:56:45.696"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.698" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:45.698" starttime="20161128 21:56:45.697"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:45.699" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:45.699" starttime="20161128 21:56:45.698"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.755" starttime="20161128 21:56:45.700"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.757" starttime="20161128 21:56:45.756"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:45.758" level="INFO">${resBody} = {"TalentpoolId":4447,"Title":"InnocentName","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-10-19T18:19:35.617","ModifierId":...</msg>
<status status="PASS" endtime="20161128 21:56:45.758" starttime="20161128 21:56:45.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.759" level="INFO">{"TalentpoolId":4447,"Title":"InnocentName","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-10-19T18:19:35.617","ModifierId":1,"ModifiedDate":"2016-10-19T18:19:35.617","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:45.759" starttime="20161128 21:56:45.759"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:45.761" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'InnocentName', u'TalentpoolId': 4447, u'ModifiedDate': u'2016-10-19T18:19:35.617', u'CreatedDate': u'2016-10-19T18:19:35.617', u'Owner': {u'LastName': u'TalentPoolAuto...</msg>
<status status="PASS" endtime="20161128 21:56:45.761" starttime="20161128 21:56:45.760"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:45.762" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'InnocentName', u'CreatedDate': u'2016-10-19T18:19:35.617', u'ModifiedDate': u'2016-10-19T18:19:35.617', u'TalentpoolId': 4447, u'Owner': {u'LastName': u'TalentPoolAuto...</msg>
<status status="PASS" endtime="20161128 21:56:45.762" starttime="20161128 21:56:45.761"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:45.764" level="INFO">${keyValue} = 4447</msg>
<status status="PASS" endtime="20161128 21:56:45.764" starttime="20161128 21:56:45.763"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:45.764" starttime="20161128 21:56:45.656"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_ID_Expected

*Description:*
verify the id passed is matching the id returned

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:45.765" critical="yes" starttime="20161128 21:56:45.571"></status>
</test>
<test id="s1-s1-s1-t24" name="GET-API_TPC_GET_Return_Title_Happy">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.787" starttime="20161128 21:56:45.768"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:45.790" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161128 21:56:45.791" starttime="20161128 21:56:45.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.792" level="INFO">514</msg>
<status status="PASS" endtime="20161128 21:56:45.793" starttime="20161128 21:56:45.791"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:45.795" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:45.796" starttime="20161128 21:56:45.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.797" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161128 21:56:45.798" starttime="20161128 21:56:45.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.799" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:45.799" starttime="20161128 21:56:45.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.800" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:45.800" starttime="20161128 21:56:45.800"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:45.801" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:45.802" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:45.802" starttime="20161128 21:56:45.801"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.803" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:45.803" starttime="20161128 21:56:45.802"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.804" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161128 21:56:45.805" starttime="20161128 21:56:45.804"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.806" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:45.806" starttime="20161128 21:56:45.805"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:45.806" starttime="20161128 21:56:45.768"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:45.809" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:45.809" starttime="20161128 21:56:45.808"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:45.813" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:45.814" starttime="20161128 21:56:45.810"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.851" starttime="20161128 21:56:45.815"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.853" starttime="20161128 21:56:45.852"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:45.854" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:45.854" starttime="20161128 21:56:45.853"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.855" starttime="20161128 21:56:45.854"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:45.855" starttime="20161128 21:56:45.808"></status>
</kw>
<kw name="GET_TalentPool_Title_Happy" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.883" starttime="20161128 21:56:45.860"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%InnocentName%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161128 21:56:45.897" level="INFO">${SQL_TalentPoolIdToGet} = 686</msg>
<status status="PASS" endtime="20161128 21:56:45.897" starttime="20161128 21:56:45.884"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:45.899" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:45.901" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:45.901" starttime="20161128 21:56:45.897"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.903" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:45.903" starttime="20161128 21:56:45.902"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.904" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161128 21:56:45.904" starttime="20161128 21:56:45.903"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.905" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:45.906" starttime="20161128 21:56:45.905"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:45.907" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:45.908" starttime="20161128 21:56:45.906"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.954" starttime="20161128 21:56:45.908"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.955" starttime="20161128 21:56:45.955"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:45.956" level="INFO">${resBody} = {"TalentpoolId":686,"Title":"InnocentName","Owner":{"UserId":514,"FirstName":"Juan","LastName":"Valle"},"CreatedDate":"2016-03-01T21:31:09.22","ModifierId":1,"ModifiedDate":"2016-03-01T21:31:09.22","I...</msg>
<status status="PASS" endtime="20161128 21:56:45.957" starttime="20161128 21:56:45.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:45.958" level="INFO">{"TalentpoolId":686,"Title":"InnocentName","Owner":{"UserId":514,"FirstName":"Juan","LastName":"Valle"},"CreatedDate":"2016-03-01T21:31:09.22","ModifierId":1,"ModifiedDate":"2016-03-01T21:31:09.22","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:45.958" starttime="20161128 21:56:45.957"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:45.959" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'InnocentName', u'TalentpoolId': 686, u'ModifiedDate': u'2016-03-01T21:31:09.22', u'CreatedDate': u'2016-03-01T21:31:09.22', u'Owner': {u'LastName': u'Valle', u'UserId'...</msg>
<status status="PASS" endtime="20161128 21:56:45.959" starttime="20161128 21:56:45.958"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:45.961" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'InnocentName', u'CreatedDate': u'2016-03-01T21:31:09.22', u'ModifiedDate': u'2016-03-01T21:31:09.22', u'TalentpoolId': 686, u'Owner': {u'LastName': u'Valle', u'UserId'...</msg>
<status status="PASS" endtime="20161128 21:56:45.961" starttime="20161128 21:56:45.960"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:45.964" level="INFO">${keyValue} = InnocentName</msg>
<status status="PASS" endtime="20161128 21:56:45.964" starttime="20161128 21:56:45.962"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:45.965" starttime="20161128 21:56:45.859"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Happy

*Description:*
verify a random name matches

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:45.965" critical="yes" starttime="20161128 21:56:45.766"></status>
</test>
<test id="s1-s1-s1-t25" name="GET-API_TPC_GET_Return_Title_Length_1">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:45.986" starttime="20161128 21:56:45.970"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:46.000" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:46.001" starttime="20161128 21:56:45.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.002" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:46.002" starttime="20161128 21:56:46.001"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:46.004" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:46.005" starttime="20161128 21:56:46.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.007" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:46.008" starttime="20161128 21:56:46.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.010" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:46.010" starttime="20161128 21:56:46.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.012" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:46.012" starttime="20161128 21:56:46.011"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:46.014" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:46.014" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:46.015" starttime="20161128 21:56:46.013"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.016" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:46.017" starttime="20161128 21:56:46.015"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.019" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:46.019" starttime="20161128 21:56:46.018"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.020" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:46.020" starttime="20161128 21:56:46.019"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:46.021" starttime="20161128 21:56:45.969"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:46.024" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:46.024" starttime="20161128 21:56:46.022"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:46.033" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:46.034" starttime="20161128 21:56:46.029"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.053" starttime="20161128 21:56:46.034"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.054" starttime="20161128 21:56:46.054"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:46.056" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:46.056" starttime="20161128 21:56:46.055"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.058" starttime="20161128 21:56:46.057"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:46.058" starttime="20161128 21:56:46.022"></status>
</kw>
<kw name="GET_TalentPool_Title_Length_1" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.105" starttime="20161128 21:56:46.064"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND LEN(title)=1 ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161128 21:56:46.121" level="INFO">${SQL_TalentPoolIdToGet} = 4844</msg>
<status status="PASS" endtime="20161128 21:56:46.121" starttime="20161128 21:56:46.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.123" level="INFO">${SQL_TalentPoolIdToGet} = 4844</msg>
<status status="PASS" endtime="20161128 21:56:46.124" starttime="20161128 21:56:46.122"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161128 21:56:46.137" level="INFO">${SQL_TalentPoolTitleById} = 1</msg>
<status status="PASS" endtime="20161128 21:56:46.137" starttime="20161128 21:56:46.125"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:46.139" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:46.139" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:46.139" starttime="20161128 21:56:46.138"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.141" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:46.142" starttime="20161128 21:56:46.140"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.143" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:46.144" starttime="20161128 21:56:46.143"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.145" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:46.145" starttime="20161128 21:56:46.144"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:46.146" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:46.147" starttime="20161128 21:56:46.146"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.186" starttime="20161128 21:56:46.148"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.188" starttime="20161128 21:56:46.187"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:46.189" level="INFO">${resBody} = {"TalentpoolId":4844,"Title":"1","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-10-26T20:28:07.72","ModifierId":1,"ModifiedD...</msg>
<status status="PASS" endtime="20161128 21:56:46.189" starttime="20161128 21:56:46.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.190" level="INFO">{"TalentpoolId":4844,"Title":"1","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-10-26T20:28:07.72","ModifierId":1,"ModifiedDate":"2016-10-26T20:28:07.72","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:46.191" starttime="20161128 21:56:46.190"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:46.192" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'1', u'TalentpoolId': 4844, u'ModifiedDate': u'2016-10-26T20:28:07.72', u'CreatedDate': u'2016-10-26T20:28:07.72', u'Owner': {u'LastName': u'TalentPoolAutomationUser1',...</msg>
<status status="PASS" endtime="20161128 21:56:46.192" starttime="20161128 21:56:46.191"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:46.193" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'1', u'CreatedDate': u'2016-10-26T20:28:07.72', u'ModifiedDate': u'2016-10-26T20:28:07.72', u'TalentpoolId': 4844, u'Owner': {u'LastName': u'TalentPoolAutomationUser1',...</msg>
<status status="PASS" endtime="20161128 21:56:46.193" starttime="20161128 21:56:46.193"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:46.195" level="INFO">${keyValue} = 1</msg>
<status status="PASS" endtime="20161128 21:56:46.195" starttime="20161128 21:56:46.194"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:46.195" starttime="20161128 21:56:46.063"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Length_1

*Description:*
verify success when title length is 1

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:46.196" critical="yes" starttime="20161128 21:56:45.967"></status>
</test>
<test id="s1-s1-s1-t26" name="GET-API_TPC_GET_Return_Title_Length_50">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.215" starttime="20161128 21:56:46.199"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:46.231" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:46.231" starttime="20161128 21:56:46.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.233" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:46.233" starttime="20161128 21:56:46.232"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:46.237" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:46.237" starttime="20161128 21:56:46.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.239" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:46.239" starttime="20161128 21:56:46.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.240" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:46.241" starttime="20161128 21:56:46.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.242" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:46.242" starttime="20161128 21:56:46.241"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:46.243" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:46.243" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:46.243" starttime="20161128 21:56:46.242"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.245" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:46.245" starttime="20161128 21:56:46.244"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.246" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:46.246" starttime="20161128 21:56:46.245"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.247" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:46.248" starttime="20161128 21:56:46.247"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:46.248" starttime="20161128 21:56:46.198"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:46.250" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:46.251" starttime="20161128 21:56:46.250"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:46.255" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:46.255" starttime="20161128 21:56:46.251"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.274" starttime="20161128 21:56:46.255"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.275" starttime="20161128 21:56:46.274"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:46.277" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:46.277" starttime="20161128 21:56:46.276"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.278" starttime="20161128 21:56:46.277"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:46.278" starttime="20161128 21:56:46.249"></status>
</kw>
<kw name="GET_TalentPool_Title_Length_50" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.311" starttime="20161128 21:56:46.283"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND LEN(title)=50 ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161128 21:56:46.318" level="INFO">${SQL_TalentPoolIdToGet} = 3216</msg>
<status status="PASS" endtime="20161128 21:56:46.318" starttime="20161128 21:56:46.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.320" level="INFO">${SQL_TalentPoolIdToGet} = 3216</msg>
<status status="PASS" endtime="20161128 21:56:46.320" starttime="20161128 21:56:46.319"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161128 21:56:46.323" level="INFO">${SQL_TalentPoolTitleById} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20161128 21:56:46.323" starttime="20161128 21:56:46.321"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:46.324" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:46.325" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:46.325" starttime="20161128 21:56:46.324"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.326" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:46.327" starttime="20161128 21:56:46.325"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.328" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:46.328" starttime="20161128 21:56:46.327"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.330" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:46.330" starttime="20161128 21:56:46.329"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:46.331" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:46.331" starttime="20161128 21:56:46.330"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.371" starttime="20161128 21:56:46.332"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.372" starttime="20161128 21:56:46.371"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:46.374" level="INFO">${resBody} = {"TalentpoolId":3216,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\x...</msg>
<status status="PASS" endtime="20161128 21:56:46.374" starttime="20161128 21:56:46.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.376" level="INFO">{"TalentpoolId":3216,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\xc2\xae\xc2\xaf\xc2\xb3\xc2\xb4\xc2\xb8U\xc2\xbe\xc3\x80\xc3\x81\xc3\x82\xc3\x83\xc3\x84\xc3\x85\xc3\x88\xc3\x89\xc3\x8a\xc3\x8b\xc3\x8c\xc3\x8d\xc3\x8e\xc3\x8f\xc3\x90\xc3\x92\xc3\x93\xc3\x94\xc3\x95\xc3\x96\xc3\x97\xc3\x98\xc3\x99\xc3\x9a\xc3\x9b\xc3\x9c","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-10-11T12:50:09.667","ModifierId":1,"ModifiedDate":"2016-10-11T12:50:09.667","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:46.376" starttime="20161128 21:56:46.375"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:46.377" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20161128 21:56:46.377" starttime="20161128 21:56:46.377"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:46.379" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20161128 21:56:46.379" starttime="20161128 21:56:46.378"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:46.380" level="INFO">${keyValue} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20161128 21:56:46.380" starttime="20161128 21:56:46.379"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:46.381" starttime="20161128 21:56:46.283"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Length_50

*Description:*
verify success when title length is 50

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:46.381" critical="yes" starttime="20161128 21:56:46.197"></status>
</test>
<test id="s1-s1-s1-t27" name="GET-API_TPC_GET_Return_Title_SQL">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.401" starttime="20161128 21:56:46.385"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:46.404" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:46.404" starttime="20161128 21:56:46.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.405" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:46.405" starttime="20161128 21:56:46.405"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:46.408" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:46.408" starttime="20161128 21:56:46.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.409" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:46.409" starttime="20161128 21:56:46.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.411" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:46.411" starttime="20161128 21:56:46.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.412" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:46.413" starttime="20161128 21:56:46.412"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:46.414" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:46.414" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:46.414" starttime="20161128 21:56:46.413"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.415" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:46.416" starttime="20161128 21:56:46.415"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.417" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:46.417" starttime="20161128 21:56:46.416"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.418" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:46.418" starttime="20161128 21:56:46.417"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:46.419" starttime="20161128 21:56:46.384"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:46.421" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:46.421" starttime="20161128 21:56:46.420"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:46.426" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:46.426" starttime="20161128 21:56:46.422"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.471" starttime="20161128 21:56:46.427"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.472" starttime="20161128 21:56:46.472"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:46.474" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:46.474" starttime="20161128 21:56:46.473"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.475" starttime="20161128 21:56:46.474"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:46.475" starttime="20161128 21:56:46.420"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Securit_SQL" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.507" starttime="20161128 21:56:46.480"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%SELECT * FROM Users%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161128 21:56:46.524" level="INFO">${SQL_TalentPoolIdToGet} = 5248</msg>
<status status="PASS" endtime="20161128 21:56:46.524" starttime="20161128 21:56:46.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.526" level="INFO">${SQL_TalentPoolIdToGet} = 5248</msg>
<status status="PASS" endtime="20161128 21:56:46.527" starttime="20161128 21:56:46.524"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161128 21:56:46.532" level="INFO">${SQL_TalentPoolTitleById} = SELECT * FROM Users</msg>
<status status="PASS" endtime="20161128 21:56:46.532" starttime="20161128 21:56:46.527"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:46.534" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:46.534" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:46.534" starttime="20161128 21:56:46.533"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.535" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:46.536" starttime="20161128 21:56:46.535"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.537" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:46.537" starttime="20161128 21:56:46.536"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.538" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:46.539" starttime="20161128 21:56:46.538"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:46.540" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:46.540" starttime="20161128 21:56:46.539"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.604" starttime="20161128 21:56:46.540"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.605" starttime="20161128 21:56:46.604"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:46.606" level="INFO">${resBody} = {"TalentpoolId":5248,"Title":"SELECT * FROM Users","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-02T08:03:21.973","Modif...</msg>
<status status="PASS" endtime="20161128 21:56:46.606" starttime="20161128 21:56:46.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.607" level="INFO">{"TalentpoolId":5248,"Title":"SELECT * FROM Users","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-02T08:03:21.973","ModifierId":1,"ModifiedDate":"2016-11-02T08:03:21.973","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:46.607" starttime="20161128 21:56:46.607"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:46.609" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'SELECT * FROM Users', u'TalentpoolId': 5248, u'ModifiedDate': u'2016-11-02T08:03:21.973', u'CreatedDate': u'2016-11-02T08:03:21.973', u'Owner': {u'LastName': u'TalentP...</msg>
<status status="PASS" endtime="20161128 21:56:46.609" starttime="20161128 21:56:46.608"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:46.610" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'SELECT * FROM Users', u'CreatedDate': u'2016-11-02T08:03:21.973', u'ModifiedDate': u'2016-11-02T08:03:21.973', u'TalentpoolId': 5248, u'Owner': {u'LastName': u'TalentP...</msg>
<status status="PASS" endtime="20161128 21:56:46.611" starttime="20161128 21:56:46.609"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:46.612" level="INFO">${keyValue} = SELECT * FROM Users</msg>
<status status="PASS" endtime="20161128 21:56:46.613" starttime="20161128 21:56:46.612"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:46.613" starttime="20161128 21:56:46.479"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_SQL

*Description:*
verify sql injection fails

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:46.613" critical="yes" starttime="20161128 21:56:46.382"></status>
</test>
<test id="s1-s1-s1-t28" name="GET-API_TPC_GET_Return_Title_Security_Script">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.632" starttime="20161128 21:56:46.617"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:46.635" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:46.635" starttime="20161128 21:56:46.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.636" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:46.636" starttime="20161128 21:56:46.635"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:46.638" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:46.639" starttime="20161128 21:56:46.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.640" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:46.640" starttime="20161128 21:56:46.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.646" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:46.646" starttime="20161128 21:56:46.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.647" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:46.647" starttime="20161128 21:56:46.647"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:46.649" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:46.649" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:46.649" starttime="20161128 21:56:46.648"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.650" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:46.650" starttime="20161128 21:56:46.650"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.652" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:46.652" starttime="20161128 21:56:46.651"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.653" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:46.653" starttime="20161128 21:56:46.652"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:46.654" starttime="20161128 21:56:46.616"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:46.656" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:46.656" starttime="20161128 21:56:46.655"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:46.660" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:46.660" starttime="20161128 21:56:46.657"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.709" starttime="20161128 21:56:46.661"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.710" starttime="20161128 21:56:46.710"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:46.712" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:46.712" starttime="20161128 21:56:46.711"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.713" starttime="20161128 21:56:46.712"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:46.713" starttime="20161128 21:56:46.655"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Securit_Script" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.730" starttime="20161128 21:56:46.718"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%＜script＞alert(123)＜/script＞%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161128 21:56:46.755" level="INFO">${SQL_TalentPoolIdToGet} = 6483</msg>
<status status="PASS" endtime="20161128 21:56:46.756" starttime="20161128 21:56:46.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.758" level="INFO">${SQL_TalentPoolIdToGet} = 6483</msg>
<status status="PASS" endtime="20161128 21:56:46.758" starttime="20161128 21:56:46.756"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161128 21:56:46.764" level="INFO">${SQL_TalentPoolTitleById} = ＜script＞alert(123)＜/script＞</msg>
<status status="PASS" endtime="20161128 21:56:46.764" starttime="20161128 21:56:46.759"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:46.767" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:46.767" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:46.767" starttime="20161128 21:56:46.765"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.769" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:46.769" starttime="20161128 21:56:46.768"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.770" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:46.771" starttime="20161128 21:56:46.770"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.772" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:46.772" starttime="20161128 21:56:46.771"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:46.773" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:46.773" starttime="20161128 21:56:46.773"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.852" starttime="20161128 21:56:46.774"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.854" starttime="20161128 21:56:46.853"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:46.855" level="INFO">${resBody} = {"TalentpoolId":6483,"Title":"\xef\xbc\x9cscript\xef\xbc\x9ealert(123)\xef\xbc\x9c/script\xef\xbc\x9e","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUs...</msg>
<status status="PASS" endtime="20161128 21:56:46.856" starttime="20161128 21:56:46.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.858" level="INFO">{"TalentpoolId":6483,"Title":"\xef\xbc\x9cscript\xef\xbc\x9ealert(123)\xef\xbc\x9c/script\xef\xbc\x9e","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-27T13:54:13.8","ModifierId":1,"ModifiedDate":"2016-11-27T13:54:13.8","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:46.858" starttime="20161128 21:56:46.856"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:46.860" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\uff1cscript\uff1ealert(123)\uff1c/script\uff1e', u'TalentpoolId': 6483, u'ModifiedDate': u'2016-11-27T13:54:13.8', u'CreatedDate': u'2016-11-27T13:54:13.8', u'Owner':...</msg>
<status status="PASS" endtime="20161128 21:56:46.860" starttime="20161128 21:56:46.859"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:46.862" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\uff1cscript\uff1ealert(123)\uff1c/script\uff1e', u'CreatedDate': u'2016-11-27T13:54:13.8', u'ModifiedDate': u'2016-11-27T13:54:13.8', u'TalentpoolId': 6483, u'Owner':...</msg>
<status status="PASS" endtime="20161128 21:56:46.862" starttime="20161128 21:56:46.861"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:46.863" level="INFO">${keyValue} = ＜script＞alert(123)＜/script＞</msg>
<status status="PASS" endtime="20161128 21:56:46.863" starttime="20161128 21:56:46.862"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:46.864" starttime="20161128 21:56:46.718"></status>
</kw>
<doc>*Name:*
TP_Get_Ret_Title_sec_script

*Description:*
verify script injection is allowed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:46.864" critical="yes" starttime="20161128 21:56:46.614"></status>
</test>
<test id="s1-s1-s1-t29" name="GET-API_TPC_GET_Return_Title_Extended1">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.880" starttime="20161128 21:56:46.867"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:46.883" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:46.883" starttime="20161128 21:56:46.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.884" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:46.885" starttime="20161128 21:56:46.884"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:46.886" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:46.886" starttime="20161128 21:56:46.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.888" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:46.888" starttime="20161128 21:56:46.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.890" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:46.890" starttime="20161128 21:56:46.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.892" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:46.892" starttime="20161128 21:56:46.891"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:46.894" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:46.894" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:46.894" starttime="20161128 21:56:46.893"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.895" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:46.895" starttime="20161128 21:56:46.895"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.896" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:46.897" starttime="20161128 21:56:46.896"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:46.898" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:46.898" starttime="20161128 21:56:46.897"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:46.899" starttime="20161128 21:56:46.867"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:46.901" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:46.901" starttime="20161128 21:56:46.900"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:46.905" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:46.905" starttime="20161128 21:56:46.901"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.964" starttime="20161128 21:56:46.906"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.965" starttime="20161128 21:56:46.964"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:46.966" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:46.966" starttime="20161128 21:56:46.965"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:46.967" starttime="20161128 21:56:46.966"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:46.967" starttime="20161128 21:56:46.899"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended1" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.010" starttime="20161128 21:56:46.972"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%☺%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161128 21:56:47.029" level="INFO">${SQL_TalentPoolIdToGet} = 6278</msg>
<status status="PASS" endtime="20161128 21:56:47.029" starttime="20161128 21:56:47.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.031" level="INFO">${SQL_TalentPoolIdToGet} = 6278</msg>
<status status="PASS" endtime="20161128 21:56:47.031" starttime="20161128 21:56:47.029"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161128 21:56:47.071" level="INFO">${SQL_TalentPoolTitleById} = &lt;=&gt;?@^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20161128 21:56:47.071" starttime="20161128 21:56:47.032"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:47.073" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:47.073" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:47.073" starttime="20161128 21:56:47.072"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.074" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:47.075" starttime="20161128 21:56:47.074"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.076" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:47.076" starttime="20161128 21:56:47.075"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.077" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:47.078" starttime="20161128 21:56:47.077"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:47.079" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:47.080" starttime="20161128 21:56:47.078"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.134" starttime="20161128 21:56:47.080"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.135" starttime="20161128 21:56:47.134"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:47.136" level="INFO">${resBody} = {"TalentpoolId":6278,"Title":"&lt;=&gt;?@^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb6\x...</msg>
<status status="PASS" endtime="20161128 21:56:47.137" starttime="20161128 21:56:47.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.138" level="INFO">{"TalentpoolId":6278,"Title":"&lt;=&gt;?@^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb6\xc3\xb2\xc3\xbb\xc3\xb9\xc3\xbf\xc2\xa2\xc2\xa3\xc2\xa5\xe2\x82\xa7\xc6\x92\xc3\xa1\xc3\xad\xc3\xb3\xc3\xba\xc3\xb1\xc3\x91\xc2\xaa","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-27T05:04:06.43","ModifierId":1,"ModifiedDate":"2016-11-27T05:04:06.43","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:47.139" starttime="20161128 21:56:47.137"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:47.140" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'Tale...</msg>
<status status="PASS" endtime="20161128 21:56:47.140" starttime="20161128 21:56:47.139"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:47.142" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'Crea...</msg>
<status status="PASS" endtime="20161128 21:56:47.142" starttime="20161128 21:56:47.141"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:47.145" level="INFO">${keyValue} = &lt;=&gt;?@^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20161128 21:56:47.145" starttime="20161128 21:56:47.143"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:47.146" starttime="20161128 21:56:46.972"></status>
</kw>
<doc>*Name:*
API_TPC_Extended1

*Description:*
verify ASCII characters 1

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:47.146" critical="yes" starttime="20161128 21:56:46.865"></status>
</test>
<test id="s1-s1-s1-t30" name="GET-API_TPC_GET_Return_Title_Extended2">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.166" starttime="20161128 21:56:47.152"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:47.169" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:47.169" starttime="20161128 21:56:47.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.171" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:47.171" starttime="20161128 21:56:47.170"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:47.173" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:47.173" starttime="20161128 21:56:47.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.175" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:47.176" starttime="20161128 21:56:47.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.177" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:47.177" starttime="20161128 21:56:47.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.179" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:47.179" starttime="20161128 21:56:47.178"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:47.180" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:47.180" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:47.180" starttime="20161128 21:56:47.179"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.181" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:47.182" starttime="20161128 21:56:47.181"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.183" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:47.183" starttime="20161128 21:56:47.182"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.184" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:47.184" starttime="20161128 21:56:47.183"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:47.185" starttime="20161128 21:56:47.151"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:47.187" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:47.187" starttime="20161128 21:56:47.186"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:47.193" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:47.193" starttime="20161128 21:56:47.188"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.256" starttime="20161128 21:56:47.194"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.257" starttime="20161128 21:56:47.256"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:47.258" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:47.258" starttime="20161128 21:56:47.257"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.259" starttime="20161128 21:56:47.259"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:47.259" starttime="20161128 21:56:47.186"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended2" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.355" starttime="20161128 21:56:47.265"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%=%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161128 21:56:47.373" level="INFO">${SQL_TalentPoolIdToGet} = 6179</msg>
<status status="PASS" endtime="20161128 21:56:47.373" starttime="20161128 21:56:47.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.375" level="INFO">${SQL_TalentPoolIdToGet} = 6179</msg>
<status status="PASS" endtime="20161128 21:56:47.375" starttime="20161128 21:56:47.374"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161128 21:56:47.383" level="INFO">${SQL_TalentPoolTitleById} = ++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ</msg>
<status status="PASS" endtime="20161128 21:56:47.383" starttime="20161128 21:56:47.376"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:47.385" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:47.386" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:47.386" starttime="20161128 21:56:47.384"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.388" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:47.389" starttime="20161128 21:56:47.387"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.391" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:47.391" starttime="20161128 21:56:47.389"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.393" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:47.393" starttime="20161128 21:56:47.392"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:47.395" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:47.395" starttime="20161128 21:56:47.394"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.477" starttime="20161128 21:56:47.396"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.478" starttime="20161128 21:56:47.477"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:47.480" level="INFO">${resBody} = {"TalentpoolId":6179,"Title":"++\xc2\xa6_\xc2\xa6\xc2\xa6\xc2\xafa\xc3\x9fGpSs\xc2\xb5tFTOd8fen=\xc2\xb1==()\xc3\xb7\xcb\x9c\xc2\xb0\xe2\x80\xa2\xc2\xb7vn\xc2\xb2\xc2\xa6\xe2\x82\xac\xe2\x80\x9e\xe2\x...</msg>
<status status="PASS" endtime="20161128 21:56:47.480" starttime="20161128 21:56:47.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.482" level="INFO">{"TalentpoolId":6179,"Title":"++\xc2\xa6_\xc2\xa6\xc2\xa6\xc2\xafa\xc3\x9fGpSs\xc2\xb5tFTOd8fen=\xc2\xb1==()\xc3\xb7\xcb\x9c\xc2\xb0\xe2\x80\xa2\xc2\xb7vn\xc2\xb2\xc2\xa6\xe2\x82\xac\xe2\x80\x9e\xe2\x80\xa6\xe2\x80\xa0\xe2\x80\xa1\xcb\x86\xe2\x80\xb0\xc5\xa0\xe2\x80\xb9\xc5\x92\xc5\xbd","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-24T08:18:06.403","ModifierId":1,"ModifiedDate":"2016-11-24T08:18:06.403","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:47.482" starttime="20161128 21:56:47.481"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:47.484" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'++\xa6_\xa6\xa6\xafa\xdfGpSs\xb5tFTOd8fen=\xb1==()\xf7\u02dc\xb0\u2022\xb7vn\xb2\xa6\u20ac\u201e\u2026\u2020\u2021\u02c6\u2030\u0160\u2039\u0152\u017d', u'TalentpoolId...</msg>
<status status="PASS" endtime="20161128 21:56:47.484" starttime="20161128 21:56:47.483"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:47.486" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'++\xa6_\xa6\xa6\xafa\xdfGpSs\xb5tFTOd8fen=\xb1==()\xf7\u02dc\xb0\u2022\xb7vn\xb2\xa6\u20ac\u201e\u2026\u2020\u2021\u02c6\u2030\u0160\u2039\u0152\u017d', u'CreatedDate'...</msg>
<status status="PASS" endtime="20161128 21:56:47.486" starttime="20161128 21:56:47.485"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:47.487" level="INFO">${keyValue} = ++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ</msg>
<status status="PASS" endtime="20161128 21:56:47.487" starttime="20161128 21:56:47.486"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:47.488" starttime="20161128 21:56:47.264"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended2

*Description:*
verify ASCII characters 2

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:47.489" critical="yes" starttime="20161128 21:56:47.148"></status>
</test>
<test id="s1-s1-s1-t31" name="GET-API_TPC_GET_Return_Title_Extended3">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.511" starttime="20161128 21:56:47.492"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:47.529" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:47.530" starttime="20161128 21:56:47.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.532" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:47.532" starttime="20161128 21:56:47.530"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:47.535" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:47.535" starttime="20161128 21:56:47.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.537" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:47.537" starttime="20161128 21:56:47.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.538" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:47.539" starttime="20161128 21:56:47.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.540" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:47.540" starttime="20161128 21:56:47.539"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:47.541" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:47.541" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:47.542" starttime="20161128 21:56:47.541"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.543" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:47.543" starttime="20161128 21:56:47.542"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.545" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:47.545" starttime="20161128 21:56:47.544"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.546" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:47.546" starttime="20161128 21:56:47.545"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:47.547" starttime="20161128 21:56:47.492"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:47.549" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:47.549" starttime="20161128 21:56:47.548"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:47.553" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:47.553" starttime="20161128 21:56:47.550"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.603" starttime="20161128 21:56:47.554"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.605" starttime="20161128 21:56:47.604"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:47.606" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:47.606" starttime="20161128 21:56:47.605"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.607" starttime="20161128 21:56:47.607"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:47.608" starttime="20161128 21:56:47.548"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended3" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.635" starttime="20161128 21:56:47.613"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%ú%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161128 21:56:47.650" level="INFO">${SQL_TalentPoolIdToGet} = 719</msg>
<status status="PASS" endtime="20161128 21:56:47.650" starttime="20161128 21:56:47.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.653" level="INFO">${SQL_TalentPoolIdToGet} = 719</msg>
<status status="PASS" endtime="20161128 21:56:47.653" starttime="20161128 21:56:47.651"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161128 21:56:47.685" level="INFO">${SQL_TalentPoolTitleById} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20161128 21:56:47.685" starttime="20161128 21:56:47.654"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:47.687" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:47.687" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:47.687" starttime="20161128 21:56:47.686"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.688" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:47.689" starttime="20161128 21:56:47.688"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.690" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:47.690" starttime="20161128 21:56:47.689"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.691" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:47.691" starttime="20161128 21:56:47.691"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:47.692" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:47.693" starttime="20161128 21:56:47.692"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.775" starttime="20161128 21:56:47.693"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.776" starttime="20161128 21:56:47.775"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:47.778" level="INFO">${resBody} = {"TalentpoolId":719,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\xc...</msg>
<status status="PASS" endtime="20161128 21:56:47.779" starttime="20161128 21:56:47.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.780" level="INFO">{"TalentpoolId":719,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\xc2\xae\xc2\xaf\xc2\xb3\xc2\xb4\xc2\xb8U\xc2\xbe\xc3\x80\xc3\x81\xc3\x82\xc3\x83\xc3\x84\xc3\x85\xc3\x88\xc3\x89\xc3\x8a\xc3\x8b\xc3\x8c\xc3\x8d\xc3\x8e\xc3\x8f\xc3\x90\xc3\x92\xc3\x93\xc3\x94\xc3\x95\xc3\x96\xc3\x97\xc3\x98\xc3\x99\xc3\x9a\xc3\x9b\xc3\x9c","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-03-02T00:29:25.883","ModifierId":1,"ModifiedDate":"2016-03-02T00:29:25.883","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:47.781" starttime="20161128 21:56:47.779"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:47.782" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20161128 21:56:47.783" starttime="20161128 21:56:47.781"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:47.784" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20161128 21:56:47.784" starttime="20161128 21:56:47.783"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:47.786" level="INFO">${keyValue} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20161128 21:56:47.786" starttime="20161128 21:56:47.785"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:47.787" starttime="20161128 21:56:47.612"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended3

*Description:*
verify ASCII characters 3

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:47.787" critical="yes" starttime="20161128 21:56:47.490"></status>
</test>
<test id="s1-s1-s1-t32" name="GET-API_TPC_GET_Return_Title_Extended5">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.806" starttime="20161128 21:56:47.792"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:47.822" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:47.822" starttime="20161128 21:56:47.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.824" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:47.824" starttime="20161128 21:56:47.823"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:47.826" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:47.826" starttime="20161128 21:56:47.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.828" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:47.828" starttime="20161128 21:56:47.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.829" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:47.830" starttime="20161128 21:56:47.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.831" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:47.831" starttime="20161128 21:56:47.830"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:47.832" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:47.832" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:47.833" starttime="20161128 21:56:47.831"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.834" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:47.834" starttime="20161128 21:56:47.833"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.835" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:47.835" starttime="20161128 21:56:47.834"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.837" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:47.837" starttime="20161128 21:56:47.836"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:47.837" starttime="20161128 21:56:47.791"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:47.839" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:47.840" starttime="20161128 21:56:47.839"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:47.844" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:47.844" starttime="20161128 21:56:47.840"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.903" starttime="20161128 21:56:47.845"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.904" starttime="20161128 21:56:47.904"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:47.905" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:47.905" starttime="20161128 21:56:47.905"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.906" starttime="20161128 21:56:47.906"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:47.907" starttime="20161128 21:56:47.838"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended5" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:47.933" starttime="20161128 21:56:47.912"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND title LIKE '%Š%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161128 21:56:47.947" level="INFO">${SQL_TalentPoolIdToGet} = 5123</msg>
<status status="PASS" endtime="20161128 21:56:47.948" starttime="20161128 21:56:47.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.949" level="INFO">${SQL_TalentPoolIdToGet} = 5123</msg>
<status status="PASS" endtime="20161128 21:56:47.950" starttime="20161128 21:56:47.948"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161128 21:56:47.952" level="INFO">${SQL_TalentPoolTitleById} = ++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ</msg>
<status status="PASS" endtime="20161128 21:56:47.952" starttime="20161128 21:56:47.950"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:47.953" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:47.953" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:47.954" starttime="20161128 21:56:47.952"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.955" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:47.955" starttime="20161128 21:56:47.954"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.956" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:47.956" starttime="20161128 21:56:47.955"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:47.957" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:47.958" starttime="20161128 21:56:47.957"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:47.959" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:47.959" starttime="20161128 21:56:47.958"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.036" starttime="20161128 21:56:47.959"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.038" starttime="20161128 21:56:48.037"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:48.039" level="INFO">${resBody} = {"TalentpoolId":5123,"Title":"++\xc2\xa6_\xc2\xa6\xc2\xa6\xc2\xafa\xc3\x9fGpSs\xc2\xb5tFTOd8fen=\xc2\xb1==()\xc3\xb7\xcb\x9c\xc2\xb0\xe2\x80\xa2\xc2\xb7vn\xc2\xb2\xc2\xa6\xe2\x82\xac\xe2\x80\x9e\xe2\x...</msg>
<status status="PASS" endtime="20161128 21:56:48.039" starttime="20161128 21:56:48.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.041" level="INFO">{"TalentpoolId":5123,"Title":"++\xc2\xa6_\xc2\xa6\xc2\xa6\xc2\xafa\xc3\x9fGpSs\xc2\xb5tFTOd8fen=\xc2\xb1==()\xc3\xb7\xcb\x9c\xc2\xb0\xe2\x80\xa2\xc2\xb7vn\xc2\xb2\xc2\xa6\xe2\x82\xac\xe2\x80\x9e\xe2\x80\xa6\xe2\x80\xa0\xe2\x80\xa1\xcb\x86\xe2\x80\xb0\xc5\xa0\xe2\x80\xb9\xc5\x92\xc5\xbd","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-10-31T18:33:25.413","ModifierId":1,"ModifiedDate":"2016-10-31T18:33:25.413","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:48.041" starttime="20161128 21:56:48.040"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:48.042" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'++\xa6_\xa6\xa6\xafa\xdfGpSs\xb5tFTOd8fen=\xb1==()\xf7\u02dc\xb0\u2022\xb7vn\xb2\xa6\u20ac\u201e\u2026\u2020\u2021\u02c6\u2030\u0160\u2039\u0152\u017d', u'TalentpoolId...</msg>
<status status="PASS" endtime="20161128 21:56:48.043" starttime="20161128 21:56:48.042"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:48.044" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'++\xa6_\xa6\xa6\xafa\xdfGpSs\xb5tFTOd8fen=\xb1==()\xf7\u02dc\xb0\u2022\xb7vn\xb2\xa6\u20ac\u201e\u2026\u2020\u2021\u02c6\u2030\u0160\u2039\u0152\u017d', u'CreatedDate'...</msg>
<status status="PASS" endtime="20161128 21:56:48.044" starttime="20161128 21:56:48.043"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:48.045" level="INFO">${keyValue} = ++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ</msg>
<status status="PASS" endtime="20161128 21:56:48.046" starttime="20161128 21:56:48.045"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:48.046" starttime="20161128 21:56:47.911"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended5

*Description:*
verify ASCII characters 5

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:48.047" critical="yes" starttime="20161128 21:56:47.789"></status>
</test>
<test id="s1-s1-s1-t33" name="GET-API_TPC_GET_Return_Title_Extended6">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.092" starttime="20161128 21:56:48.051"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:48.100" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:48.100" starttime="20161128 21:56:48.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.102" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:48.103" starttime="20161128 21:56:48.101"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:48.111" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:48.112" starttime="20161128 21:56:48.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.114" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:48.115" starttime="20161128 21:56:48.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.117" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:48.117" starttime="20161128 21:56:48.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.119" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:48.120" starttime="20161128 21:56:48.118"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:48.121" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:48.122" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:48.122" starttime="20161128 21:56:48.120"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.124" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:48.124" starttime="20161128 21:56:48.123"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.126" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:48.127" starttime="20161128 21:56:48.125"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.129" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:48.129" starttime="20161128 21:56:48.127"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:48.130" starttime="20161128 21:56:48.050"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:48.135" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:48.135" starttime="20161128 21:56:48.134"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:48.139" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:48.139" starttime="20161128 21:56:48.135"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.206" starttime="20161128 21:56:48.140"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.208" starttime="20161128 21:56:48.207"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:48.210" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:48.210" starttime="20161128 21:56:48.209"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.212" starttime="20161128 21:56:48.211"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:48.212" starttime="20161128 21:56:48.133"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended6" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.260" starttime="20161128 21:56:48.221"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%Ø%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161128 21:56:48.277" level="INFO">${SQL_TalentPoolIdToGet} = 2105</msg>
<status status="PASS" endtime="20161128 21:56:48.277" starttime="20161128 21:56:48.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.279" level="INFO">${SQL_TalentPoolIdToGet} = 2105</msg>
<status status="PASS" endtime="20161128 21:56:48.279" starttime="20161128 21:56:48.278"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById1}</var>
</assign>
<msg timestamp="20161128 21:56:48.284" level="INFO">${SQL_TalentPoolTitleById1} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20161128 21:56:48.284" starttime="20161128 21:56:48.279"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:48.285" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:48.285" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:48.286" starttime="20161128 21:56:48.284"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.287" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:48.287" starttime="20161128 21:56:48.286"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.288" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:48.289" starttime="20161128 21:56:48.288"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.290" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:48.290" starttime="20161128 21:56:48.289"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:48.291" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:48.291" starttime="20161128 21:56:48.291"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.331" starttime="20161128 21:56:48.292"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.333" starttime="20161128 21:56:48.332"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:48.335" level="INFO">${resBody} = {"TalentpoolId":2105,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\x...</msg>
<status status="PASS" endtime="20161128 21:56:48.335" starttime="20161128 21:56:48.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.337" level="INFO">{"TalentpoolId":2105,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\xc2\xae\xc2\xaf\xc2\xb3\xc2\xb4\xc2\xb8U\xc2\xbe\xc3\x80\xc3\x81\xc3\x82\xc3\x83\xc3\x84\xc3\x85\xc3\x88\xc3\x89\xc3\x8a\xc3\x8b\xc3\x8c\xc3\x8d\xc3\x8e\xc3\x8f\xc3\x90\xc3\x92\xc3\x93\xc3\x94\xc3\x95\xc3\x96\xc3\x97\xc3\x98\xc3\x99\xc3\x9a\xc3\x9b\xc3\x9c","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-07-05T15:11:11.89","ModifierId":1,"ModifiedDate":"2016-07-05T15:11:11.89","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:48.337" starttime="20161128 21:56:48.335"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:48.339" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20161128 21:56:48.340" starttime="20161128 21:56:48.338"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:48.342" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20161128 21:56:48.342" starttime="20161128 21:56:48.340"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:48.344" level="INFO">${keyValue} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20161128 21:56:48.345" starttime="20161128 21:56:48.343"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:48.345" starttime="20161128 21:56:48.220"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended6

*Description:*
verify ASCII characters 6

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:48.346" critical="yes" starttime="20161128 21:56:48.048"></status>
</test>
<test id="s1-s1-s1-t34" name="GET-API_TPC_GET_Return_Title_Char_Foreign_Russian">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.365" starttime="20161128 21:56:48.351"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:48.367" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:48.368" starttime="20161128 21:56:48.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.369" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:48.369" starttime="20161128 21:56:48.368"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:48.371" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:48.372" starttime="20161128 21:56:48.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.373" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:48.373" starttime="20161128 21:56:48.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.375" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:48.375" starttime="20161128 21:56:48.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.376" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:48.376" starttime="20161128 21:56:48.375"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:48.378" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:48.378" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:48.379" starttime="20161128 21:56:48.377"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.380" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:48.380" starttime="20161128 21:56:48.379"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.381" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:48.381" starttime="20161128 21:56:48.381"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.383" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:48.383" starttime="20161128 21:56:48.382"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:48.383" starttime="20161128 21:56:48.350"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:48.386" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:48.386" starttime="20161128 21:56:48.385"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:48.390" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:48.390" starttime="20161128 21:56:48.386"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.417" starttime="20161128 21:56:48.391"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.418" starttime="20161128 21:56:48.417"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:48.419" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:48.419" starttime="20161128 21:56:48.419"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.421" starttime="20161128 21:56:48.420"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:48.421" starttime="20161128 21:56:48.384"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Foreign_Russian" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.453" starttime="20161128 21:56:48.426"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%ё%' \ ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161128 21:56:48.467" level="INFO">${SQL_TalentPoolIdToGet} = 2830</msg>
<status status="PASS" endtime="20161128 21:56:48.468" starttime="20161128 21:56:48.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.471" level="INFO">${SQL_TalentPoolIdToGet} = 2830</msg>
<status status="PASS" endtime="20161128 21:56:48.472" starttime="20161128 21:56:48.470"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById1}</var>
</assign>
<msg timestamp="20161128 21:56:48.474" level="INFO">${SQL_TalentPoolTitleById1} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20161128 21:56:48.475" starttime="20161128 21:56:48.472"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:48.476" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:48.476" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:48.476" starttime="20161128 21:56:48.475"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.478" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:48.478" starttime="20161128 21:56:48.477"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.479" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:48.480" starttime="20161128 21:56:48.479"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.481" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:48.481" starttime="20161128 21:56:48.480"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:48.482" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:48.482" starttime="20161128 21:56:48.481"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.518" starttime="20161128 21:56:48.483"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.520" starttime="20161128 21:56:48.519"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:48.522" level="INFO">${resBody} = {"TalentpoolId":2830,"Title":"&lt;=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\x...</msg>
<status status="PASS" endtime="20161128 21:56:48.523" starttime="20161128 21:56:48.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.525" level="INFO">{"TalentpoolId":2830,"Title":"&lt;=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb6\xc3\xb2\xc3\xbb\xc3\xb9\xc3\xbf\xc2\xa2\xc2\xa3\xc2\xa5\xe2\x82\xa7\xc6\x92\xc3\xa1\xc3\xad\xc3\xb3\xc3\xba\xc3\xb1\xc3\x91\xc2\xaa","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-09-26T22:18:48.22","ModifierId":1,"ModifiedDate":"2016-09-26T22:18:48.22","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:48.525" starttime="20161128 21:56:48.523"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:48.527" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'...</msg>
<status status="PASS" endtime="20161128 21:56:48.527" starttime="20161128 21:56:48.526"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:48.529" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'...</msg>
<status status="PASS" endtime="20161128 21:56:48.530" starttime="20161128 21:56:48.528"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:48.532" level="INFO">${keyValue} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20161128 21:56:48.532" starttime="20161128 21:56:48.530"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:48.533" starttime="20161128 21:56:48.425"></status>
</kw>
<doc>*Name:*
API_TP_Get_Return_Title_Char_Foreign_Russian

*Description:*
verify russian alphabet

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:48.533" critical="yes" starttime="20161128 21:56:48.348"></status>
</test>
<test id="s1-s1-s1-t35" name="GET-API_TPC_GET_Return_Title_Char_Foreign_Arabic">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.555" starttime="20161128 21:56:48.537"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:48.563" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:48.563" starttime="20161128 21:56:48.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.565" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:48.565" starttime="20161128 21:56:48.564"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:48.569" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:48.569" starttime="20161128 21:56:48.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.572" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:48.573" starttime="20161128 21:56:48.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.575" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:48.575" starttime="20161128 21:56:48.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.577" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:48.578" starttime="20161128 21:56:48.576"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:48.579" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:48.580" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:48.580" starttime="20161128 21:56:48.578"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.582" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:48.582" starttime="20161128 21:56:48.581"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.584" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:48.584" starttime="20161128 21:56:48.583"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.585" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:48.586" starttime="20161128 21:56:48.585"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:48.586" starttime="20161128 21:56:48.537"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:48.588" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:48.589" starttime="20161128 21:56:48.588"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:48.592" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:48.593" starttime="20161128 21:56:48.589"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.646" starttime="20161128 21:56:48.593"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.647" starttime="20161128 21:56:48.647"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:48.648" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:48.648" starttime="20161128 21:56:48.648"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.649" starttime="20161128 21:56:48.649"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:48.650" starttime="20161128 21:56:48.587"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Foreign_Arabic" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.678" starttime="20161128 21:56:48.655"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%ز%' \ ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161128 21:56:48.689" level="INFO">${SQL_TalentPoolIdToGet} = 4932</msg>
<status status="PASS" endtime="20161128 21:56:48.689" starttime="20161128 21:56:48.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.691" level="INFO">${SQL_TalentPoolIdToGet} = 4932</msg>
<status status="PASS" endtime="20161128 21:56:48.691" starttime="20161128 21:56:48.690"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById1}</var>
</assign>
<msg timestamp="20161128 21:56:48.697" level="INFO">${SQL_TalentPoolTitleById1} = ??????</msg>
<status status="PASS" endtime="20161128 21:56:48.697" starttime="20161128 21:56:48.691"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:48.698" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:48.699" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:48.699" starttime="20161128 21:56:48.698"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.700" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:48.701" starttime="20161128 21:56:48.699"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.702" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:48.702" starttime="20161128 21:56:48.701"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.703" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:48.703" starttime="20161128 21:56:48.702"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:48.704" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:48.705" starttime="20161128 21:56:48.704"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.737" starttime="20161128 21:56:48.705"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.738" starttime="20161128 21:56:48.738"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:48.739" level="INFO">${resBody} = {"TalentpoolId":4932,"Title":"??????","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-10-27T21:38:54.737","ModifierId":1,"Mod...</msg>
<status status="PASS" endtime="20161128 21:56:48.740" starttime="20161128 21:56:48.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.741" level="INFO">{"TalentpoolId":4932,"Title":"??????","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-10-27T21:38:54.737","ModifierId":1,"ModifiedDate":"2016-10-27T21:38:54.737","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:56:48.741" starttime="20161128 21:56:48.740"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:56:48.742" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'??????', u'TalentpoolId': 4932, u'ModifiedDate': u'2016-10-27T21:38:54.737', u'CreatedDate': u'2016-10-27T21:38:54.737', u'Owner': {u'LastName': u'TalentPoolAutomation...</msg>
<status status="PASS" endtime="20161128 21:56:48.743" starttime="20161128 21:56:48.742"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:56:48.744" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'??????', u'CreatedDate': u'2016-10-27T21:38:54.737', u'ModifiedDate': u'2016-10-27T21:38:54.737', u'TalentpoolId': 4932, u'Owner': {u'LastName': u'TalentPoolAutomation...</msg>
<status status="PASS" endtime="20161128 21:56:48.744" starttime="20161128 21:56:48.743"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:56:48.745" level="INFO">${keyValue} = ??????</msg>
<status status="PASS" endtime="20161128 21:56:48.745" starttime="20161128 21:56:48.744"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:48.746" starttime="20161128 21:56:48.654"></status>
</kw>
<doc>*Name:*
API_TP_Get_Return_Title_Char_Foreign_Arabic

*Description:*
verify arabic alphabet

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:48.746" critical="yes" starttime="20161128 21:56:48.535"></status>
</test>
<test id="s1-s1-s1-t36" name="GET-API_TPC_GET_Input_TP_Does_Not_Exist">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.772" starttime="20161128 21:56:48.757"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:48.853" level="INFO">${SQL_GET_USERID} = 62</msg>
<status status="PASS" endtime="20161128 21:56:48.853" starttime="20161128 21:56:48.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.854" level="INFO">62</msg>
<status status="PASS" endtime="20161128 21:56:48.855" starttime="20161128 21:56:48.854"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:48.864" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:48.865" starttime="20161128 21:56:48.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.866" level="INFO">${SQL_GET_USERID} = 62</msg>
<status status="PASS" endtime="20161128 21:56:48.866" starttime="20161128 21:56:48.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.868" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:48.868" starttime="20161128 21:56:48.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.869" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:48.869" starttime="20161128 21:56:48.868"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:48.870" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:48.870" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:48.871" starttime="20161128 21:56:48.870"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.872" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:48.872" starttime="20161128 21:56:48.871"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.873" level="INFO">Set request header "X-USERID" to "62"</msg>
<status status="PASS" endtime="20161128 21:56:48.874" starttime="20161128 21:56:48.873"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.875" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:48.875" starttime="20161128 21:56:48.874"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:48.875" starttime="20161128 21:56:48.750"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:48.878" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:48.878" starttime="20161128 21:56:48.877"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:48.881" level="INFO">Request body set to "{   "UserId": 62,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_62",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:48.882" starttime="20161128 21:56:48.878"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.908" starttime="20161128 21:56:48.882"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.910" starttime="20161128 21:56:48.909"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:48.912" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:48.912" starttime="20161128 21:56:48.911"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.913" starttime="20161128 21:56:48.913"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:48.914" starttime="20161128 21:56:48.876"></status>
</kw>
<kw name="GET_TalentPool_Does_Not_Exist" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>404</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.946" starttime="20161128 21:56:48.920"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id+1000 FROM ou WHERE ou.type_id = 131072 ORDER BY ou_id DESC</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161128 21:56:48.950" level="INFO">${SQL_TalentPoolIdToGet} = 7567</msg>
<status status="PASS" endtime="20161128 21:56:48.951" starttime="20161128 21:56:48.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.952" level="INFO">${SQL_TalentPoolIdToGet} = 7567</msg>
<status status="PASS" endtime="20161128 21:56:48.952" starttime="20161128 21:56:48.951"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:48.954" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:48.954" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:48.954" starttime="20161128 21:56:48.953"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.956" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:48.956" starttime="20161128 21:56:48.955"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.957" level="INFO">Set request header "X-USERID" to "62"</msg>
<status status="PASS" endtime="20161128 21:56:48.957" starttime="20161128 21:56:48.956"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:48.958" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:48.959" starttime="20161128 21:56:48.958"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:48.960" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:48.960" starttime="20161128 21:56:48.959"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161128 21:56:48.961" starttime="20161128 21:56:48.960"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:48.999" starttime="20161128 21:56:48.961"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:49.001" starttime="20161128 21:56:49.000"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:49.002" level="INFO">${resBody} = {"Message":"Talent pool not found."}</msg>
<status status="PASS" endtime="20161128 21:56:49.002" starttime="20161128 21:56:49.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.003" level="INFO">{"Message":"Talent pool not found."}</msg>
<status status="PASS" endtime="20161128 21:56:49.004" starttime="20161128 21:56:49.003"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:49.004" starttime="20161128 21:56:48.919"></status>
</kw>
<doc>*Name:*
API_TP_Get_Input_TP_DNE

*Description:*
verify failure when talent pool id provided does not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:49.004" critical="yes" starttime="20161128 21:56:48.747"></status>
</test>
<test id="s1-s1-s1-t37" name="GET-API_TPC_GET_Input_User_Does_Not_Exist">
<kw name="REST_NOAUTH_NonExistentUser" library="SMP_Keywords">
<doc>*REST_NOAUTH_NonExistentUser:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:49.030" starttime="20161128 21:56:49.008"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:49.034" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20161128 21:56:49.034" starttime="20161128 21:56:49.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.051" level="INFO">2347</msg>
<status status="PASS" endtime="20161128 21:56:49.051" starttime="20161128 21:56:49.035"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT 1</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:49.058" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:49.059" starttime="20161128 21:56:49.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.060" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20161128 21:56:49.061" starttime="20161128 21:56:49.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.062" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:49.063" starttime="20161128 21:56:49.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.065" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:49.065" starttime="20161128 21:56:49.064"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:49.067" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:49.067" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:49.068" starttime="20161128 21:56:49.066"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.070" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:49.070" starttime="20161128 21:56:49.069"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.072" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20161128 21:56:49.072" starttime="20161128 21:56:49.071"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.074" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:49.074" starttime="20161128 21:56:49.073"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:49.075" starttime="20161128 21:56:49.007"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:49.078" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:49.079" starttime="20161128 21:56:49.077"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:49.084" level="INFO">Request body set to "{   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_2347",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:49.084" starttime="20161128 21:56:49.079"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:49.103" starttime="20161128 21:56:49.085"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:49.105" starttime="20161128 21:56:49.104"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:49.106" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:49.106" starttime="20161128 21:56:49.105"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:49.107" starttime="20161128 21:56:49.106"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:49.107" starttime="20161128 21:56:49.076"></status>
</kw>
<kw name="GET_User_Does_Not_Exist" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>401</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:49.137" starttime="20161128 21:56:49.112"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161128 21:56:49.154" level="INFO">${SQL_TalentPoolIdToGet} = 859</msg>
<status status="PASS" endtime="20161128 21:56:49.155" starttime="20161128 21:56:49.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.157" level="INFO">${SQL_TalentPoolIdToGet} = 859</msg>
<status status="PASS" endtime="20161128 21:56:49.157" starttime="20161128 21:56:49.155"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:49.158" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:49.158" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:49.159" starttime="20161128 21:56:49.157"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.160" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:49.160" starttime="20161128 21:56:49.159"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.162" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20161128 21:56:49.162" starttime="20161128 21:56:49.161"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.163" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:49.163" starttime="20161128 21:56:49.162"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:49.164" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:49.165" starttime="20161128 21:56:49.164"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161128 21:56:49.166" starttime="20161128 21:56:49.165"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:49.248" starttime="20161128 21:56:49.166"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:49.250" starttime="20161128 21:56:49.249"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:49.252" level="INFO">${resBody} = {"Message":"You don't have access to the talentpool."}</msg>
<status status="PASS" endtime="20161128 21:56:49.252" starttime="20161128 21:56:49.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.253" level="INFO">{"Message":"You don't have access to the talentpool."}</msg>
<status status="PASS" endtime="20161128 21:56:49.253" starttime="20161128 21:56:49.252"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:49.254" starttime="20161128 21:56:49.111"></status>
</kw>
<doc>*Name:*
API_TP_Get_Input_User_DNE

*Description:*
verify failure when user provided does not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:49.254" critical="yes" starttime="20161128 21:56:49.005"></status>
</test>
<test id="s1-s1-s1-t38" name="GET-API_TPC_GET_Input_User_Did_Not_Create">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:49.276" starttime="20161128 21:56:49.258"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:49.291" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20161128 21:56:49.292" starttime="20161128 21:56:49.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.293" level="INFO">55</msg>
<status status="PASS" endtime="20161128 21:56:49.293" starttime="20161128 21:56:49.292"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:49.296" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:49.296" starttime="20161128 21:56:49.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.298" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20161128 21:56:49.298" starttime="20161128 21:56:49.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.299" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:49.300" starttime="20161128 21:56:49.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.301" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:49.301" starttime="20161128 21:56:49.300"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:49.303" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:49.303" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:49.303" starttime="20161128 21:56:49.302"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.304" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:49.304" starttime="20161128 21:56:49.304"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.306" level="INFO">Set request header "X-USERID" to "55"</msg>
<status status="PASS" endtime="20161128 21:56:49.306" starttime="20161128 21:56:49.305"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.307" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:49.307" starttime="20161128 21:56:49.306"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:49.308" starttime="20161128 21:56:49.257"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:49.311" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:49.311" starttime="20161128 21:56:49.310"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:49.315" level="INFO">Request body set to "{   "UserId": 55,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_55",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:49.316" starttime="20161128 21:56:49.312"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:49.346" starttime="20161128 21:56:49.316"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:49.347" starttime="20161128 21:56:49.347"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:49.348" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:49.348" starttime="20161128 21:56:49.348"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:49.359" starttime="20161128 21:56:49.359"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:49.360" starttime="20161128 21:56:49.309"></status>
</kw>
<kw name="GET_User_Did_Not_Create" library="SMP_Keywords">
<doc>*GET_User_Did_Not_Create:*</doc>
<arguments>
<arg>Title</arg>
<arg>401</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:49.389" starttime="20161128 21:56:49.366"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id&lt;&gt; ${SQL_GET_USERID} ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161128 21:56:49.413" level="INFO">${SQL_TalentPoolIdToGet} = 5060</msg>
<status status="PASS" endtime="20161128 21:56:49.413" starttime="20161128 21:56:49.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.415" level="INFO">${SQL_TalentPoolIdToGet} = 5060</msg>
<status status="PASS" endtime="20161128 21:56:49.415" starttime="20161128 21:56:49.414"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:49.417" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:49.417" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:49.417" starttime="20161128 21:56:49.416"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.418" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:49.419" starttime="20161128 21:56:49.418"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.420" level="INFO">Set request header "X-USERID" to "55"</msg>
<status status="PASS" endtime="20161128 21:56:49.420" starttime="20161128 21:56:49.419"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.421" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:49.422" starttime="20161128 21:56:49.421"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:49.424" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:49.425" starttime="20161128 21:56:49.423"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161128 21:56:49.426" starttime="20161128 21:56:49.425"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:49.483" starttime="20161128 21:56:49.426"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:49.484" starttime="20161128 21:56:49.483"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:49.486" level="INFO">${resBody} = {"Message":"You don't have access to the talentpool."}</msg>
<status status="PASS" endtime="20161128 21:56:49.486" starttime="20161128 21:56:49.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.487" level="INFO">{"Message":"You don't have access to the talentpool."}</msg>
<status status="PASS" endtime="20161128 21:56:49.487" starttime="20161128 21:56:49.486"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:49.488" starttime="20161128 21:56:49.365"></status>
</kw>
<doc>*Name:*
API_TP_Get_Input_User_DidNotCreate

*Description:*
verify failure when user provided did not create the talent pool

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:49.488" critical="yes" starttime="20161128 21:56:49.255"></status>
</test>
<test id="s1-s1-s1-t39" name="POST-API_TPC_Add_Security_Script">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:49.518" starttime="20161128 21:56:49.491"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:49.521" level="INFO">${SQL_GET_USERID} = 62</msg>
<status status="PASS" endtime="20161128 21:56:49.522" starttime="20161128 21:56:49.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.523" level="INFO">62</msg>
<status status="PASS" endtime="20161128 21:56:49.523" starttime="20161128 21:56:49.522"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:49.528" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:49.528" starttime="20161128 21:56:49.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.530" level="INFO">${SQL_GET_USERID} = 62</msg>
<status status="PASS" endtime="20161128 21:56:49.530" starttime="20161128 21:56:49.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.532" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:49.532" starttime="20161128 21:56:49.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.534" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:49.535" starttime="20161128 21:56:49.533"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:49.537" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:49.537" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:49.538" starttime="20161128 21:56:49.536"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.539" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:49.540" starttime="20161128 21:56:49.538"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.541" level="INFO">Set request header "X-USERID" to "62"</msg>
<status status="PASS" endtime="20161128 21:56:49.542" starttime="20161128 21:56:49.540"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.543" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:49.544" starttime="20161128 21:56:49.542"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:49.544" starttime="20161128 21:56:49.491"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:49.548" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:49.548" starttime="20161128 21:56:49.547"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:49.553" level="INFO">Request body set to "{   "UserId": 62,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_62",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:49.553" starttime="20161128 21:56:49.548"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:49.573" starttime="20161128 21:56:49.554"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:49.574" starttime="20161128 21:56:49.574"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:49.576" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:49.576" starttime="20161128 21:56:49.576"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:49.577" starttime="20161128 21:56:49.576"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:49.577" starttime="20161128 21:56:49.546"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Add" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:49.766" starttime="20161128 21:56:49.582"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:56:49.779" level="INFO">${SQL_TalentPoolId} = 705</msg>
<status status="PASS" endtime="20161128 21:56:49.780" starttime="20161128 21:56:49.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.781" level="INFO">${SQL_TalentPoolId} = 705</msg>
<status status="PASS" endtime="20161128 21:56:49.782" starttime="20161128 21:56:49.780"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND name_first LIKE '%&lt;script&gt;alert(123)&lt;/script&gt;%' AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20161128 21:56:49.900" level="INFO">${SQL_UserToAdd1} = 1342</msg>
<status status="PASS" endtime="20161128 21:56:49.900" starttime="20161128 21:56:49.782"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:49.901" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:49.901" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:49.902" starttime="20161128 21:56:49.901"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.903" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:49.903" starttime="20161128 21:56:49.902"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.904" level="INFO">Set request header "X-USERID" to "62"</msg>
<status status="PASS" endtime="20161128 21:56:49.905" starttime="20161128 21:56:49.904"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:49.906" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:49.906" starttime="20161128 21:56:49.905"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:49.907" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:49.908" starttime="20161128 21:56:49.907"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{ \"UserId\": ${SQL_UserToAdd1}, \"Status\": 128 }]</arg>
</arguments>
<msg timestamp="20161128 21:56:49.909" level="INFO">Request body set to "[{ "UserId": 1342, "Status": 128 }]".</msg>
<status status="PASS" endtime="20161128 21:56:49.909" starttime="20161128 21:56:49.908"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:56:49.922" level="INFO">${SQL_CandidateCountBefore} = 10</msg>
<status status="PASS" endtime="20161128 21:56:49.923" starttime="20161128 21:56:49.910"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:51.989" starttime="20161128 21:56:49.923"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:51.990" starttime="20161128 21:56:51.989"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:51.990" level="INFO">${resBody} = [{"UserId":1342,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":nu...</msg>
<status status="PASS" endtime="20161128 21:56:51.990" starttime="20161128 21:56:51.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:51.992" level="INFO">[{"UserId":1342,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":2}]</msg>
<status status="PASS" endtime="20161128 21:56:51.992" starttime="20161128 21:56:51.991"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20161128 21:56:51.997" level="INFO">${SQL_CandidatesCountAfter} = 10</msg>
<status status="PASS" endtime="20161128 21:56:51.997" starttime="20161128 21:56:51.992"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${SQL_CandidateCountBefore} == ${SQL_CandidatesCountAfter}"</arg>
<arg>Set Test Message</arg>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:56:52.002" level="INFO">Set test message to:
The 10 matches with 10</msg>
<status status="PASS" endtime="20161128 21:56:52.002" starttime="20161128 21:56:52.001"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:52.003" starttime="20161128 21:56:51.998"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:52.003" starttime="20161128 21:56:49.581"></status>
</kw>
<doc>*Name:*
API_TPC_Security_Script

*Description:*
verify script injection is allowed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:52.005" critical="yes" starttime="20161128 21:56:49.489">The 10 matches with 10</status>
</test>
<test id="s1-s1-s1-t40" name="POST-API_TPC_Add_Already_Added_Subset">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:52.036" starttime="20161128 21:56:52.008"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:52.060" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:52.061" starttime="20161128 21:56:52.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:52.062" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:52.064" starttime="20161128 21:56:52.061"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:52.069" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:52.069" starttime="20161128 21:56:52.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:52.071" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:52.071" starttime="20161128 21:56:52.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:52.072" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:52.072" starttime="20161128 21:56:52.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:52.073" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:52.074" starttime="20161128 21:56:52.073"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:52.075" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:52.075" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:52.076" starttime="20161128 21:56:52.074"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:52.077" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:52.077" starttime="20161128 21:56:52.076"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:52.078" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:52.079" starttime="20161128 21:56:52.077"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:52.080" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:52.080" starttime="20161128 21:56:52.079"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:52.080" starttime="20161128 21:56:52.007"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:52.083" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:52.083" starttime="20161128 21:56:52.082"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:52.090" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:52.090" starttime="20161128 21:56:52.084"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:52.114" starttime="20161128 21:56:52.091"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:52.116" starttime="20161128 21:56:52.115"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:52.116" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:52.117" starttime="20161128 21:56:52.116"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:52.118" starttime="20161128 21:56:52.117"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:52.119" starttime="20161128 21:56:52.081"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Add_SubSet" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:52.166" starttime="20161128 21:56:52.125"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:56:52.220" level="INFO">${SQL_TalentPoolId} = 5157</msg>
<status status="PASS" endtime="20161128 21:56:52.220" starttime="20161128 21:56:52.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:56:52.221" level="INFO">${SQL_TalentPoolId} = 5157</msg>
<status status="PASS" endtime="20161128 21:56:52.221" starttime="20161128 21:56:52.220"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20161128 21:56:52.238" level="INFO">${SQL_UserToAdd1} = 692</msg>
<status status="PASS" endtime="20161128 21:56:52.238" starttime="20161128 21:56:52.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20161128 21:56:52.240" level="INFO">${SQL_UserToAdd1} = 692</msg>
<status status="PASS" endtime="20161128 21:56:52.240" starttime="20161128 21:56:52.239"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id &lt;&gt; ${SQL_UserToAdd1} AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd2}</var>
</assign>
<msg timestamp="20161128 21:56:52.259" level="INFO">${SQL_UserToAdd2} = 42</msg>
<status status="PASS" endtime="20161128 21:56:52.259" starttime="20161128 21:56:52.240"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:52.261" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:52.261" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:52.262" starttime="20161128 21:56:52.260"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:52.263" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:52.263" starttime="20161128 21:56:52.262"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:52.265" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:52.265" starttime="20161128 21:56:52.264"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:52.266" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:52.267" starttime="20161128 21:56:52.266"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:52.268" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:52.268" starttime="20161128 21:56:52.267"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{\"UserId\": ${SQL_UserToAdd1}},{\"UserId\": ${SQL_UserToAdd2}}]</arg>
</arguments>
<msg timestamp="20161128 21:56:52.270" level="INFO">Request body set to "[{"UserId": 692},{"UserId": 42}]".</msg>
<status status="PASS" endtime="20161128 21:56:52.270" starttime="20161128 21:56:52.269"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:56:52.303" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20161128 21:56:52.304" starttime="20161128 21:56:52.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20161128 21:56:52.306" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20161128 21:56:52.306" starttime="20161128 21:56:52.305"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:55.139" starttime="20161128 21:56:52.307"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:55.142" starttime="20161128 21:56:55.140"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:55.143" level="INFO">${resBody} = [{"UserId":692,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":nul...</msg>
<status status="PASS" endtime="20161128 21:56:55.144" starttime="20161128 21:56:55.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.145" level="INFO">[{"UserId":692,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":1},{"UserId":42,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":0}]</msg>
<status status="PASS" endtime="20161128 21:56:55.146" starttime="20161128 21:56:55.145"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20161128 21:56:55.155" level="INFO">${SQL_CandidatesCountAfter} = 2</msg>
<status status="PASS" endtime="20161128 21:56:55.155" starttime="20161128 21:56:55.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.157" level="INFO">${SQL_CandidatesCountAfter} = 2</msg>
<status status="PASS" endtime="20161128 21:56:55.157" starttime="20161128 21:56:55.156"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${SQL_CandidateCountBefore} == ${SQL_CandidatesCountAfter}"</arg>
<arg>Set Test Message</arg>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.165" level="INFO">Set test message to:
The 1 matches with 2</msg>
<status status="PASS" endtime="20161128 21:56:55.165" starttime="20161128 21:56:55.163"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:55.165" starttime="20161128 21:56:55.158"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:55.166" starttime="20161128 21:56:52.123"></status>
</kw>
<doc>*Name:*
API_TPC_Add_Already_Added_Subset

*Description:*
Verify success when subset of added users are already added

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:55.167" critical="yes" starttime="20161128 21:56:52.006">The 1 matches with 2</status>
</test>
<test id="s1-s1-s1-t41" name="POST-API_TPC_Add_Already_Added_Single">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:55.268" starttime="20161128 21:56:55.170"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:55.310" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:55.311" starttime="20161128 21:56:55.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.312" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:55.312" starttime="20161128 21:56:55.311"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:55.319" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:55.320" starttime="20161128 21:56:55.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.322" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:55.322" starttime="20161128 21:56:55.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.324" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:55.324" starttime="20161128 21:56:55.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.325" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:55.326" starttime="20161128 21:56:55.325"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:55.327" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:55.327" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:55.328" starttime="20161128 21:56:55.326"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.329" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:55.329" starttime="20161128 21:56:55.328"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.330" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:55.331" starttime="20161128 21:56:55.330"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.332" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:55.333" starttime="20161128 21:56:55.331"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:55.333" starttime="20161128 21:56:55.170"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:55.335" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:55.335" starttime="20161128 21:56:55.335"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:55.341" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:55.341" starttime="20161128 21:56:55.336"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:55.362" starttime="20161128 21:56:55.342"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:55.363" starttime="20161128 21:56:55.362"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:55.364" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:55.364" starttime="20161128 21:56:55.363"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:55.365" starttime="20161128 21:56:55.364"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:55.366" starttime="20161128 21:56:55.334"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Already_Added_Single" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:55.398" starttime="20161128 21:56:55.371"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:56:55.417" level="INFO">${SQL_TalentPoolId} = 5649</msg>
<status status="PASS" endtime="20161128 21:56:55.417" starttime="20161128 21:56:55.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.419" level="INFO">${SQL_TalentPoolId} = 5649</msg>
<status status="PASS" endtime="20161128 21:56:55.419" starttime="20161128 21:56:55.418"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20161128 21:56:55.445" level="INFO">${SQL_UserToAdd1} = 36</msg>
<status status="PASS" endtime="20161128 21:56:55.445" starttime="20161128 21:56:55.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.447" level="INFO">${SQL_UserToAdd1} = 36</msg>
<status status="PASS" endtime="20161128 21:56:55.447" starttime="20161128 21:56:55.446"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:55.448" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:55.448" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:55.449" starttime="20161128 21:56:55.447"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.450" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:55.450" starttime="20161128 21:56:55.449"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.451" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:55.452" starttime="20161128 21:56:55.451"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.453" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:55.453" starttime="20161128 21:56:55.452"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:55.455" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:55.455" starttime="20161128 21:56:55.454"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{\"UserId\": ${SQL_UserToAdd1}}]</arg>
</arguments>
<msg timestamp="20161128 21:56:55.456" level="INFO">Request body set to "[{"UserId": 36}]".</msg>
<status status="PASS" endtime="20161128 21:56:55.456" starttime="20161128 21:56:55.455"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:56:55.468" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20161128 21:56:55.468" starttime="20161128 21:56:55.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.470" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20161128 21:56:55.471" starttime="20161128 21:56:55.469"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:55.756" starttime="20161128 21:56:55.471"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:55.758" starttime="20161128 21:56:55.757"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:55.759" level="INFO">${resBody} = [{"UserId":36,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null...</msg>
<status status="PASS" endtime="20161128 21:56:55.759" starttime="20161128 21:56:55.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.760" level="INFO">[{"UserId":36,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":1}]</msg>
<status status="PASS" endtime="20161128 21:56:55.760" starttime="20161128 21:56:55.760"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20161128 21:56:55.769" level="INFO">${SQL_CandidatesCountAfter} = 1</msg>
<status status="PASS" endtime="20161128 21:56:55.769" starttime="20161128 21:56:55.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.771" level="INFO">${SQL_CandidatesCountAfter} = 1</msg>
<status status="PASS" endtime="20161128 21:56:55.771" starttime="20161128 21:56:55.770"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${SQL_CandidateCountBefore} == ${SQL_CandidatesCountAfter}"</arg>
<arg>Set Test Message</arg>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.777" level="INFO">Set test message to:
The 1 matches with 1</msg>
<status status="PASS" endtime="20161128 21:56:55.777" starttime="20161128 21:56:55.776"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:55.778" starttime="20161128 21:56:55.772"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:55.778" starttime="20161128 21:56:55.370"></status>
</kw>
<doc>*Name:*
API_TPC_Add_AlreadyAdded_Single

*Description:*
Verify success when single added user is already added

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:55.778" critical="yes" starttime="20161128 21:56:55.168">The 1 matches with 1</status>
</test>
<test id="s1-s1-s1-t42" name="POST-API_TPC_Add_Already_Added_All">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:55.809" starttime="20161128 21:56:55.782"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:55.841" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:55.841" starttime="20161128 21:56:55.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.843" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:55.843" starttime="20161128 21:56:55.842"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:55.853" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:55.853" starttime="20161128 21:56:55.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.855" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:55.856" starttime="20161128 21:56:55.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.858" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:55.858" starttime="20161128 21:56:55.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.860" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:55.860" starttime="20161128 21:56:55.859"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:55.862" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:55.862" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:55.863" starttime="20161128 21:56:55.861"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.864" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:55.865" starttime="20161128 21:56:55.863"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.867" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:55.867" starttime="20161128 21:56:55.866"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.869" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:55.869" starttime="20161128 21:56:55.868"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:55.870" starttime="20161128 21:56:55.781"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:55.872" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:55.872" starttime="20161128 21:56:55.872"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:55.876" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:55.877" starttime="20161128 21:56:55.873"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:55.897" starttime="20161128 21:56:55.877"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:55.899" starttime="20161128 21:56:55.898"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:55.900" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:55.900" starttime="20161128 21:56:55.899"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:55.901" starttime="20161128 21:56:55.900"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:55.901" starttime="20161128 21:56:55.871"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Already_Added_All" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:55.956" starttime="20161128 21:56:55.906"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 2) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:56:55.975" level="INFO">${SQL_TalentPoolId} = 2415</msg>
<status status="PASS" endtime="20161128 21:56:55.975" starttime="20161128 21:56:55.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:56:55.978" level="INFO">${SQL_TalentPoolId} = 2415</msg>
<status status="PASS" endtime="20161128 21:56:55.978" starttime="20161128 21:56:55.977"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20161128 21:56:56.025" level="INFO">${SQL_UserToAdd1} = 844</msg>
<status status="PASS" endtime="20161128 21:56:56.025" starttime="20161128 21:56:55.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.027" level="INFO">${SQL_UserToAdd1} = 844</msg>
<status status="PASS" endtime="20161128 21:56:56.028" starttime="20161128 21:56:56.026"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id &lt;&gt; ${SQL_UserToAdd1} AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd2}</var>
</assign>
<msg timestamp="20161128 21:56:56.054" level="INFO">${SQL_UserToAdd2} = 38</msg>
<status status="PASS" endtime="20161128 21:56:56.054" starttime="20161128 21:56:56.028"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:56.056" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:56.056" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:56.056" starttime="20161128 21:56:56.055"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.057" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:56.058" starttime="20161128 21:56:56.057"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.059" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:56.059" starttime="20161128 21:56:56.058"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.060" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:56.061" starttime="20161128 21:56:56.060"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:56.062" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:56.062" starttime="20161128 21:56:56.061"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{\"UserId\": ${SQL_UserToAdd1}},{\"UserId\": ${SQL_UserToAdd2}}]</arg>
</arguments>
<msg timestamp="20161128 21:56:56.064" level="INFO">Request body set to "[{"UserId": 844},{"UserId": 38}]".</msg>
<status status="PASS" endtime="20161128 21:56:56.064" starttime="20161128 21:56:56.063"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:56:56.071" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20161128 21:56:56.072" starttime="20161128 21:56:56.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.073" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20161128 21:56:56.073" starttime="20161128 21:56:56.072"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:56.210" starttime="20161128 21:56:56.074"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:56.212" starttime="20161128 21:56:56.211"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:56.213" level="INFO">${resBody} = [{"UserId":844,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":nul...</msg>
<status status="PASS" endtime="20161128 21:56:56.213" starttime="20161128 21:56:56.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.214" level="INFO">[{"UserId":844,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":1},{"UserId":38,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":1}]</msg>
<status status="PASS" endtime="20161128 21:56:56.214" starttime="20161128 21:56:56.214"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20161128 21:56:56.221" level="INFO">${SQL_CandidatesCountAfter} = 2</msg>
<status status="PASS" endtime="20161128 21:56:56.221" starttime="20161128 21:56:56.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.223" level="INFO">${SQL_CandidatesCountAfter} = 2</msg>
<status status="PASS" endtime="20161128 21:56:56.223" starttime="20161128 21:56:56.222"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${SQL_CandidateCountBefore} == ${SQL_CandidatesCountAfter}"</arg>
<arg>Set Test Message</arg>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.228" level="INFO">Set test message to:
The 2 matches with 2</msg>
<status status="PASS" endtime="20161128 21:56:56.228" starttime="20161128 21:56:56.227"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:56.228" starttime="20161128 21:56:56.224"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:56.229" starttime="20161128 21:56:55.906"></status>
</kw>
<doc>*Name:*
Api_TPC_Add_AlreadyAdded_All

*Description:*
Verify success when multiple added users are already added

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST3</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:56.229" critical="yes" starttime="20161128 21:56:55.779">The 2 matches with 2</status>
</test>
<test id="s1-s1-s1-t43" name="POST-API_TPC_Add_Access_No_Visibility_Subset">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:56.259" starttime="20161128 21:56:56.233"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:56.271" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:56.271" starttime="20161128 21:56:56.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.272" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:56.272" starttime="20161128 21:56:56.272"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:56.279" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:56.279" starttime="20161128 21:56:56.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.281" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:56.281" starttime="20161128 21:56:56.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.282" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:56.283" starttime="20161128 21:56:56.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.284" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:56.284" starttime="20161128 21:56:56.283"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:56.286" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:56.286" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:56.286" starttime="20161128 21:56:56.284"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.287" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:56.287" starttime="20161128 21:56:56.287"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.288" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:56.289" starttime="20161128 21:56:56.288"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.290" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:56.290" starttime="20161128 21:56:56.289"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:56.291" starttime="20161128 21:56:56.232"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:56.293" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:56.293" starttime="20161128 21:56:56.292"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:56.297" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:56.297" starttime="20161128 21:56:56.293"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:56.318" starttime="20161128 21:56:56.298"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:56.319" starttime="20161128 21:56:56.319"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:56.320" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:56.321" starttime="20161128 21:56:56.320"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:56.321" starttime="20161128 21:56:56.321"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:56.322" starttime="20161128 21:56:56.291"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>POST_TalentPool_Candidates_Already_Added_All</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:56.323" starttime="20161128 21:56:56.322"></status>
</kw>
<doc>*Name:*
API_TPC_Add_Access_NoVis_SubSet

*Description:*
Verify failure when no actor does not have Visibility on a subset of added multiple users

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST3</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:56.323" critical="yes" starttime="20161128 21:56:56.230"></status>
</test>
<test id="s1-s1-s1-t44" name="POST-API_TPC_Add_2Users">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:56.373" starttime="20161128 21:56:56.326"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:56.412" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20161128 21:56:56.412" starttime="20161128 21:56:56.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.413" level="INFO">55</msg>
<status status="PASS" endtime="20161128 21:56:56.413" starttime="20161128 21:56:56.412"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:56.420" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:56.421" starttime="20161128 21:56:56.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.422" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20161128 21:56:56.422" starttime="20161128 21:56:56.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.424" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:56.424" starttime="20161128 21:56:56.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.425" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:56.425" starttime="20161128 21:56:56.425"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:56.427" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:56.427" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:56.427" starttime="20161128 21:56:56.426"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.428" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:56.428" starttime="20161128 21:56:56.428"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.430" level="INFO">Set request header "X-USERID" to "55"</msg>
<status status="PASS" endtime="20161128 21:56:56.430" starttime="20161128 21:56:56.429"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.431" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:56.431" starttime="20161128 21:56:56.430"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:56.432" starttime="20161128 21:56:56.326"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:56.434" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:56.434" starttime="20161128 21:56:56.434"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:56.438" level="INFO">Request body set to "{   "UserId": 55,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_55",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:56.439" starttime="20161128 21:56:56.435"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:56.459" starttime="20161128 21:56:56.439"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:56.461" starttime="20161128 21:56:56.460"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:56.462" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:56.462" starttime="20161128 21:56:56.461"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:56.463" starttime="20161128 21:56:56.463"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:56.464" starttime="20161128 21:56:56.433"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Add_2Users" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:56.488" starttime="20161128 21:56:56.469"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:56:56.493" level="INFO">${SQL_TalentPoolId} = 702</msg>
<status status="PASS" endtime="20161128 21:56:56.493" starttime="20161128 21:56:56.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.495" level="INFO">${SQL_TalentPoolId} = 702</msg>
<status status="PASS" endtime="20161128 21:56:56.495" starttime="20161128 21:56:56.494"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20161128 21:56:56.506" level="INFO">${SQL_UserToAdd1} = 471</msg>
<status status="PASS" endtime="20161128 21:56:56.507" starttime="20161128 21:56:56.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.509" level="INFO">${SQL_UserToAdd1} = 471</msg>
<status status="PASS" endtime="20161128 21:56:56.509" starttime="20161128 21:56:56.508"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id &lt;&gt; ${SQL_UserToAdd1} AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd2}</var>
</assign>
<msg timestamp="20161128 21:56:56.520" level="INFO">${SQL_UserToAdd2} = 46</msg>
<status status="PASS" endtime="20161128 21:56:56.521" starttime="20161128 21:56:56.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd2}</arg>
<arg>${SQL_UserToAdd2}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.524" level="INFO">${SQL_UserToAdd2} = 46</msg>
<status status="PASS" endtime="20161128 21:56:56.524" starttime="20161128 21:56:56.522"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:56.527" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:56.528" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:56.528" starttime="20161128 21:56:56.527"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.529" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:56.530" starttime="20161128 21:56:56.529"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.531" level="INFO">Set request header "X-USERID" to "55"</msg>
<status status="PASS" endtime="20161128 21:56:56.531" starttime="20161128 21:56:56.530"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.533" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:56.533" starttime="20161128 21:56:56.532"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:56.535" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:56.535" starttime="20161128 21:56:56.534"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_UserToAdd1}},{"UserId": ${SQL_UserToAdd2}}]</arg>
</arguments>
<msg timestamp="20161128 21:56:56.537" level="INFO">Request body set to "[{"UserId": 471},{"UserId": 46}]".</msg>
<status status="PASS" endtime="20161128 21:56:56.537" starttime="20161128 21:56:56.536"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:56:56.542" level="INFO">${SQL_CandidateCountBefore} = 21</msg>
<status status="PASS" endtime="20161128 21:56:56.542" starttime="20161128 21:56:56.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.543" level="INFO">${SQL_CandidateCountBefore} = 21</msg>
<status status="PASS" endtime="20161128 21:56:56.544" starttime="20161128 21:56:56.542"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:56.819" starttime="20161128 21:56:56.545"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:56.820" starttime="20161128 21:56:56.819"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:56.821" level="INFO">${resBody} = [{"UserId":471,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":nul...</msg>
<status status="PASS" endtime="20161128 21:56:56.822" starttime="20161128 21:56:56.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.823" level="INFO">[{"UserId":471,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":2},{"UserId":46,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":0}]</msg>
<status status="PASS" endtime="20161128 21:56:56.823" starttime="20161128 21:56:56.822"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20161128 21:56:56.825" level="INFO">${SQL_CandidatesCountAfter} = 22</msg>
<status status="PASS" endtime="20161128 21:56:56.825" starttime="20161128 21:56:56.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.827" level="INFO">${SQL_CandidatesCountAfter} = 22</msg>
<status status="PASS" endtime="20161128 21:56:56.827" starttime="20161128 21:56:56.826"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+2</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161128 21:56:56.831" level="INFO">${SQL_NUM} = 23</msg>
<status status="PASS" endtime="20161128 21:56:56.831" starttime="20161128 21:56:56.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.832" level="INFO">23</msg>
<status status="PASS" endtime="20161128 21:56:56.833" starttime="20161128 21:56:56.832"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'== '${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:56.836" starttime="20161128 21:56:56.833"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidatesCountAfter} did not match ${SQL_NUM}</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>The ${SQL_CandidatesCountAfter} did not match ${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.841" level="FAIL">The 22 did not match 23</msg>
<status status="FAIL" endtime="20161128 21:56:56.841" starttime="20161128 21:56:56.840"></status>
</kw>
<status status="FAIL" endtime="20161128 21:56:56.841" starttime="20161128 21:56:56.837"></status>
</kw>
<status status="FAIL" endtime="20161128 21:56:56.842" starttime="20161128 21:56:56.468"></status>
</kw>
<doc>*Name:*
API_TPC_Add_2Users

*Description:*
Verify success when adding 2 users

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>USER</tag>
</tags>
<status status="FAIL" endtime="20161128 21:56:56.842" critical="yes" starttime="20161128 21:56:56.324">The 22 did not match 23</status>
</test>
<test id="s1-s1-s1-t45" name="POST-API_TPC_Add_1Users">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:56.879" starttime="20161128 21:56:56.846"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:56.916" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161128 21:56:56.916" starttime="20161128 21:56:56.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.918" level="INFO">48</msg>
<status status="PASS" endtime="20161128 21:56:56.918" starttime="20161128 21:56:56.917"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:56.923" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:56.923" starttime="20161128 21:56:56.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.925" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161128 21:56:56.925" starttime="20161128 21:56:56.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.927" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:56.927" starttime="20161128 21:56:56.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.928" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:56.929" starttime="20161128 21:56:56.928"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:56.930" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:56.930" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:56.930" starttime="20161128 21:56:56.929"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.931" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:56.932" starttime="20161128 21:56:56.931"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.933" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161128 21:56:56.933" starttime="20161128 21:56:56.932"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.934" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:56.934" starttime="20161128 21:56:56.933"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:56.935" starttime="20161128 21:56:56.845"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:56.937" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:56.937" starttime="20161128 21:56:56.936"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:56.941" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:56.941" starttime="20161128 21:56:56.937"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:56.961" starttime="20161128 21:56:56.942"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:56.963" starttime="20161128 21:56:56.962"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:56.964" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:56.964" starttime="20161128 21:56:56.963"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:56.965" starttime="20161128 21:56:56.964"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:56.965" starttime="20161128 21:56:56.936"></status>
</kw>
<kw name="POST_TalentPool_Add_1Users" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:56.990" starttime="20161128 21:56:56.971"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:56:56.995" level="INFO">${SQL_TalentPoolId} = 4536</msg>
<status status="PASS" endtime="20161128 21:56:56.995" starttime="20161128 21:56:56.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:56:56.997" level="INFO">${SQL_TalentPoolId} = 4536</msg>
<status status="PASS" endtime="20161128 21:56:56.997" starttime="20161128 21:56:56.996"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20161128 21:56:57.010" level="INFO">${SQL_UserToAdd1} = 703</msg>
<status status="PASS" endtime="20161128 21:56:57.010" starttime="20161128 21:56:56.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.012" level="INFO">${SQL_UserToAdd1} = 703</msg>
<status status="PASS" endtime="20161128 21:56:57.012" starttime="20161128 21:56:57.011"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd2}</var>
</assign>
<msg timestamp="20161128 21:56:57.037" level="INFO">${SQL_UserToAdd2} = 4813</msg>
<status status="PASS" endtime="20161128 21:56:57.037" starttime="20161128 21:56:57.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd2}</arg>
<arg>${SQL_UserToAdd2}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.039" level="INFO">${SQL_UserToAdd2} = 4813</msg>
<status status="PASS" endtime="20161128 21:56:57.039" starttime="20161128 21:56:57.038"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:57.041" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:57.041" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:57.042" starttime="20161128 21:56:57.039"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.043" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:57.043" starttime="20161128 21:56:57.042"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.044" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161128 21:56:57.045" starttime="20161128 21:56:57.044"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.046" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:57.047" starttime="20161128 21:56:57.045"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:57.048" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:57.049" starttime="20161128 21:56:57.047"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_UserToAdd1}}]</arg>
</arguments>
<msg timestamp="20161128 21:56:57.050" level="INFO">Request body set to "[{"UserId": 703}]".</msg>
<status status="PASS" endtime="20161128 21:56:57.050" starttime="20161128 21:56:57.049"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:56:57.054" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20161128 21:56:57.055" starttime="20161128 21:56:57.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.056" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20161128 21:56:57.056" starttime="20161128 21:56:57.055"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:57.255" starttime="20161128 21:56:57.057"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:57.257" starttime="20161128 21:56:57.256"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:57.258" level="INFO">${resBody} = [{"UserId":703,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"P...</msg>
<status status="PASS" endtime="20161128 21:56:57.258" starttime="20161128 21:56:57.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.259" level="INFO">[{"UserId":703,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":0}]</msg>
<status status="PASS" endtime="20161128 21:56:57.259" starttime="20161128 21:56:57.258"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20161128 21:56:57.268" level="INFO">${SQL_CandidatesCountAfter} = 1</msg>
<status status="PASS" endtime="20161128 21:56:57.268" starttime="20161128 21:56:57.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.270" level="INFO">${SQL_CandidatesCountAfter} = 1</msg>
<status status="PASS" endtime="20161128 21:56:57.270" starttime="20161128 21:56:57.269"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+1</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161128 21:56:57.276" level="INFO">${SQL_NUM} = 1</msg>
<status status="PASS" endtime="20161128 21:56:57.276" starttime="20161128 21:56:57.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.277" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:57.278" starttime="20161128 21:56:57.277"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'== '${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.284" level="INFO">Set test message to:
The 1 matches with 1</msg>
<status status="PASS" endtime="20161128 21:56:57.285" starttime="20161128 21:56:57.284"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:57.285" starttime="20161128 21:56:57.283"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:57.285" starttime="20161128 21:56:57.279"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidatesCountAfter} did not match ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:57.289" starttime="20161128 21:56:57.286"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:57.289" starttime="20161128 21:56:56.970"></status>
</kw>
<doc>*Name:*
API_TPC_Add_1Users

*Description:*
Verify success when adding 1 user

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>USER11</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:57.290" critical="yes" starttime="20161128 21:56:56.843">The 1 matches with 1</status>
</test>
<test id="s1-s1-s1-t46" name="POST-API_TPC_Add_0Users">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:57.456" starttime="20161128 21:56:57.294"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:57.499" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20161128 21:56:57.499" starttime="20161128 21:56:57.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.500" level="INFO">55</msg>
<status status="PASS" endtime="20161128 21:56:57.501" starttime="20161128 21:56:57.500"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:57.508" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:57.508" starttime="20161128 21:56:57.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.509" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20161128 21:56:57.510" starttime="20161128 21:56:57.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.511" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:57.511" starttime="20161128 21:56:57.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.512" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:57.513" starttime="20161128 21:56:57.512"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:57.514" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:57.514" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:57.514" starttime="20161128 21:56:57.513"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.516" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:57.516" starttime="20161128 21:56:57.515"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.517" level="INFO">Set request header "X-USERID" to "55"</msg>
<status status="PASS" endtime="20161128 21:56:57.517" starttime="20161128 21:56:57.516"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.518" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:57.519" starttime="20161128 21:56:57.518"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:57.519" starttime="20161128 21:56:57.293"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:57.521" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:57.521" starttime="20161128 21:56:57.521"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:57.525" level="INFO">Request body set to "{   "UserId": 55,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_55",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:57.525" starttime="20161128 21:56:57.522"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:57.545" starttime="20161128 21:56:57.526"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:57.546" starttime="20161128 21:56:57.545"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:57.547" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:57.547" starttime="20161128 21:56:57.546"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:57.549" starttime="20161128 21:56:57.548"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:57.549" starttime="20161128 21:56:57.520"></status>
</kw>
<kw name="POST_TalentPool_Add_0Users" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:57.603" starttime="20161128 21:56:57.554"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:56:57.611" level="INFO">${SQL_TalentPoolId} = 702</msg>
<status status="PASS" endtime="20161128 21:56:57.611" starttime="20161128 21:56:57.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.613" level="INFO">${SQL_TalentPoolId} = 702</msg>
<status status="PASS" endtime="20161128 21:56:57.613" starttime="20161128 21:56:57.612"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:57.614" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:57.614" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:57.615" starttime="20161128 21:56:57.614"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.616" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:57.616" starttime="20161128 21:56:57.615"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.617" level="INFO">Set request header "X-USERID" to "55"</msg>
<status status="PASS" endtime="20161128 21:56:57.617" starttime="20161128 21:56:57.616"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.618" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:57.619" starttime="20161128 21:56:57.618"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:57.620" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:57.620" starttime="20161128 21:56:57.619"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{}]</arg>
</arguments>
<msg timestamp="20161128 21:56:57.621" level="INFO">Request body set to "[{}]".</msg>
<status status="PASS" endtime="20161128 21:56:57.621" starttime="20161128 21:56:57.620"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:56:57.626" level="INFO">${SQL_CandidateCountBefore} = 22</msg>
<status status="PASS" endtime="20161128 21:56:57.626" starttime="20161128 21:56:57.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.628" level="INFO">${SQL_CandidateCountBefore} = 22</msg>
<status status="PASS" endtime="20161128 21:56:57.628" starttime="20161128 21:56:57.627"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:57.948" starttime="20161128 21:56:57.628"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:57.949" starttime="20161128 21:56:57.948"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:57.950" level="INFO">${resBody} = [{"UserId":0,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,...</msg>
<status status="PASS" endtime="20161128 21:56:57.950" starttime="20161128 21:56:57.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.951" level="INFO">[{"UserId":0,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":2}]</msg>
<status status="PASS" endtime="20161128 21:56:57.952" starttime="20161128 21:56:57.951"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20161128 21:56:57.962" level="INFO">${SQL_CandidatesCountAfter} = 22</msg>
<status status="PASS" endtime="20161128 21:56:57.963" starttime="20161128 21:56:57.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.965" level="INFO">${SQL_CandidatesCountAfter} = 22</msg>
<status status="PASS" endtime="20161128 21:56:57.966" starttime="20161128 21:56:57.964"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161128 21:56:57.971" level="INFO">${SQL_NUM} = 22</msg>
<status status="PASS" endtime="20161128 21:56:57.971" starttime="20161128 21:56:57.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.972" level="INFO">22</msg>
<status status="PASS" endtime="20161128 21:56:57.973" starttime="20161128 21:56:57.972"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'== '${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161128 21:56:57.981" level="INFO">Set test message to:
The 22 matches with 22</msg>
<status status="PASS" endtime="20161128 21:56:57.981" starttime="20161128 21:56:57.980"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:57.982" starttime="20161128 21:56:57.978"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:57.982" starttime="20161128 21:56:57.973"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidatesCountAfter} did not match ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:57.986" starttime="20161128 21:56:57.983"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:57.987" starttime="20161128 21:56:57.553"></status>
</kw>
<doc>*Name:*
API_TPC_Add_0Users

*Description:*
Verify success when adding 0 users

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>USER12</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:57.987" critical="yes" starttime="20161128 21:56:57.291">The 22 matches with 22</status>
</test>
<test id="s1-s1-s1-t47" name="POST-API_TPC_Add_BaseCase_Input_Vs_Database">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:58.033" starttime="20161128 21:56:57.991"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:58.056" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:58.056" starttime="20161128 21:56:58.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.058" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:58.058" starttime="20161128 21:56:58.057"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:58.061" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:58.061" starttime="20161128 21:56:58.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.063" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:58.063" starttime="20161128 21:56:58.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.065" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:58.065" starttime="20161128 21:56:58.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.066" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:58.066" starttime="20161128 21:56:58.066"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:58.068" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:58.068" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:58.068" starttime="20161128 21:56:58.067"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.069" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:58.069" starttime="20161128 21:56:58.068"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.070" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:58.071" starttime="20161128 21:56:58.070"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.072" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:58.072" starttime="20161128 21:56:58.071"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:58.073" starttime="20161128 21:56:57.990"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:58.075" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:58.075" starttime="20161128 21:56:58.075"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:58.080" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:58.080" starttime="20161128 21:56:58.076"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:58.100" starttime="20161128 21:56:58.081"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:58.101" starttime="20161128 21:56:58.100"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:58.102" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:58.102" starttime="20161128 21:56:58.102"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:58.103" starttime="20161128 21:56:58.103"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:58.104" starttime="20161128 21:56:58.074"></status>
</kw>
<kw name="POST_TalentPool_BaseCase_InputVsDataBase" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:58.137" starttime="20161128 21:56:58.109"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:56:58.148" level="INFO">${SQL_TalentPoolId} = 5707</msg>
<status status="PASS" endtime="20161128 21:56:58.149" starttime="20161128 21:56:58.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.150" level="INFO">${SQL_TalentPoolId} = 5707</msg>
<status status="PASS" endtime="20161128 21:56:58.151" starttime="20161128 21:56:58.150"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20161128 21:56:58.165" level="INFO">${SQL_UserToAdd1} = 25</msg>
<status status="PASS" endtime="20161128 21:56:58.165" starttime="20161128 21:56:58.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.167" level="INFO">${SQL_UserToAdd1} = 25</msg>
<status status="PASS" endtime="20161128 21:56:58.167" starttime="20161128 21:56:58.166"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:58.168" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:58.168" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:58.169" starttime="20161128 21:56:58.168"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.170" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:58.170" starttime="20161128 21:56:58.169"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.171" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:58.172" starttime="20161128 21:56:58.171"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.173" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:58.173" starttime="20161128 21:56:58.172"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:58.174" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:58.175" starttime="20161128 21:56:58.174"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_UserToAdd1}}]</arg>
</arguments>
<msg timestamp="20161128 21:56:58.176" level="INFO">Request body set to "[{"UserId": 25}]".</msg>
<status status="PASS" endtime="20161128 21:56:58.176" starttime="20161128 21:56:58.175"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:56:58.178" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20161128 21:56:58.178" starttime="20161128 21:56:58.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.180" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20161128 21:56:58.180" starttime="20161128 21:56:58.179"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:58.328" starttime="20161128 21:56:58.181"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:58.329" starttime="20161128 21:56:58.328"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:58.330" level="INFO">${resBody} = [{"UserId":25,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Ph...</msg>
<status status="PASS" endtime="20161128 21:56:58.331" starttime="20161128 21:56:58.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.331" level="INFO">[{"UserId":25,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":0}]</msg>
<status status="PASS" endtime="20161128 21:56:58.332" starttime="20161128 21:56:58.331"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20161128 21:56:58.338" level="INFO">${SQL_CandidatesCountAfter} = 1</msg>
<status status="PASS" endtime="20161128 21:56:58.338" starttime="20161128 21:56:58.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.340" level="INFO">${SQL_CandidatesCountAfter} = 1</msg>
<status status="PASS" endtime="20161128 21:56:58.340" starttime="20161128 21:56:58.339"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+1</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161128 21:56:58.343" level="INFO">${SQL_NUM} = 1</msg>
<status status="PASS" endtime="20161128 21:56:58.343" starttime="20161128 21:56:58.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.344" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:58.345" starttime="20161128 21:56:58.344"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'== '${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.350" level="INFO">Set test message to:
The 1 matches with 1</msg>
<status status="PASS" endtime="20161128 21:56:58.350" starttime="20161128 21:56:58.349"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:58.351" starttime="20161128 21:56:58.348"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:58.351" starttime="20161128 21:56:58.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidatesCountAfter} did not match ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:58.354" starttime="20161128 21:56:58.351"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:58.355" starttime="20161128 21:56:58.108"></status>
</kw>
<doc>*Name:*
API_TPC_Add_BaseCase_InputVsDatabase

*Description:*
Verify successful input user ends up in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DB</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:58.355" critical="yes" starttime="20161128 21:56:57.988">The 1 matches with 1</status>
</test>
<test id="s1-s1-s1-t48" name="POST-API_TPC_Add_BaseCase_Input_Vs_Output_Value">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:58.390" starttime="20161128 21:56:58.359"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:58.411" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:58.411" starttime="20161128 21:56:58.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.413" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:56:58.413" starttime="20161128 21:56:58.412"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:58.415" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:58.415" starttime="20161128 21:56:58.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.417" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:56:58.417" starttime="20161128 21:56:58.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.418" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:58.418" starttime="20161128 21:56:58.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.419" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:58.420" starttime="20161128 21:56:58.419"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:58.421" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:58.421" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:58.422" starttime="20161128 21:56:58.420"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.423" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:58.423" starttime="20161128 21:56:58.422"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.424" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:58.424" starttime="20161128 21:56:58.423"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.425" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:58.426" starttime="20161128 21:56:58.425"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:58.426" starttime="20161128 21:56:58.358"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:58.428" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:58.428" starttime="20161128 21:56:58.428"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:58.432" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:58.433" starttime="20161128 21:56:58.429"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:58.450" starttime="20161128 21:56:58.433"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:58.451" starttime="20161128 21:56:58.451"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:58.452" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:58.453" starttime="20161128 21:56:58.452"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:58.454" starttime="20161128 21:56:58.453"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:58.454" starttime="20161128 21:56:58.427"></status>
</kw>
<kw name="POST_TalentPool_BaseCase_InputVsDataBase_Value" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:58.508" starttime="20161128 21:56:58.462"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:56:58.519" level="INFO">${SQL_TalentPoolId} = 5312</msg>
<status status="PASS" endtime="20161128 21:56:58.519" starttime="20161128 21:56:58.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.521" level="INFO">${SQL_TalentPoolId} = 5312</msg>
<status status="PASS" endtime="20161128 21:56:58.521" starttime="20161128 21:56:58.520"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20161128 21:56:58.542" level="INFO">${SQL_UserToAdd1} = 766</msg>
<status status="PASS" endtime="20161128 21:56:58.543" starttime="20161128 21:56:58.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.545" level="INFO">${SQL_UserToAdd1} = 766</msg>
<status status="PASS" endtime="20161128 21:56:58.545" starttime="20161128 21:56:58.544"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:58.547" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:58.547" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:58.548" starttime="20161128 21:56:58.546"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.549" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:58.549" starttime="20161128 21:56:58.548"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.550" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:56:58.551" starttime="20161128 21:56:58.550"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.552" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:58.552" starttime="20161128 21:56:58.551"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:58.553" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:58.553" starttime="20161128 21:56:58.552"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_UserToAdd1}}]</arg>
</arguments>
<msg timestamp="20161128 21:56:58.554" level="INFO">Request body set to "[{"UserId": 766}]".</msg>
<status status="PASS" endtime="20161128 21:56:58.555" starttime="20161128 21:56:58.554"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:58.703" starttime="20161128 21:56:58.555"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:58.704" starttime="20161128 21:56:58.703"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:58.706" level="INFO">${resBody} = [{"UserId":766,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"P...</msg>
<status status="PASS" endtime="20161128 21:56:58.706" starttime="20161128 21:56:58.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.707" level="INFO">[{"UserId":766,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":0}]</msg>
<status status="PASS" endtime="20161128 21:56:58.707" starttime="20161128 21:56:58.706"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} AND user_id = ${SQL_UserToAdd1}</arg>
</arguments>
<assign>
<var>${SQL_GetAddedCandidateId}</var>
</assign>
<msg timestamp="20161128 21:56:58.714" level="INFO">${SQL_GetAddedCandidateId} = 766</msg>
<status status="PASS" endtime="20161128 21:56:58.714" starttime="20161128 21:56:58.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetAddedCandidateId}</arg>
<arg>${SQL_GetAddedCandidateId}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.715" level="INFO">${SQL_GetAddedCandidateId} = 766</msg>
<status status="PASS" endtime="20161128 21:56:58.716" starttime="20161128 21:56:58.714"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_UserToAdd1}'== '${SQL_GetAddedCandidateId}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_UserToAdd1} matches with ${SQL_GetAddedCandidateId}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_UserToAdd1} matches with ${SQL_GetAddedCandidateId}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.722" level="INFO">Set test message to:
The 766 matches with 766</msg>
<status status="PASS" endtime="20161128 21:56:58.722" starttime="20161128 21:56:58.721"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:58.722" starttime="20161128 21:56:58.720"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:58.723" starttime="20161128 21:56:58.716"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_UserToAdd1}'&lt;&gt; '${SQL_GetAddedCandidateId}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_UserToAdd1} did not match ${SQL_GetAddedCandidateId}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:58.726" starttime="20161128 21:56:58.723"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:58.727" starttime="20161128 21:56:58.461"></status>
</kw>
<doc>*Name:*
API_TPC_Add_BC_InputVsOutput_Value

*Description:*
Verify successful input user ends up in output

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DBV</tag>
</tags>
<status status="PASS" endtime="20161128 21:56:58.727" critical="yes" starttime="20161128 21:56:58.356">The 766 matches with 766</status>
</test>
<test id="s1-s1-s1-t49" name="PUT-API_TPC_Rename">
<kw name="REST_NOAUTH_Random_Active_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:58.767" starttime="20161128 21:56:58.732"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:56:58.786" level="INFO">${SQL_GET_USERID} = 46</msg>
<status status="PASS" endtime="20161128 21:56:58.786" starttime="20161128 21:56:58.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.787" level="INFO">46</msg>
<status status="PASS" endtime="20161128 21:56:58.788" starttime="20161128 21:56:58.787"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:56:58.793" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:58.793" starttime="20161128 21:56:58.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.795" level="INFO">${SQL_GET_USERID} = 46</msg>
<status status="PASS" endtime="20161128 21:56:58.795" starttime="20161128 21:56:58.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.797" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:56:58.797" starttime="20161128 21:56:58.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.798" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:56:58.799" starttime="20161128 21:56:58.798"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:58.800" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:58.800" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:58.800" starttime="20161128 21:56:58.799"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.801" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:58.802" starttime="20161128 21:56:58.801"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.803" level="INFO">Set request header "X-USERID" to "46"</msg>
<status status="PASS" endtime="20161128 21:56:58.803" starttime="20161128 21:56:58.802"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.804" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:58.804" starttime="20161128 21:56:58.803"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:58.805" starttime="20161128 21:56:58.731"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:58.807" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:58.807" starttime="20161128 21:56:58.806"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:56:58.811" level="INFO">Request body set to "{   "UserId": 46,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_46",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:56:58.811" starttime="20161128 21:56:58.807"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:58.829" starttime="20161128 21:56:58.811"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:58.831" starttime="20161128 21:56:58.830"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:56:58.832" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:56:58.832" starttime="20161128 21:56:58.831"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:56:58.833" starttime="20161128 21:56:58.832"></status>
</kw>
<status status="PASS" endtime="20161128 21:56:58.833" starttime="20161128 21:56:58.805"></status>
</kw>
<kw name="PUT_TalentPool_Rename_Access" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>test 2</arg>
<arg>Title</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:56:58.865" level="INFO">${SQL_TalentPoolId} = 204</msg>
<status status="PASS" endtime="20161128 21:56:58.865" starttime="20161128 21:56:58.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.868" level="INFO">${SQL_TalentPoolId} = 204</msg>
<status status="PASS" endtime="20161128 21:56:58.868" starttime="20161128 21:56:58.866"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:56:58.869" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:56:58.869" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:56:58.869" starttime="20161128 21:56:58.868"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.871" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:56:58.871" starttime="20161128 21:56:58.870"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.872" level="INFO">Set request header "X-USERID" to "46"</msg>
<status status="PASS" endtime="20161128 21:56:58.872" starttime="20161128 21:56:58.871"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.873" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:56:58.874" starttime="20161128 21:56:58.873"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:56:58.875" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:56:58.875" starttime="20161128 21:56:58.874"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161128 21:56:58.876" starttime="20161128 21:56:58.876"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:56:58.878" level="INFO">Request body set to "{ "Title":"test 2"}".</msg>
<status status="PASS" endtime="20161128 21:56:58.878" starttime="20161128 21:56:58.877"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:03.271" starttime="20161128 21:56:58.878"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:57:03.272" level="INFO">${resBody} = {"TalentpoolId":204,"Title":"test 2","Owner":{"UserId":25,"FirstName":"Julie","LastName":"Hennessy"},"CreatedDate":"2013-06-17T22:29:14.61","ModifierId":46,"ModifiedDate":"2016-11-29T05:56:58.9170956Z...</msg>
<status status="PASS" endtime="20161128 21:57:03.273" starttime="20161128 21:57:03.272"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API PUT Test Passed.</arg>
</arguments>
<msg timestamp="20161128 21:57:03.274" level="INFO">Set test message to:
The {"TalentpoolId":204,"Title":"test 2","Owner":{"UserId":25,"FirstName":"Julie","LastName":"Hennessy"},"CreatedDate":"2013-06-17T22:29:14.61","ModifierId":46,"ModifiedDate":"2016-11-29T05:56:58.9170956Z","IsShared":false,"UserCount":0,"LatestUsers":[]} message from the API PUT Test Passed.</msg>
<status status="PASS" endtime="20161128 21:57:03.274" starttime="20161128 21:57:03.273"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:03.275" starttime="20161128 21:56:58.840"></status>
</kw>
<doc>*Name:*
PUT-TP_Rename_Access.

*Description:*
Access: Verify success when actor shared

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
</tags>
<status status="PASS" endtime="20161128 21:57:03.275" critical="yes" starttime="20161128 21:56:58.728">The {"TalentpoolId":204,"Title":"test 2","Owner":{"UserId":25,"FirstName":"Julie","LastName":"Hennessy"},"CreatedDate":"2013-06-17T22:29:14.61","ModifierId":46,"ModifiedDate":"2016-11-29T05:56:58.9170956Z","IsShared":false,"UserCount":0,"LatestUsers":[]} message from the API PUT Test Passed.</status>
</test>
<test id="s1-s1-s1-t50" name="PUT-API_Talent_Pool_Candidate_Search_Set_UseCase_Base_InputVsStatusDatabase">
<kw name="REST_NOAUTH_Random_Active_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:03.505" starttime="20161128 21:57:03.279"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:57:03.557" level="INFO">${SQL_GET_USERID} = 46</msg>
<status status="PASS" endtime="20161128 21:57:03.558" starttime="20161128 21:57:03.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:03.559" level="INFO">46</msg>
<status status="PASS" endtime="20161128 21:57:03.559" starttime="20161128 21:57:03.558"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:57:03.566" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:03.566" starttime="20161128 21:57:03.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:03.568" level="INFO">${SQL_GET_USERID} = 46</msg>
<status status="PASS" endtime="20161128 21:57:03.568" starttime="20161128 21:57:03.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:03.569" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:03.569" starttime="20161128 21:57:03.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:03.571" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:03.571" starttime="20161128 21:57:03.570"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:03.572" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:03.572" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:03.573" starttime="20161128 21:57:03.571"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:03.574" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:03.574" starttime="20161128 21:57:03.573"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:03.575" level="INFO">Set request header "X-USERID" to "46"</msg>
<status status="PASS" endtime="20161128 21:57:03.575" starttime="20161128 21:57:03.575"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:03.576" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:03.577" starttime="20161128 21:57:03.576"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:03.577" starttime="20161128 21:57:03.279"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:57:03.579" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:57:03.579" starttime="20161128 21:57:03.579"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:57:03.583" level="INFO">Request body set to "{   "UserId": 46,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_46",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:57:03.584" starttime="20161128 21:57:03.580"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:03.603" starttime="20161128 21:57:03.584"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:03.604" starttime="20161128 21:57:03.603"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:57:03.605" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:57:03.605" starttime="20161128 21:57:03.605"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:03.606" starttime="20161128 21:57:03.606"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:03.607" starttime="20161128 21:57:03.578"></status>
</kw>
<kw name="PUT_TalentPool_Candidate_Status_Set" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:57:03.683" level="INFO">${SQL_TalentPoolId} = 204</msg>
<status status="PASS" endtime="20161128 21:57:03.683" starttime="20161128 21:57:03.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:57:03.685" level="INFO">${SQL_TalentPoolId} = 204</msg>
<status status="PASS" endtime="20161128 21:57:03.685" starttime="20161128 21:57:03.684"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1}</var>
</assign>
<msg timestamp="20161128 21:57:03.710" level="INFO">${SQL_GetCandidateId1} = 10</msg>
<status status="PASS" endtime="20161128 21:57:03.710" starttime="20161128 21:57:03.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1}</arg>
<arg>${SQL_GetCandidateId1}</arg>
</arguments>
<msg timestamp="20161128 21:57:03.711" level="INFO">${SQL_GetCandidateId1} = 10</msg>
<status status="PASS" endtime="20161128 21:57:03.712" starttime="20161128 21:57:03.711"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 status_id FROM ou_user_status WHERE culture_id = 1 AND status_id IN (128,256,512,1024) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1Status}</var>
</assign>
<msg timestamp="20161128 21:57:03.738" level="INFO">${SQL_GetCandidateId1Status} = 1024</msg>
<status status="PASS" endtime="20161128 21:57:03.738" starttime="20161128 21:57:03.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1Status}</arg>
<arg>${SQL_GetCandidateId1Status}</arg>
</arguments>
<msg timestamp="20161128 21:57:03.740" level="INFO">${SQL_GetCandidateId1Status} = 1024</msg>
<status status="PASS" endtime="20161128 21:57:03.740" starttime="20161128 21:57:03.739"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:03.741" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:03.741" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:03.742" starttime="20161128 21:57:03.741"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:03.743" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:03.743" starttime="20161128 21:57:03.742"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:03.744" level="INFO">Set request header "X-USERID" to "46"</msg>
<status status="PASS" endtime="20161128 21:57:03.745" starttime="20161128 21:57:03.744"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:03.746" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:03.746" starttime="20161128 21:57:03.745"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:57:03.747" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:57:03.748" starttime="20161128 21:57:03.747"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_GetCandidateId1},"Status": ${SQL_GetCandidateId1Status}}]</arg>
</arguments>
<msg timestamp="20161128 21:57:03.749" level="INFO">Request body set to "[{"UserId": 10,"Status": 1024}]".</msg>
<status status="PASS" endtime="20161128 21:57:03.749" starttime="20161128 21:57:03.748"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates/status</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:04.477" starttime="20161128 21:57:03.750"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:57:04.478" level="INFO">${resBody} = [{"UserId":10,"FirstName":"Chief","LastName":"Overman","Ref":"COverman","TypeId":0,"UserStatusId":0,"CandidateStatusId":1024,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"...</msg>
<status status="PASS" endtime="20161128 21:57:04.479" starttime="20161128 21:57:04.478"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT status_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} AND user_id = ${SQL_GetCandidateId1} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidate1Status_After}</var>
</assign>
<msg timestamp="20161128 21:57:04.486" level="INFO">${SQL_GetCandidate1Status_After} = 1024</msg>
<status status="PASS" endtime="20161128 21:57:04.487" starttime="20161128 21:57:04.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidate1Status_After}</arg>
<arg>${SQL_GetCandidate1Status_After}</arg>
</arguments>
<msg timestamp="20161128 21:57:04.489" level="INFO">${SQL_GetCandidate1Status_After} = 1024</msg>
<status status="PASS" endtime="20161128 21:57:04.489" starttime="20161128 21:57:04.488"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'== '${SQL_GetCandidateId1Status}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161128 21:57:04.495" level="INFO">Set test message to:
The 1024 matches with 1024</msg>
<status status="PASS" endtime="20161128 21:57:04.495" starttime="20161128 21:57:04.494"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:04.495" starttime="20161128 21:57:04.493"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:04.496" starttime="20161128 21:57:04.490"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'&lt;&gt; '${SQL_GetCandidateId1Status}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_GetCandidate1Status_After} did not match ${SQL_GetCandidateId1Status}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:04.499" starttime="20161128 21:57:04.496"></status>
</kw>
<kw name="Close" library="SQLlibrary">
<status status="PASS" endtime="20161128 21:57:04.507" starttime="20161128 21:57:04.500"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:04.507" starttime="20161128 21:57:03.616"></status>
</kw>
<doc>*Name:*
PUT-API_Talent_Pool_Candidate_Search_Set_UseCase_Base_InputVsStatusDatabase

*Description:*
UseCase_Base: Verify provided status matches new entry in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
</tags>
<status status="PASS" endtime="20161128 21:57:04.508" critical="yes" starttime="20161128 21:57:03.276">The 1024 matches with 1024</status>
</test>
<test id="s1-s1-s1-t51" name="PUT-API_TalentPool_Candidate_Status_Set_UseCase_Elaborate_Users_1">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:04.534" starttime="20161128 21:57:04.513"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:57:04.588" level="INFO">${SQL_GET_USERID} = 46</msg>
<status status="PASS" endtime="20161128 21:57:04.589" starttime="20161128 21:57:04.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:04.590" level="INFO">46</msg>
<status status="PASS" endtime="20161128 21:57:04.590" starttime="20161128 21:57:04.589"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:57:04.593" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:04.593" starttime="20161128 21:57:04.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:04.595" level="INFO">${SQL_GET_USERID} = 46</msg>
<status status="PASS" endtime="20161128 21:57:04.595" starttime="20161128 21:57:04.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:04.597" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:04.597" starttime="20161128 21:57:04.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:04.598" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:04.599" starttime="20161128 21:57:04.598"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:04.600" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:04.600" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:04.600" starttime="20161128 21:57:04.599"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:04.601" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:04.602" starttime="20161128 21:57:04.601"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:04.603" level="INFO">Set request header "X-USERID" to "46"</msg>
<status status="PASS" endtime="20161128 21:57:04.603" starttime="20161128 21:57:04.602"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:04.604" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:04.604" starttime="20161128 21:57:04.604"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:04.605" starttime="20161128 21:57:04.512"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:57:04.607" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:57:04.607" starttime="20161128 21:57:04.606"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:57:04.611" level="INFO">Request body set to "{   "UserId": 46,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_46",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:57:04.612" starttime="20161128 21:57:04.608"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:04.630" starttime="20161128 21:57:04.612"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:04.631" starttime="20161128 21:57:04.631"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:57:04.632" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:57:04.633" starttime="20161128 21:57:04.632"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:04.634" starttime="20161128 21:57:04.633"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:04.634" starttime="20161128 21:57:04.606"></status>
</kw>
<kw name="PUT_TalentPool_Candidate_Status_Set" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:57:04.706" level="INFO">${SQL_TalentPoolId} = 205</msg>
<status status="PASS" endtime="20161128 21:57:04.706" starttime="20161128 21:57:04.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:57:04.707" level="INFO">${SQL_TalentPoolId} = 205</msg>
<status status="PASS" endtime="20161128 21:57:04.708" starttime="20161128 21:57:04.706"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1}</var>
</assign>
<msg timestamp="20161128 21:57:04.721" level="INFO">${SQL_GetCandidateId1} = 35</msg>
<status status="PASS" endtime="20161128 21:57:04.721" starttime="20161128 21:57:04.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1}</arg>
<arg>${SQL_GetCandidateId1}</arg>
</arguments>
<msg timestamp="20161128 21:57:04.723" level="INFO">${SQL_GetCandidateId1} = 35</msg>
<status status="PASS" endtime="20161128 21:57:04.723" starttime="20161128 21:57:04.722"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 status_id FROM ou_user_status WHERE culture_id = 1 AND status_id IN (128,256,512,1024) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1Status}</var>
</assign>
<msg timestamp="20161128 21:57:04.735" level="INFO">${SQL_GetCandidateId1Status} = 128</msg>
<status status="PASS" endtime="20161128 21:57:04.735" starttime="20161128 21:57:04.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1Status}</arg>
<arg>${SQL_GetCandidateId1Status}</arg>
</arguments>
<msg timestamp="20161128 21:57:04.737" level="INFO">${SQL_GetCandidateId1Status} = 128</msg>
<status status="PASS" endtime="20161128 21:57:04.737" starttime="20161128 21:57:04.735"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:04.738" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:04.738" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:04.738" starttime="20161128 21:57:04.737"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:04.739" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:04.740" starttime="20161128 21:57:04.739"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:04.741" level="INFO">Set request header "X-USERID" to "46"</msg>
<status status="PASS" endtime="20161128 21:57:04.741" starttime="20161128 21:57:04.740"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:04.742" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:04.742" starttime="20161128 21:57:04.742"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:57:04.743" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:57:04.744" starttime="20161128 21:57:04.743"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_GetCandidateId1},"Status": ${SQL_GetCandidateId1Status}}]</arg>
</arguments>
<msg timestamp="20161128 21:57:04.745" level="INFO">Request body set to "[{"UserId": 35,"Status": 128}]".</msg>
<status status="PASS" endtime="20161128 21:57:04.745" starttime="20161128 21:57:04.744"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates/status</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:05.020" starttime="20161128 21:57:04.746"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:57:05.022" level="INFO">${resBody} = [{"UserId":35,"FirstName":"Mike","LastName":"Ables","Ref":"MAbles","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"Create...</msg>
<status status="PASS" endtime="20161128 21:57:05.022" starttime="20161128 21:57:05.021"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT status_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} AND user_id = ${SQL_GetCandidateId1} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidate1Status_After}</var>
</assign>
<msg timestamp="20161128 21:57:05.030" level="INFO">${SQL_GetCandidate1Status_After} = 128</msg>
<status status="PASS" endtime="20161128 21:57:05.030" starttime="20161128 21:57:05.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidate1Status_After}</arg>
<arg>${SQL_GetCandidate1Status_After}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.032" level="INFO">${SQL_GetCandidate1Status_After} = 128</msg>
<status status="PASS" endtime="20161128 21:57:05.032" starttime="20161128 21:57:05.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'== '${SQL_GetCandidateId1Status}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.038" level="INFO">Set test message to:
The 128 matches with 128</msg>
<status status="PASS" endtime="20161128 21:57:05.038" starttime="20161128 21:57:05.037"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:05.039" starttime="20161128 21:57:05.036"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:05.039" starttime="20161128 21:57:05.033"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'&lt;&gt; '${SQL_GetCandidateId1Status}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_GetCandidate1Status_After} did not match ${SQL_GetCandidateId1Status}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:05.043" starttime="20161128 21:57:05.039"></status>
</kw>
<kw name="Close" library="SQLlibrary">
<status status="PASS" endtime="20161128 21:57:05.051" starttime="20161128 21:57:05.043"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:05.051" starttime="20161128 21:57:04.642"></status>
</kw>
<doc>*Name:*
PUT-API_TP_CS_Set_UC_Elab_Users_1

*Description:*
UseCase_Elaborate: Verify success when status passed is identical

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
</tags>
<status status="PASS" endtime="20161128 21:57:05.052" critical="yes" starttime="20161128 21:57:04.509">The 128 matches with 128</status>
</test>
<test id="s1-s1-s1-t52" name="PUT-API_TPC_Rename_Access_Owner">
<kw name="REST_NOAUTH_Random_Active_Owner" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:05.153" starttime="20161128 21:57:05.055"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:57:05.175" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20161128 21:57:05.175" starttime="20161128 21:57:05.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.177" level="INFO">25</msg>
<status status="PASS" endtime="20161128 21:57:05.177" starttime="20161128 21:57:05.176"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:57:05.182" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:05.182" starttime="20161128 21:57:05.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.182" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20161128 21:57:05.184" starttime="20161128 21:57:05.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.186" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:05.186" starttime="20161128 21:57:05.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.188" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:05.188" starttime="20161128 21:57:05.186"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:05.189" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:05.189" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:05.190" starttime="20161128 21:57:05.188"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.191" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:05.192" starttime="20161128 21:57:05.190"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.193" level="INFO">Set request header "X-USERID" to "25"</msg>
<status status="PASS" endtime="20161128 21:57:05.193" starttime="20161128 21:57:05.192"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.194" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:05.194" starttime="20161128 21:57:05.194"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:05.195" starttime="20161128 21:57:05.055"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:57:05.198" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:57:05.198" starttime="20161128 21:57:05.198"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:57:05.202" level="INFO">Request body set to "{   "UserId": 25,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_25",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:57:05.202" starttime="20161128 21:57:05.198"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:05.220" starttime="20161128 21:57:05.203"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:05.221" starttime="20161128 21:57:05.221"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:57:05.222" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:57:05.223" starttime="20161128 21:57:05.222"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:05.224" starttime="20161128 21:57:05.223"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:05.224" starttime="20161128 21:57:05.196"></status>
</kw>
<kw name="PUT_TalentPool_Rename_Access_Owner" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>SimpleName</arg>
<arg>Title</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id &lt;&gt; ${SQL_GET_USERID} AND ou_id NOT IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:57:05.255" level="INFO">${SQL_TalentPoolId} = 620</msg>
<status status="PASS" endtime="20161128 21:57:05.256" starttime="20161128 21:57:05.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.257" level="INFO">${SQL_TalentPoolId} = 620</msg>
<status status="PASS" endtime="20161128 21:57:05.257" starttime="20161128 21:57:05.256"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:05.258" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:05.259" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:05.259" starttime="20161128 21:57:05.258"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.260" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:05.260" starttime="20161128 21:57:05.259"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.261" level="INFO">Set request header "X-USERID" to "25"</msg>
<status status="PASS" endtime="20161128 21:57:05.261" starttime="20161128 21:57:05.261"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.263" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:05.263" starttime="20161128 21:57:05.262"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:57:05.263" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:57:05.263" starttime="20161128 21:57:05.263"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161128 21:57:05.264" starttime="20161128 21:57:05.264"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.266" level="INFO">Request body set to "{ "Title":"SimpleName"}".</msg>
<status status="PASS" endtime="20161128 21:57:05.266" starttime="20161128 21:57:05.266"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161128 21:57:05.267" starttime="20161128 21:57:05.267"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:05.324" starttime="20161128 21:57:05.268"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:57:05.325" level="INFO">${resBody} = {"Message":"You don't have access to the talentpool."}</msg>
<status status="PASS" endtime="20161128 21:57:05.325" starttime="20161128 21:57:05.324"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20161128 21:57:05.326" level="INFO">Set test message to:
The {"Message":"You don't have access to the talentpool."} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20161128 21:57:05.326" starttime="20161128 21:57:05.326"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:05.327" starttime="20161128 21:57:05.231"></status>
</kw>
<doc>*Name:*
PUT-TP_Rename_Access.

*Description:*
Access: Verify success when actor shared

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
</tags>
<status status="PASS" endtime="20161128 21:57:05.327" critical="yes" starttime="20161128 21:57:05.053">The {"Message":"You don't have access to the talentpool."} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-s1-t53" name="PUT-API_TalentPool_Rename_Access_Not_Active">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:05.363" starttime="20161128 21:57:05.331"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:57:05.409" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161128 21:57:05.409" starttime="20161128 21:57:05.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.411" level="INFO">48</msg>
<status status="PASS" endtime="20161128 21:57:05.411" starttime="20161128 21:57:05.410"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:57:05.413" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:05.414" starttime="20161128 21:57:05.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.415" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161128 21:57:05.415" starttime="20161128 21:57:05.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.417" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:05.417" starttime="20161128 21:57:05.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.418" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:05.419" starttime="20161128 21:57:05.418"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:05.420" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:05.420" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:05.420" starttime="20161128 21:57:05.419"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.422" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:05.422" starttime="20161128 21:57:05.421"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.423" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161128 21:57:05.423" starttime="20161128 21:57:05.422"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.424" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:05.425" starttime="20161128 21:57:05.424"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:05.425" starttime="20161128 21:57:05.330"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:57:05.427" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:57:05.427" starttime="20161128 21:57:05.427"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:57:05.431" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:57:05.432" starttime="20161128 21:57:05.428"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:05.457" starttime="20161128 21:57:05.432"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:05.458" starttime="20161128 21:57:05.458"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:57:05.459" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:57:05.459" starttime="20161128 21:57:05.459"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:05.460" starttime="20161128 21:57:05.460"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:05.461" starttime="20161128 21:57:05.426"></status>
</kw>
<kw name="PUT_TalentPool_Candidate_Status_Set" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:57:05.510" level="INFO">${SQL_TalentPoolId} = 763</msg>
<status status="PASS" endtime="20161128 21:57:05.510" starttime="20161128 21:57:05.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.512" level="INFO">${SQL_TalentPoolId} = 763</msg>
<status status="PASS" endtime="20161128 21:57:05.512" starttime="20161128 21:57:05.511"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1}</var>
</assign>
<msg timestamp="20161128 21:57:05.523" level="INFO">${SQL_GetCandidateId1} = 590</msg>
<status status="PASS" endtime="20161128 21:57:05.523" starttime="20161128 21:57:05.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1}</arg>
<arg>${SQL_GetCandidateId1}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.525" level="INFO">${SQL_GetCandidateId1} = 590</msg>
<status status="PASS" endtime="20161128 21:57:05.525" starttime="20161128 21:57:05.524"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 status_id FROM ou_user_status WHERE culture_id = 1 AND status_id IN (128,256,512,1024) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1Status}</var>
</assign>
<msg timestamp="20161128 21:57:05.535" level="INFO">${SQL_GetCandidateId1Status} = 512</msg>
<status status="PASS" endtime="20161128 21:57:05.536" starttime="20161128 21:57:05.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1Status}</arg>
<arg>${SQL_GetCandidateId1Status}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.537" level="INFO">${SQL_GetCandidateId1Status} = 512</msg>
<status status="PASS" endtime="20161128 21:57:05.538" starttime="20161128 21:57:05.536"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:05.539" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:05.539" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:05.539" starttime="20161128 21:57:05.538"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.540" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:05.541" starttime="20161128 21:57:05.540"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.542" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161128 21:57:05.542" starttime="20161128 21:57:05.541"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.543" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:05.543" starttime="20161128 21:57:05.543"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:57:05.544" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:57:05.545" starttime="20161128 21:57:05.544"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_GetCandidateId1},"Status": ${SQL_GetCandidateId1Status}}]</arg>
</arguments>
<msg timestamp="20161128 21:57:05.546" level="INFO">Request body set to "[{"UserId": 590,"Status": 512}]".</msg>
<status status="PASS" endtime="20161128 21:57:05.546" starttime="20161128 21:57:05.545"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates/status</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:05.748" starttime="20161128 21:57:05.547"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:57:05.749" level="INFO">${resBody} = [{"UserId":590,"FirstName":"Samantha","LastName":"Adams","Ref":"Sadams","TypeId":0,"UserStatusId":0,"CandidateStatusId":512,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"C...</msg>
<status status="PASS" endtime="20161128 21:57:05.749" starttime="20161128 21:57:05.748"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT status_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} AND user_id = ${SQL_GetCandidateId1} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidate1Status_After}</var>
</assign>
<msg timestamp="20161128 21:57:05.757" level="INFO">${SQL_GetCandidate1Status_After} = 512</msg>
<status status="PASS" endtime="20161128 21:57:05.757" starttime="20161128 21:57:05.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidate1Status_After}</arg>
<arg>${SQL_GetCandidate1Status_After}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.758" level="INFO">${SQL_GetCandidate1Status_After} = 512</msg>
<status status="PASS" endtime="20161128 21:57:05.759" starttime="20161128 21:57:05.757"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'== '${SQL_GetCandidateId1Status}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.764" level="INFO">Set test message to:
The 512 matches with 512</msg>
<status status="PASS" endtime="20161128 21:57:05.764" starttime="20161128 21:57:05.763"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:05.765" starttime="20161128 21:57:05.762"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:05.765" starttime="20161128 21:57:05.759"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'&lt;&gt; '${SQL_GetCandidateId1Status}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_GetCandidate1Status_After} did not match ${SQL_GetCandidateId1Status}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:05.769" starttime="20161128 21:57:05.766"></status>
</kw>
<kw name="Close" library="SQLlibrary">
<status status="PASS" endtime="20161128 21:57:05.777" starttime="20161128 21:57:05.770"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:05.777" starttime="20161128 21:57:05.468"></status>
</kw>
<doc>*Name:*
PUT-API_TP_Rename_Access_NotActive

*Description:*
Access: Verify failure when actor not active

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
</tags>
<status status="PASS" endtime="20161128 21:57:05.778" critical="yes" starttime="20161128 21:57:05.328">The 512 matches with 512</status>
</test>
<test id="s1-s1-s1-t54" name="PUT-API_TalentPool_Rename_Not_Active">
<kw name="REST_NOAUTH_Random_Not_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:05.822" starttime="20161128 21:57:05.782"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id &lt;&gt; 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:57:05.929" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20161128 21:57:05.930" starttime="20161128 21:57:05.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.931" level="INFO">55</msg>
<status status="PASS" endtime="20161128 21:57:05.931" starttime="20161128 21:57:05.930"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:57:05.940" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:05.940" starttime="20161128 21:57:05.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.942" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20161128 21:57:05.942" starttime="20161128 21:57:05.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.943" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:05.944" starttime="20161128 21:57:05.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.945" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:05.945" starttime="20161128 21:57:05.944"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:05.946" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:05.946" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:05.947" starttime="20161128 21:57:05.946"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.948" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:05.948" starttime="20161128 21:57:05.947"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.949" level="INFO">Set request header "X-USERID" to "55"</msg>
<status status="PASS" endtime="20161128 21:57:05.950" starttime="20161128 21:57:05.949"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:05.951" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:05.951" starttime="20161128 21:57:05.950"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:05.951" starttime="20161128 21:57:05.781"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:57:05.954" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:57:05.954" starttime="20161128 21:57:05.953"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:57:05.960" level="INFO">Request body set to "{   "UserId": 55,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_55",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:57:05.960" starttime="20161128 21:57:05.955"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:05.982" starttime="20161128 21:57:05.961"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:05.983" starttime="20161128 21:57:05.983"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:57:05.984" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:57:05.985" starttime="20161128 21:57:05.984"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:05.986" starttime="20161128 21:57:05.985"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:05.986" starttime="20161128 21:57:05.952"></status>
</kw>
<kw name="PUT_TalentPool_Rename_Access_Not_Active" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>test 2</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID}) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:57:06.003" level="INFO">${SQL_TalentPoolId} = 574</msg>
<status status="PASS" endtime="20161128 21:57:06.003" starttime="20161128 21:57:05.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.005" level="INFO">${SQL_TalentPoolId} = 574</msg>
<status status="PASS" endtime="20161128 21:57:06.005" starttime="20161128 21:57:06.004"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:06.006" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:06.006" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:06.006" starttime="20161128 21:57:06.005"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.007" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:06.008" starttime="20161128 21:57:06.007"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.009" level="INFO">Set request header "X-USERID" to "55"</msg>
<status status="PASS" endtime="20161128 21:57:06.009" starttime="20161128 21:57:06.008"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.010" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:06.010" starttime="20161128 21:57:06.009"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:57:06.011" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:57:06.011" starttime="20161128 21:57:06.011"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.013" level="INFO">Request body set to "{ "Title":"test 2"}".</msg>
<status status="PASS" endtime="20161128 21:57:06.013" starttime="20161128 21:57:06.012"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:06.279" starttime="20161128 21:57:06.013"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:06.280" starttime="20161128 21:57:06.279"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:57:06.281" level="INFO">${resBody} = {"TalentpoolId":574,"Title":"test 2","Owner":{"UserId":55,"FirstName":"Armaghan","LastName":"Mallik"},"CreatedDate":"2016-02-23T04:54:47.43","ModifierId":55,"ModifiedDate":"2016-11-29T05:57:06.0196548...</msg>
<status status="PASS" endtime="20161128 21:57:06.281" starttime="20161128 21:57:06.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.282" level="INFO">{"TalentpoolId":574,"Title":"test 2","Owner":{"UserId":55,"FirstName":"Armaghan","LastName":"Mallik"},"CreatedDate":"2016-02-23T04:54:47.43","ModifierId":55,"ModifiedDate":"2016-11-29T05:57:06.0196548Z","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161128 21:57:06.283" starttime="20161128 21:57:06.282"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161128 21:57:06.284" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'test 2', u'TalentpoolId': 574, u'ModifiedDate': u'2016-11-29T05:57:06.0196548Z', u'CreatedDate': u'2016-02-23T04:54:47.43', u'Owner': {u'LastName': u'Mallik', u'UserId...</msg>
<status status="PASS" endtime="20161128 21:57:06.284" starttime="20161128 21:57:06.283"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161128 21:57:06.285" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'test 2', u'CreatedDate': u'2016-02-23T04:54:47.43', u'ModifiedDate': u'2016-11-29T05:57:06.0196548Z', u'TalentpoolId': 574, u'Owner': {u'LastName': u'Mallik', u'UserId...</msg>
<status status="PASS" endtime="20161128 21:57:06.285" starttime="20161128 21:57:06.284"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161128 21:57:06.287" level="INFO">${keyValue} = test 2</msg>
<status status="PASS" endtime="20161128 21:57:06.287" starttime="20161128 21:57:06.286"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:06.287" starttime="20161128 21:57:05.994"></status>
</kw>
<doc>*Name:*
PUT-API_TP_Rename_Access_NotActive

*Description:*
Access: Verify failure when actor not active

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
</tags>
<status status="PASS" endtime="20161128 21:57:06.288" critical="yes" starttime="20161128 21:57:05.779"></status>
</test>
<test id="s1-s1-s1-t55" name="PUT-API_TalentPool_Candidate_Status_Set_UseCase_Base_InputVsUserDatabase">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:06.344" starttime="20161128 21:57:06.291"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:57:06.431" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161128 21:57:06.431" starttime="20161128 21:57:06.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.432" level="INFO">1338</msg>
<status status="PASS" endtime="20161128 21:57:06.433" starttime="20161128 21:57:06.432"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:57:06.448" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:06.449" starttime="20161128 21:57:06.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.451" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161128 21:57:06.451" starttime="20161128 21:57:06.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.452" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:06.453" starttime="20161128 21:57:06.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.454" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:06.454" starttime="20161128 21:57:06.453"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:06.455" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:06.456" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:06.456" starttime="20161128 21:57:06.455"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.457" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:06.457" starttime="20161128 21:57:06.456"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.459" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161128 21:57:06.459" starttime="20161128 21:57:06.458"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.460" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:06.460" starttime="20161128 21:57:06.459"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:06.461" starttime="20161128 21:57:06.291"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:57:06.463" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:57:06.463" starttime="20161128 21:57:06.462"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:57:06.467" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161128 21:57:06.467" starttime="20161128 21:57:06.464"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:06.487" starttime="20161128 21:57:06.468"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:06.488" starttime="20161128 21:57:06.488"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:57:06.489" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161128 21:57:06.490" starttime="20161128 21:57:06.489"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:06.491" starttime="20161128 21:57:06.490"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:06.491" starttime="20161128 21:57:06.462"></status>
</kw>
<kw name="PUT_TalentPool_Candidate_Status_Set" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>test 2</arg>
<arg>Title</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:57:06.519" level="INFO">${SQL_TalentPoolId} = 4533</msg>
<status status="PASS" endtime="20161128 21:57:06.519" starttime="20161128 21:57:06.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.521" level="INFO">${SQL_TalentPoolId} = 4533</msg>
<status status="PASS" endtime="20161128 21:57:06.521" starttime="20161128 21:57:06.520"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1}</var>
</assign>
<msg timestamp="20161128 21:57:06.528" level="INFO">${SQL_GetCandidateId1} = 592</msg>
<status status="PASS" endtime="20161128 21:57:06.529" starttime="20161128 21:57:06.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1}</arg>
<arg>${SQL_GetCandidateId1}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.530" level="INFO">${SQL_GetCandidateId1} = 592</msg>
<status status="PASS" endtime="20161128 21:57:06.530" starttime="20161128 21:57:06.529"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 status_id FROM ou_user_status WHERE culture_id = 1 AND status_id IN (128,256,512,1024) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1Status}</var>
</assign>
<msg timestamp="20161128 21:57:06.534" level="INFO">${SQL_GetCandidateId1Status} = 1024</msg>
<status status="PASS" endtime="20161128 21:57:06.534" starttime="20161128 21:57:06.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1Status}</arg>
<arg>${SQL_GetCandidateId1Status}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.536" level="INFO">${SQL_GetCandidateId1Status} = 1024</msg>
<status status="PASS" endtime="20161128 21:57:06.536" starttime="20161128 21:57:06.535"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:06.538" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:06.538" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:06.538" starttime="20161128 21:57:06.537"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.539" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:06.539" starttime="20161128 21:57:06.539"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.540" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161128 21:57:06.541" starttime="20161128 21:57:06.540"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.542" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:06.542" starttime="20161128 21:57:06.541"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161128 21:57:06.543" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161128 21:57:06.543" starttime="20161128 21:57:06.542"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_GetCandidateId1},"Status": ${SQL_GetCandidateId1Status}}]</arg>
</arguments>
<msg timestamp="20161128 21:57:06.544" level="INFO">Request body set to "[{"UserId": 592,"Status": 1024}]".</msg>
<status status="PASS" endtime="20161128 21:57:06.545" starttime="20161128 21:57:06.544"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates/status</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:06.734" starttime="20161128 21:57:06.545"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161128 21:57:06.735" level="INFO">${resBody} = [{"UserId":592,"FirstName":"Ashley","LastName":"Gonzalez","Ref":"Agonzalez","TypeId":0,"UserStatusId":0,"CandidateStatusId":1024,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":nu...</msg>
<status status="PASS" endtime="20161128 21:57:06.735" starttime="20161128 21:57:06.734"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT status_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} AND user_id = ${SQL_GetCandidateId1} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidate1Status_After}</var>
</assign>
<msg timestamp="20161128 21:57:06.738" level="INFO">${SQL_GetCandidate1Status_After} = 1024</msg>
<status status="PASS" endtime="20161128 21:57:06.738" starttime="20161128 21:57:06.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidate1Status_After}</arg>
<arg>${SQL_GetCandidate1Status_After}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.739" level="INFO">${SQL_GetCandidate1Status_After} = 1024</msg>
<status status="PASS" endtime="20161128 21:57:06.740" starttime="20161128 21:57:06.738"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'== '${SQL_GetCandidateId1Status}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.745" level="INFO">Set test message to:
The 1024 matches with 1024</msg>
<status status="PASS" endtime="20161128 21:57:06.745" starttime="20161128 21:57:06.745"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:06.746" starttime="20161128 21:57:06.743"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:06.746" starttime="20161128 21:57:06.740"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'&lt;&gt; '${SQL_GetCandidateId1Status}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_GetCandidate1Status_After} did not match ${SQL_GetCandidateId1Status}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:06.750" starttime="20161128 21:57:06.747"></status>
</kw>
<kw name="Close" library="SQLlibrary">
<status status="PASS" endtime="20161128 21:57:06.752" starttime="20161128 21:57:06.751"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:06.752" starttime="20161128 21:57:06.499"></status>
</kw>
<doc>*Name:*
PUT-API_TC_Status_Set_UC_Base_InputVsUDB

*Description:*
UseCase_Base: Verify provided user matches the new entry in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
</tags>
<status status="PASS" endtime="20161128 21:57:06.753" critical="yes" starttime="20161128 21:57:06.289">The 1024 matches with 1024</status>
</test>
<test id="s1-s1-s1-t56" name="DELETE-API_TPC_Remove0Users">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:06.763" starttime="20161128 21:57:06.756"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:57:06.777" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161128 21:57:06.777" starttime="20161128 21:57:06.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.778" level="INFO">514</msg>
<status status="PASS" endtime="20161128 21:57:06.779" starttime="20161128 21:57:06.778"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:57:06.781" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:06.781" starttime="20161128 21:57:06.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.783" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161128 21:57:06.783" starttime="20161128 21:57:06.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.785" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:06.785" starttime="20161128 21:57:06.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.786" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:06.786" starttime="20161128 21:57:06.785"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:06.787" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:06.787" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:06.788" starttime="20161128 21:57:06.786"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.789" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:06.789" starttime="20161128 21:57:06.788"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.790" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161128 21:57:06.790" starttime="20161128 21:57:06.789"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.792" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:06.792" starttime="20161128 21:57:06.791"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:06.792" starttime="20161128 21:57:06.756"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:06.795" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:06.795" starttime="20161128 21:57:06.794"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:06.796" starttime="20161128 21:57:06.796"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:06.798" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20161128 21:57:06.798" starttime="20161128 21:57:06.797"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:57:06.806" level="INFO">${body} = {   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3":...</msg>
<status status="PASS" endtime="20161128 21:57:06.807" starttime="20161128 21:57:06.799"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:06.842" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:06.885" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:06.885" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:06.885" starttime="20161128 21:57:06.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.886" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:06.887" starttime="20161128 21:57:06.886"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20161128 21:57:06.888" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:06.888" starttime="20161128 21:57:06.887"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:06.889" starttime="20161128 21:57:06.793"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_0User" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remove_0User:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:06.902" starttime="20161128 21:57:06.894"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:57:06.913" level="INFO">${SQL_TalentPoolId} = 4665</msg>
<status status="PASS" endtime="20161128 21:57:06.914" starttime="20161128 21:57:06.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:57:06.915" level="INFO">${SQL_TalentPoolId} = 4665</msg>
<status status="PASS" endtime="20161128 21:57:06.916" starttime="20161128 21:57:06.914"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:06.918" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=0514 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20161128 21:57:06.918" starttime="20161128 21:57:06.916"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:06.919" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:06.920" starttime="20161128 21:57:06.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{}]</arg>
</arguments>
<msg timestamp="20161128 21:57:06.921" level="INFO">${body} = [{}]</msg>
<status status="PASS" endtime="20161128 21:57:06.922" starttime="20161128 21:57:06.921"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:57:06.925" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20161128 21:57:06.926" starttime="20161128 21:57:06.922"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:06.928" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:06.999" level="INFO">Delete Request using : alias=http, uri=/talentpools/4665/candidates, data=[{}],                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'0514', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:07.000" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:07.000" starttime="20161128 21:57:06.926"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20161128 21:57:07.011" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20161128 21:57:07.012" starttime="20161128 21:57:07.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.013" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20161128 21:57:07.014" starttime="20161128 21:57:07.012"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161128 21:57:07.019" level="INFO">${SQL_NUM} = 1</msg>
<status status="PASS" endtime="20161128 21:57:07.019" starttime="20161128 21:57:07.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.020" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:07.020" starttime="20161128 21:57:07.019"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.029" level="INFO">Set test message to:
The 1 matches with 1</msg>
<status status="PASS" endtime="20161128 21:57:07.030" starttime="20161128 21:57:07.028"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:07.030" starttime="20161128 21:57:07.026"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:07.031" starttime="20161128 21:57:07.021"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.037" starttime="20161128 21:57:07.032"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:07.038" starttime="20161128 21:57:06.894"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Connect</arg>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.039" starttime="20161128 21:57:07.038"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${SQL_TalentPoolId}=</arg>
<arg>Execute Raw</arg>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.039" starttime="20161128 21:57:07.039"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Suite Variable</arg>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.040" starttime="20161128 21:57:07.040"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${SQL_UserToRemove1}=</arg>
<arg>Execute Raw</arg>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.041" starttime="20161128 21:57:07.041"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Suite Variable</arg>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.042" starttime="20161128 21:57:07.042"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>&amp;{headers}=</arg>
<arg>Create Dictionary</arg>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.043" starttime="20161128 21:57:07.043"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>http://laxqarexmt.office.cyberu.com/talentpool-api</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.044" starttime="20161128 21:57:07.044"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Suite Variable</arg>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.045" starttime="20161128 21:57:07.045"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}=</arg>
<arg>Execute Raw</arg>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.047" starttime="20161128 21:57:07.046"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${resp}=</arg>
<arg>RequestsLibrary.Delete Request</arg>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.048" starttime="20161128 21:57:07.047"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}=</arg>
<arg>Execute Raw</arg>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.049" starttime="20161128 21:57:07.049"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Suite Variable</arg>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.051" starttime="20161128 21:57:07.050"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${SQL_NUM}=</arg>
<arg>Evaluate</arg>
<arg>${SQL_CandidateCountBefore}-1</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.052" starttime="20161128 21:57:07.051"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Log</arg>
<arg>${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.053" starttime="20161128 21:57:07.052"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.054" starttime="20161128 21:57:07.053"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.055" starttime="20161128 21:57:07.054"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Log</arg>
<arg>END TEST</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.056" starttime="20161128 21:57:07.055"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_0Users

*Description:*
Verify success when removing 0 users

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>NEGATIVE</tag>
</tags>
<status status="PASS" endtime="20161128 21:57:07.056" critical="yes" starttime="20161128 21:57:06.754">The 1 matches with 1</status>
</test>
<test id="s1-s1-s1-t57" name="DELETE-API_TPC_Remove1Users">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.082" starttime="20161128 21:57:07.060"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:57:07.100" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161128 21:57:07.101" starttime="20161128 21:57:07.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.102" level="INFO">1338</msg>
<status status="PASS" endtime="20161128 21:57:07.102" starttime="20161128 21:57:07.101"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:57:07.105" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:07.105" starttime="20161128 21:57:07.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.106" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161128 21:57:07.107" starttime="20161128 21:57:07.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.108" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:07.108" starttime="20161128 21:57:07.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.109" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:07.110" starttime="20161128 21:57:07.109"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:07.112" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:07.112" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:07.112" starttime="20161128 21:57:07.110"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.114" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:07.114" starttime="20161128 21:57:07.113"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.115" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161128 21:57:07.115" starttime="20161128 21:57:07.114"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.116" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:07.117" starttime="20161128 21:57:07.116"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:07.117" starttime="20161128 21:57:07.059"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:07.120" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:07.120" starttime="20161128 21:57:07.119"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.121" starttime="20161128 21:57:07.121"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:07.123" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20161128 21:57:07.123" starttime="20161128 21:57:07.122"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:57:07.127" level="INFO">${body} = {   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3"...</msg>
<status status="PASS" endtime="20161128 21:57:07.127" starttime="20161128 21:57:07.123"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:07.130" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:07.148" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:07.148" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:07.149" starttime="20161128 21:57:07.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.150" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:07.150" starttime="20161128 21:57:07.149"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20161128 21:57:07.151" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:07.152" starttime="20161128 21:57:07.151"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:07.152" starttime="20161128 21:57:07.118"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_1User" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remove_1User:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.183" starttime="20161128 21:57:07.158"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:57:07.206" level="INFO">${SQL_TalentPoolId} = 1994</msg>
<status status="PASS" endtime="20161128 21:57:07.206" starttime="20161128 21:57:07.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.208" level="INFO">${SQL_TalentPoolId} = 1994</msg>
<status status="PASS" endtime="20161128 21:57:07.208" starttime="20161128 21:57:07.207"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20161128 21:57:07.239" level="INFO">${SQL_UserToRemove1} = 6</msg>
<status status="PASS" endtime="20161128 21:57:07.239" starttime="20161128 21:57:07.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.241" level="INFO">${SQL_UserToRemove1} = 6</msg>
<status status="PASS" endtime="20161128 21:57:07.241" starttime="20161128 21:57:07.240"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:07.243" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=01338 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20161128 21:57:07.243" starttime="20161128 21:57:07.241"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:07.244" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:07.245" starttime="20161128 21:57:07.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20161128 21:57:07.246" level="INFO">${body} = [{"UserId": 6}]</msg>
<status status="PASS" endtime="20161128 21:57:07.247" starttime="20161128 21:57:07.246"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:57:07.261" level="INFO">${SQL_CandidateCountBefore} = 3</msg>
<status status="PASS" endtime="20161128 21:57:07.261" starttime="20161128 21:57:07.247"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:07.265" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:07.397" level="INFO">Delete Request using : alias=http, uri=/talentpools/1994/candidates, data=[{"UserId": 6}],                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'01338', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:07.397" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:07.397" starttime="20161128 21:57:07.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.399" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:07.399" starttime="20161128 21:57:07.398"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20161128 21:57:07.401" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:07.401" starttime="20161128 21:57:07.400"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20161128 21:57:07.406" level="INFO">${SQL_CandidateCountAfter} = 2</msg>
<status status="PASS" endtime="20161128 21:57:07.406" starttime="20161128 21:57:07.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.407" level="INFO">${SQL_CandidateCountAfter} = 2</msg>
<status status="PASS" endtime="20161128 21:57:07.408" starttime="20161128 21:57:07.406"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}-1</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161128 21:57:07.411" level="INFO">${SQL_NUM} = 2</msg>
<status status="PASS" endtime="20161128 21:57:07.411" starttime="20161128 21:57:07.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.412" level="INFO">2</msg>
<status status="PASS" endtime="20161128 21:57:07.413" starttime="20161128 21:57:07.412"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.418" level="INFO">Set test message to:
The 2 matches with 2</msg>
<status status="PASS" endtime="20161128 21:57:07.419" starttime="20161128 21:57:07.418"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:07.419" starttime="20161128 21:57:07.417"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:07.419" starttime="20161128 21:57:07.413"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.423" starttime="20161128 21:57:07.420"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:07.423" starttime="20161128 21:57:07.157"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_1Users

*Description:*
Verify success when removing 1 user

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
</tags>
<status status="PASS" endtime="20161128 21:57:07.424" critical="yes" starttime="20161128 21:57:07.057">The 2 matches with 2</status>
</test>
<test id="s1-s1-s1-t58" name="DELETE-API_TPC_Remove_Access_DNE">
<kw name="REST_NOAUTH_NonExistentUser" library="SMP_Keywords">
<doc>*REST_NOAUTH_NonExistentUser:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.516" starttime="20161128 21:57:07.427"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:57:07.524" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20161128 21:57:07.524" starttime="20161128 21:57:07.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.525" level="INFO">2347</msg>
<status status="PASS" endtime="20161128 21:57:07.525" starttime="20161128 21:57:07.525"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT 1</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:57:07.528" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:07.528" starttime="20161128 21:57:07.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.529" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20161128 21:57:07.530" starttime="20161128 21:57:07.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.531" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:07.531" starttime="20161128 21:57:07.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.532" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:07.533" starttime="20161128 21:57:07.532"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:07.534" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:07.534" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:07.534" starttime="20161128 21:57:07.533"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.536" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:07.536" starttime="20161128 21:57:07.535"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.537" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20161128 21:57:07.537" starttime="20161128 21:57:07.536"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.538" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:07.538" starttime="20161128 21:57:07.538"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:07.539" starttime="20161128 21:57:07.427"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:07.541" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:07.542" starttime="20161128 21:57:07.541"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.543" starttime="20161128 21:57:07.543"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:07.544" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20161128 21:57:07.545" starttime="20161128 21:57:07.544"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:57:07.549" level="INFO">${body} = {   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3"...</msg>
<status status="PASS" endtime="20161128 21:57:07.549" starttime="20161128 21:57:07.545"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:07.552" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:07.579" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_2347",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:07.579" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:07.579" starttime="20161128 21:57:07.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.581" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:07.581" starttime="20161128 21:57:07.580"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20161128 21:57:07.582" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:07.582" starttime="20161128 21:57:07.581"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:07.583" starttime="20161128 21:57:07.540"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_Access_DNE" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remove_Access_DNE:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.653" starttime="20161128 21:57:07.588"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:57:07.702" level="INFO">${SQL_TalentPoolId} = 737</msg>
<status status="PASS" endtime="20161128 21:57:07.702" starttime="20161128 21:57:07.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.705" level="INFO">${SQL_TalentPoolId} = 737</msg>
<status status="PASS" endtime="20161128 21:57:07.705" starttime="20161128 21:57:07.703"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_user.user_id FROM ou_user LEFT JOIN users ON ou_user.user_id = users.user_id WHERE users.user_id &gt; 0 AND ou_user.ou_id = ${SQL_TalentPoolId} AND users.user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND users.status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20161128 21:57:07.730" level="INFO">${SQL_UserToRemove1} = 661</msg>
<status status="PASS" endtime="20161128 21:57:07.730" starttime="20161128 21:57:07.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.732" level="INFO">${SQL_UserToRemove1} = 661</msg>
<status status="PASS" endtime="20161128 21:57:07.732" starttime="20161128 21:57:07.731"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:07.735" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=02347 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20161128 21:57:07.735" starttime="20161128 21:57:07.733"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:07.737" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:07.738" starttime="20161128 21:57:07.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20161128 21:57:07.740" level="INFO">${body} = [{"UserId": 661}]</msg>
<status status="PASS" endtime="20161128 21:57:07.740" starttime="20161128 21:57:07.739"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:57:07.747" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20161128 21:57:07.747" starttime="20161128 21:57:07.741"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:07.750" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:07.825" level="INFO">Delete Request using : alias=http, uri=/talentpools/737/candidates, data=[{"UserId": 661}],                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'02347', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:07.825" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:07.826" starttime="20161128 21:57:07.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.827" level="INFO">&lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:07.827" starttime="20161128 21:57:07.826"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20161128 21:57:07.829" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20161128 21:57:07.829" level="FAIL">401 != 400</msg>
<status status="FAIL" endtime="20161128 21:57:07.829" starttime="20161128 21:57:07.828"></status>
</kw>
<status status="FAIL" endtime="20161128 21:57:07.830" starttime="20161128 21:57:07.587"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_Access_DNE

*Description:*
Verify failure when acting user does not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>NEGATIVE</tag>
</tags>
<status status="FAIL" endtime="20161128 21:57:07.830" critical="yes" starttime="20161128 21:57:07.425">401 != 400</status>
</test>
<test id="s1-s1-s1-t59" name="DELETE-API_TPC_Remove_Acc_NOT_TP_Owner">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.877" starttime="20161128 21:57:07.834"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:57:07.908" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:57:07.908" starttime="20161128 21:57:07.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.910" level="INFO">1336</msg>
<status status="PASS" endtime="20161128 21:57:07.911" starttime="20161128 21:57:07.909"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:57:07.921" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:07.921" starttime="20161128 21:57:07.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.923" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161128 21:57:07.923" starttime="20161128 21:57:07.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.925" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:07.925" starttime="20161128 21:57:07.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.926" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:07.926" starttime="20161128 21:57:07.926"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:07.927" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:07.928" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:07.928" starttime="20161128 21:57:07.927"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.929" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:07.930" starttime="20161128 21:57:07.928"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.931" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161128 21:57:07.931" starttime="20161128 21:57:07.930"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.932" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:07.932" starttime="20161128 21:57:07.931"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:07.933" starttime="20161128 21:57:07.833"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:07.935" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:07.935" starttime="20161128 21:57:07.934"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:07.936" starttime="20161128 21:57:07.936"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:07.938" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20161128 21:57:07.938" starttime="20161128 21:57:07.937"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:57:07.942" level="INFO">${body} = {   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3"...</msg>
<status status="PASS" endtime="20161128 21:57:07.942" starttime="20161128 21:57:07.938"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:07.945" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:07.965" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:07.965" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:07.965" starttime="20161128 21:57:07.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:07.967" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:07.967" starttime="20161128 21:57:07.966"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20161128 21:57:07.968" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:07.968" starttime="20161128 21:57:07.967"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:07.969" starttime="20161128 21:57:07.933"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_Not_TP_Owner" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remove_1User:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:08.003" starttime="20161128 21:57:07.974"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id &lt;&gt; ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:57:08.062" level="INFO">${SQL_TalentPoolId} = 4405</msg>
<status status="PASS" endtime="20161128 21:57:08.062" starttime="20161128 21:57:08.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.064" level="INFO">${SQL_TalentPoolId} = 4405</msg>
<status status="PASS" endtime="20161128 21:57:08.065" starttime="20161128 21:57:08.063"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_user.user_id FROM ou_user LEFT JOIN users ON ou_user.user_id = users.user_id WHERE users.user_id &gt; 0 AND ou_user.ou_id = ${SQL_TalentPoolId} AND users.user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND users.status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20161128 21:57:08.102" level="INFO">${SQL_UserToRemove1} = 799</msg>
<status status="PASS" endtime="20161128 21:57:08.102" starttime="20161128 21:57:08.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.104" level="INFO">${SQL_UserToRemove1} = 799</msg>
<status status="PASS" endtime="20161128 21:57:08.104" starttime="20161128 21:57:08.103"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:08.106" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=01336 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20161128 21:57:08.106" starttime="20161128 21:57:08.105"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:08.107" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:08.108" starttime="20161128 21:57:08.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20161128 21:57:08.110" level="INFO">${body} = [{"UserId": 799}]</msg>
<status status="PASS" endtime="20161128 21:57:08.110" starttime="20161128 21:57:08.109"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:57:08.118" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20161128 21:57:08.118" starttime="20161128 21:57:08.111"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:08.121" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:08.162" level="INFO">Delete Request using : alias=http, uri=/talentpools/4405/candidates, data=[{"UserId": 799}],                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'01336', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:08.162" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:08.162" starttime="20161128 21:57:08.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.163" level="INFO">&lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:08.164" starttime="20161128 21:57:08.163"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>401</arg>
</arguments>
<msg timestamp="20161128 21:57:08.165" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:08.165" starttime="20161128 21:57:08.164"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20161128 21:57:08.168" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20161128 21:57:08.168" starttime="20161128 21:57:08.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.169" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20161128 21:57:08.169" starttime="20161128 21:57:08.168"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161128 21:57:08.173" level="INFO">${SQL_NUM} = 1</msg>
<status status="PASS" endtime="20161128 21:57:08.173" starttime="20161128 21:57:08.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.175" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:08.175" starttime="20161128 21:57:08.174"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.181" level="INFO">Set test message to:
The 1 matches with 1</msg>
<status status="PASS" endtime="20161128 21:57:08.181" starttime="20161128 21:57:08.180"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:08.182" starttime="20161128 21:57:08.179"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:08.182" starttime="20161128 21:57:08.176"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:08.186" starttime="20161128 21:57:08.183"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:08.186" starttime="20161128 21:57:07.973"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_Acc_NotTPOwner

*Description:*
Verify failure when acting user is not the talent pool owner

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
</tags>
<status status="PASS" endtime="20161128 21:57:08.187" critical="yes" starttime="20161128 21:57:07.832">The 1 matches with 1</status>
</test>
<test id="s1-s1-s1-t60" name="DELETE-API_TPC_Remove_AlreadyRemoved_All">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:08.212" starttime="20161128 21:57:08.190"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:57:08.242" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20161128 21:57:08.242" starttime="20161128 21:57:08.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.244" level="INFO">55</msg>
<status status="PASS" endtime="20161128 21:57:08.244" starttime="20161128 21:57:08.243"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:57:08.251" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:08.252" starttime="20161128 21:57:08.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.253" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20161128 21:57:08.253" starttime="20161128 21:57:08.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.255" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:08.255" starttime="20161128 21:57:08.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.256" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:08.257" starttime="20161128 21:57:08.256"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:08.258" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:08.258" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:08.258" starttime="20161128 21:57:08.257"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.259" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:08.260" starttime="20161128 21:57:08.259"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.261" level="INFO">Set request header "X-USERID" to "55"</msg>
<status status="PASS" endtime="20161128 21:57:08.261" starttime="20161128 21:57:08.260"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.262" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:08.263" starttime="20161128 21:57:08.262"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:08.263" starttime="20161128 21:57:08.189"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:08.265" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:08.266" starttime="20161128 21:57:08.265"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:08.267" starttime="20161128 21:57:08.267"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:08.269" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20161128 21:57:08.269" starttime="20161128 21:57:08.268"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:57:08.273" level="INFO">${body} = {   "UserId": 55,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": ...</msg>
<status status="PASS" endtime="20161128 21:57:08.273" starttime="20161128 21:57:08.269"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:08.276" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:08.295" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 55,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_55",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:08.295" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:08.295" starttime="20161128 21:57:08.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.297" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:08.297" starttime="20161128 21:57:08.296"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20161128 21:57:08.298" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:08.299" starttime="20161128 21:57:08.297"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:08.299" starttime="20161128 21:57:08.264"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_AlreadyRemoved_All" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_AlreadyRemoved_All:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:08.341" starttime="20161128 21:57:08.305"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:57:08.366" level="INFO">${SQL_TalentPoolId} = 702</msg>
<status status="PASS" endtime="20161128 21:57:08.366" starttime="20161128 21:57:08.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.368" level="INFO">${SQL_TalentPoolId} = 702</msg>
<status status="PASS" endtime="20161128 21:57:08.369" starttime="20161128 21:57:08.367"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20161128 21:57:08.408" level="INFO">${SQL_UserToRemove1} = 469</msg>
<status status="PASS" endtime="20161128 21:57:08.408" starttime="20161128 21:57:08.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.410" level="INFO">${SQL_UserToRemove1} = 469</msg>
<status status="PASS" endtime="20161128 21:57:08.410" starttime="20161128 21:57:08.409"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 AND user_id &lt;&gt; ${SQL_UserToRemove1} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove2}</var>
</assign>
<msg timestamp="20161128 21:57:08.440" level="INFO">${SQL_UserToRemove2} = 640</msg>
<status status="PASS" endtime="20161128 21:57:08.440" starttime="20161128 21:57:08.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove2}</arg>
<arg>${SQL_UserToRemove2}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.442" level="INFO">${SQL_UserToRemove2} = 640</msg>
<status status="PASS" endtime="20161128 21:57:08.443" starttime="20161128 21:57:08.441"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:08.445" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=055 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20161128 21:57:08.445" starttime="20161128 21:57:08.443"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:08.446" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:08.447" starttime="20161128 21:57:08.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}},{"UserId": ${SQL_UserToRemove2}}]</arg>
</arguments>
<msg timestamp="20161128 21:57:08.449" level="INFO">${body} = [{"UserId": 469},{"UserId": 640}]</msg>
<status status="PASS" endtime="20161128 21:57:08.449" starttime="20161128 21:57:08.447"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:57:08.452" level="INFO">${SQL_CandidateCountBefore} = 22</msg>
<status status="PASS" endtime="20161128 21:57:08.453" starttime="20161128 21:57:08.449"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:08.456" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:08.668" level="INFO">Delete Request using : alias=http, uri=/talentpools/702/candidates, data=[{"UserId": 469},{"UserId": 640}],                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'055', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:08.669" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:08.669" starttime="20161128 21:57:08.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.670" level="INFO">&lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:08.671" starttime="20161128 21:57:08.670"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20161128 21:57:08.672" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20161128 21:57:08.672" level="FAIL">401 != 200</msg>
<status status="FAIL" endtime="20161128 21:57:08.673" starttime="20161128 21:57:08.671"></status>
</kw>
<status status="FAIL" endtime="20161128 21:57:08.673" starttime="20161128 21:57:08.304"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_AlreadyRemoved_All

*Description:*
Verify success when multiple removed users are already removed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
</tags>
<status status="FAIL" endtime="20161128 21:57:08.674" critical="yes" starttime="20161128 21:57:08.188">401 != 200</status>
</test>
<test id="s1-s1-s1-t61" name="DELETE-API_TPC_Remove_AlreadyRemoved_Single">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:08.730" starttime="20161128 21:57:08.678"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:57:08.739" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161128 21:57:08.739" starttime="20161128 21:57:08.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.740" level="INFO">48</msg>
<status status="PASS" endtime="20161128 21:57:08.740" starttime="20161128 21:57:08.740"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:57:08.747" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:08.747" starttime="20161128 21:57:08.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.748" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161128 21:57:08.749" starttime="20161128 21:57:08.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.750" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:08.750" starttime="20161128 21:57:08.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.752" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:08.752" starttime="20161128 21:57:08.751"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:08.753" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:08.753" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:08.754" starttime="20161128 21:57:08.753"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.755" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:08.755" starttime="20161128 21:57:08.754"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.756" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161128 21:57:08.756" starttime="20161128 21:57:08.756"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.758" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:08.758" starttime="20161128 21:57:08.757"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:08.758" starttime="20161128 21:57:08.678"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:08.761" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:08.761" starttime="20161128 21:57:08.760"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:08.763" starttime="20161128 21:57:08.762"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:08.764" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20161128 21:57:08.764" starttime="20161128 21:57:08.763"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:57:08.768" level="INFO">${body} = {   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": ...</msg>
<status status="PASS" endtime="20161128 21:57:08.769" starttime="20161128 21:57:08.765"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:08.771" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:08.788" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:08.788" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:08.789" starttime="20161128 21:57:08.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.790" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:08.790" starttime="20161128 21:57:08.789"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20161128 21:57:08.791" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:08.792" starttime="20161128 21:57:08.791"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:08.792" starttime="20161128 21:57:08.759"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_AlreadyRemoved_Single" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_AlreadyRemoved_Single:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:08.849" starttime="20161128 21:57:08.797"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:57:08.873" level="INFO">${SQL_TalentPoolId} = 3222</msg>
<status status="PASS" endtime="20161128 21:57:08.873" starttime="20161128 21:57:08.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.875" level="INFO">${SQL_TalentPoolId} = 3222</msg>
<status status="PASS" endtime="20161128 21:57:08.875" starttime="20161128 21:57:08.874"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20161128 21:57:08.910" level="INFO">${SQL_UserToRemove1} = 558</msg>
<status status="PASS" endtime="20161128 21:57:08.911" starttime="20161128 21:57:08.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20161128 21:57:08.912" level="INFO">${SQL_UserToRemove1} = 558</msg>
<status status="PASS" endtime="20161128 21:57:08.913" starttime="20161128 21:57:08.911"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:08.915" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=048 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20161128 21:57:08.915" starttime="20161128 21:57:08.913"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:08.917" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:08.918" starttime="20161128 21:57:08.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20161128 21:57:08.920" level="INFO">${body} = [{"UserId": 558}]</msg>
<status status="PASS" endtime="20161128 21:57:08.921" starttime="20161128 21:57:08.919"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:57:08.927" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20161128 21:57:08.928" starttime="20161128 21:57:08.922"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:08.931" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:09.020" level="INFO">Delete Request using : alias=http, uri=/talentpools/3222/candidates, data=[{"UserId": 558}],                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'048', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:09.021" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:09.021" starttime="20161128 21:57:08.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.022" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:09.023" starttime="20161128 21:57:09.021"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20161128 21:57:09.024" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:09.025" starttime="20161128 21:57:09.023"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20161128 21:57:09.035" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20161128 21:57:09.035" starttime="20161128 21:57:09.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.037" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20161128 21:57:09.037" starttime="20161128 21:57:09.036"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161128 21:57:09.041" level="INFO">${SQL_NUM} = 1</msg>
<status status="PASS" endtime="20161128 21:57:09.041" starttime="20161128 21:57:09.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.042" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:09.042" starttime="20161128 21:57:09.041"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.048" level="INFO">Set test message to:
The 1 matches with 1</msg>
<status status="PASS" endtime="20161128 21:57:09.048" starttime="20161128 21:57:09.047"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:09.049" starttime="20161128 21:57:09.046"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:09.049" starttime="20161128 21:57:09.043"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:09.053" starttime="20161128 21:57:09.050"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:09.054" starttime="20161128 21:57:08.796"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_AlreadyRemoved_Single

*Description:*
Verify success when single removed user is already removed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
</tags>
<status status="PASS" endtime="20161128 21:57:09.054" critical="yes" starttime="20161128 21:57:08.676">The 1 matches with 1</status>
</test>
<test id="s1-s1-s1-t62" name="DELETE-API_TPC_Remove_AlreadyRemoved_SubSet">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:09.148" starttime="20161128 21:57:09.057"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:57:09.156" level="INFO">${SQL_GET_USERID} = 58</msg>
<status status="PASS" endtime="20161128 21:57:09.156" starttime="20161128 21:57:09.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.158" level="INFO">58</msg>
<status status="PASS" endtime="20161128 21:57:09.158" starttime="20161128 21:57:09.157"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:57:09.161" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:09.161" starttime="20161128 21:57:09.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.163" level="INFO">${SQL_GET_USERID} = 58</msg>
<status status="PASS" endtime="20161128 21:57:09.163" starttime="20161128 21:57:09.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.165" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:09.165" starttime="20161128 21:57:09.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.166" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:09.166" starttime="20161128 21:57:09.165"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:09.167" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:09.168" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:09.168" starttime="20161128 21:57:09.167"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.169" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:09.170" starttime="20161128 21:57:09.168"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.171" level="INFO">Set request header "X-USERID" to "58"</msg>
<status status="PASS" endtime="20161128 21:57:09.172" starttime="20161128 21:57:09.171"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.173" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:09.173" starttime="20161128 21:57:09.172"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:09.174" starttime="20161128 21:57:09.057"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:09.176" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:09.177" starttime="20161128 21:57:09.175"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:09.178" starttime="20161128 21:57:09.177"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:09.179" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20161128 21:57:09.179" starttime="20161128 21:57:09.178"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:57:09.183" level="INFO">${body} = {   "UserId": 58,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": ...</msg>
<status status="PASS" endtime="20161128 21:57:09.184" starttime="20161128 21:57:09.180"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:09.188" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:09.208" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 58,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_58",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:09.208" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:09.208" starttime="20161128 21:57:09.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.210" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:09.210" starttime="20161128 21:57:09.209"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20161128 21:57:09.211" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:09.211" starttime="20161128 21:57:09.210"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:09.212" starttime="20161128 21:57:09.174"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_AlreadyRemoved_SubSet" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_AlreadyRemoved_SubSet:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:09.281" starttime="20161128 21:57:09.218"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:57:09.316" level="INFO">${SQL_TalentPoolId} = 784</msg>
<status status="PASS" endtime="20161128 21:57:09.317" starttime="20161128 21:57:09.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.318" level="INFO">${SQL_TalentPoolId} = 784</msg>
<status status="PASS" endtime="20161128 21:57:09.319" starttime="20161128 21:57:09.317"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20161128 21:57:09.367" level="INFO">${SQL_UserToRemove1} = 677</msg>
<status status="PASS" endtime="20161128 21:57:09.367" starttime="20161128 21:57:09.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.369" level="INFO">${SQL_UserToRemove1} = 677</msg>
<status status="PASS" endtime="20161128 21:57:09.369" starttime="20161128 21:57:09.368"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove2}</var>
</assign>
<msg timestamp="20161128 21:57:09.394" level="INFO">${SQL_UserToRemove2} = 615</msg>
<status status="PASS" endtime="20161128 21:57:09.394" starttime="20161128 21:57:09.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove2}</arg>
<arg>${SQL_UserToRemove2}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.396" level="INFO">${SQL_UserToRemove2} = 615</msg>
<status status="PASS" endtime="20161128 21:57:09.397" starttime="20161128 21:57:09.395"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:09.399" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=058 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20161128 21:57:09.399" starttime="20161128 21:57:09.398"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:09.401" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:09.401" starttime="20161128 21:57:09.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}},{"UserId": ${SQL_UserToRemove2}}]</arg>
</arguments>
<msg timestamp="20161128 21:57:09.403" level="INFO">${body} = [{"UserId": 677},{"UserId": 615}]</msg>
<status status="PASS" endtime="20161128 21:57:09.403" starttime="20161128 21:57:09.402"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:57:09.409" level="INFO">${SQL_CandidateCountBefore} = 5</msg>
<status status="PASS" endtime="20161128 21:57:09.410" starttime="20161128 21:57:09.404"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:09.413" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:09.596" level="INFO">Delete Request using : alias=http, uri=/talentpools/784/candidates, data=[{"UserId": 677},{"UserId": 615}],                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'058', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:09.596" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:09.597" starttime="20161128 21:57:09.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.598" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:09.598" starttime="20161128 21:57:09.597"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20161128 21:57:09.599" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:09.600" starttime="20161128 21:57:09.599"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20161128 21:57:09.606" level="INFO">${SQL_CandidateCountAfter} = 4</msg>
<status status="PASS" endtime="20161128 21:57:09.606" starttime="20161128 21:57:09.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.608" level="INFO">${SQL_CandidateCountAfter} = 4</msg>
<status status="PASS" endtime="20161128 21:57:09.608" starttime="20161128 21:57:09.607"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}-1</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161128 21:57:09.614" level="INFO">${SQL_NUM} = 4</msg>
<status status="PASS" endtime="20161128 21:57:09.614" starttime="20161128 21:57:09.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.615" level="INFO">4</msg>
<status status="PASS" endtime="20161128 21:57:09.616" starttime="20161128 21:57:09.615"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.621" level="INFO">Set test message to:
The 4 matches with 4</msg>
<status status="PASS" endtime="20161128 21:57:09.621" starttime="20161128 21:57:09.621"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:09.622" starttime="20161128 21:57:09.620"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:09.622" starttime="20161128 21:57:09.616"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:09.626" starttime="20161128 21:57:09.623"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:09.626" starttime="20161128 21:57:09.217"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_AlreadyRemoved_SubSet

*Description:*
Verify success when subset of removed users are already removed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
</tags>
<status status="PASS" endtime="20161128 21:57:09.627" critical="yes" starttime="20161128 21:57:09.055">The 4 matches with 4</status>
</test>
<test id="s1-s1-s1-t63" name="DELETE-APIi_TPC_Remove_BaseCase_InputVsDatabase">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:09.705" starttime="20161128 21:57:09.630"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:57:09.719" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20161128 21:57:09.719" starttime="20161128 21:57:09.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.722" level="INFO">55</msg>
<status status="PASS" endtime="20161128 21:57:09.722" starttime="20161128 21:57:09.721"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:57:09.735" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:09.736" starttime="20161128 21:57:09.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.738" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20161128 21:57:09.738" starttime="20161128 21:57:09.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.741" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:09.741" starttime="20161128 21:57:09.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.742" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:09.742" starttime="20161128 21:57:09.742"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:09.744" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:09.744" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:09.744" starttime="20161128 21:57:09.743"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.745" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:09.746" starttime="20161128 21:57:09.745"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.747" level="INFO">Set request header "X-USERID" to "55"</msg>
<status status="PASS" endtime="20161128 21:57:09.748" starttime="20161128 21:57:09.746"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.749" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:09.750" starttime="20161128 21:57:09.749"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:09.750" starttime="20161128 21:57:09.630"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:09.754" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:09.755" starttime="20161128 21:57:09.753"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:09.757" starttime="20161128 21:57:09.756"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:09.759" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20161128 21:57:09.759" starttime="20161128 21:57:09.758"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:57:09.763" level="INFO">${body} = {   "UserId": 55,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": ...</msg>
<status status="PASS" endtime="20161128 21:57:09.764" starttime="20161128 21:57:09.760"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:09.766" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:09.787" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 55,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_55",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:09.788" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:09.788" starttime="20161128 21:57:09.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.789" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:09.789" starttime="20161128 21:57:09.788"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20161128 21:57:09.791" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:09.791" starttime="20161128 21:57:09.790"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:09.792" starttime="20161128 21:57:09.751"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_BaseCase_InputVsDatabase" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Api_Remove_BaseCase_InputVsDatabase:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:09.892" starttime="20161128 21:57:09.798"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:57:09.927" level="INFO">${SQL_TalentPoolId} = 702</msg>
<status status="PASS" endtime="20161128 21:57:09.927" starttime="20161128 21:57:09.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.930" level="INFO">${SQL_TalentPoolId} = 702</msg>
<status status="PASS" endtime="20161128 21:57:09.930" starttime="20161128 21:57:09.928"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_user.user_id FROM ou_user LEFT JOIN users ON ou_user.user_id = users.user_id WHERE users.user_id &gt; 0 AND ou_user.ou_id = ${SQL_TalentPoolId} AND users.user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND users.status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20161128 21:57:09.975" level="INFO">${SQL_UserToRemove1} = 728</msg>
<status status="PASS" endtime="20161128 21:57:09.975" starttime="20161128 21:57:09.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20161128 21:57:09.977" level="INFO">${SQL_UserToRemove1} = 728</msg>
<status status="PASS" endtime="20161128 21:57:09.977" starttime="20161128 21:57:09.975"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:09.979" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=055 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20161128 21:57:09.980" starttime="20161128 21:57:09.977"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:09.981" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:09.982" starttime="20161128 21:57:09.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20161128 21:57:09.984" level="INFO">${body} = [{"UserId": 728}]</msg>
<status status="PASS" endtime="20161128 21:57:09.984" starttime="20161128 21:57:09.982"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:57:09.995" level="INFO">${SQL_CandidateCountBefore} = 22</msg>
<status status="PASS" endtime="20161128 21:57:09.996" starttime="20161128 21:57:09.985"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:09.999" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:10.483" level="INFO">Delete Request using : alias=http, uri=/talentpools/702/candidates, data=[{"UserId": 728}],                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'055', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:10.484" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:10.484" starttime="20161128 21:57:09.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:10.486" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:10.486" starttime="20161128 21:57:10.485"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20161128 21:57:10.489" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:10.489" starttime="20161128 21:57:10.487"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20161128 21:57:10.510" level="INFO">${SQL_CandidateCountAfter} = 21</msg>
<status status="PASS" endtime="20161128 21:57:10.510" starttime="20161128 21:57:10.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:57:10.512" level="INFO">${SQL_CandidateCountAfter} = 21</msg>
<status status="PASS" endtime="20161128 21:57:10.512" starttime="20161128 21:57:10.511"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}-1</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161128 21:57:10.519" level="INFO">${SQL_NUM} = 21</msg>
<status status="PASS" endtime="20161128 21:57:10.519" starttime="20161128 21:57:10.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161128 21:57:10.521" level="INFO">21</msg>
<status status="PASS" endtime="20161128 21:57:10.521" starttime="20161128 21:57:10.519"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161128 21:57:10.532" level="INFO">Set test message to:
The 21 matches with 21</msg>
<status status="PASS" endtime="20161128 21:57:10.532" starttime="20161128 21:57:10.531"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:10.533" starttime="20161128 21:57:10.528"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:10.533" starttime="20161128 21:57:10.522"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:10.540" starttime="20161128 21:57:10.534"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:10.540" starttime="20161128 21:57:09.797"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_AlreadyRemoved_SubSet

*Description:*
Verify successful input user ends up in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
</tags>
<status status="PASS" endtime="20161128 21:57:10.541" critical="yes" starttime="20161128 21:57:09.628">The 21 matches with 21</status>
</test>
<test id="s1-s1-s1-t64" name="DELETE-API_TPC_Remove_BaseCase_InputVsOutput">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:10.860" starttime="20161128 21:57:10.547"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:57:10.972" level="INFO">${SQL_GET_USERID} = 58</msg>
<status status="PASS" endtime="20161128 21:57:10.973" starttime="20161128 21:57:10.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:10.975" level="INFO">58</msg>
<status status="PASS" endtime="20161128 21:57:10.976" starttime="20161128 21:57:10.974"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:57:10.997" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:10.998" starttime="20161128 21:57:10.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.000" level="INFO">${SQL_GET_USERID} = 58</msg>
<status status="PASS" endtime="20161128 21:57:11.001" starttime="20161128 21:57:10.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.003" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:11.004" starttime="20161128 21:57:11.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.006" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:11.006" starttime="20161128 21:57:11.005"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:11.008" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:11.009" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:11.009" starttime="20161128 21:57:11.007"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.011" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:11.011" starttime="20161128 21:57:11.010"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.013" level="INFO">Set request header "X-USERID" to "58"</msg>
<status status="PASS" endtime="20161128 21:57:11.014" starttime="20161128 21:57:11.012"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.016" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:11.016" starttime="20161128 21:57:11.015"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:11.017" starttime="20161128 21:57:10.546"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:11.021" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:11.022" starttime="20161128 21:57:11.020"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:11.024" starttime="20161128 21:57:11.023"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:11.026" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20161128 21:57:11.026" starttime="20161128 21:57:11.025"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:57:11.034" level="INFO">${body} = {   "UserId": 58,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": ...</msg>
<status status="PASS" endtime="20161128 21:57:11.034" starttime="20161128 21:57:11.028"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:11.037" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:11.057" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 58,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_58",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:11.058" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:11.058" starttime="20161128 21:57:11.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.060" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:11.060" starttime="20161128 21:57:11.059"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20161128 21:57:11.062" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:11.063" starttime="20161128 21:57:11.061"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:11.063" starttime="20161128 21:57:11.018"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_BaseCase_InputVsOutput" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remove_BaseCase_InputVsOutput:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:11.155" starttime="20161128 21:57:11.069"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:57:11.210" level="INFO">${SQL_TalentPoolId} = 804</msg>
<status status="PASS" endtime="20161128 21:57:11.210" starttime="20161128 21:57:11.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.212" level="INFO">${SQL_TalentPoolId} = 804</msg>
<status status="PASS" endtime="20161128 21:57:11.212" starttime="20161128 21:57:11.211"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_user.user_id FROM ou_user LEFT JOIN users ON ou_user.user_id = users.user_id WHERE users.user_id &gt; 0 AND ou_user.ou_id = ${SQL_TalentPoolId} AND users.user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND users.status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20161128 21:57:11.251" level="INFO">${SQL_UserToRemove1} = 766</msg>
<status status="PASS" endtime="20161128 21:57:11.251" starttime="20161128 21:57:11.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.253" level="INFO">${SQL_UserToRemove1} = 766</msg>
<status status="PASS" endtime="20161128 21:57:11.254" starttime="20161128 21:57:11.252"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:11.257" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=058 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20161128 21:57:11.257" starttime="20161128 21:57:11.255"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:11.259" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:11.260" starttime="20161128 21:57:11.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20161128 21:57:11.262" level="INFO">${body} = [{"UserId": 766}]</msg>
<status status="PASS" endtime="20161128 21:57:11.263" starttime="20161128 21:57:11.261"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:57:11.274" level="INFO">${SQL_CandidateCountBefore} = 3</msg>
<status status="PASS" endtime="20161128 21:57:11.274" starttime="20161128 21:57:11.263"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:11.277" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:11.502" level="INFO">Delete Request using : alias=http, uri=/talentpools/804/candidates, data=[{"UserId": 766}],                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'058', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:11.502" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:11.502" starttime="20161128 21:57:11.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.504" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:11.504" starttime="20161128 21:57:11.503"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20161128 21:57:11.506" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:11.506" starttime="20161128 21:57:11.505"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20161128 21:57:11.516" level="INFO">${SQL_CandidateCountAfter} = 2</msg>
<status status="PASS" endtime="20161128 21:57:11.516" starttime="20161128 21:57:11.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.518" level="INFO">${SQL_CandidateCountAfter} = 2</msg>
<status status="PASS" endtime="20161128 21:57:11.519" starttime="20161128 21:57:11.517"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}-1</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161128 21:57:11.525" level="INFO">${SQL_NUM} = 2</msg>
<status status="PASS" endtime="20161128 21:57:11.526" starttime="20161128 21:57:11.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.527" level="INFO">2</msg>
<status status="PASS" endtime="20161128 21:57:11.528" starttime="20161128 21:57:11.527"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.534" level="INFO">Set test message to:
The 2 matches with 2</msg>
<status status="PASS" endtime="20161128 21:57:11.535" starttime="20161128 21:57:11.534"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:11.535" starttime="20161128 21:57:11.532"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:11.535" starttime="20161128 21:57:11.529"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:11.539" starttime="20161128 21:57:11.536"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:11.539" starttime="20161128 21:57:11.068"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_AlreadyRemoved_Single

*Description:*
Verify success when single removed user is already removed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>JSONVFY</tag>
</tags>
<status status="PASS" endtime="20161128 21:57:11.540" critical="yes" starttime="20161128 21:57:10.543">The 2 matches with 2</status>
</test>
<test id="s1-s1-s1-t65" name="DELETE-API_TPC_Remove_DNEUser_All">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:11.615" starttime="20161128 21:57:11.543"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:57:11.670" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161128 21:57:11.670" starttime="20161128 21:57:11.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.672" level="INFO">514</msg>
<status status="PASS" endtime="20161128 21:57:11.672" starttime="20161128 21:57:11.671"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:57:11.687" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:11.688" starttime="20161128 21:57:11.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.690" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161128 21:57:11.690" starttime="20161128 21:57:11.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.692" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:11.692" starttime="20161128 21:57:11.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.693" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:11.693" starttime="20161128 21:57:11.692"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:11.694" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:11.695" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:11.695" starttime="20161128 21:57:11.694"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.696" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:11.696" starttime="20161128 21:57:11.695"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.698" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161128 21:57:11.698" starttime="20161128 21:57:11.697"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.699" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:11.699" starttime="20161128 21:57:11.698"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:11.700" starttime="20161128 21:57:11.543"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:11.702" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:11.703" starttime="20161128 21:57:11.701"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:11.704" starttime="20161128 21:57:11.703"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:11.705" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20161128 21:57:11.705" starttime="20161128 21:57:11.704"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:57:11.711" level="INFO">${body} = {   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3":...</msg>
<status status="PASS" endtime="20161128 21:57:11.711" starttime="20161128 21:57:11.706"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:11.715" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:11.733" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:11.733" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:11.733" starttime="20161128 21:57:11.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.735" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:11.735" starttime="20161128 21:57:11.734"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20161128 21:57:11.737" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:11.737" starttime="20161128 21:57:11.736"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:11.738" starttime="20161128 21:57:11.700"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_DNEUser_All" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remove_DNEUser_All:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:11.805" starttime="20161128 21:57:11.743"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:57:11.848" level="INFO">${SQL_TalentPoolId} = 2528</msg>
<status status="PASS" endtime="20161128 21:57:11.848" starttime="20161128 21:57:11.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.851" level="INFO">${SQL_TalentPoolId} = 2528</msg>
<status status="PASS" endtime="20161128 21:57:11.851" starttime="20161128 21:57:11.849"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20161128 21:57:11.866" level="INFO">${SQL_UserToRemove1} = 2347</msg>
<status status="PASS" endtime="20161128 21:57:11.867" starttime="20161128 21:57:11.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.869" level="INFO">${SQL_UserToRemove1} = 2347</msg>
<status status="PASS" endtime="20161128 21:57:11.869" starttime="20161128 21:57:11.868"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+2000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove2}</var>
</assign>
<msg timestamp="20161128 21:57:11.879" level="INFO">${SQL_UserToRemove2} = 3347</msg>
<status status="PASS" endtime="20161128 21:57:11.879" starttime="20161128 21:57:11.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove2}</arg>
<arg>${SQL_UserToRemove2}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.881" level="INFO">${SQL_UserToRemove2} = 3347</msg>
<status status="PASS" endtime="20161128 21:57:11.881" starttime="20161128 21:57:11.880"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:11.883" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=0514 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20161128 21:57:11.884" starttime="20161128 21:57:11.882"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:11.885" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:11.886" starttime="20161128 21:57:11.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1},{"UserId": ${SQL_UserToRemove2}}}]</arg>
</arguments>
<msg timestamp="20161128 21:57:11.887" level="INFO">${body} = [{"UserId": 2347,{"UserId": 3347}}]</msg>
<status status="PASS" endtime="20161128 21:57:11.887" starttime="20161128 21:57:11.886"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:57:11.895" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20161128 21:57:11.896" starttime="20161128 21:57:11.888"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:11.899" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:11.941" level="INFO">Delete Request using : alias=http, uri=/talentpools/2528/candidates, data="[{\"UserId\": 2347,{\"UserId\": 3347}}]",                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'0514', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:11.941" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:11.942" starttime="20161128 21:57:11.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.943" level="INFO">&lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:11.943" starttime="20161128 21:57:11.942"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>500</arg>
</arguments>
<msg timestamp="20161128 21:57:11.944" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:11.944" starttime="20161128 21:57:11.944"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20161128 21:57:11.955" level="INFO">${SQL_CandidateCountAfter} = 2</msg>
<status status="PASS" endtime="20161128 21:57:11.955" starttime="20161128 21:57:11.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.958" level="INFO">${SQL_CandidateCountAfter} = 2</msg>
<status status="PASS" endtime="20161128 21:57:11.958" starttime="20161128 21:57:11.956"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161128 21:57:11.962" level="INFO">${SQL_NUM} = 2</msg>
<status status="PASS" endtime="20161128 21:57:11.962" starttime="20161128 21:57:11.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.963" level="INFO">2</msg>
<status status="PASS" endtime="20161128 21:57:11.963" starttime="20161128 21:57:11.962"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161128 21:57:11.970" level="INFO">Set test message to:
The 2 matches with 2</msg>
<status status="PASS" endtime="20161128 21:57:11.970" starttime="20161128 21:57:11.969"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:11.970" starttime="20161128 21:57:11.967"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:11.971" starttime="20161128 21:57:11.964"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:11.975" starttime="20161128 21:57:11.971"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:11.975" starttime="20161128 21:57:11.742"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_DNEUser_All

*Description:*
Verify failure when multiple removed users do not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
</tags>
<status status="PASS" endtime="20161128 21:57:11.975" critical="yes" starttime="20161128 21:57:11.541">The 2 matches with 2</status>
</test>
<test id="s1-s1-s1-t66" name="DELETE-API_TPC_Remove_DNEUser_Single">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:12.039" starttime="20161128 21:57:11.979"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:57:12.050" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161128 21:57:12.050" starttime="20161128 21:57:12.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.051" level="INFO">514</msg>
<status status="PASS" endtime="20161128 21:57:12.052" starttime="20161128 21:57:12.051"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:57:12.057" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:12.057" starttime="20161128 21:57:12.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.059" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161128 21:57:12.059" starttime="20161128 21:57:12.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.061" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:12.061" starttime="20161128 21:57:12.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.063" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:12.064" starttime="20161128 21:57:12.062"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:12.066" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:12.066" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:12.066" starttime="20161128 21:57:12.065"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.068" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:12.068" starttime="20161128 21:57:12.067"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.069" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161128 21:57:12.069" starttime="20161128 21:57:12.068"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.070" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:12.071" starttime="20161128 21:57:12.070"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:12.071" starttime="20161128 21:57:11.978"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:12.074" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:12.074" starttime="20161128 21:57:12.073"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:12.075" starttime="20161128 21:57:12.075"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:12.077" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20161128 21:57:12.077" starttime="20161128 21:57:12.076"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:57:12.081" level="INFO">${body} = {   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3":...</msg>
<status status="PASS" endtime="20161128 21:57:12.081" starttime="20161128 21:57:12.078"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:12.084" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:12.103" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:12.104" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:12.104" starttime="20161128 21:57:12.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.105" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:12.105" starttime="20161128 21:57:12.105"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20161128 21:57:12.107" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:12.107" starttime="20161128 21:57:12.106"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:12.107" starttime="20161128 21:57:12.072"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_DNEUser_Single" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remvoe_DNEUser_Single:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:12.195" starttime="20161128 21:57:12.113"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:57:12.248" level="INFO">${SQL_TalentPoolId} = 2343</msg>
<status status="PASS" endtime="20161128 21:57:12.248" starttime="20161128 21:57:12.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.250" level="INFO">${SQL_TalentPoolId} = 2343</msg>
<status status="PASS" endtime="20161128 21:57:12.250" starttime="20161128 21:57:12.249"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20161128 21:57:12.264" level="INFO">${SQL_UserToRemove1} = 2347</msg>
<status status="PASS" endtime="20161128 21:57:12.265" starttime="20161128 21:57:12.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.266" level="INFO">${SQL_UserToRemove1} = 2347</msg>
<status status="PASS" endtime="20161128 21:57:12.266" starttime="20161128 21:57:12.265"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:12.268" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=0514 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20161128 21:57:12.269" starttime="20161128 21:57:12.267"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:12.270" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:12.271" starttime="20161128 21:57:12.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>{"UserId": ${SQL_UserToRemove1}}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.273" level="INFO">${body} = {"UserId": 2347}</msg>
<status status="PASS" endtime="20161128 21:57:12.273" starttime="20161128 21:57:12.272"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:57:12.286" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20161128 21:57:12.286" starttime="20161128 21:57:12.273"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:12.290" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:12.375" level="INFO">Delete Request using : alias=http, uri=/talentpools/2343/candidates, data={"UserId": 2347},                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'0514', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:12.375" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:12.376" starttime="20161128 21:57:12.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.377" level="INFO">&lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:12.377" starttime="20161128 21:57:12.376"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>500</arg>
</arguments>
<msg timestamp="20161128 21:57:12.378" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:12.379" starttime="20161128 21:57:12.378"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20161128 21:57:12.399" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20161128 21:57:12.399" starttime="20161128 21:57:12.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.401" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20161128 21:57:12.401" starttime="20161128 21:57:12.400"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161128 21:57:12.405" level="INFO">${SQL_NUM} = 1</msg>
<status status="PASS" endtime="20161128 21:57:12.405" starttime="20161128 21:57:12.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.406" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:12.406" starttime="20161128 21:57:12.405"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.412" level="INFO">Set test message to:
The 1 matches with 1</msg>
<status status="PASS" endtime="20161128 21:57:12.412" starttime="20161128 21:57:12.410"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:12.412" starttime="20161128 21:57:12.410"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:12.413" starttime="20161128 21:57:12.407"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:12.416" starttime="20161128 21:57:12.413"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:12.417" starttime="20161128 21:57:12.112"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_DNEUser_Single

*Description:*
Verify failure when single removed user does not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
</tags>
<status status="PASS" endtime="20161128 21:57:12.417" critical="yes" starttime="20161128 21:57:11.976">The 1 matches with 1</status>
</test>
<test id="s1-s1-s1-t67" name="DELETE-API_TPC_Remove_DNEUser_SubSet">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:12.508" starttime="20161128 21:57:12.421"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:57:12.517" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20161128 21:57:12.517" starttime="20161128 21:57:12.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.518" level="INFO">55</msg>
<status status="PASS" endtime="20161128 21:57:12.519" starttime="20161128 21:57:12.518"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:57:12.529" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:12.530" starttime="20161128 21:57:12.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.531" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20161128 21:57:12.531" starttime="20161128 21:57:12.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.534" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:12.534" starttime="20161128 21:57:12.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.535" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:12.536" starttime="20161128 21:57:12.535"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:12.537" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:12.537" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:12.538" starttime="20161128 21:57:12.537"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.539" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:12.539" starttime="20161128 21:57:12.538"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.541" level="INFO">Set request header "X-USERID" to "55"</msg>
<status status="PASS" endtime="20161128 21:57:12.541" starttime="20161128 21:57:12.540"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.542" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:12.542" starttime="20161128 21:57:12.541"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:12.543" starttime="20161128 21:57:12.420"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:12.545" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:12.546" starttime="20161128 21:57:12.544"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:12.547" starttime="20161128 21:57:12.546"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:12.548" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20161128 21:57:12.548" starttime="20161128 21:57:12.547"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:57:12.552" level="INFO">${body} = {   "UserId": 55,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": ...</msg>
<status status="PASS" endtime="20161128 21:57:12.553" starttime="20161128 21:57:12.549"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:12.556" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:12.576" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 55,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_55",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:12.577" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:12.577" starttime="20161128 21:57:12.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.578" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:12.578" starttime="20161128 21:57:12.578"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20161128 21:57:12.580" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:12.581" starttime="20161128 21:57:12.579"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:12.581" starttime="20161128 21:57:12.544"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_DNEUser_SubSet" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remove_DNEUser_SubSet:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:12.640" starttime="20161128 21:57:12.589"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:57:12.672" level="INFO">${SQL_TalentPoolId} = 574</msg>
<status status="PASS" endtime="20161128 21:57:12.672" starttime="20161128 21:57:12.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.674" level="INFO">${SQL_TalentPoolId} = 574</msg>
<status status="PASS" endtime="20161128 21:57:12.674" starttime="20161128 21:57:12.673"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20161128 21:57:12.685" level="INFO">${SQL_UserToRemove1} = 2347</msg>
<status status="PASS" endtime="20161128 21:57:12.685" starttime="20161128 21:57:12.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.687" level="INFO">${SQL_UserToRemove1} = 2347</msg>
<status status="PASS" endtime="20161128 21:57:12.687" starttime="20161128 21:57:12.686"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove2}</var>
</assign>
<msg timestamp="20161128 21:57:12.738" level="INFO">${SQL_UserToRemove2} = 786</msg>
<status status="PASS" endtime="20161128 21:57:12.739" starttime="20161128 21:57:12.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove2}</arg>
<arg>${SQL_UserToRemove2}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.741" level="INFO">${SQL_UserToRemove2} = 786</msg>
<status status="PASS" endtime="20161128 21:57:12.741" starttime="20161128 21:57:12.739"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:12.744" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=055 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20161128 21:57:12.745" starttime="20161128 21:57:12.742"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:12.746" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:12.747" starttime="20161128 21:57:12.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>{"UserId": ${SQL_UserToRemove1}},{"UserId": ${SQL_UserToRemove2}}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.749" level="INFO">${body} = {"UserId": 2347},{"UserId": 786}</msg>
<status status="PASS" endtime="20161128 21:57:12.749" starttime="20161128 21:57:12.748"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:57:12.755" level="INFO">${SQL_CandidateCountBefore} = 18</msg>
<status status="PASS" endtime="20161128 21:57:12.755" starttime="20161128 21:57:12.750"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:12.758" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:12.792" level="INFO">Delete Request using : alias=http, uri=/talentpools/574/candidates, data="{\"UserId\": 2347},{\"UserId\": 786}",                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'055', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:12.793" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:12.793" starttime="20161128 21:57:12.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.794" level="INFO">&lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:12.794" starttime="20161128 21:57:12.794"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>500</arg>
</arguments>
<msg timestamp="20161128 21:57:12.796" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:12.796" starttime="20161128 21:57:12.795"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20161128 21:57:12.802" level="INFO">${SQL_CandidateCountAfter} = 18</msg>
<status status="PASS" endtime="20161128 21:57:12.803" starttime="20161128 21:57:12.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.805" level="INFO">${SQL_CandidateCountAfter} = 18</msg>
<status status="PASS" endtime="20161128 21:57:12.805" starttime="20161128 21:57:12.804"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161128 21:57:12.809" level="INFO">${SQL_NUM} = 18</msg>
<status status="PASS" endtime="20161128 21:57:12.809" starttime="20161128 21:57:12.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.810" level="INFO">18</msg>
<status status="PASS" endtime="20161128 21:57:12.811" starttime="20161128 21:57:12.810"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.817" level="INFO">Set test message to:
The 18 matches with 18</msg>
<status status="PASS" endtime="20161128 21:57:12.817" starttime="20161128 21:57:12.816"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:12.818" starttime="20161128 21:57:12.815"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:12.818" starttime="20161128 21:57:12.812"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:12.822" starttime="20161128 21:57:12.818"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:12.822" starttime="20161128 21:57:12.588"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_DNEUser_SubSet

*Description:*
Verify failure when subset of removed users do not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
</tags>
<status status="PASS" endtime="20161128 21:57:12.822" critical="yes" starttime="20161128 21:57:12.418">The 18 matches with 18</status>
</test>
<test id="s1-s1-s1-t68" name="DELETE-API_TP_Delete_Access_DoesNotExist">
<kw name="REST_NOAUTH_NonExistentUser" library="SMP_Keywords">
<doc>*REST_NOAUTH_NonExistentUser:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:12.872" starttime="20161128 21:57:12.826"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:57:12.886" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20161128 21:57:12.886" starttime="20161128 21:57:12.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.888" level="INFO">2347</msg>
<status status="PASS" endtime="20161128 21:57:12.888" starttime="20161128 21:57:12.887"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT 1</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:57:12.894" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:12.895" starttime="20161128 21:57:12.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.896" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20161128 21:57:12.897" starttime="20161128 21:57:12.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.898" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:12.898" starttime="20161128 21:57:12.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.899" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:12.900" starttime="20161128 21:57:12.899"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:12.901" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:12.901" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:12.901" starttime="20161128 21:57:12.900"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.902" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:12.903" starttime="20161128 21:57:12.902"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.904" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20161128 21:57:12.904" starttime="20161128 21:57:12.903"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.905" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:12.905" starttime="20161128 21:57:12.905"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:12.906" starttime="20161128 21:57:12.825"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:12.909" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:12.910" starttime="20161128 21:57:12.908"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:12.911" starttime="20161128 21:57:12.910"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:12.913" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20161128 21:57:12.913" starttime="20161128 21:57:12.911"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:57:12.917" level="INFO">${body} = {   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3"...</msg>
<status status="PASS" endtime="20161128 21:57:12.917" starttime="20161128 21:57:12.913"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:12.920" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:12.939" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_2347",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:12.940" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:12.940" starttime="20161128 21:57:12.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:12.941" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:12.941" starttime="20161128 21:57:12.941"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20161128 21:57:12.943" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:12.943" starttime="20161128 21:57:12.942"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:12.943" starttime="20161128 21:57:12.907"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Delete_Access_DoesNotExist" library="SMP_Keywords">
<doc>*DELETE_Api_TP_Delete_Access_DoesNotExist:*</doc>
<arguments>
<arg>401</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:13.140" starttime="20161128 21:57:12.949"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:57:13.154" level="INFO">${SQL_TalentPoolId} = 5173</msg>
<status status="PASS" endtime="20161128 21:57:13.154" starttime="20161128 21:57:13.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.157" level="INFO">${SQL_TalentPoolId} = 5173</msg>
<status status="PASS" endtime="20161128 21:57:13.157" starttime="20161128 21:57:13.155"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:13.160" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=02347 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20161128 21:57:13.160" starttime="20161128 21:57:13.158"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:13.162" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:13.163" starttime="20161128 21:57:13.161"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT(*) FROM ou WHERE ou.type_id = 131072</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:57:13.171" level="INFO">${SQL_CandidateCountBefore} = 3762</msg>
<status status="PASS" endtime="20161128 21:57:13.171" starttime="20161128 21:57:13.164"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:13.174" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:13.231" level="INFO">Delete Request using : alias=http, uri=/talentpools/5173, data={   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_2347",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'02347', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:13.231" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:13.231" starttime="20161128 21:57:13.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.232" level="INFO">&lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:13.233" starttime="20161128 21:57:13.232"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${RESPONSE_POST}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.235" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:13.236" starttime="20161128 21:57:13.233"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT(*) FROM ou WHERE ou.type_id = 131072</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20161128 21:57:13.242" level="INFO">${SQL_CandidateCountAfter} = 3762</msg>
<status status="PASS" endtime="20161128 21:57:13.243" starttime="20161128 21:57:13.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.245" level="INFO">${SQL_CandidateCountAfter} = 3762</msg>
<status status="PASS" endtime="20161128 21:57:13.246" starttime="20161128 21:57:13.244"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161128 21:57:13.251" level="INFO">${SQL_NUM} = 3762</msg>
<status status="PASS" endtime="20161128 21:57:13.251" starttime="20161128 21:57:13.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.253" level="INFO">3762</msg>
<status status="PASS" endtime="20161128 21:57:13.254" starttime="20161128 21:57:13.252"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.262" level="INFO">Set test message to:
The 3762 matches with 3762</msg>
<status status="PASS" endtime="20161128 21:57:13.262" starttime="20161128 21:57:13.261"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:13.263" starttime="20161128 21:57:13.260"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:13.264" starttime="20161128 21:57:13.254"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:13.269" starttime="20161128 21:57:13.264"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:13.269" starttime="20161128 21:57:12.948"></status>
</kw>
<doc>*Name:*
Api_TP_Delete_Access_DoesNotExist

*Description:*
Access: Verify error when user id is not in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
</tags>
<status status="PASS" endtime="20161128 21:57:13.270" critical="yes" starttime="20161128 21:57:12.823">The 3762 matches with 3762</status>
</test>
<test id="s1-s1-s1-t69" name="DELETE-API_TP_Delete_Access_NotOwner">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:13.344" starttime="20161128 21:57:13.274"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:57:13.410" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161128 21:57:13.410" starttime="20161128 21:57:13.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.411" level="INFO">48</msg>
<status status="PASS" endtime="20161128 21:57:13.411" starttime="20161128 21:57:13.411"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:57:13.427" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:13.427" starttime="20161128 21:57:13.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.429" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161128 21:57:13.429" starttime="20161128 21:57:13.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.430" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:13.431" starttime="20161128 21:57:13.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.432" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:13.432" starttime="20161128 21:57:13.431"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:13.433" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:13.433" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:13.434" starttime="20161128 21:57:13.433"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.435" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:13.435" starttime="20161128 21:57:13.434"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.436" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161128 21:57:13.436" starttime="20161128 21:57:13.435"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.437" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:13.438" starttime="20161128 21:57:13.437"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:13.438" starttime="20161128 21:57:13.273"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:13.441" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:13.442" starttime="20161128 21:57:13.440"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:13.443" starttime="20161128 21:57:13.442"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:13.444" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20161128 21:57:13.444" starttime="20161128 21:57:13.443"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:57:13.448" level="INFO">${body} = {   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": ...</msg>
<status status="PASS" endtime="20161128 21:57:13.449" starttime="20161128 21:57:13.445"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:13.452" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:13.470" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:13.471" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:13.471" starttime="20161128 21:57:13.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.473" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:13.473" starttime="20161128 21:57:13.472"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20161128 21:57:13.475" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:13.476" starttime="20161128 21:57:13.474"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:13.476" starttime="20161128 21:57:13.439"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Delete_Access_NotOwner" library="SMP_Keywords">
<doc>*DELETE_Api_TP_Delete_Access_NotOwner:*</doc>
<arguments>
<arg>401</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:13.547" starttime="20161128 21:57:13.484"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE owner_id &lt;&gt; ${SQL_GET_USERID} AND type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:57:13.565" level="INFO">${SQL_TalentPoolId} = 4542</msg>
<status status="PASS" endtime="20161128 21:57:13.565" starttime="20161128 21:57:13.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.567" level="INFO">${SQL_TalentPoolId} = 4542</msg>
<status status="PASS" endtime="20161128 21:57:13.567" starttime="20161128 21:57:13.566"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:13.569" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=048 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20161128 21:57:13.570" starttime="20161128 21:57:13.568"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:13.572" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:13.572" starttime="20161128 21:57:13.571"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT(*) FROM ou WHERE ou.type_id = 131072</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:57:13.582" level="INFO">${SQL_CandidateCountBefore} = 3762</msg>
<status status="PASS" endtime="20161128 21:57:13.582" starttime="20161128 21:57:13.573"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:13.585" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:13.640" level="INFO">Delete Request using : alias=http, uri=/talentpools/4542, data={   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'048', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:13.641" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:13.641" starttime="20161128 21:57:13.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.643" level="INFO">&lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:13.643" starttime="20161128 21:57:13.642"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${RESPONSE_POST}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.645" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:13.645" starttime="20161128 21:57:13.644"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT(*) FROM ou WHERE ou.type_id = 131072</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20161128 21:57:13.652" level="INFO">${SQL_CandidateCountAfter} = 3762</msg>
<status status="PASS" endtime="20161128 21:57:13.653" starttime="20161128 21:57:13.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.654" level="INFO">${SQL_CandidateCountAfter} = 3762</msg>
<status status="PASS" endtime="20161128 21:57:13.655" starttime="20161128 21:57:13.653"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161128 21:57:13.661" level="INFO">${SQL_NUM} = 3762</msg>
<status status="PASS" endtime="20161128 21:57:13.661" starttime="20161128 21:57:13.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.663" level="INFO">3762</msg>
<status status="PASS" endtime="20161128 21:57:13.663" starttime="20161128 21:57:13.662"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.671" level="INFO">Set test message to:
The 3762 matches with 3762</msg>
<status status="PASS" endtime="20161128 21:57:13.672" starttime="20161128 21:57:13.670"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:13.672" starttime="20161128 21:57:13.669"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:13.673" starttime="20161128 21:57:13.664"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:13.676" starttime="20161128 21:57:13.673"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:13.677" starttime="20161128 21:57:13.482"></status>
</kw>
<doc>*Name:*
Api_TP_Delete_Access_NotOwner

*Description:*
Access: Verify error when user id is not for talent pool owner

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
</tags>
<status status="PASS" endtime="20161128 21:57:13.677" critical="yes" starttime="20161128 21:57:13.271">The 3762 matches with 3762</status>
</test>
<test id="s1-s1-s1-t70" name="DELETE-API_TP_Del_Input_TPId_DoesNotExist">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:13.765" starttime="20161128 21:57:13.682"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161128 21:57:13.800" level="INFO">${SQL_GET_USERID} = 58</msg>
<status status="PASS" endtime="20161128 21:57:13.800" starttime="20161128 21:57:13.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.802" level="INFO">58</msg>
<status status="PASS" endtime="20161128 21:57:13.802" starttime="20161128 21:57:13.801"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161128 21:57:13.813" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:13.813" starttime="20161128 21:57:13.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.815" level="INFO">${SQL_GET_USERID} = 58</msg>
<status status="PASS" endtime="20161128 21:57:13.815" starttime="20161128 21:57:13.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.817" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161128 21:57:13.817" starttime="20161128 21:57:13.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.818" level="INFO">1</msg>
<status status="PASS" endtime="20161128 21:57:13.818" starttime="20161128 21:57:13.817"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161128 21:57:13.819" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161128 21:57:13.820" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161128 21:57:13.820" starttime="20161128 21:57:13.819"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.821" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161128 21:57:13.822" starttime="20161128 21:57:13.821"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.823" level="INFO">Set request header "X-USERID" to "58"</msg>
<status status="PASS" endtime="20161128 21:57:13.823" starttime="20161128 21:57:13.822"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.825" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161128 21:57:13.825" starttime="20161128 21:57:13.824"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:13.825" starttime="20161128 21:57:13.681"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:13.828" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:13.829" starttime="20161128 21:57:13.827"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:13.830" starttime="20161128 21:57:13.829"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:13.833" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20161128 21:57:13.833" starttime="20161128 21:57:13.831"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161128 21:57:13.838" level="INFO">${body} = {   "UserId": 58,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": ...</msg>
<status status="PASS" endtime="20161128 21:57:13.838" starttime="20161128 21:57:13.834"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:13.842" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:13.858" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 58,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_58",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:13.859" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:13.859" starttime="20161128 21:57:13.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.860" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:13.860" starttime="20161128 21:57:13.859"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20161128 21:57:13.862" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:13.862" starttime="20161128 21:57:13.861"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:13.862" starttime="20161128 21:57:13.826"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Delete_Input_TPId_DoesNotExist" library="SMP_Keywords">
<doc>*DELETE_Api_TP_Delete_Access_NotOwner:*</doc>
<arguments>
<arg>404</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:13.920" starttime="20161128 21:57:13.868"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(ou_id)+1000 FROM ou</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161128 21:57:13.934" level="INFO">${SQL_TalentPoolId} = 7567</msg>
<status status="PASS" endtime="20161128 21:57:13.934" starttime="20161128 21:57:13.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161128 21:57:13.936" level="INFO">${SQL_TalentPoolId} = 7567</msg>
<status status="PASS" endtime="20161128 21:57:13.937" starttime="20161128 21:57:13.935"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161128 21:57:13.939" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=058 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20161128 21:57:13.939" starttime="20161128 21:57:13.937"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161128 21:57:13.941" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161128 21:57:13.941" starttime="20161128 21:57:13.940"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT(*) FROM ou WHERE ou.type_id = 131072</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161128 21:57:13.948" level="INFO">${SQL_CandidateCountBefore} = 3762</msg>
<status status="PASS" endtime="20161128 21:57:13.948" starttime="20161128 21:57:13.942"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161128 21:57:13.952" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161128 21:57:14.020" level="INFO">Delete Request using : alias=http, uri=/talentpools/7567, data={   "UserId": 58,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_58",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'058', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20161128 21:57:14.021" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:14.021" starttime="20161128 21:57:13.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161128 21:57:14.022" level="INFO">&lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20161128 21:57:14.022" starttime="20161128 21:57:14.022"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${RESPONSE_POST}</arg>
</arguments>
<msg timestamp="20161128 21:57:14.024" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161128 21:57:14.024" starttime="20161128 21:57:14.023"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT(*) FROM ou WHERE ou.type_id = 131072</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20161128 21:57:14.037" level="INFO">${SQL_CandidateCountAfter} = 3762</msg>
<status status="PASS" endtime="20161128 21:57:14.037" starttime="20161128 21:57:14.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20161128 21:57:14.039" level="INFO">${SQL_CandidateCountAfter} = 3762</msg>
<status status="PASS" endtime="20161128 21:57:14.039" starttime="20161128 21:57:14.038"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161128 21:57:14.043" level="INFO">${SQL_NUM} = 3762</msg>
<status status="PASS" endtime="20161128 21:57:14.043" starttime="20161128 21:57:14.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161128 21:57:14.044" level="INFO">3762</msg>
<status status="PASS" endtime="20161128 21:57:14.045" starttime="20161128 21:57:14.044"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161128 21:57:14.051" level="INFO">Set test message to:
The 3762 matches with 3762</msg>
<status status="PASS" endtime="20161128 21:57:14.051" starttime="20161128 21:57:14.050"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:14.051" starttime="20161128 21:57:14.049"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:14.052" starttime="20161128 21:57:14.045"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161128 21:57:14.055" starttime="20161128 21:57:14.052"></status>
</kw>
<status status="PASS" endtime="20161128 21:57:14.056" starttime="20161128 21:57:13.867"></status>
</kw>
<doc>*Name:*
Api_TP_Del_Input_TPId_DoesNotExist

*Description:*
Input: Verify error when talent pool id is not in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
</tags>
<status status="PASS" endtime="20161128 21:57:14.056" critical="yes" starttime="20161128 21:57:13.678">The 3762 matches with 3762</status>
</test>
<status status="FAIL" endtime="20161128 21:57:14.062" starttime="20161128 21:56:24.646"></status>
</suite>
<status status="FAIL" endtime="20161128 21:57:14.096" starttime="20161128 21:56:24.643"></status>
</suite>
<status status="FAIL" endtime="20161128 21:57:14.125" starttime="20161128 21:56:24.463"></status>
</suite>
<statistics>
<total>
<stat fail="3" pass="67">Critical Tests</stat>
<stat fail="3" pass="67">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="7">ASCII</stat>
<stat fail="0" pass="1">DB</stat>
<stat fail="0" pass="1">DBV</stat>
<stat fail="2" pass="13">DELETE</stat>
<stat fail="0" pass="1">JSONVFY</stat>
<stat fail="1" pass="1">NEGATIVE</stat>
<stat fail="0" pass="5">NEGATIVETEST</stat>
<stat fail="0" pass="40">POST</stat>
<stat fail="0" pass="2">POST3</stat>
<stat fail="0" pass="7">PUT</stat>
<stat fail="1" pass="0">USER</stat>
<stat fail="0" pass="1">USER11</stat>
<stat fail="0" pass="1">USER12</stat>
</tag>
<suite>
<stat fail="3" id="s1" name="COMP" pass="67">COMP</stat>
<stat fail="3" id="s1-s1" name="TestSuites" pass="67">COMP.TestSuites</stat>
<stat fail="3" id="s1-s1-s1" name="SMP-API-Talent Pool" pass="67">COMP.TestSuites.SMP-API-Talent Pool</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
