<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170327 15:12:37.332" generator="Robot 3.0 (Python 2.7.12 on win32)">
<suite source="C:\Users\gfung\.jenkins\workspace\COMP-Smoketest-Admin-Side\COMP" id="s1" name="COMP">
<suite source="C:\Users\gfung\.jenkins\workspace\COMP-Smoketest-Admin-Side\COMP\TestSuites" id="s1-s1" name="TestSuites">
<suite source="C:\Users\gfung\.jenkins\workspace\COMP-Smoketest-Admin-Side\COMP\TestSuites\SMP-API-Talent_Pool.robot" id="s1-s1-s1" name="SMP-API-Talent Pool">
<test id="s1-s1-s1-t1" name="DELETE-API_TPC_Remove_BaseCase_InputVsOutput_Value">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared_With_Candidates" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170327 15:12:38.035" starttime="20170327 15:12:37.895"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072 AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1)) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user WHERE ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1))) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170327 15:12:38.114" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170327 15:12:38.114" starttime="20170327 15:12:38.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170327 15:12:38.114" level="INFO">1338</msg>
<status status="PASS" endtime="20170327 15:12:38.114" starttime="20170327 15:12:38.114"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170327 15:12:38.114" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170327 15:12:38.114" starttime="20170327 15:12:38.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170327 15:12:38.114" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170327 15:12:38.114" starttime="20170327 15:12:38.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170327 15:12:38.129" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170327 15:12:38.129" starttime="20170327 15:12:38.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170327 15:12:38.129" level="INFO">1</msg>
<status status="PASS" endtime="20170327 15:12:38.129" starttime="20170327 15:12:38.129"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170327 15:12:38.129" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170327 15:12:38.129" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170327 15:12:38.129" starttime="20170327 15:12:38.129"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170327 15:12:38.129" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170327 15:12:38.129" starttime="20170327 15:12:38.129"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170327 15:12:38.129" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20170327 15:12:38.129" starttime="20170327 15:12:38.129"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170327 15:12:38.129" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170327 15:12:38.129" starttime="20170327 15:12:38.129"></status>
</kw>
<status status="PASS" endtime="20170327 15:12:38.129" starttime="20170327 15:12:37.895"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170327 15:12:38.129" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170327 15:12:38.129" starttime="20170327 15:12:38.129"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170327 15:12:38.129" starttime="20170327 15:12:38.129"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170327 15:12:38.129" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170327 15:12:38.129" starttime="20170327 15:12:38.129"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170327 15:12:38.145" level="INFO">${body} = {   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3"...</msg>
<status status="PASS" endtime="20170327 15:12:38.145" starttime="20170327 15:12:38.129"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170327 15:12:38.145" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170327 15:12:38.160" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170327 15:12:38.160" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170327 15:12:38.160" starttime="20170327 15:12:38.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170327 15:12:38.160" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170327 15:12:38.160" starttime="20170327 15:12:38.160"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170327 15:12:38.160" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170327 15:12:38.160" starttime="20170327 15:12:38.160"></status>
</kw>
<status status="PASS" endtime="20170327 15:12:38.160" starttime="20170327 15:12:38.129"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_2" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170327 15:12:38.192" starttime="20170327 15:12:38.160"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170327 15:12:38.207" level="INFO">${SQL_TalentPoolId} = 2654</msg>
<status status="PASS" endtime="20170327 15:12:38.207" starttime="20170327 15:12:38.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170327 15:12:38.207" level="INFO">${SQL_TalentPoolId} = 2654</msg>
<status status="PASS" endtime="20170327 15:12:38.207" starttime="20170327 15:12:38.207"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_user.user_id FROM ou_user LEFT JOIN users ON ou_user.user_id = users.user_id WHERE users.user_id &gt; 0 AND ou_user.ou_id = ${SQL_TalentPoolId} AND users.user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND users.status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20170327 15:12:38.223" level="INFO">${SQL_UserToRemove1} = 773</msg>
<status status="PASS" endtime="20170327 15:12:38.223" starttime="20170327 15:12:38.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20170327 15:12:38.223" level="INFO">${SQL_UserToRemove1} = 773</msg>
<status status="PASS" endtime="20170327 15:12:38.223" starttime="20170327 15:12:38.223"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${CorporationIdentifier}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${UserIdentifier}=0${SQL_GET_USERID}</arg>
<arg>${CultureIdentifier}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170327 15:12:38.239" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa052-auto-smp-api | x-csod-user-id=01338 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20170327 15:12:38.239" starttime="20170327 15:12:38.223"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170327 15:12:38.239" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170327 15:12:38.239" starttime="20170327 15:12:38.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{\"UserId\": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20170327 15:12:38.239" level="INFO">${body} = [{"UserId": 773}]</msg>
<status status="PASS" endtime="20170327 15:12:38.239" starttime="20170327 15:12:38.239"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170327 15:12:38.239" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170327 15:12:38.270" level="INFO">Delete Request using : alias=http, uri=/talentpools/2654/candidates, data=[{"UserId": 773}],                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa052-auto-smp-api', u'x-csod-user-id': u'01338', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170327 15:12:38.270" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20170327 15:12:38.270" starttime="20170327 15:12:38.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170327 15:12:38.270" level="INFO">&lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20170327 15:12:38.270" starttime="20170327 15:12:38.270"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${RESPONSE_POST}</arg>
</arguments>
<msg timestamp="20170327 15:12:38.285" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170327 15:12:38.285" level="FAIL">401 != 200</msg>
<status status="FAIL" endtime="20170327 15:12:38.285" starttime="20170327 15:12:38.270"></status>
</kw>
<status status="FAIL" endtime="20170327 15:12:38.285" starttime="20170327 15:12:38.160"></status>
</kw>
<doc>*Name:*
API_TPC_Add_BC_InputVsOutput_Value

*Description:*
Verify successful input user ends up in output

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DBV</tag>
<tag>testrailid=24474</tag>
</tags>
<status status="FAIL" endtime="20170327 15:12:38.285" critical="yes" starttime="20170327 15:12:37.879">401 != 200</status>
</test>
<doc>*INSTRUCTIONS: To Run this dynamically add the following line to the Run tab arguments text box area.*



*To Use with TestRail use the following:*

*Patch*
-d TestResults -v RNOAUTH_HOST:QA01 --listener TestRailListener:479

*Release*
-d TestResults -v RNOAUTH_HOST:QA052 --listener TestRailListener:479

*Next Release*
-d TestResults -v RNOAUTH_HOST:QA03 --listener TestRailListener:479</doc>
<status status="FAIL" endtime="20170327 15:12:38.285" starttime="20170327 15:12:37.395"></status>
</suite>
<status status="FAIL" endtime="20170327 15:12:38.285" starttime="20170327 15:12:37.395"></status>
</suite>
<status status="FAIL" endtime="20170327 15:12:38.285" starttime="20170327 15:12:37.363"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="0">DBV</stat>
<stat fail="1" pass="0">testrailid=24474</stat>
</tag>
<suite>
<stat fail="1" id="s1" name="COMP" pass="0">COMP</stat>
<stat fail="1" id="s1-s1" name="TestSuites" pass="0">COMP.TestSuites</stat>
<stat fail="1" id="s1-s1-s1" name="SMP-API-Talent Pool" pass="0">COMP.TestSuites.SMP-API-Talent Pool</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
