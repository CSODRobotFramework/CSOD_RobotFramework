<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20161118 02:12:44.207" generator="Robot 3.0 (Python 2.7.12 on win32)">
<suite source="C:\Users\gfung\.jenkins\workspace\COMP-Smoketest-Admin-Side\COMP" id="s1" name="COMP">
<suite source="C:\Users\gfung\.jenkins\workspace\COMP-Smoketest-Admin-Side\COMP\TestSuites" id="s1-s1" name="TestSuites">
<suite source="C:\Users\gfung\.jenkins\workspace\COMP-Smoketest-Admin-Side\COMP\TestSuites\SMP-API-Talent_Pool.robot" id="s1-s1-s1" name="SMP-API-Talent Pool">
<test id="s1-s1-s1-t1" name="POST-API_Talent_Pool_Create_Succ_Return_Name">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:44.832" starttime="20161118 02:12:44.754"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:44.848" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161118 02:12:44.848" starttime="20161118 02:12:44.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:44.863" level="INFO">415</msg>
<status status="PASS" endtime="20161118 02:12:44.863" starttime="20161118 02:12:44.848"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:44.863" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:44.863" starttime="20161118 02:12:44.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:44.863" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161118 02:12:44.863" starttime="20161118 02:12:44.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:44.863" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:44.863" starttime="20161118 02:12:44.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:44.863" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:44.863" starttime="20161118 02:12:44.863"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:44.863" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:44.863" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:44.863" starttime="20161118 02:12:44.863"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:44.863" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:44.863" starttime="20161118 02:12:44.863"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:44.863" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161118 02:12:44.863" starttime="20161118 02:12:44.863"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:44.863" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:44.863" starttime="20161118 02:12:44.863"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:44.863" starttime="20161118 02:12:44.754"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:44.879" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:44.879" starttime="20161118 02:12:44.879"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:44.879" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:44.879" starttime="20161118 02:12:44.879"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:44.910" starttime="20161118 02:12:44.879"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:44.910" starttime="20161118 02:12:44.910"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:44.910" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:44.910" starttime="20161118 02:12:44.910"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:44.910" starttime="20161118 02:12:44.910"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:44.910" starttime="20161118 02:12:44.879"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>InnocentName</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:44.910" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:44.926" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:44.926" starttime="20161118 02:12:44.910"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:44.926" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:44.926" starttime="20161118 02:12:44.926"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:44.926" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161118 02:12:44.926" starttime="20161118 02:12:44.926"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:44.926" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:44.926" starttime="20161118 02:12:44.926"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:44.926" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:44.926" starttime="20161118 02:12:44.926"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:44.926" level="INFO">Request body set to "{ "Title":"InnocentName"}".</msg>
<status status="PASS" endtime="20161118 02:12:44.926" starttime="20161118 02:12:44.926"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.082" starttime="20161118 02:12:44.926"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.082" starttime="20161118 02:12:45.082"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:45.082" level="INFO">${resBody} = {"TalentpoolId":5815,"Title":"InnocentName","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-18T10:12:44.737","ModifierId":1,"ModifiedDate":"2016-11-18T10:12:44...</msg>
<status status="PASS" endtime="20161118 02:12:45.082" starttime="20161118 02:12:45.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.082" level="INFO">{"TalentpoolId":5815,"Title":"InnocentName","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-18T10:12:44.737","ModifierId":1,"ModifiedDate":"2016-11-18T10:12:44.737","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:45.082" starttime="20161118 02:12:45.082"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:45.082" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'InnocentName', u'TalentpoolId': 5815, u'ModifiedDate': u'2016-11-18T10:12:44.737', u'CreatedDate': u'2016-11-18T10:12:44.737', u'Owner': {u'LastName': u'Kaplowitz', u'...</msg>
<status status="PASS" endtime="20161118 02:12:45.082" starttime="20161118 02:12:45.082"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:45.082" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'InnocentName', u'CreatedDate': u'2016-11-18T10:12:44.737', u'ModifiedDate': u'2016-11-18T10:12:44.737', u'TalentpoolId': 5815, u'Owner': {u'LastName': u'Kaplowitz', u'...</msg>
<status status="PASS" endtime="20161118 02:12:45.082" starttime="20161118 02:12:45.082"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:45.082" level="INFO">${keyValue} = InnocentName</msg>
<status status="PASS" endtime="20161118 02:12:45.082" starttime="20161118 02:12:45.082"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:45.082" starttime="20161118 02:12:44.910"></status>
</kw>
<doc>*Name:*
API_Talent_Pool_Create_Success_Return_Name.

*Description:*
verify new talent pool returns correct name

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:45.082" critical="yes" starttime="20161118 02:12:44.738"></status>
</test>
<test id="s1-s1-s1-t2" name="POST-API_Talent_Pool_Success_NewEntryExist">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.113" starttime="20161118 02:12:45.098"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:45.129" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:45.129" starttime="20161118 02:12:45.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.129" level="INFO">1336</msg>
<status status="PASS" endtime="20161118 02:12:45.129" starttime="20161118 02:12:45.129"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:45.145" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:45.145" starttime="20161118 02:12:45.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.145" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:45.145" starttime="20161118 02:12:45.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.145" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:45.145" starttime="20161118 02:12:45.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.145" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:45.145" starttime="20161118 02:12:45.145"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:45.145" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:45.145" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:45.145" starttime="20161118 02:12:45.145"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.145" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:45.145" starttime="20161118 02:12:45.145"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.145" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:45.145" starttime="20161118 02:12:45.145"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.145" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:45.145" starttime="20161118 02:12:45.145"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:45.145" starttime="20161118 02:12:45.082"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:45.160" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:45.160" starttime="20161118 02:12:45.160"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:45.160" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:45.160" starttime="20161118 02:12:45.160"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.176" starttime="20161118 02:12:45.160"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.176" starttime="20161118 02:12:45.176"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:45.176" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:45.176" starttime="20161118 02:12:45.176"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.176" starttime="20161118 02:12:45.176"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:45.176" starttime="20161118 02:12:45.145"></status>
</kw>
<kw name="POST_TalentPool_Create_Random_Title" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Title</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.207" starttime="20161118 02:12:45.191"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT CONVERT(varchar(255), NEWID())</arg>
</arguments>
<assign>
<var>${SQL_RandomName}</var>
</assign>
<msg timestamp="20161118 02:12:45.207" level="INFO">${SQL_RandomName} = 7F21C2BC-8B71-4F53-9229-B10A97581D7D</msg>
<status status="PASS" endtime="20161118 02:12:45.207" starttime="20161118 02:12:45.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_RandomName}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.207" level="INFO">${SQL_RandomName} = 7F21C2BC-8B71-4F53-9229-B10A97581D7D</msg>
<status status="PASS" endtime="20161118 02:12:45.207" starttime="20161118 02:12:45.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_RandomName}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.207" level="INFO">7F21C2BC-8B71-4F53-9229-B10A97581D7D</msg>
<status status="PASS" endtime="20161118 02:12:45.207" starttime="20161118 02:12:45.207"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:45.207" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:45.207" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:45.207" starttime="20161118 02:12:45.207"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.207" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:45.207" starttime="20161118 02:12:45.207"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.207" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:45.207" starttime="20161118 02:12:45.207"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.207" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:45.207" starttime="20161118 02:12:45.207"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:45.207" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:45.207" starttime="20161118 02:12:45.207"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SQL_RandomName}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.207" level="INFO">Request body set to "{ "Title":"7F21C2BC-8B71-4F53-9229-B10A97581D7D"}".</msg>
<status status="PASS" endtime="20161118 02:12:45.207" starttime="20161118 02:12:45.207"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.270" starttime="20161118 02:12:45.223"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.270" starttime="20161118 02:12:45.270"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 title FROM ou WHERE ou.type_id = 131072 AND title = '${SQL_RandomName}'</arg>
</arguments>
<assign>
<var>${SQL_GetTalentPoolIdByName}</var>
</assign>
<msg timestamp="20161118 02:12:45.270" level="INFO">${SQL_GetTalentPoolIdByName} = 7F21C2BC-8B71-4F53-9229-B10A97581D7D</msg>
<status status="PASS" endtime="20161118 02:12:45.270" starttime="20161118 02:12:45.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GetTalentPoolIdByName}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.270" level="INFO">7F21C2BC-8B71-4F53-9229-B10A97581D7D</msg>
<status status="PASS" endtime="20161118 02:12:45.270" starttime="20161118 02:12:45.270"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${SQL_GetTalentPoolIdByName}==${SQL_RandomName}"</arg>
<arg>Set Test Message</arg>
<arg>Passed Random Name was matched with Database entry.</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>Passed Random Name was matched with Database entry.</arg>
</arguments>
<msg timestamp="20161118 02:12:45.285" level="INFO">Set test message to:
Passed Random Name was matched with Database entry.</msg>
<status status="PASS" endtime="20161118 02:12:45.285" starttime="20161118 02:12:45.285"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:45.285" starttime="20161118 02:12:45.270"></status>
</kw>
<kw name="Close" library="SQLlibrary">
<status status="PASS" endtime="20161118 02:12:45.285" starttime="20161118 02:12:45.285"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:45.285" starttime="20161118 02:12:45.191"></status>
</kw>
<doc>*Name:*
API_Talent_Pool_Success_NewEntryExist.

*Description:*
verify new talent pool in data base

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:45.285" critical="yes" starttime="20161118 02:12:45.082">Passed Random Name was matched with Database entry.</status>
</test>
<test id="s1-s1-s1-t3" name="POST-API_TPC_Length_0">
<kw name="REST_NOAUTH_Shared_TalentPools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.301" starttime="20161118 02:12:45.285"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 talent_pool_shared_user.user_id FROM talent_pool_shared_user JOIN users ON talent_pool_shared_user.user_id = users.user_id WHERE users.culture_lang_id IS NOT NULL GROUP BY talent_pool_shared_user.user_id ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:45.301" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161118 02:12:45.301" starttime="20161118 02:12:45.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.301" level="INFO">48</msg>
<status status="PASS" endtime="20161118 02:12:45.301" starttime="20161118 02:12:45.301"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:45.301" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:45.301" starttime="20161118 02:12:45.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.301" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161118 02:12:45.301" starttime="20161118 02:12:45.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.316" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:45.316" starttime="20161118 02:12:45.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.316" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:45.316" starttime="20161118 02:12:45.316"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:45.316" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:45.316" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:45.316" starttime="20161118 02:12:45.316"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.316" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:45.316" starttime="20161118 02:12:45.316"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.316" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161118 02:12:45.316" starttime="20161118 02:12:45.316"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.316" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:45.316" starttime="20161118 02:12:45.316"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:45.316" starttime="20161118 02:12:45.285"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:45.316" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:45.316" starttime="20161118 02:12:45.316"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:45.332" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:45.332" starttime="20161118 02:12:45.316"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.348" starttime="20161118 02:12:45.332"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.348" starttime="20161118 02:12:45.348"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:45.348" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:45.348" starttime="20161118 02:12:45.348"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.348" starttime="20161118 02:12:45.348"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:45.348" starttime="20161118 02:12:45.316"></status>
</kw>
<kw name="POST_TalentPool_Create_Empty_String" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${EMPTY}</arg>
<arg>Title</arg>
<arg>400</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:45.363" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:45.363" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:45.363" starttime="20161118 02:12:45.363"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.363" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:45.363" starttime="20161118 02:12:45.363"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.363" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161118 02:12:45.363" starttime="20161118 02:12:45.363"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.363" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:45.363" starttime="20161118 02:12:45.363"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:45.363" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20161118 02:12:45.363" starttime="20161118 02:12:45.363"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161118 02:12:45.363" starttime="20161118 02:12:45.363"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"${KEY_NAME_JSON}\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.363" level="INFO">Request body set to "{ "Title":""}".</msg>
<status status="PASS" endtime="20161118 02:12:45.363" starttime="20161118 02:12:45.363"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.410" starttime="20161118 02:12:45.363"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.410" starttime="20161118 02:12:45.410"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:45.410" level="INFO">${resBody} = {"Message":"Title cannot be empty."}</msg>
<status status="PASS" endtime="20161118 02:12:45.410" starttime="20161118 02:12:45.410"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20161118 02:12:45.410" level="INFO">Set test message to:
The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20161118 02:12:45.410" starttime="20161118 02:12:45.410"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:45.410" starttime="20161118 02:12:45.363"></status>
</kw>
<doc>*Name:*
Api_TPC_Length_0.

*Description:*
verify failure when title length is 0

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:45.410" critical="yes" starttime="20161118 02:12:45.285">The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-s1-t4" name="POST-API_TPC_Length_1">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.457" starttime="20161118 02:12:45.410"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:45.473" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161118 02:12:45.473" starttime="20161118 02:12:45.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.473" level="INFO">48</msg>
<status status="PASS" endtime="20161118 02:12:45.473" starttime="20161118 02:12:45.473"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:45.473" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:45.473" starttime="20161118 02:12:45.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.473" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161118 02:12:45.473" starttime="20161118 02:12:45.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.473" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:45.488" starttime="20161118 02:12:45.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.488" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:45.488" starttime="20161118 02:12:45.488"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:45.488" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:45.488" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:45.488" starttime="20161118 02:12:45.488"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.488" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:45.488" starttime="20161118 02:12:45.488"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.488" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161118 02:12:45.488" starttime="20161118 02:12:45.488"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.488" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:45.488" starttime="20161118 02:12:45.488"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:45.488" starttime="20161118 02:12:45.410"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:45.488" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:45.488" starttime="20161118 02:12:45.488"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:45.488" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:45.488" starttime="20161118 02:12:45.488"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.520" starttime="20161118 02:12:45.488"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.520" starttime="20161118 02:12:45.520"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:45.520" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:45.520" starttime="20161118 02:12:45.520"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.520" starttime="20161118 02:12:45.520"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:45.520" starttime="20161118 02:12:45.488"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>1</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:45.520" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:45.520" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:45.520" starttime="20161118 02:12:45.520"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.520" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:45.520" starttime="20161118 02:12:45.520"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.520" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161118 02:12:45.535" starttime="20161118 02:12:45.520"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.535" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:45.535" starttime="20161118 02:12:45.535"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:45.535" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:45.535" starttime="20161118 02:12:45.535"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.535" level="INFO">Request body set to "{ "Title":"1"}".</msg>
<status status="PASS" endtime="20161118 02:12:45.535" starttime="20161118 02:12:45.535"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.613" starttime="20161118 02:12:45.535"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.613" starttime="20161118 02:12:45.613"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:45.629" level="INFO">${resBody} = {"TalentpoolId":5817,"Title":"1","Owner":{"UserId":48,"FirstName":"Jeffrey","LastName":"Trattner"},"CreatedDate":"2016-11-18T10:12:45.33","ModifierId":1,"ModifiedDate":"2016-11-18T10:12:45.33","IsShar...</msg>
<status status="PASS" endtime="20161118 02:12:45.629" starttime="20161118 02:12:45.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.629" level="INFO">{"TalentpoolId":5817,"Title":"1","Owner":{"UserId":48,"FirstName":"Jeffrey","LastName":"Trattner"},"CreatedDate":"2016-11-18T10:12:45.33","ModifierId":1,"ModifiedDate":"2016-11-18T10:12:45.33","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:45.629" starttime="20161118 02:12:45.629"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:45.629" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'1', u'TalentpoolId': 5817, u'ModifiedDate': u'2016-11-18T10:12:45.33', u'CreatedDate': u'2016-11-18T10:12:45.33', u'Owner': {u'LastName': u'Trattner', u'UserId': 48, u...</msg>
<status status="PASS" endtime="20161118 02:12:45.629" starttime="20161118 02:12:45.629"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:45.629" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'1', u'CreatedDate': u'2016-11-18T10:12:45.33', u'ModifiedDate': u'2016-11-18T10:12:45.33', u'TalentpoolId': 5817, u'Owner': {u'LastName': u'Trattner', u'UserId': 48, u...</msg>
<status status="PASS" endtime="20161118 02:12:45.629" starttime="20161118 02:12:45.629"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:45.629" level="INFO">${keyValue} = 1</msg>
<status status="PASS" endtime="20161118 02:12:45.629" starttime="20161118 02:12:45.629"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:45.629" starttime="20161118 02:12:45.520"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Length_1

*Description:*
verify success when title length is 1

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:45.629" critical="yes" starttime="20161118 02:12:45.410"></status>
</test>
<test id="s1-s1-s1-t5" name="POST-API_TPC_Length_50">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.645" starttime="20161118 02:12:45.629"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:45.660" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161118 02:12:45.660" starttime="20161118 02:12:45.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.660" level="INFO">415</msg>
<status status="PASS" endtime="20161118 02:12:45.660" starttime="20161118 02:12:45.660"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:45.660" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:45.660" starttime="20161118 02:12:45.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.660" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161118 02:12:45.660" starttime="20161118 02:12:45.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.660" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:45.660" starttime="20161118 02:12:45.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.660" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:45.660" starttime="20161118 02:12:45.660"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:45.660" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:45.660" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:45.660" starttime="20161118 02:12:45.660"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.660" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:45.660" starttime="20161118 02:12:45.660"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.676" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161118 02:12:45.676" starttime="20161118 02:12:45.676"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.676" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:45.676" starttime="20161118 02:12:45.676"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:45.676" starttime="20161118 02:12:45.629"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:45.676" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:45.676" starttime="20161118 02:12:45.676"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:45.676" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:45.676" starttime="20161118 02:12:45.676"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.691" starttime="20161118 02:12:45.676"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.691" starttime="20161118 02:12:45.691"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:45.691" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:45.691" starttime="20161118 02:12:45.691"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.691" starttime="20161118 02:12:45.691"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:45.691" starttime="20161118 02:12:45.676"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>12345678901234567890123456789012345678901234567890</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:45.707" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:45.707" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:45.707" starttime="20161118 02:12:45.707"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.707" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:45.707" starttime="20161118 02:12:45.707"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.707" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161118 02:12:45.707" starttime="20161118 02:12:45.707"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.707" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:45.707" starttime="20161118 02:12:45.707"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:45.707" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:45.707" starttime="20161118 02:12:45.707"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.707" level="INFO">Request body set to "{ "Title":"12345678901234567890123456789012345678901234567890"}".</msg>
<status status="PASS" endtime="20161118 02:12:45.707" starttime="20161118 02:12:45.707"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.754" starttime="20161118 02:12:45.707"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.754" starttime="20161118 02:12:45.754"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:45.770" level="INFO">${resBody} = {"TalentpoolId":5818,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-18T10:12:45.503","ModifierId"...</msg>
<status status="PASS" endtime="20161118 02:12:45.770" starttime="20161118 02:12:45.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.770" level="INFO">{"TalentpoolId":5818,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-18T10:12:45.503","ModifierId":1,"ModifiedDate":"2016-11-18T10:12:45.503","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:45.770" starttime="20161118 02:12:45.770"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:45.770" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'TalentpoolId': 5818, u'ModifiedDate': u'2016-11-18T10:12:45.503', u'CreatedDate': u'2016-11-18T10:12:45.503', u'...</msg>
<status status="PASS" endtime="20161118 02:12:45.770" starttime="20161118 02:12:45.770"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:45.770" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'CreatedDate': u'2016-11-18T10:12:45.503', u'ModifiedDate': u'2016-11-18T10:12:45.503', u'TalentpoolId': 5818, u'...</msg>
<status status="PASS" endtime="20161118 02:12:45.770" starttime="20161118 02:12:45.770"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:45.770" level="INFO">${keyValue} = 12345678901234567890123456789012345678901234567890</msg>
<status status="PASS" endtime="20161118 02:12:45.770" starttime="20161118 02:12:45.770"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:45.770" starttime="20161118 02:12:45.707"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Length_50

*Description:*
verify success when title length is 50

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:45.770" critical="yes" starttime="20161118 02:12:45.629"></status>
</test>
<test id="s1-s1-s1-t6" name="POST-API_TPC_Length_51">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.785" starttime="20161118 02:12:45.770"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:45.785" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161118 02:12:45.785" starttime="20161118 02:12:45.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.785" level="INFO">514</msg>
<status status="PASS" endtime="20161118 02:12:45.785" starttime="20161118 02:12:45.785"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:45.785" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:45.801" starttime="20161118 02:12:45.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.801" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161118 02:12:45.801" starttime="20161118 02:12:45.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.801" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:45.801" starttime="20161118 02:12:45.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.801" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:45.801" starttime="20161118 02:12:45.801"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:45.801" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:45.801" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:45.801" starttime="20161118 02:12:45.801"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.801" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:45.801" starttime="20161118 02:12:45.801"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.801" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161118 02:12:45.801" starttime="20161118 02:12:45.801"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.801" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:45.801" starttime="20161118 02:12:45.801"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:45.801" starttime="20161118 02:12:45.770"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:45.801" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:45.801" starttime="20161118 02:12:45.801"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:45.816" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:45.816" starttime="20161118 02:12:45.801"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.832" starttime="20161118 02:12:45.816"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.832" starttime="20161118 02:12:45.832"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:45.832" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:45.832" starttime="20161118 02:12:45.832"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.832" starttime="20161118 02:12:45.832"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:45.832" starttime="20161118 02:12:45.801"></status>
</kw>
<kw name="POST_TalentPool_Create_Over_Max_Count" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>123456789012345678901234567890123456789012345678901</arg>
<arg>Title</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:45.848" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:45.848" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:45.848" starttime="20161118 02:12:45.848"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.848" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:45.848" starttime="20161118 02:12:45.848"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.848" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161118 02:12:45.848" starttime="20161118 02:12:45.848"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.848" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:45.848" starttime="20161118 02:12:45.848"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:45.848" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:45.848" starttime="20161118 02:12:45.848"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161118 02:12:45.848" starttime="20161118 02:12:45.848"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.848" level="INFO">Request body set to "{ "Title":"123456789012345678901234567890123456789012345678901"}".</msg>
<status status="PASS" endtime="20161118 02:12:45.848" starttime="20161118 02:12:45.848"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.895" starttime="20161118 02:12:45.848"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:45.895" level="INFO">${resBody} = {"Message":"Maximum length for title is 50 characters."}</msg>
<status status="PASS" endtime="20161118 02:12:45.895" starttime="20161118 02:12:45.895"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20161118 02:12:45.895" level="INFO">Set test message to:
The {"Message":"Maximum length for title is 50 characters."} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20161118 02:12:45.895" starttime="20161118 02:12:45.895"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:45.895" starttime="20161118 02:12:45.848"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Length_51

*Description:*
verify failure when title length is 51

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:45.895" critical="yes" starttime="20161118 02:12:45.770">The {"Message":"Maximum length for title is 50 characters."} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-s1-t7" name="POST-API_TPC_Trim_Space">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.910" starttime="20161118 02:12:45.895"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:45.910" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161118 02:12:45.910" starttime="20161118 02:12:45.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.910" level="INFO">1338</msg>
<status status="PASS" endtime="20161118 02:12:45.910" starttime="20161118 02:12:45.910"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:45.910" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:45.910" starttime="20161118 02:12:45.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.910" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161118 02:12:45.910" starttime="20161118 02:12:45.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.910" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:45.910" starttime="20161118 02:12:45.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.910" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:45.910" starttime="20161118 02:12:45.910"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:45.910" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:45.910" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:45.926" starttime="20161118 02:12:45.910"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.926" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:45.926" starttime="20161118 02:12:45.926"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.926" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161118 02:12:45.926" starttime="20161118 02:12:45.926"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.926" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:45.926" starttime="20161118 02:12:45.926"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:45.926" starttime="20161118 02:12:45.895"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:45.926" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:45.926" starttime="20161118 02:12:45.926"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:45.926" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:45.926" starttime="20161118 02:12:45.926"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.957" starttime="20161118 02:12:45.926"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.957" starttime="20161118 02:12:45.957"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:45.957" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:45.957" starttime="20161118 02:12:45.957"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:45.957" starttime="20161118 02:12:45.957"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:45.957" starttime="20161118 02:12:45.926"></status>
</kw>
<kw name="POST_TalentPool_Create_Empty_String" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${SPACE * 3}</arg>
<arg>Title</arg>
<arg>400</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:45.957" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:45.957" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:45.957" starttime="20161118 02:12:45.957"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.957" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:45.957" starttime="20161118 02:12:45.957"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.957" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161118 02:12:45.957" starttime="20161118 02:12:45.957"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.973" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:45.973" starttime="20161118 02:12:45.973"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:45.973" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20161118 02:12:45.973" starttime="20161118 02:12:45.973"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161118 02:12:45.973" starttime="20161118 02:12:45.973"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"${KEY_NAME_JSON}\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:45.973" level="INFO">Request body set to "{ "Title":"   "}".</msg>
<status status="PASS" endtime="20161118 02:12:45.973" starttime="20161118 02:12:45.973"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.004" starttime="20161118 02:12:45.973"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.004" starttime="20161118 02:12:46.004"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:46.004" level="INFO">${resBody} = {"Message":"Title cannot be empty."}</msg>
<status status="PASS" endtime="20161118 02:12:46.004" starttime="20161118 02:12:46.004"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20161118 02:12:46.004" level="INFO">Set test message to:
The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20161118 02:12:46.004" starttime="20161118 02:12:46.004"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.004" starttime="20161118 02:12:45.957"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Space

*Description:*
verify trimming with only space

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:46.004" critical="yes" starttime="20161118 02:12:45.895">The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-s1-t8" name="POST-API_TPC_Trim_TabSpace">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.020" starttime="20161118 02:12:46.020"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:46.020" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:46.020" starttime="20161118 02:12:46.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.020" level="INFO">1336</msg>
<status status="PASS" endtime="20161118 02:12:46.020" starttime="20161118 02:12:46.020"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:46.020" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:46.020" starttime="20161118 02:12:46.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.020" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:46.020" starttime="20161118 02:12:46.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.035" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:46.035" starttime="20161118 02:12:46.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.035" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:46.035" starttime="20161118 02:12:46.035"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:46.035" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:46.035" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:46.035" starttime="20161118 02:12:46.035"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.035" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:46.035" starttime="20161118 02:12:46.035"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.035" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:46.035" starttime="20161118 02:12:46.035"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.035" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:46.035" starttime="20161118 02:12:46.035"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.035" starttime="20161118 02:12:46.004"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:46.035" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:46.035" starttime="20161118 02:12:46.035"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:46.035" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:46.035" starttime="20161118 02:12:46.035"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.066" starttime="20161118 02:12:46.035"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.066" starttime="20161118 02:12:46.066"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:46.066" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:46.066" starttime="20161118 02:12:46.066"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.066" starttime="20161118 02:12:46.066"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.066" starttime="20161118 02:12:46.035"></status>
</kw>
<kw name="POST_TalentPool_Create_Empty_String" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${EMPTY}</arg>
<arg>Title</arg>
<arg>400</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:46.066" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:46.066" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:46.066" starttime="20161118 02:12:46.066"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.082" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:46.082" starttime="20161118 02:12:46.082"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.082" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:46.082" starttime="20161118 02:12:46.082"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.082" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:46.082" starttime="20161118 02:12:46.082"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:46.082" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20161118 02:12:46.082" starttime="20161118 02:12:46.082"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161118 02:12:46.082" starttime="20161118 02:12:46.082"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"${KEY_NAME_JSON}\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.082" level="INFO">Request body set to "{ "Title":""}".</msg>
<status status="PASS" endtime="20161118 02:12:46.082" starttime="20161118 02:12:46.082"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.113" starttime="20161118 02:12:46.082"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.113" starttime="20161118 02:12:46.113"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:46.113" level="INFO">${resBody} = {"Message":"Title cannot be empty."}</msg>
<status status="PASS" endtime="20161118 02:12:46.113" starttime="20161118 02:12:46.113"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20161118 02:12:46.113" level="INFO">Set test message to:
The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20161118 02:12:46.113" starttime="20161118 02:12:46.113"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.113" starttime="20161118 02:12:46.066"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_TabSpace

*Description:*
verify trimming with only tab-space

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:46.113" critical="yes" starttime="20161118 02:12:46.004">The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-s1-t9" name="POST-API_TPC_Trim_Leading">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.129" starttime="20161118 02:12:46.113"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:46.129" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161118 02:12:46.129" starttime="20161118 02:12:46.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.129" level="INFO">1338</msg>
<status status="PASS" endtime="20161118 02:12:46.129" starttime="20161118 02:12:46.129"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:46.129" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:46.129" starttime="20161118 02:12:46.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.129" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161118 02:12:46.129" starttime="20161118 02:12:46.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.129" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:46.129" starttime="20161118 02:12:46.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.145" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:46.145" starttime="20161118 02:12:46.145"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:46.145" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:46.145" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:46.145" starttime="20161118 02:12:46.145"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.145" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:46.145" starttime="20161118 02:12:46.145"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.145" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161118 02:12:46.145" starttime="20161118 02:12:46.145"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.145" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:46.145" starttime="20161118 02:12:46.145"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.145" starttime="20161118 02:12:46.113"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:46.145" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:46.145" starttime="20161118 02:12:46.145"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:46.145" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:46.145" starttime="20161118 02:12:46.145"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.176" starttime="20161118 02:12:46.145"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.176" starttime="20161118 02:12:46.176"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:46.176" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:46.176" starttime="20161118 02:12:46.176"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.176" starttime="20161118 02:12:46.176"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.176" starttime="20161118 02:12:46.145"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${SPACE * 2}Leading</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:46.191" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:46.191" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:46.191" starttime="20161118 02:12:46.191"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.191" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:46.191" starttime="20161118 02:12:46.191"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.191" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161118 02:12:46.191" starttime="20161118 02:12:46.191"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.191" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:46.191" starttime="20161118 02:12:46.191"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:46.191" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:46.191" starttime="20161118 02:12:46.191"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.191" level="INFO">Request body set to "{ "Title":"  Leading"}".</msg>
<status status="PASS" endtime="20161118 02:12:46.191" starttime="20161118 02:12:46.191"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.254" starttime="20161118 02:12:46.191"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.254" starttime="20161118 02:12:46.254"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:46.254" level="INFO">${resBody} = {"TalentpoolId":5819,"Title":"Leading","Owner":{"UserId":1338,"FirstName":"smaus","LastName":"smaus"},"CreatedDate":"2016-11-18T10:12:45.987","ModifierId":1,"ModifiedDate":"2016-11-18T10:12:45.987","I...</msg>
<status status="PASS" endtime="20161118 02:12:46.254" starttime="20161118 02:12:46.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.254" level="INFO">{"TalentpoolId":5819,"Title":"Leading","Owner":{"UserId":1338,"FirstName":"smaus","LastName":"smaus"},"CreatedDate":"2016-11-18T10:12:45.987","ModifierId":1,"ModifiedDate":"2016-11-18T10:12:45.987","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:46.254" starttime="20161118 02:12:46.254"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:46.254" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'Leading', u'TalentpoolId': 5819, u'ModifiedDate': u'2016-11-18T10:12:45.987', u'CreatedDate': u'2016-11-18T10:12:45.987', u'Owner': {u'LastName': u'smaus', u'UserId': ...</msg>
<status status="PASS" endtime="20161118 02:12:46.254" starttime="20161118 02:12:46.254"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:46.270" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'Leading', u'CreatedDate': u'2016-11-18T10:12:45.987', u'ModifiedDate': u'2016-11-18T10:12:45.987', u'TalentpoolId': 5819, u'Owner': {u'LastName': u'smaus', u'UserId': ...</msg>
<status status="PASS" endtime="20161118 02:12:46.270" starttime="20161118 02:12:46.270"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:46.270" level="INFO">${keyValue} = Leading</msg>
<status status="PASS" endtime="20161118 02:12:46.270" starttime="20161118 02:12:46.270"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.270" starttime="20161118 02:12:46.176"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Leading

*Description:*
verify trimming leading spaces

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:46.270" critical="yes" starttime="20161118 02:12:46.113"></status>
</test>
<test id="s1-s1-s1-t10" name="POST-API_TPC_Trim_Trailing">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.270" starttime="20161118 02:12:46.270"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:46.285" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161118 02:12:46.285" starttime="20161118 02:12:46.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.285" level="INFO">415</msg>
<status status="PASS" endtime="20161118 02:12:46.285" starttime="20161118 02:12:46.285"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:46.285" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:46.285" starttime="20161118 02:12:46.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.285" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161118 02:12:46.285" starttime="20161118 02:12:46.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.285" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:46.285" starttime="20161118 02:12:46.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.285" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:46.285" starttime="20161118 02:12:46.285"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:46.285" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:46.285" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:46.285" starttime="20161118 02:12:46.285"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.285" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:46.285" starttime="20161118 02:12:46.285"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.285" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161118 02:12:46.285" starttime="20161118 02:12:46.285"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.285" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:46.285" starttime="20161118 02:12:46.285"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.285" starttime="20161118 02:12:46.270"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:46.301" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:46.301" starttime="20161118 02:12:46.301"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:46.301" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:46.301" starttime="20161118 02:12:46.301"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.316" starttime="20161118 02:12:46.301"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.316" starttime="20161118 02:12:46.316"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:46.316" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:46.316" starttime="20161118 02:12:46.316"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.316" starttime="20161118 02:12:46.316"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.316" starttime="20161118 02:12:46.301"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Trailing${SPACE * 2}</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:46.332" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:46.332" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:46.332" starttime="20161118 02:12:46.332"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.332" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:46.332" starttime="20161118 02:12:46.332"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.332" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161118 02:12:46.332" starttime="20161118 02:12:46.332"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.332" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:46.332" starttime="20161118 02:12:46.332"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:46.332" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:46.332" starttime="20161118 02:12:46.332"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.332" level="INFO">Request body set to "{ "Title":"Trailing  "}".</msg>
<status status="PASS" endtime="20161118 02:12:46.332" starttime="20161118 02:12:46.332"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.395" starttime="20161118 02:12:46.332"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.395" starttime="20161118 02:12:46.395"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:46.395" level="INFO">${resBody} = {"TalentpoolId":5820,"Title":"Trailing","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-18T10:12:46.143","ModifierId":1,"ModifiedDate":"2016-11-18T10:12:46.143...</msg>
<status status="PASS" endtime="20161118 02:12:46.395" starttime="20161118 02:12:46.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.395" level="INFO">{"TalentpoolId":5820,"Title":"Trailing","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-18T10:12:46.143","ModifierId":1,"ModifiedDate":"2016-11-18T10:12:46.143","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:46.395" starttime="20161118 02:12:46.395"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:46.395" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'Trailing', u'TalentpoolId': 5820, u'ModifiedDate': u'2016-11-18T10:12:46.143', u'CreatedDate': u'2016-11-18T10:12:46.143', u'Owner': {u'LastName': u'Kaplowitz', u'User...</msg>
<status status="PASS" endtime="20161118 02:12:46.395" starttime="20161118 02:12:46.395"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:46.395" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'Trailing', u'CreatedDate': u'2016-11-18T10:12:46.143', u'ModifiedDate': u'2016-11-18T10:12:46.143', u'TalentpoolId': 5820, u'Owner': {u'LastName': u'Kaplowitz', u'User...</msg>
<status status="PASS" endtime="20161118 02:12:46.395" starttime="20161118 02:12:46.395"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:46.395" level="INFO">${keyValue} = Trailing</msg>
<status status="PASS" endtime="20161118 02:12:46.395" starttime="20161118 02:12:46.395"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.395" starttime="20161118 02:12:46.332"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Trailing

*Description:*
verify trimming trailing spaces

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:46.395" critical="yes" starttime="20161118 02:12:46.270"></status>
</test>
<test id="s1-s1-s1-t11" name="POST-API_TPC_Trim_Middle">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.410" starttime="20161118 02:12:46.410"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:46.410" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161118 02:12:46.410" starttime="20161118 02:12:46.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.410" level="INFO">415</msg>
<status status="PASS" endtime="20161118 02:12:46.410" starttime="20161118 02:12:46.410"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:46.410" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:46.410" starttime="20161118 02:12:46.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.426" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161118 02:12:46.426" starttime="20161118 02:12:46.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.426" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:46.426" starttime="20161118 02:12:46.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.426" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:46.426" starttime="20161118 02:12:46.426"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:46.426" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:46.426" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:46.426" starttime="20161118 02:12:46.426"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.426" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:46.426" starttime="20161118 02:12:46.426"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.426" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161118 02:12:46.426" starttime="20161118 02:12:46.426"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.426" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:46.426" starttime="20161118 02:12:46.426"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.426" starttime="20161118 02:12:46.395"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:46.426" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:46.426" starttime="20161118 02:12:46.426"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:46.441" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:46.441" starttime="20161118 02:12:46.426"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.473" starttime="20161118 02:12:46.441"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.473" starttime="20161118 02:12:46.473"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:46.473" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:46.473" starttime="20161118 02:12:46.473"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.473" starttime="20161118 02:12:46.473"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.473" starttime="20161118 02:12:46.426"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>space between</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:46.473" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:46.473" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:46.473" starttime="20161118 02:12:46.473"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.473" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:46.488" starttime="20161118 02:12:46.473"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.488" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161118 02:12:46.488" starttime="20161118 02:12:46.488"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.488" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:46.488" starttime="20161118 02:12:46.488"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:46.488" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:46.488" starttime="20161118 02:12:46.488"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.488" level="INFO">Request body set to "{ "Title":"space between"}".</msg>
<status status="PASS" endtime="20161118 02:12:46.488" starttime="20161118 02:12:46.488"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.520" starttime="20161118 02:12:46.488"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.520" starttime="20161118 02:12:46.520"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:46.520" level="INFO">${resBody} = {"TalentpoolId":5821,"Title":"space between","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-18T10:12:46.283","ModifierId":1,"ModifiedDate":"2016-11-18T10:12:4...</msg>
<status status="PASS" endtime="20161118 02:12:46.520" starttime="20161118 02:12:46.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.520" level="INFO">{"TalentpoolId":5821,"Title":"space between","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-18T10:12:46.283","ModifierId":1,"ModifiedDate":"2016-11-18T10:12:46.283","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:46.520" starttime="20161118 02:12:46.520"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:46.520" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'space between', u'TalentpoolId': 5821, u'ModifiedDate': u'2016-11-18T10:12:46.283', u'CreatedDate': u'2016-11-18T10:12:46.283', u'Owner': {u'LastName': u'Kaplowitz', u...</msg>
<status status="PASS" endtime="20161118 02:12:46.520" starttime="20161118 02:12:46.520"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:46.520" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'space between', u'CreatedDate': u'2016-11-18T10:12:46.283', u'ModifiedDate': u'2016-11-18T10:12:46.283', u'TalentpoolId': 5821, u'Owner': {u'LastName': u'Kaplowitz', u...</msg>
<status status="PASS" endtime="20161118 02:12:46.520" starttime="20161118 02:12:46.520"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:46.535" level="INFO">${keyValue} = space between</msg>
<status status="PASS" endtime="20161118 02:12:46.535" starttime="20161118 02:12:46.520"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.535" starttime="20161118 02:12:46.473"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Middle

*Description:*
verify no trimming middle spaces

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:46.535" critical="yes" starttime="20161118 02:12:46.395"></status>
</test>
<test id="s1-s1-s1-t12" name="POST-API_TPC_Trim_SpaceAnd50">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.551" starttime="20161118 02:12:46.535"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:46.566" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161118 02:12:46.566" starttime="20161118 02:12:46.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.566" level="INFO">48</msg>
<status status="PASS" endtime="20161118 02:12:46.566" starttime="20161118 02:12:46.566"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:46.566" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:46.566" starttime="20161118 02:12:46.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.566" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161118 02:12:46.566" starttime="20161118 02:12:46.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.566" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:46.566" starttime="20161118 02:12:46.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.566" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:46.566" starttime="20161118 02:12:46.566"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:46.566" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:46.566" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:46.566" starttime="20161118 02:12:46.566"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.566" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:46.566" starttime="20161118 02:12:46.566"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.566" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161118 02:12:46.566" starttime="20161118 02:12:46.566"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.566" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:46.566" starttime="20161118 02:12:46.566"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.582" starttime="20161118 02:12:46.535"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:46.582" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:46.582" starttime="20161118 02:12:46.582"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:46.582" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:46.582" starttime="20161118 02:12:46.582"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.598" starttime="20161118 02:12:46.582"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.598" starttime="20161118 02:12:46.598"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:46.598" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:46.598" starttime="20161118 02:12:46.598"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.598" starttime="20161118 02:12:46.598"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.598" starttime="20161118 02:12:46.582"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>12345678901234567890123456789012345678901234567890${SPACE}</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:46.613" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:46.613" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:46.613" starttime="20161118 02:12:46.613"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.613" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:46.613" starttime="20161118 02:12:46.613"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.613" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161118 02:12:46.613" starttime="20161118 02:12:46.613"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.613" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:46.613" starttime="20161118 02:12:46.613"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:46.613" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:46.613" starttime="20161118 02:12:46.613"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.613" level="INFO">Request body set to "{ "Title":"12345678901234567890123456789012345678901234567890 "}".</msg>
<status status="PASS" endtime="20161118 02:12:46.613" starttime="20161118 02:12:46.613"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.660" starttime="20161118 02:12:46.613"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.660" starttime="20161118 02:12:46.660"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:46.660" level="INFO">${resBody} = {"TalentpoolId":5822,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":48,"FirstName":"Jeffrey","LastName":"Trattner"},"CreatedDate":"2016-11-18T10:12:46.41","ModifierId":...</msg>
<status status="PASS" endtime="20161118 02:12:46.660" starttime="20161118 02:12:46.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.660" level="INFO">{"TalentpoolId":5822,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":48,"FirstName":"Jeffrey","LastName":"Trattner"},"CreatedDate":"2016-11-18T10:12:46.41","ModifierId":1,"ModifiedDate":"2016-11-18T10:12:46.41","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:46.660" starttime="20161118 02:12:46.660"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:46.660" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'TalentpoolId': 5822, u'ModifiedDate': u'2016-11-18T10:12:46.41', u'CreatedDate': u'2016-11-18T10:12:46.41', u'Ow...</msg>
<status status="PASS" endtime="20161118 02:12:46.660" starttime="20161118 02:12:46.660"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:46.660" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'CreatedDate': u'2016-11-18T10:12:46.41', u'ModifiedDate': u'2016-11-18T10:12:46.41', u'TalentpoolId': 5822, u'Ow...</msg>
<status status="PASS" endtime="20161118 02:12:46.660" starttime="20161118 02:12:46.660"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:46.660" level="INFO">${keyValue} = 12345678901234567890123456789012345678901234567890</msg>
<status status="PASS" endtime="20161118 02:12:46.660" starttime="20161118 02:12:46.660"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.676" starttime="20161118 02:12:46.613"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_SpaceAnd50

*Description:*
verify trimming happens before submissions attempt

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:46.676" critical="yes" starttime="20161118 02:12:46.535"></status>
</test>
<test id="s1-s1-s1-t13" name="POST-API_TPC_Security_Script">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.676" starttime="20161118 02:12:46.676"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:46.691" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161118 02:12:46.691" starttime="20161118 02:12:46.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.691" level="INFO">1338</msg>
<status status="PASS" endtime="20161118 02:12:46.691" starttime="20161118 02:12:46.691"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:46.691" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:46.691" starttime="20161118 02:12:46.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.691" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161118 02:12:46.691" starttime="20161118 02:12:46.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.691" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:46.691" starttime="20161118 02:12:46.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.691" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:46.691" starttime="20161118 02:12:46.691"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:46.691" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:46.691" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:46.691" starttime="20161118 02:12:46.691"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.691" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:46.691" starttime="20161118 02:12:46.691"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.691" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161118 02:12:46.691" starttime="20161118 02:12:46.691"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.707" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:46.707" starttime="20161118 02:12:46.707"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.707" starttime="20161118 02:12:46.676"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:46.707" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:46.707" starttime="20161118 02:12:46.707"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:46.707" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:46.707" starttime="20161118 02:12:46.707"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.723" starttime="20161118 02:12:46.707"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.723" starttime="20161118 02:12:46.723"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:46.723" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:46.723" starttime="20161118 02:12:46.723"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.723" starttime="20161118 02:12:46.723"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.723" starttime="20161118 02:12:46.707"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>&lt;script&gt;alert(123)&lt;/script&gt;</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:46.738" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:46.738" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:46.738" starttime="20161118 02:12:46.738"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.738" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:46.738" starttime="20161118 02:12:46.738"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.738" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161118 02:12:46.738" starttime="20161118 02:12:46.738"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.738" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:46.738" starttime="20161118 02:12:46.738"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:46.738" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:46.738" starttime="20161118 02:12:46.738"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.738" level="INFO">Request body set to "{ "Title":"&lt;script&gt;alert(123)&lt;/script&gt;"}".</msg>
<status status="PASS" endtime="20161118 02:12:46.738" starttime="20161118 02:12:46.738"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.770" starttime="20161118 02:12:46.738"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.785" starttime="20161118 02:12:46.785"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:46.785" level="INFO">${resBody} = {"TalentpoolId":5823,"Title":"&lt;script&gt;alert(123)&lt;/script&gt;","Owner":{"UserId":1338,"FirstName":"smaus","LastName":"smaus"},"CreatedDate":"2016-11-18T10:12:46.533","ModifierId":1,"ModifiedDate":"2016-11...</msg>
<status status="PASS" endtime="20161118 02:12:46.785" starttime="20161118 02:12:46.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.785" level="INFO">{"TalentpoolId":5823,"Title":"&lt;script&gt;alert(123)&lt;/script&gt;","Owner":{"UserId":1338,"FirstName":"smaus","LastName":"smaus"},"CreatedDate":"2016-11-18T10:12:46.533","ModifierId":1,"ModifiedDate":"2016-11-18T10:12:46.533","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:46.785" starttime="20161118 02:12:46.785"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:46.785" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;script&gt;alert(123)&lt;/script&gt;', u'TalentpoolId': 5823, u'ModifiedDate': u'2016-11-18T10:12:46.533', u'CreatedDate': u'2016-11-18T10:12:46.533', u'Owner': {u'LastName': u...</msg>
<status status="PASS" endtime="20161118 02:12:46.785" starttime="20161118 02:12:46.785"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:46.785" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;script&gt;alert(123)&lt;/script&gt;', u'CreatedDate': u'2016-11-18T10:12:46.533', u'ModifiedDate': u'2016-11-18T10:12:46.533', u'TalentpoolId': 5823, u'Owner': {u'LastName': u...</msg>
<status status="PASS" endtime="20161118 02:12:46.785" starttime="20161118 02:12:46.785"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:46.785" level="INFO">${keyValue} = &lt;script&gt;alert(123)&lt;/script&gt;</msg>
<status status="PASS" endtime="20161118 02:12:46.785" starttime="20161118 02:12:46.785"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.785" starttime="20161118 02:12:46.738"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Security_Script

*Description:*
verify script injection is allowed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:46.785" critical="yes" starttime="20161118 02:12:46.676"></status>
</test>
<test id="s1-s1-s1-t14" name="POST-API_TPC_Security_SQL">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.801" starttime="20161118 02:12:46.785"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:46.801" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161118 02:12:46.801" starttime="20161118 02:12:46.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.801" level="INFO">415</msg>
<status status="PASS" endtime="20161118 02:12:46.801" starttime="20161118 02:12:46.801"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:46.801" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:46.801" starttime="20161118 02:12:46.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.801" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161118 02:12:46.801" starttime="20161118 02:12:46.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.801" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:46.801" starttime="20161118 02:12:46.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.801" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:46.801" starttime="20161118 02:12:46.801"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:46.816" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:46.816" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:46.816" starttime="20161118 02:12:46.801"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.816" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:46.816" starttime="20161118 02:12:46.816"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.816" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161118 02:12:46.816" starttime="20161118 02:12:46.816"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.816" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:46.816" starttime="20161118 02:12:46.816"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.816" starttime="20161118 02:12:46.785"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:46.816" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:46.816" starttime="20161118 02:12:46.816"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:46.816" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:46.816" starttime="20161118 02:12:46.816"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.848" starttime="20161118 02:12:46.816"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.848" starttime="20161118 02:12:46.848"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:46.848" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:46.848" starttime="20161118 02:12:46.848"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.848" starttime="20161118 02:12:46.848"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.848" starttime="20161118 02:12:46.816"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>SELECT * FROM Users</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:46.848" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:46.848" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:46.848" starttime="20161118 02:12:46.848"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.848" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:46.848" starttime="20161118 02:12:46.848"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.863" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161118 02:12:46.863" starttime="20161118 02:12:46.863"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.863" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:46.863" starttime="20161118 02:12:46.863"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:46.863" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:46.863" starttime="20161118 02:12:46.863"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.863" level="INFO">Request body set to "{ "Title":"SELECT * FROM Users"}".</msg>
<status status="PASS" endtime="20161118 02:12:46.863" starttime="20161118 02:12:46.863"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.910" starttime="20161118 02:12:46.863"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.910" starttime="20161118 02:12:46.910"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:46.910" level="INFO">${resBody} = {"TalentpoolId":5824,"Title":"SELECT * FROM Users","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-18T10:12:46.66","ModifierId":1,"ModifiedDate":"2016-11-18T10...</msg>
<status status="PASS" endtime="20161118 02:12:46.910" starttime="20161118 02:12:46.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.910" level="INFO">{"TalentpoolId":5824,"Title":"SELECT * FROM Users","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-18T10:12:46.66","ModifierId":1,"ModifiedDate":"2016-11-18T10:12:46.66","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:46.910" starttime="20161118 02:12:46.910"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:46.910" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'SELECT * FROM Users', u'TalentpoolId': 5824, u'ModifiedDate': u'2016-11-18T10:12:46.66', u'CreatedDate': u'2016-11-18T10:12:46.66', u'Owner': {u'LastName': u'Kaplowitz...</msg>
<status status="PASS" endtime="20161118 02:12:46.910" starttime="20161118 02:12:46.910"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:46.910" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'SELECT * FROM Users', u'CreatedDate': u'2016-11-18T10:12:46.66', u'ModifiedDate': u'2016-11-18T10:12:46.66', u'TalentpoolId': 5824, u'Owner': {u'LastName': u'Kaplowitz...</msg>
<status status="PASS" endtime="20161118 02:12:46.910" starttime="20161118 02:12:46.910"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:46.910" level="INFO">${keyValue} = SELECT * FROM Users</msg>
<status status="PASS" endtime="20161118 02:12:46.910" starttime="20161118 02:12:46.910"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.910" starttime="20161118 02:12:46.848"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Security_SQL

*Description:*
verify sql injection fails

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:46.910" critical="yes" starttime="20161118 02:12:46.785"></status>
</test>
<test id="s1-s1-s1-t15" name="POST-API_TPC_Characters_Extended2">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.941" starttime="20161118 02:12:46.926"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:46.941" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161118 02:12:46.941" starttime="20161118 02:12:46.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.941" level="INFO">514</msg>
<status status="PASS" endtime="20161118 02:12:46.941" starttime="20161118 02:12:46.941"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:46.941" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:46.941" starttime="20161118 02:12:46.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.941" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161118 02:12:46.941" starttime="20161118 02:12:46.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.941" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:46.941" starttime="20161118 02:12:46.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.941" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:46.941" starttime="20161118 02:12:46.941"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:46.957" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:46.957" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:46.957" starttime="20161118 02:12:46.941"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.957" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:46.957" starttime="20161118 02:12:46.957"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.957" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161118 02:12:46.957" starttime="20161118 02:12:46.957"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:46.957" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:46.957" starttime="20161118 02:12:46.957"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.957" starttime="20161118 02:12:46.926"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:46.957" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:46.957" starttime="20161118 02:12:46.957"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:46.957" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:46.957" starttime="20161118 02:12:46.957"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.988" starttime="20161118 02:12:46.957"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.988" starttime="20161118 02:12:46.988"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:46.988" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:46.988" starttime="20161118 02:12:46.988"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:46.988" starttime="20161118 02:12:46.988"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:46.988" starttime="20161118 02:12:46.957"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>&lt;=&gt;?@^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:47.004" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:47.004" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:47.004" starttime="20161118 02:12:47.004"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.004" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:47.004" starttime="20161118 02:12:47.004"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.004" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161118 02:12:47.004" starttime="20161118 02:12:47.004"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.004" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:47.004" starttime="20161118 02:12:47.004"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:47.004" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:47.004" starttime="20161118 02:12:47.004"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.004" level="INFO">Request body set to "{ "Title":"&lt;=&gt;?@^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª"}".</msg>
<status status="PASS" endtime="20161118 02:12:47.004" starttime="20161118 02:12:47.004"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.035" starttime="20161118 02:12:47.004"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.035" starttime="20161118 02:12:47.035"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:47.051" level="INFO">${resBody} = {"TalentpoolId":5825,"Title":"&lt;=&gt;?@^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb6\x...</msg>
<status status="PASS" endtime="20161118 02:12:47.051" starttime="20161118 02:12:47.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.051" level="INFO">{"TalentpoolId":5825,"Title":"&lt;=&gt;?@^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb6\xc3\xb2\xc3\xbb\xc3\xb9\xc3\xbf\xc2\xa2\xc2\xa3\xc2\xa5\xe2\x82\xa7\xc6\x92\xc3\xa1\xc3\xad\xc3\xb3\xc3\xba\xc3\xb1\xc3\x91\xc2\xaa","Owner":{"UserId":514,"FirstName":"Juan","LastName":"Valle"},"CreatedDate":"2016-11-18T10:12:46.8","ModifierId":1,"ModifiedDate":"2016-11-18T10:12:46.8","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:47.051" starttime="20161118 02:12:47.051"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:47.051" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'Tale...</msg>
<status status="PASS" endtime="20161118 02:12:47.051" starttime="20161118 02:12:47.051"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:47.051" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'Crea...</msg>
<status status="PASS" endtime="20161118 02:12:47.051" starttime="20161118 02:12:47.051"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:47.051" level="INFO">${keyValue} = &lt;=&gt;?@^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20161118 02:12:47.051" starttime="20161118 02:12:47.051"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:47.051" starttime="20161118 02:12:47.004"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended2

*Description:*
verify ASCII characters 2

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:47.051" critical="yes" starttime="20161118 02:12:46.910"></status>
</test>
<test id="s1-s1-s1-t16" name="POST-API_TPC_Characters_Extended3">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.066" starttime="20161118 02:12:47.051"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:47.066" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161118 02:12:47.066" starttime="20161118 02:12:47.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.066" level="INFO">415</msg>
<status status="PASS" endtime="20161118 02:12:47.066" starttime="20161118 02:12:47.066"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:47.066" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:47.066" starttime="20161118 02:12:47.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.066" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161118 02:12:47.066" starttime="20161118 02:12:47.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.066" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:47.066" starttime="20161118 02:12:47.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.066" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:47.066" starttime="20161118 02:12:47.066"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:47.082" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:47.082" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:47.082" starttime="20161118 02:12:47.066"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.082" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:47.082" starttime="20161118 02:12:47.082"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.082" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161118 02:12:47.082" starttime="20161118 02:12:47.082"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.082" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:47.082" starttime="20161118 02:12:47.082"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:47.082" starttime="20161118 02:12:47.051"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:47.082" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:47.082" starttime="20161118 02:12:47.082"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:47.082" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:47.082" starttime="20161118 02:12:47.082"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.098" starttime="20161118 02:12:47.082"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.098" starttime="20161118 02:12:47.098"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:47.113" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:47.113" starttime="20161118 02:12:47.098"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.113" starttime="20161118 02:12:47.113"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:47.113" starttime="20161118 02:12:47.082"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>\ º¿¬¬½¼¡«»¦¦¦¦¦¦¦++¦¦++++++--+-+¦¦++--¦-+----++++++</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:47.113" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:47.113" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:47.113" starttime="20161118 02:12:47.113"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.113" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:47.113" starttime="20161118 02:12:47.113"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.113" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161118 02:12:47.113" starttime="20161118 02:12:47.113"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.113" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:47.113" starttime="20161118 02:12:47.113"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:47.113" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:47.113" starttime="20161118 02:12:47.113"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.129" level="INFO">Request body set to "{ "Title":" º¿¬¬½¼¡«»¦¦¦¦¦¦¦++¦¦++++++--+-+¦¦++--¦-+----++++++"}".</msg>
<status status="PASS" endtime="20161118 02:12:47.129" starttime="20161118 02:12:47.113"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.176" starttime="20161118 02:12:47.129"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.176" starttime="20161118 02:12:47.176"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:47.176" level="INFO">${resBody} = {"TalentpoolId":5826,"Title":"\xc2\xba\xc2\xbf\xc2\xac\xc2\xac\xc2\xbd\xc2\xbc\xc2\xa1\xc2\xab\xc2\xbb\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6++\xc2\xa6\xc2\xa6++++++--+-+\xc2\xa6\xc2\...</msg>
<status status="PASS" endtime="20161118 02:12:47.176" starttime="20161118 02:12:47.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.176" level="INFO">{"TalentpoolId":5826,"Title":"\xc2\xba\xc2\xbf\xc2\xac\xc2\xac\xc2\xbd\xc2\xbc\xc2\xa1\xc2\xab\xc2\xbb\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6++\xc2\xa6\xc2\xa6++++++--+-+\xc2\xa6\xc2\xa6++--\xc2\xa6-+----++++++","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-18T10:12:46.923","ModifierId":1,"ModifiedDate":"2016-11-18T10:12:46.923","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:47.176" starttime="20161118 02:12:47.176"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:47.176" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\xba\xbf\xac\xac\xbd\xbc\xa1\xab\xbb\xa6\xa6\xa6\xa6\xa6\xa6\xa6++\xa6\xa6++++++--+-+\xa6\xa6++--\xa6-+----++++++', u'TalentpoolId': 5826, u'ModifiedDate': u'2016-11-1...</msg>
<status status="PASS" endtime="20161118 02:12:47.176" starttime="20161118 02:12:47.176"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:47.176" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\xba\xbf\xac\xac\xbd\xbc\xa1\xab\xbb\xa6\xa6\xa6\xa6\xa6\xa6\xa6++\xa6\xa6++++++--+-+\xa6\xa6++--\xa6-+----++++++', u'CreatedDate': u'2016-11-18T10:12:46.923', u'Modif...</msg>
<status status="PASS" endtime="20161118 02:12:47.176" starttime="20161118 02:12:47.176"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:47.176" level="INFO">${keyValue} = º¿¬¬½¼¡«»¦¦¦¦¦¦¦++¦¦++++++--+-+¦¦++--¦-+----++++++</msg>
<status status="PASS" endtime="20161118 02:12:47.176" starttime="20161118 02:12:47.176"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:47.176" starttime="20161118 02:12:47.113"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended3

*Description:*
verify ASCII characters 3

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:47.176" critical="yes" starttime="20161118 02:12:47.051"></status>
</test>
<test id="s1-s1-s1-t17" name="POST-API_TPC_Characters_Extended4">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.191" starttime="20161118 02:12:47.176"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:47.191" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161118 02:12:47.191" starttime="20161118 02:12:47.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.191" level="INFO">514</msg>
<status status="PASS" endtime="20161118 02:12:47.191" starttime="20161118 02:12:47.191"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:47.191" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:47.191" starttime="20161118 02:12:47.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.207" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161118 02:12:47.207" starttime="20161118 02:12:47.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.207" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:47.207" starttime="20161118 02:12:47.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.207" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:47.207" starttime="20161118 02:12:47.207"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:47.207" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:47.207" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:47.207" starttime="20161118 02:12:47.207"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.207" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:47.207" starttime="20161118 02:12:47.207"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.207" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161118 02:12:47.207" starttime="20161118 02:12:47.207"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.207" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:47.207" starttime="20161118 02:12:47.207"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:47.207" starttime="20161118 02:12:47.176"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:47.207" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:47.207" starttime="20161118 02:12:47.207"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:47.207" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:47.207" starttime="20161118 02:12:47.207"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.238" starttime="20161118 02:12:47.223"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.238" starttime="20161118 02:12:47.238"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:47.238" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:47.238" starttime="20161118 02:12:47.238"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.238" starttime="20161118 02:12:47.238"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:47.238" starttime="20161118 02:12:47.207"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:47.238" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:47.238" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:47.238" starttime="20161118 02:12:47.238"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.254" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:47.254" starttime="20161118 02:12:47.238"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.254" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161118 02:12:47.254" starttime="20161118 02:12:47.254"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.254" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:47.254" starttime="20161118 02:12:47.254"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:47.254" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:47.254" starttime="20161118 02:12:47.254"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.254" level="INFO">Request body set to "{ "Title":"++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ"}".</msg>
<status status="PASS" endtime="20161118 02:12:47.254" starttime="20161118 02:12:47.254"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.301" starttime="20161118 02:12:47.254"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.301" starttime="20161118 02:12:47.301"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:47.301" level="INFO">${resBody} = {"TalentpoolId":5827,"Title":"++\xc2\xa6_\xc2\xa6\xc2\xa6\xc2\xafa\xc3\x9fGpSs\xc2\xb5tFTOd8fen=\xc2\xb1==()\xc3\xb7\xcb\x9c\xc2\xb0\xe2\x80\xa2\xc2\xb7vn\xc2\xb2\xc2\xa6\xe2\x82\xac\xe2\x80\x9e\xe2\x...</msg>
<status status="PASS" endtime="20161118 02:12:47.301" starttime="20161118 02:12:47.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.301" level="INFO">{"TalentpoolId":5827,"Title":"++\xc2\xa6_\xc2\xa6\xc2\xa6\xc2\xafa\xc3\x9fGpSs\xc2\xb5tFTOd8fen=\xc2\xb1==()\xc3\xb7\xcb\x9c\xc2\xb0\xe2\x80\xa2\xc2\xb7vn\xc2\xb2\xc2\xa6\xe2\x82\xac\xe2\x80\x9e\xe2\x80\xa6\xe2\x80\xa0\xe2\x80\xa1\xcb\x86\xe2\x80\xb0\xc5\xa0\xe2\x80\xb9\xc5\x92\xc5\xbd","Owner":{"UserId":514,"FirstName":"Juan","LastName":"Valle"},"CreatedDate":"2016-11-18T10:12:47.05","ModifierId":1,"ModifiedDate":"2016-11-18T10:12:47.05","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:47.301" starttime="20161118 02:12:47.301"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:47.301" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'++\xa6_\xa6\xa6\xafa\xdfGpSs\xb5tFTOd8fen=\xb1==()\xf7\u02dc\xb0\u2022\xb7vn\xb2\xa6\u20ac\u201e\u2026\u2020\u2021\u02c6\u2030\u0160\u2039\u0152\u017d', u'TalentpoolId...</msg>
<status status="PASS" endtime="20161118 02:12:47.301" starttime="20161118 02:12:47.301"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:47.316" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'++\xa6_\xa6\xa6\xafa\xdfGpSs\xb5tFTOd8fen=\xb1==()\xf7\u02dc\xb0\u2022\xb7vn\xb2\xa6\u20ac\u201e\u2026\u2020\u2021\u02c6\u2030\u0160\u2039\u0152\u017d', u'CreatedDate'...</msg>
<status status="PASS" endtime="20161118 02:12:47.316" starttime="20161118 02:12:47.301"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:47.316" level="INFO">${keyValue} = ++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ</msg>
<status status="PASS" endtime="20161118 02:12:47.316" starttime="20161118 02:12:47.316"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:47.316" starttime="20161118 02:12:47.238"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended4

*Description:*
verify ASCII characters 4

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:47.316" critical="yes" starttime="20161118 02:12:47.176"></status>
</test>
<test id="s1-s1-s1-t18" name="POST-API_TPC_Characters_Extended5">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.316" starttime="20161118 02:12:47.316"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:47.332" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161118 02:12:47.332" starttime="20161118 02:12:47.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.332" level="INFO">1338</msg>
<status status="PASS" endtime="20161118 02:12:47.332" starttime="20161118 02:12:47.332"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:47.332" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:47.332" starttime="20161118 02:12:47.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.332" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161118 02:12:47.332" starttime="20161118 02:12:47.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.332" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:47.332" starttime="20161118 02:12:47.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.332" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:47.332" starttime="20161118 02:12:47.332"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:47.332" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:47.332" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:47.332" starttime="20161118 02:12:47.332"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.332" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:47.332" starttime="20161118 02:12:47.332"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.332" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161118 02:12:47.332" starttime="20161118 02:12:47.332"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.332" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:47.348" starttime="20161118 02:12:47.332"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:47.348" starttime="20161118 02:12:47.316"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:47.348" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:47.348" starttime="20161118 02:12:47.348"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:47.348" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:47.348" starttime="20161118 02:12:47.348"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.363" starttime="20161118 02:12:47.348"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.363" starttime="20161118 02:12:47.363"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:47.379" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:47.379" starttime="20161118 02:12:47.363"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.379" starttime="20161118 02:12:47.379"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:47.379" starttime="20161118 02:12:47.348"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:47.379" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:47.379" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:47.379" starttime="20161118 02:12:47.379"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.379" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:47.379" starttime="20161118 02:12:47.379"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.379" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161118 02:12:47.379" starttime="20161118 02:12:47.379"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.379" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:47.379" starttime="20161118 02:12:47.379"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:47.395" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:47.395" starttime="20161118 02:12:47.395"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.395" level="INFO">Request body set to "{ "Title":"‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ"}".</msg>
<status status="PASS" endtime="20161118 02:12:47.395" starttime="20161118 02:12:47.395"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.426" starttime="20161118 02:12:47.395"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.426" starttime="20161118 02:12:47.426"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:47.426" level="INFO">${resBody} = {"TalentpoolId":5828,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\x...</msg>
<status status="PASS" endtime="20161118 02:12:47.426" starttime="20161118 02:12:47.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.426" level="INFO">{"TalentpoolId":5828,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\xc2\xae\xc2\xaf\xc2\xb3\xc2\xb4\xc2\xb8U\xc2\xbe\xc3\x80\xc3\x81\xc3\x82\xc3\x83\xc3\x84\xc3\x85\xc3\x88\xc3\x89\xc3\x8a\xc3\x8b\xc3\x8c\xc3\x8d\xc3\x8e\xc3\x8f\xc3\x90\xc3\x92\xc3\x93\xc3\x94\xc3\x95\xc3\x96\xc3\x97\xc3\x98\xc3\x99\xc3\x9a\xc3\x9b\xc3\x9c","Owner":{"UserId":1338,"FirstName":"smaus","LastName":"smaus"},"CreatedDate":"2016-11-18T10:12:47.173","ModifierId":1,"ModifiedDate":"2016-11-18T10:12:47.173","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:47.426" starttime="20161118 02:12:47.426"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:47.426" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20161118 02:12:47.426" starttime="20161118 02:12:47.426"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:47.426" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20161118 02:12:47.426" starttime="20161118 02:12:47.426"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:47.426" level="INFO">${keyValue} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20161118 02:12:47.426" starttime="20161118 02:12:47.426"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:47.426" starttime="20161118 02:12:47.379"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended5

*Description:*
verify ASCII characters 5

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:47.426" critical="yes" starttime="20161118 02:12:47.316"></status>
</test>
<test id="s1-s1-s1-t19" name="POST-API_TPC_Characters_Extended6">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.457" starttime="20161118 02:12:47.441"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:47.473" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161118 02:12:47.473" starttime="20161118 02:12:47.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.473" level="INFO">514</msg>
<status status="PASS" endtime="20161118 02:12:47.473" starttime="20161118 02:12:47.473"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:47.473" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:47.473" starttime="20161118 02:12:47.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.473" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161118 02:12:47.473" starttime="20161118 02:12:47.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.473" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:47.473" starttime="20161118 02:12:47.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.473" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:47.473" starttime="20161118 02:12:47.473"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:47.488" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:47.488" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:47.488" starttime="20161118 02:12:47.488"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.488" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:47.488" starttime="20161118 02:12:47.488"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.488" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161118 02:12:47.488" starttime="20161118 02:12:47.488"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.488" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:47.488" starttime="20161118 02:12:47.488"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:47.488" starttime="20161118 02:12:47.441"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:47.488" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:47.488" starttime="20161118 02:12:47.488"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:47.488" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:47.488" starttime="20161118 02:12:47.488"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.520" starttime="20161118 02:12:47.488"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.520" starttime="20161118 02:12:47.520"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:47.520" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:47.520" starttime="20161118 02:12:47.520"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.520" starttime="20161118 02:12:47.520"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:47.520" starttime="20161118 02:12:47.488"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>ÝÞãðýþ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:47.520" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:47.520" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:47.520" starttime="20161118 02:12:47.520"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.520" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:47.520" starttime="20161118 02:12:47.520"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.520" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161118 02:12:47.520" starttime="20161118 02:12:47.520"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.535" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:47.535" starttime="20161118 02:12:47.535"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:47.535" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:47.535" starttime="20161118 02:12:47.535"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.535" level="INFO">Request body set to "{ "Title":"ÝÞãðýþ"}".</msg>
<status status="PASS" endtime="20161118 02:12:47.535" starttime="20161118 02:12:47.535"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.582" starttime="20161118 02:12:47.535"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.582" starttime="20161118 02:12:47.582"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:47.582" level="INFO">${resBody} = {"TalentpoolId":5829,"Title":"\xc3\x9d\xc3\x9e\xc3\xa3\xc3\xb0\xc3\xbd\xc3\xbe","Owner":{"UserId":514,"FirstName":"Juan","LastName":"Valle"},"CreatedDate":"2016-11-18T10:12:47.33","ModifierId":1,"Modi...</msg>
<status status="PASS" endtime="20161118 02:12:47.582" starttime="20161118 02:12:47.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.582" level="INFO">{"TalentpoolId":5829,"Title":"\xc3\x9d\xc3\x9e\xc3\xa3\xc3\xb0\xc3\xbd\xc3\xbe","Owner":{"UserId":514,"FirstName":"Juan","LastName":"Valle"},"CreatedDate":"2016-11-18T10:12:47.33","ModifierId":1,"ModifiedDate":"2016-11-18T10:12:47.33","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:47.582" starttime="20161118 02:12:47.582"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:47.582" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\xdd\xde\xe3\xf0\xfd\xfe', u'TalentpoolId': 5829, u'ModifiedDate': u'2016-11-18T10:12:47.33', u'CreatedDate': u'2016-11-18T10:12:47.33', u'Owner': {u'LastName': u'Vall...</msg>
<status status="PASS" endtime="20161118 02:12:47.582" starttime="20161118 02:12:47.582"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:47.582" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\xdd\xde\xe3\xf0\xfd\xfe', u'CreatedDate': u'2016-11-18T10:12:47.33', u'ModifiedDate': u'2016-11-18T10:12:47.33', u'TalentpoolId': 5829, u'Owner': {u'LastName': u'Vall...</msg>
<status status="PASS" endtime="20161118 02:12:47.582" starttime="20161118 02:12:47.582"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:47.582" level="INFO">${keyValue} = ÝÞãðýþ</msg>
<status status="PASS" endtime="20161118 02:12:47.582" starttime="20161118 02:12:47.582"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:47.582" starttime="20161118 02:12:47.520"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended6

*Description:*
verify ASCII characters 6

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:47.598" critical="yes" starttime="20161118 02:12:47.441"></status>
</test>
<test id="s1-s1-s1-t20" name="POST-API_TPC_Foreign_Russian">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.613" starttime="20161118 02:12:47.598"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:47.613" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161118 02:12:47.613" starttime="20161118 02:12:47.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.613" level="INFO">415</msg>
<status status="PASS" endtime="20161118 02:12:47.613" starttime="20161118 02:12:47.613"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:47.613" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:47.613" starttime="20161118 02:12:47.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.629" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161118 02:12:47.629" starttime="20161118 02:12:47.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.629" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:47.629" starttime="20161118 02:12:47.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.629" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:47.629" starttime="20161118 02:12:47.629"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:47.629" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:47.629" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:47.629" starttime="20161118 02:12:47.629"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.629" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:47.629" starttime="20161118 02:12:47.629"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.629" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161118 02:12:47.629" starttime="20161118 02:12:47.629"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.629" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:47.629" starttime="20161118 02:12:47.629"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:47.629" starttime="20161118 02:12:47.598"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:47.629" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:47.629" starttime="20161118 02:12:47.629"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:47.629" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:47.645" starttime="20161118 02:12:47.629"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.660" starttime="20161118 02:12:47.645"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.660" starttime="20161118 02:12:47.660"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:47.660" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:47.660" starttime="20161118 02:12:47.660"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.660" starttime="20161118 02:12:47.660"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:47.660" starttime="20161118 02:12:47.629"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>ёъяшертыуиопющэасдфгчйкльжзхцвбнмЁЪЯШЕРТЫУИОПЮЩЭЖЬ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:47.676" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:47.676" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:47.676" starttime="20161118 02:12:47.676"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.676" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:47.676" starttime="20161118 02:12:47.676"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.676" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161118 02:12:47.676" starttime="20161118 02:12:47.676"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.676" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:47.676" starttime="20161118 02:12:47.676"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:47.676" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:47.676" starttime="20161118 02:12:47.676"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.676" level="INFO">Request body set to "{ "Title":"ёъяшертыуиопющэасдфгчйкльжзхцвбнмЁЪЯШЕРТЫУИОПЮЩЭЖЬ"}".</msg>
<status status="PASS" endtime="20161118 02:12:47.676" starttime="20161118 02:12:47.676"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.723" starttime="20161118 02:12:47.676"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.723" starttime="20161118 02:12:47.723"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:47.723" level="INFO">${resBody} = {"TalentpoolId":5830,"Title":"\xd1\x91\xd1\x8a\xd1\x8f\xd1\x88\xd0\xb5\xd1\x80\xd1\x82\xd1\x8b\xd1\x83\xd0\xb8\xd0\xbe\xd0\xbf\xd1\x8e\xd1\x89\xd1\x8d\xd0\xb0\xd1\x81\xd0\xb4\xd1\x84\xd0\xb3\xd1\x87\x...</msg>
<status status="PASS" endtime="20161118 02:12:47.723" starttime="20161118 02:12:47.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.723" level="INFO">{"TalentpoolId":5830,"Title":"\xd1\x91\xd1\x8a\xd1\x8f\xd1\x88\xd0\xb5\xd1\x80\xd1\x82\xd1\x8b\xd1\x83\xd0\xb8\xd0\xbe\xd0\xbf\xd1\x8e\xd1\x89\xd1\x8d\xd0\xb0\xd1\x81\xd0\xb4\xd1\x84\xd0\xb3\xd1\x87\xd0\xb9\xd0\xba\xd0\xbb\xd1\x8c\xd0\xb6\xd0\xb7\xd1\x85\xd1\x86\xd0\xb2\xd0\xb1\xd0\xbd\xd0\xbc\xd0\x81\xd0\xaa\xd0\xaf\xd0\xa8\xd0\x95\xd0\xa0\xd0\xa2\xd0\xab\xd0\xa3\xd0\x98\xd0\x9e\xd0\x9f\xd0\xae\xd0\xa9\xd0\xad\xd0\x96\xd0\xac","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-18T10:12:47.47","ModifierId":1,"ModifiedDate":"2016-11-18T10:12:47.47","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:47.723" starttime="20161118 02:12:47.723"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:47.723" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u0451\u044a\u044f\u0448\u0435\u0440\u0442\u044b\u0443\u0438\u043e\u043f\u044e\u0449\u044d\u0430\u0441\u0434\u0444\u0433\u0447\u0439\u043a\u043b\u044c\u0436\u0437\u044...</msg>
<status status="PASS" endtime="20161118 02:12:47.723" starttime="20161118 02:12:47.723"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:47.723" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u0451\u044a\u044f\u0448\u0435\u0440\u0442\u044b\u0443\u0438\u043e\u043f\u044e\u0449\u044d\u0430\u0441\u0434\u0444\u0433\u0447\u0439\u043a\u043b\u044c\u0436\u0437\u044...</msg>
<status status="PASS" endtime="20161118 02:12:47.723" starttime="20161118 02:12:47.723"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:47.723" level="INFO">${keyValue} = ёъяшертыуиопющэасдфгчйкльжзхцвбнмЁЪЯШЕРТЫУИОПЮЩЭЖЬ</msg>
<status status="PASS" endtime="20161118 02:12:47.723" starttime="20161118 02:12:47.723"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:47.723" starttime="20161118 02:12:47.676"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Foreign_Russian

*Description:*
verify russian alphabet

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:47.723" critical="yes" starttime="20161118 02:12:47.598"></status>
</test>
<test id="s1-s1-s1-t21" name="POST-API_TPC_Foreign_Arabic">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.738" starttime="20161118 02:12:47.738"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:47.738" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161118 02:12:47.738" starttime="20161118 02:12:47.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.754" level="INFO">1338</msg>
<status status="PASS" endtime="20161118 02:12:47.754" starttime="20161118 02:12:47.738"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:47.754" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:47.754" starttime="20161118 02:12:47.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.754" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161118 02:12:47.754" starttime="20161118 02:12:47.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.754" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:47.754" starttime="20161118 02:12:47.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.754" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:47.754" starttime="20161118 02:12:47.754"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:47.754" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:47.754" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:47.754" starttime="20161118 02:12:47.754"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.754" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:47.754" starttime="20161118 02:12:47.754"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.754" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161118 02:12:47.754" starttime="20161118 02:12:47.754"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.754" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:47.754" starttime="20161118 02:12:47.754"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:47.754" starttime="20161118 02:12:47.738"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:47.770" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:47.770" starttime="20161118 02:12:47.754"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:47.770" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:47.770" starttime="20161118 02:12:47.770"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.785" starttime="20161118 02:12:47.770"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.785" starttime="20161118 02:12:47.785"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:47.785" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:47.785" starttime="20161118 02:12:47.785"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.785" starttime="20161118 02:12:47.785"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:47.785" starttime="20161118 02:12:47.754"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>غظضذخثتشرقصفعسنملكيطحزوهدجباشغظذخثتسرقضفعصنملكيطحز</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:47.801" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:47.801" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:47.801" starttime="20161118 02:12:47.801"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.801" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:47.801" starttime="20161118 02:12:47.801"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.801" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161118 02:12:47.801" starttime="20161118 02:12:47.801"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.801" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:47.801" starttime="20161118 02:12:47.801"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:47.801" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:47.801" starttime="20161118 02:12:47.801"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.801" level="INFO">Request body set to "{ "Title":"غظضذخثتشرقصفعسنملكيطحزوهدجباشغظذخثتسرقضفعصنملكيطحز"}".</msg>
<status status="PASS" endtime="20161118 02:12:47.801" starttime="20161118 02:12:47.801"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.863" starttime="20161118 02:12:47.801"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.863" starttime="20161118 02:12:47.863"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:47.879" level="INFO">${resBody} = {"TalentpoolId":5831,"Title":"\xd8\xba\xd8\xb8\xd8\xb6\xd8\xb0\xd8\xae\xd8\xab\xd8\xaa\xd8\xb4\xd8\xb1\xd9\x82\xd8\xb5\xd9\x81\xd8\xb9\xd8\xb3\xd9\x86\xd9\x85\xd9\x84\xd9\x83\xd9\x8a\xd8\xb7\xd8\xad\x...</msg>
<status status="PASS" endtime="20161118 02:12:47.879" starttime="20161118 02:12:47.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.879" level="INFO">{"TalentpoolId":5831,"Title":"\xd8\xba\xd8\xb8\xd8\xb6\xd8\xb0\xd8\xae\xd8\xab\xd8\xaa\xd8\xb4\xd8\xb1\xd9\x82\xd8\xb5\xd9\x81\xd8\xb9\xd8\xb3\xd9\x86\xd9\x85\xd9\x84\xd9\x83\xd9\x8a\xd8\xb7\xd8\xad\xd8\xb2\xd9\x88\xd9\x87\xd8\xaf\xd8\xac\xd8\xa8\xd8\xa7\xd8\xb4\xd8\xba\xd8\xb8\xd8\xb0\xd8\xae\xd8\xab\xd8\xaa\xd8\xb3\xd8\xb1\xd9\x82\xd8\xb6\xd9\x81\xd8\xb9\xd8\xb5\xd9\x86\xd9\x85\xd9\x84\xd9\x83\xd9\x8a\xd8\xb7\xd8\xad\xd8\xb2","Owner":{"UserId":1338,"FirstName":"smaus","LastName":"smaus"},"CreatedDate":"2016-11-18T10:12:47.61","ModifierId":1,"ModifiedDate":"2016-11-18T10:12:47.61","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:47.879" starttime="20161118 02:12:47.879"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:47.879" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u063a\u0638\u0636\u0630\u062e\u062b\u062a\u0634\u0631\u0642\u0635\u0641\u0639\u0633\u0646\u0645\u0644\u0643\u064a\u0637\u062d\u0632\u0648\u0647\u062f\u062c\u0628\u062...</msg>
<status status="PASS" endtime="20161118 02:12:47.879" starttime="20161118 02:12:47.879"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:47.879" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u063a\u0638\u0636\u0630\u062e\u062b\u062a\u0634\u0631\u0642\u0635\u0641\u0639\u0633\u0646\u0645\u0644\u0643\u064a\u0637\u062d\u0632\u0648\u0647\u062f\u062c\u0628\u062...</msg>
<status status="PASS" endtime="20161118 02:12:47.879" starttime="20161118 02:12:47.879"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:47.879" level="INFO">${keyValue} = غظضذخثتشرقصفعسنملكيطحزوهدجباشغظذخثتسرقضفعصنملكيطحز</msg>
<status status="PASS" endtime="20161118 02:12:47.879" starttime="20161118 02:12:47.879"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:47.879" starttime="20161118 02:12:47.801"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Foreign_Arabic

*Description:*
verify arabic alphabet

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:47.879" critical="yes" starttime="20161118 02:12:47.738"></status>
</test>
<test id="s1-s1-s1-t22" name="POST-API_TPC_Access_Does_Not_Exist">
<kw name="REST_NOAUTH_NonExistentUser" library="SMP_Keywords">
<doc>*REST_NOAUTH_NonExistentUser:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.926" starttime="20161118 02:12:47.879"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:47.926" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20161118 02:12:47.926" starttime="20161118 02:12:47.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.926" level="INFO">2347</msg>
<status status="PASS" endtime="20161118 02:12:47.926" starttime="20161118 02:12:47.926"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT 1</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:47.926" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:47.941" starttime="20161118 02:12:47.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.941" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20161118 02:12:47.941" starttime="20161118 02:12:47.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.941" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:47.941" starttime="20161118 02:12:47.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.941" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:47.941" starttime="20161118 02:12:47.941"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:47.941" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:47.941" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:47.941" starttime="20161118 02:12:47.941"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.941" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:47.941" starttime="20161118 02:12:47.941"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.941" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20161118 02:12:47.941" starttime="20161118 02:12:47.941"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.941" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:47.941" starttime="20161118 02:12:47.941"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:47.941" starttime="20161118 02:12:47.879"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:47.941" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:47.941" starttime="20161118 02:12:47.941"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:47.957" level="INFO">Request body set to "{   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_2347",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:47.957" starttime="20161118 02:12:47.941"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.973" starttime="20161118 02:12:47.957"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.973" starttime="20161118 02:12:47.973"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:47.973" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:47.973" starttime="20161118 02:12:47.973"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:47.973" starttime="20161118 02:12:47.973"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:47.973" starttime="20161118 02:12:47.941"></status>
</kw>
<kw name="POST_TalentPool_Create_Empty_String" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>InnocentName</arg>
<arg>Title</arg>
<arg>500</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:47.988" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:47.988" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:47.988" starttime="20161118 02:12:47.988"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.988" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:47.988" starttime="20161118 02:12:47.988"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.988" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20161118 02:12:47.988" starttime="20161118 02:12:47.988"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.988" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:47.988" starttime="20161118 02:12:47.988"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:47.988" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20161118 02:12:47.988" starttime="20161118 02:12:47.988"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161118 02:12:47.988" starttime="20161118 02:12:47.988"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"${KEY_NAME_JSON}\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:47.988" level="INFO">Request body set to "{ "Title":"InnocentName"}".</msg>
<status status="PASS" endtime="20161118 02:12:47.988" starttime="20161118 02:12:47.988"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.035" starttime="20161118 02:12:47.988"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.035" starttime="20161118 02:12:48.035"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:48.035" level="INFO">${resBody} = {"Message":"An error has occurred.","ExceptionMessage":"The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_ou_owner_id_user\". The conflict occurred in database \"ces_qa052-auto-smp-...</msg>
<status status="PASS" endtime="20161118 02:12:48.035" starttime="20161118 02:12:48.035"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20161118 02:12:48.035" level="INFO">Set test message to:
The {"Message":"An error has occurred.","ExceptionMessage":"The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_ou_owner_id_user\". The conflict occurred in database \"ces_qa052-auto-smp-API\", table \"dbo.users\", column 'user_id'.\r\nCannot insert the value NULL into column 'ou_id', table 'ces_qa052-auto-smp-API.dbo.ou_tree'; column does not allow nulls. INSERT fails.\r\nCannot insert the value NULL into column 'child_id', table 'ces_qa052-auto-smp-API.dbo.ou_speed'; column does not allow nulls. INSERT fails.\r\nCannot insert the value NULL into column 'ou_id', table 'ces_qa052-auto-smp-API.dbo.ou_audit'; column does not allow nulls. INSERT fails.\r\nThe statement has been terminated.\r\nThe statement has been terminated.\r\nThe statement has been terminated.\r\nThe statement has been terminated.","ExceptionType":"System.Data.SqlClient.SqlException","StackTrace":"   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean&amp; dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task&amp; task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task&amp; task, Boolean asyncWrite)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext,TResult](TTarget target, Func`3 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)\r\n   at System.Data.Entity.Infrastructure.Interception.DbCommandDispatcher.Reader(DbCommand command, DbCommandInterceptionContext interceptionContext)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryInternal[TElement](String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.&lt;&gt;c__DisplayClass65`1.&lt;ExecuteStoreQueryReliably&gt;b__64()\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteInTransaction[T](Func`1 func, IDbExecutionStrategy executionStrategy, Boolean startLocalTransaction, Boolean releaseConnectionOnSuccess)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.&lt;&gt;c__DisplayClass65`1.&lt;ExecuteStoreQueryReliably&gt;b__63()\r\n   at System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute[TResult](Func`1 operation)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryReliably[TElement](String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQuery[TElement](String commandText, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Internal.InternalContext.&lt;&gt;c__DisplayClass14`1.&lt;ExecuteSqlQuery&gt;b__13()\r\n   at System.Data.Entity.Internal.LazyEnumerator`1.MoveNext()\r\n   at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source)\r\n   at Cornerstone.Smp.TalentPool.Data.TalentPoolRepository.AddTalentPool(OuEntity entity) in C:\\TeamCity\\buildAgent\\work\\ad1d4b4f19fc2a49\\src\\TalentPool.Data\\TalentPoolRepository.cs:line 80\r\n   at Cornerstone.Smp.TalentPool.Core.Services.TalentPoolService.CreateTalentPool(TalentPoolRequestModel model) in C:\\TeamCity\\buildAgent\\work\\ad1d4b4f19fc2a49\\src\\TalentPool.Core\\Services\\Impl\\TalentPoolService.cs:line 141\r\n   at Cornerstone.Smp.TalentPool.Api.TalentPoolController.CreateTalentPool(TalentPoolRequestModel request) in C:\\TeamCity\\buildAgent\\work\\ad1d4b4f19fc2a49\\src\\TalentPool.Api\\Controllers\\TalentPoolController.cs:line 73\r\n   at lambda_method(Closure , Object , Object[] )\r\n   at System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.&lt;&gt;c__DisplayClass10.&lt;GetExecutor&gt;b__9(Object instance, Object[] methodParameters)\r\n   at System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(HttpControllerContext controllerContext, IDictionary`2 arguments, CancellationToken cancellationToken)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Controllers.ApiControllerActionInvoker.&lt;InvokeActionAsyncCore&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Controllers.ActionFilterResult.&lt;ExecuteAsync&gt;d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Filters.AuthorizationFilterAttribute.&lt;ExecuteAuthorizationFilterAsyncCore&gt;d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Controllers.ExceptionFilterResult.&lt;ExecuteAsync&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Web.Http.Controllers.ExceptionFilterResult.&lt;ExecuteAsync&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Dispatcher.HttpControllerDispatcher.&lt;SendAsync&gt;d__1.MoveNext()"} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20161118 02:12:48.035" starttime="20161118 02:12:48.035"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:48.035" starttime="20161118 02:12:47.988"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Access_DNE

*Description:*
verify failure when user does not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:48.035" critical="yes" starttime="20161118 02:12:47.879">The {"Message":"An error has occurred.","ExceptionMessage":"The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_ou_owner_id_user\". The conflict occurred in database \"ces_qa052-auto-smp-API\", table \"dbo.users\", column 'user_id'.\r\nCannot insert the value NULL into column 'ou_id', table 'ces_qa052-auto-smp-API.dbo.ou_tree'; column does not allow nulls. INSERT fails.\r\nCannot insert the value NULL into column 'child_id', table 'ces_qa052-auto-smp-API.dbo.ou_speed'; column does not allow nulls. INSERT fails.\r\nCannot insert the value NULL into column 'ou_id', table 'ces_qa052-auto-smp-API.dbo.ou_audit'; column does not allow nulls. INSERT fails.\r\nThe statement has been terminated.\r\nThe statement has been terminated.\r\nThe statement has been terminated.\r\nThe statement has been terminated.","ExceptionType":"System.Data.SqlClient.SqlException","StackTrace":"   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean&amp; dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task&amp; task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task&amp; task, Boolean asyncWrite)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext,TResult](TTarget target, Func`3 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)\r\n   at System.Data.Entity.Infrastructure.Interception.DbCommandDispatcher.Reader(DbCommand command, DbCommandInterceptionContext interceptionContext)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryInternal[TElement](String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.&lt;&gt;c__DisplayClass65`1.&lt;ExecuteStoreQueryReliably&gt;b__64()\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteInTransaction[T](Func`1 func, IDbExecutionStrategy executionStrategy, Boolean startLocalTransaction, Boolean releaseConnectionOnSuccess)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.&lt;&gt;c__DisplayClass65`1.&lt;ExecuteStoreQueryReliably&gt;b__63()\r\n   at System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute[TResult](Func`1 operation)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryReliably[TElement](String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQuery[TElement](String commandText, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Internal.InternalContext.&lt;&gt;c__DisplayClass14`1.&lt;ExecuteSqlQuery&gt;b__13()\r\n   at System.Data.Entity.Internal.LazyEnumerator`1.MoveNext()\r\n   at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source)\r\n   at Cornerstone.Smp.TalentPool.Data.TalentPoolRepository.AddTalentPool(OuEntity entity) in C:\\TeamCity\\buildAgent\\work\\ad1d4b4f19fc2a49\\src\\TalentPool.Data\\TalentPoolRepository.cs:line 80\r\n   at Cornerstone.Smp.TalentPool.Core.Services.TalentPoolService.CreateTalentPool(TalentPoolRequestModel model) in C:\\TeamCity\\buildAgent\\work\\ad1d4b4f19fc2a49\\src\\TalentPool.Core\\Services\\Impl\\TalentPoolService.cs:line 141\r\n   at Cornerstone.Smp.TalentPool.Api.TalentPoolController.CreateTalentPool(TalentPoolRequestModel request) in C:\\TeamCity\\buildAgent\\work\\ad1d4b4f19fc2a49\\src\\TalentPool.Api\\Controllers\\TalentPoolController.cs:line 73\r\n   at lambda_method(Closure , Object , Object[] )\r\n   at System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.&lt;&gt;c__DisplayClass10.&lt;GetExecutor&gt;b__9(Object instance, Object[] methodParameters)\r\n   at System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(HttpControllerContext controllerContext, IDictionary`2 arguments, CancellationToken cancellationToken)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Controllers.ApiControllerActionInvoker.&lt;InvokeActionAsyncCore&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Controllers.ActionFilterResult.&lt;ExecuteAsync&gt;d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Filters.AuthorizationFilterAttribute.&lt;ExecuteAuthorizationFilterAsyncCore&gt;d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Controllers.ExceptionFilterResult.&lt;ExecuteAsync&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Web.Http.Controllers.ExceptionFilterResult.&lt;ExecuteAsync&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Dispatcher.HttpControllerDispatcher.&lt;SendAsync&gt;d__1.MoveNext()"} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-s1-t23" name="GET-API_TPC_GET_Return_ID_Expected">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.066" starttime="20161118 02:12:48.035"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:48.098" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161118 02:12:48.098" starttime="20161118 02:12:48.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.098" level="INFO">514</msg>
<status status="PASS" endtime="20161118 02:12:48.098" starttime="20161118 02:12:48.098"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:48.113" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:48.113" starttime="20161118 02:12:48.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.113" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161118 02:12:48.113" starttime="20161118 02:12:48.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.113" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:48.113" starttime="20161118 02:12:48.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.113" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:48.113" starttime="20161118 02:12:48.113"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:48.113" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:48.113" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:48.113" starttime="20161118 02:12:48.113"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.113" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:48.113" starttime="20161118 02:12:48.113"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.113" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161118 02:12:48.113" starttime="20161118 02:12:48.113"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.113" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:48.113" starttime="20161118 02:12:48.113"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:48.113" starttime="20161118 02:12:48.035"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:48.129" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:48.129" starttime="20161118 02:12:48.129"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:48.129" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:48.129" starttime="20161118 02:12:48.129"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.145" starttime="20161118 02:12:48.129"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.145" starttime="20161118 02:12:48.145"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:48.145" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:48.145" starttime="20161118 02:12:48.145"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.145" starttime="20161118 02:12:48.145"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:48.145" starttime="20161118 02:12:48.129"></status>
</kw>
<kw name="GET_TalentPool" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>TalentpoolId</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.191" starttime="20161118 02:12:48.160"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161118 02:12:48.191" level="INFO">${SQL_TalentPoolIdToGet} = 2153</msg>
<status status="PASS" endtime="20161118 02:12:48.191" starttime="20161118 02:12:48.191"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:48.191" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:48.191" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:48.191" starttime="20161118 02:12:48.191"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.191" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:48.191" starttime="20161118 02:12:48.191"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.191" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161118 02:12:48.207" starttime="20161118 02:12:48.191"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.207" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:48.207" starttime="20161118 02:12:48.207"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:48.207" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:48.207" starttime="20161118 02:12:48.207"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.238" starttime="20161118 02:12:48.207"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.238" starttime="20161118 02:12:48.238"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:48.238" level="INFO">${resBody} = {"TalentpoolId":2153,"Title":"\xd1\x91\xd1\x8a\xd1\x8f\xd1\x88\xd0\xb5\xd1\x80\xd1\x82\xd1\x8b\xd1\x83\xd0\xb8\xd0\xbe\xd0\xbf\xd1\x8e\xd1\x89\xd1\x8d\xd0\xb0\xd1\x81\xd0\xb4\xd1\x84\xd0\xb3\xd1\x87\x...</msg>
<status status="PASS" endtime="20161118 02:12:48.238" starttime="20161118 02:12:48.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.238" level="INFO">{"TalentpoolId":2153,"Title":"\xd1\x91\xd1\x8a\xd1\x8f\xd1\x88\xd0\xb5\xd1\x80\xd1\x82\xd1\x8b\xd1\x83\xd0\xb8\xd0\xbe\xd0\xbf\xd1\x8e\xd1\x89\xd1\x8d\xd0\xb0\xd1\x81\xd0\xb4\xd1\x84\xd0\xb3\xd1\x87\xd0\xb9\xd0\xba\xd0\xbb\xd1\x8c\xd0\xb6\xd0\xb7\xd1\x85\xd1\x86\xd0\xb2\xd0\xb1\xd0\xbd\xd0\xbc\xd0\x81\xd0\xaa\xd0\xaf\xd0\xa8\xd0\x95\xd0\xa0\xd0\xa2\xd0\xab\xd0\xa3\xd0\x98\xd0\x9e\xd0\x9f\xd0\xae\xd0\xa9\xd0\xad\xd0\x96\xd0\xac","Owner":{"UserId":514,"FirstName":"Juan","LastName":"Valle"},"CreatedDate":"2016-07-11T16:51:34.84","ModifierId":1,"ModifiedDate":"2016-07-11T16:51:34.84","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:48.238" starttime="20161118 02:12:48.238"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:48.238" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u0451\u044a\u044f\u0448\u0435\u0440\u0442\u044b\u0443\u0438\u043e\u043f\u044e\u0449\u044d\u0430\u0441\u0434\u0444\u0433\u0447\u0439\u043a\u043b\u044c\u0436\u0437\u044...</msg>
<status status="PASS" endtime="20161118 02:12:48.238" starttime="20161118 02:12:48.238"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:48.238" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u0451\u044a\u044f\u0448\u0435\u0440\u0442\u044b\u0443\u0438\u043e\u043f\u044e\u0449\u044d\u0430\u0441\u0434\u0444\u0433\u0447\u0439\u043a\u043b\u044c\u0436\u0437\u044...</msg>
<status status="PASS" endtime="20161118 02:12:48.238" starttime="20161118 02:12:48.238"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:48.238" level="INFO">${keyValue} = 2153</msg>
<status status="PASS" endtime="20161118 02:12:48.238" starttime="20161118 02:12:48.238"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:48.238" starttime="20161118 02:12:48.145"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_ID_Expected

*Description:*
verify the id passed is matching the id returned

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:48.238" critical="yes" starttime="20161118 02:12:48.035"></status>
</test>
<test id="s1-s1-s1-t24" name="GET-API_TPC_GET_Return_Title_Happy">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.270" starttime="20161118 02:12:48.254"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:48.270" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161118 02:12:48.270" starttime="20161118 02:12:48.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.270" level="INFO">514</msg>
<status status="PASS" endtime="20161118 02:12:48.285" starttime="20161118 02:12:48.270"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:48.285" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:48.285" starttime="20161118 02:12:48.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.285" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161118 02:12:48.285" starttime="20161118 02:12:48.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.285" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:48.285" starttime="20161118 02:12:48.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.285" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:48.285" starttime="20161118 02:12:48.285"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:48.285" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:48.285" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:48.285" starttime="20161118 02:12:48.285"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.285" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:48.285" starttime="20161118 02:12:48.285"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.285" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161118 02:12:48.285" starttime="20161118 02:12:48.285"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.285" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:48.285" starttime="20161118 02:12:48.285"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:48.285" starttime="20161118 02:12:48.254"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:48.301" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:48.301" starttime="20161118 02:12:48.285"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:48.301" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:48.301" starttime="20161118 02:12:48.301"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.316" starttime="20161118 02:12:48.301"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.316" starttime="20161118 02:12:48.316"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:48.316" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:48.316" starttime="20161118 02:12:48.316"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.316" starttime="20161118 02:12:48.316"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:48.316" starttime="20161118 02:12:48.285"></status>
</kw>
<kw name="GET_TalentPool_Title_Happy" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.348" starttime="20161118 02:12:48.332"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%InnocentName%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161118 02:12:48.363" level="INFO">${SQL_TalentPoolIdToGet} = 4484</msg>
<status status="PASS" endtime="20161118 02:12:48.363" starttime="20161118 02:12:48.348"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:48.363" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:48.363" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:48.363" starttime="20161118 02:12:48.363"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.363" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:48.363" starttime="20161118 02:12:48.363"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.363" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161118 02:12:48.363" starttime="20161118 02:12:48.363"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.363" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:48.363" starttime="20161118 02:12:48.363"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:48.363" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:48.363" starttime="20161118 02:12:48.363"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.395" starttime="20161118 02:12:48.363"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.395" starttime="20161118 02:12:48.395"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:48.395" level="INFO">${resBody} = {"TalentpoolId":4484,"Title":"InnocentName","Owner":{"UserId":514,"FirstName":"Juan","LastName":"Valle"},"CreatedDate":"2016-10-21T12:43:25.92","ModifierId":1,"ModifiedDate":"2016-10-21T12:43:25.92","...</msg>
<status status="PASS" endtime="20161118 02:12:48.395" starttime="20161118 02:12:48.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.395" level="INFO">{"TalentpoolId":4484,"Title":"InnocentName","Owner":{"UserId":514,"FirstName":"Juan","LastName":"Valle"},"CreatedDate":"2016-10-21T12:43:25.92","ModifierId":1,"ModifiedDate":"2016-10-21T12:43:25.92","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:48.395" starttime="20161118 02:12:48.395"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:48.395" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'InnocentName', u'TalentpoolId': 4484, u'ModifiedDate': u'2016-10-21T12:43:25.92', u'CreatedDate': u'2016-10-21T12:43:25.92', u'Owner': {u'LastName': u'Valle', u'UserId...</msg>
<status status="PASS" endtime="20161118 02:12:48.395" starttime="20161118 02:12:48.395"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:48.410" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'InnocentName', u'CreatedDate': u'2016-10-21T12:43:25.92', u'ModifiedDate': u'2016-10-21T12:43:25.92', u'TalentpoolId': 4484, u'Owner': {u'LastName': u'Valle', u'UserId...</msg>
<status status="PASS" endtime="20161118 02:12:48.410" starttime="20161118 02:12:48.395"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:48.410" level="INFO">${keyValue} = InnocentName</msg>
<status status="PASS" endtime="20161118 02:12:48.410" starttime="20161118 02:12:48.410"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:48.410" starttime="20161118 02:12:48.332"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Happy

*Description:*
verify a random name matches

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:48.410" critical="yes" starttime="20161118 02:12:48.238"></status>
</test>
<test id="s1-s1-s1-t25" name="GET-API_TPC_GET_Return_Title_Length_1">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.426" starttime="20161118 02:12:48.410"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:48.441" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:48.441" starttime="20161118 02:12:48.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.441" level="INFO">1336</msg>
<status status="PASS" endtime="20161118 02:12:48.441" starttime="20161118 02:12:48.441"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:48.441" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:48.441" starttime="20161118 02:12:48.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.441" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:48.441" starttime="20161118 02:12:48.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.441" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:48.441" starttime="20161118 02:12:48.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.441" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:48.441" starttime="20161118 02:12:48.441"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:48.441" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:48.441" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:48.441" starttime="20161118 02:12:48.441"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.441" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:48.441" starttime="20161118 02:12:48.441"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.457" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:48.457" starttime="20161118 02:12:48.441"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.457" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:48.457" starttime="20161118 02:12:48.457"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:48.457" starttime="20161118 02:12:48.410"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:48.457" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:48.457" starttime="20161118 02:12:48.457"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:48.457" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:48.457" starttime="20161118 02:12:48.457"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.473" starttime="20161118 02:12:48.457"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.473" starttime="20161118 02:12:48.473"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:48.473" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:48.473" starttime="20161118 02:12:48.473"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.473" starttime="20161118 02:12:48.473"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:48.488" starttime="20161118 02:12:48.457"></status>
</kw>
<kw name="GET_TalentPool_Title_Length_1" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.504" starttime="20161118 02:12:48.488"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND LEN(title)=1 ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161118 02:12:48.520" level="INFO">${SQL_TalentPoolIdToGet} = 3125</msg>
<status status="PASS" endtime="20161118 02:12:48.520" starttime="20161118 02:12:48.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.520" level="INFO">${SQL_TalentPoolIdToGet} = 3125</msg>
<status status="PASS" endtime="20161118 02:12:48.520" starttime="20161118 02:12:48.520"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161118 02:12:48.520" level="INFO">${SQL_TalentPoolTitleById} = 1</msg>
<status status="PASS" endtime="20161118 02:12:48.520" starttime="20161118 02:12:48.520"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:48.520" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:48.520" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:48.520" starttime="20161118 02:12:48.520"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.520" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:48.520" starttime="20161118 02:12:48.520"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.520" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:48.520" starttime="20161118 02:12:48.520"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.520" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:48.520" starttime="20161118 02:12:48.520"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:48.520" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:48.520" starttime="20161118 02:12:48.520"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.551" starttime="20161118 02:12:48.520"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.551" starttime="20161118 02:12:48.551"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:48.551" level="INFO">${resBody} = {"TalentpoolId":3125,"Title":"1","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-10-10T12:48:10.873","ModifierId":1,"Modified...</msg>
<status status="PASS" endtime="20161118 02:12:48.551" starttime="20161118 02:12:48.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.551" level="INFO">{"TalentpoolId":3125,"Title":"1","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-10-10T12:48:10.873","ModifierId":1,"ModifiedDate":"2016-10-10T12:48:10.873","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:48.551" starttime="20161118 02:12:48.551"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:48.551" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'1', u'TalentpoolId': 3125, u'ModifiedDate': u'2016-10-10T12:48:10.873', u'CreatedDate': u'2016-10-10T12:48:10.873', u'Owner': {u'LastName': u'TalentPoolAutomationUser1...</msg>
<status status="PASS" endtime="20161118 02:12:48.551" starttime="20161118 02:12:48.551"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:48.551" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'1', u'CreatedDate': u'2016-10-10T12:48:10.873', u'ModifiedDate': u'2016-10-10T12:48:10.873', u'TalentpoolId': 3125, u'Owner': {u'LastName': u'TalentPoolAutomationUser1...</msg>
<status status="PASS" endtime="20161118 02:12:48.551" starttime="20161118 02:12:48.551"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:48.566" level="INFO">${keyValue} = 1</msg>
<status status="PASS" endtime="20161118 02:12:48.566" starttime="20161118 02:12:48.551"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:48.566" starttime="20161118 02:12:48.488"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Length_1

*Description:*
verify success when title length is 1

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:48.566" critical="yes" starttime="20161118 02:12:48.410"></status>
</test>
<test id="s1-s1-s1-t26" name="GET-API_TPC_GET_Return_Title_Length_50">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.582" starttime="20161118 02:12:48.566"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:48.598" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:48.598" starttime="20161118 02:12:48.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.598" level="INFO">1336</msg>
<status status="PASS" endtime="20161118 02:12:48.598" starttime="20161118 02:12:48.598"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:48.598" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:48.598" starttime="20161118 02:12:48.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.598" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:48.598" starttime="20161118 02:12:48.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.598" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:48.598" starttime="20161118 02:12:48.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.598" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:48.598" starttime="20161118 02:12:48.598"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:48.598" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:48.598" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:48.598" starttime="20161118 02:12:48.598"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.598" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:48.598" starttime="20161118 02:12:48.598"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.598" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:48.613" starttime="20161118 02:12:48.598"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.613" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:48.613" starttime="20161118 02:12:48.613"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:48.613" starttime="20161118 02:12:48.566"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:48.613" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:48.613" starttime="20161118 02:12:48.613"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:48.613" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:48.613" starttime="20161118 02:12:48.613"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.629" starttime="20161118 02:12:48.613"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.629" starttime="20161118 02:12:48.629"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:48.629" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:48.629" starttime="20161118 02:12:48.629"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.629" starttime="20161118 02:12:48.629"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:48.629" starttime="20161118 02:12:48.613"></status>
</kw>
<kw name="GET_TalentPool_Title_Length_50" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.660" starttime="20161118 02:12:48.645"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND LEN(title)=50 ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161118 02:12:48.676" level="INFO">${SQL_TalentPoolIdToGet} = 5114</msg>
<status status="PASS" endtime="20161118 02:12:48.676" starttime="20161118 02:12:48.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.676" level="INFO">${SQL_TalentPoolIdToGet} = 5114</msg>
<status status="PASS" endtime="20161118 02:12:48.676" starttime="20161118 02:12:48.676"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161118 02:12:48.676" level="INFO">${SQL_TalentPoolTitleById} = 12345678901234567890123456789012345678901234567890</msg>
<status status="PASS" endtime="20161118 02:12:48.676" starttime="20161118 02:12:48.676"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:48.676" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:48.676" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:48.676" starttime="20161118 02:12:48.676"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.691" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:48.691" starttime="20161118 02:12:48.676"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.691" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:48.691" starttime="20161118 02:12:48.691"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.691" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:48.691" starttime="20161118 02:12:48.691"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:48.691" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:48.691" starttime="20161118 02:12:48.691"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.723" starttime="20161118 02:12:48.691"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.723" starttime="20161118 02:12:48.723"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:48.723" level="INFO">${resBody} = {"TalentpoolId":5114,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"...</msg>
<status status="PASS" endtime="20161118 02:12:48.723" starttime="20161118 02:12:48.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.723" level="INFO">{"TalentpoolId":5114,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-10-31T18:33:22.717","ModifierId":1,"ModifiedDate":"2016-10-31T18:33:22.717","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:48.723" starttime="20161118 02:12:48.723"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:48.723" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'TalentpoolId': 5114, u'ModifiedDate': u'2016-10-31T18:33:22.717', u'CreatedDate': u'2016-10-31T18:33:22.717', u'...</msg>
<status status="PASS" endtime="20161118 02:12:48.723" starttime="20161118 02:12:48.723"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:48.723" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'CreatedDate': u'2016-10-31T18:33:22.717', u'ModifiedDate': u'2016-10-31T18:33:22.717', u'TalentpoolId': 5114, u'...</msg>
<status status="PASS" endtime="20161118 02:12:48.723" starttime="20161118 02:12:48.723"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:48.723" level="INFO">${keyValue} = 12345678901234567890123456789012345678901234567890</msg>
<status status="PASS" endtime="20161118 02:12:48.723" starttime="20161118 02:12:48.723"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:48.723" starttime="20161118 02:12:48.645"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Length_50

*Description:*
verify success when title length is 50

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:48.723" critical="yes" starttime="20161118 02:12:48.566"></status>
</test>
<test id="s1-s1-s1-t27" name="GET-API_TPC_GET_Return_Title_SQL">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.738" starttime="20161118 02:12:48.738"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:48.754" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:48.754" starttime="20161118 02:12:48.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.754" level="INFO">1336</msg>
<status status="PASS" endtime="20161118 02:12:48.754" starttime="20161118 02:12:48.754"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:48.754" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:48.754" starttime="20161118 02:12:48.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.754" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:48.754" starttime="20161118 02:12:48.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.754" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:48.754" starttime="20161118 02:12:48.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.754" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:48.754" starttime="20161118 02:12:48.754"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:48.754" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:48.754" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:48.754" starttime="20161118 02:12:48.754"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.754" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:48.754" starttime="20161118 02:12:48.754"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.770" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:48.770" starttime="20161118 02:12:48.770"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.770" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:48.770" starttime="20161118 02:12:48.770"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:48.770" starttime="20161118 02:12:48.723"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:48.770" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:48.770" starttime="20161118 02:12:48.770"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:48.770" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:48.770" starttime="20161118 02:12:48.770"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.785" starttime="20161118 02:12:48.770"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.785" starttime="20161118 02:12:48.785"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:48.801" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:48.801" starttime="20161118 02:12:48.801"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.801" starttime="20161118 02:12:48.801"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:48.801" starttime="20161118 02:12:48.770"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Securit_SQL" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.816" starttime="20161118 02:12:48.801"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%SELECT * FROM Users%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161118 02:12:48.832" level="INFO">${SQL_TalentPoolIdToGet} = 838</msg>
<status status="PASS" endtime="20161118 02:12:48.832" starttime="20161118 02:12:48.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.832" level="INFO">${SQL_TalentPoolIdToGet} = 838</msg>
<status status="PASS" endtime="20161118 02:12:48.832" starttime="20161118 02:12:48.832"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161118 02:12:48.848" level="INFO">${SQL_TalentPoolTitleById} = SELECT * FROM Users</msg>
<status status="PASS" endtime="20161118 02:12:48.848" starttime="20161118 02:12:48.832"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:48.848" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:48.848" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:48.848" starttime="20161118 02:12:48.848"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.848" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:48.848" starttime="20161118 02:12:48.848"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.848" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:48.848" starttime="20161118 02:12:48.848"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.848" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:48.848" starttime="20161118 02:12:48.848"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:48.848" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:48.848" starttime="20161118 02:12:48.848"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.879" starttime="20161118 02:12:48.848"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.879" starttime="20161118 02:12:48.879"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:48.879" level="INFO">${resBody} = {"TalentpoolId":838,"Title":"SELECT * FROM Users","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-03-08T02:02:20.287","Modifi...</msg>
<status status="PASS" endtime="20161118 02:12:48.879" starttime="20161118 02:12:48.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.879" level="INFO">{"TalentpoolId":838,"Title":"SELECT * FROM Users","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-03-08T02:02:20.287","ModifierId":1,"ModifiedDate":"2016-03-08T02:02:20.287","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:48.879" starttime="20161118 02:12:48.879"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:48.895" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'SELECT * FROM Users', u'TalentpoolId': 838, u'ModifiedDate': u'2016-03-08T02:02:20.287', u'CreatedDate': u'2016-03-08T02:02:20.287', u'Owner': {u'LastName': u'TalentPo...</msg>
<status status="PASS" endtime="20161118 02:12:48.895" starttime="20161118 02:12:48.895"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:48.895" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'SELECT * FROM Users', u'CreatedDate': u'2016-03-08T02:02:20.287', u'ModifiedDate': u'2016-03-08T02:02:20.287', u'TalentpoolId': 838, u'Owner': {u'LastName': u'TalentPo...</msg>
<status status="PASS" endtime="20161118 02:12:48.895" starttime="20161118 02:12:48.895"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:48.895" level="INFO">${keyValue} = SELECT * FROM Users</msg>
<status status="PASS" endtime="20161118 02:12:48.895" starttime="20161118 02:12:48.895"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:48.895" starttime="20161118 02:12:48.801"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_SQL

*Description:*
verify sql injection fails

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:48.895" critical="yes" starttime="20161118 02:12:48.723"></status>
</test>
<test id="s1-s1-s1-t28" name="GET-API_TPC_GET_Return_Title_Security_Script">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.910" starttime="20161118 02:12:48.895"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:48.910" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:48.926" starttime="20161118 02:12:48.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.926" level="INFO">1336</msg>
<status status="PASS" endtime="20161118 02:12:48.926" starttime="20161118 02:12:48.926"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:48.926" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:48.926" starttime="20161118 02:12:48.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.926" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:48.926" starttime="20161118 02:12:48.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.926" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:48.926" starttime="20161118 02:12:48.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.926" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:48.926" starttime="20161118 02:12:48.926"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:48.926" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:48.926" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:48.926" starttime="20161118 02:12:48.926"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.926" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:48.926" starttime="20161118 02:12:48.926"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.926" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:48.926" starttime="20161118 02:12:48.926"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:48.926" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:48.926" starttime="20161118 02:12:48.926"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:48.926" starttime="20161118 02:12:48.895"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:48.941" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:48.941" starttime="20161118 02:12:48.926"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:48.941" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:48.941" starttime="20161118 02:12:48.941"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.957" starttime="20161118 02:12:48.941"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.957" starttime="20161118 02:12:48.957"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:48.957" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:48.957" starttime="20161118 02:12:48.957"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.957" starttime="20161118 02:12:48.957"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:48.957" starttime="20161118 02:12:48.926"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Securit_Script" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:48.988" starttime="20161118 02:12:48.957"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%＜script＞alert(123)＜/script＞%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161118 02:12:49.004" level="INFO">${SQL_TalentPoolIdToGet} = 5359</msg>
<status status="PASS" endtime="20161118 02:12:49.004" starttime="20161118 02:12:48.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.004" level="INFO">${SQL_TalentPoolIdToGet} = 5359</msg>
<status status="PASS" endtime="20161118 02:12:49.004" starttime="20161118 02:12:49.004"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161118 02:12:49.020" level="INFO">${SQL_TalentPoolTitleById} = &lt;script&gt;alert(123)&lt;/script&gt;</msg>
<status status="PASS" endtime="20161118 02:12:49.020" starttime="20161118 02:12:49.004"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:49.020" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:49.020" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:49.020" starttime="20161118 02:12:49.020"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.020" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:49.020" starttime="20161118 02:12:49.020"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.020" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:49.020" starttime="20161118 02:12:49.020"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.020" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:49.020" starttime="20161118 02:12:49.020"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:49.020" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:49.020" starttime="20161118 02:12:49.020"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.051" starttime="20161118 02:12:49.020"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.051" starttime="20161118 02:12:49.051"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:49.051" level="INFO">${resBody} = {"TalentpoolId":5359,"Title":"&lt;script&gt;alert(123)&lt;/script&gt;","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-04T21:03:42.527...</msg>
<status status="PASS" endtime="20161118 02:12:49.051" starttime="20161118 02:12:49.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.051" level="INFO">{"TalentpoolId":5359,"Title":"&lt;script&gt;alert(123)&lt;/script&gt;","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-04T21:03:42.527","ModifierId":1,"ModifiedDate":"2016-11-04T21:03:42.527","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:49.051" starttime="20161118 02:12:49.051"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:49.066" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;script&gt;alert(123)&lt;/script&gt;', u'TalentpoolId': 5359, u'ModifiedDate': u'2016-11-04T21:03:42.527', u'CreatedDate': u'2016-11-04T21:03:42.527', u'Owner': {u'LastName': u...</msg>
<status status="PASS" endtime="20161118 02:12:49.066" starttime="20161118 02:12:49.051"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:49.066" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;script&gt;alert(123)&lt;/script&gt;', u'CreatedDate': u'2016-11-04T21:03:42.527', u'ModifiedDate': u'2016-11-04T21:03:42.527', u'TalentpoolId': 5359, u'Owner': {u'LastName': u...</msg>
<status status="PASS" endtime="20161118 02:12:49.066" starttime="20161118 02:12:49.066"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:49.066" level="INFO">${keyValue} = &lt;script&gt;alert(123)&lt;/script&gt;</msg>
<status status="PASS" endtime="20161118 02:12:49.066" starttime="20161118 02:12:49.066"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:49.066" starttime="20161118 02:12:48.957"></status>
</kw>
<doc>*Name:*
TP_Get_Ret_Title_sec_script

*Description:*
verify script injection is allowed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:49.066" critical="yes" starttime="20161118 02:12:48.895"></status>
</test>
<test id="s1-s1-s1-t29" name="GET-API_TPC_GET_Return_Title_Extended1">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.098" starttime="20161118 02:12:49.066"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:49.098" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:49.098" starttime="20161118 02:12:49.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.098" level="INFO">1336</msg>
<status status="PASS" endtime="20161118 02:12:49.098" starttime="20161118 02:12:49.098"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:49.098" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:49.098" starttime="20161118 02:12:49.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.113" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:49.113" starttime="20161118 02:12:49.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.113" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:49.113" starttime="20161118 02:12:49.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.113" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:49.113" starttime="20161118 02:12:49.113"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:49.113" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:49.113" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:49.113" starttime="20161118 02:12:49.113"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.113" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:49.113" starttime="20161118 02:12:49.113"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.113" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:49.113" starttime="20161118 02:12:49.113"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.113" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:49.113" starttime="20161118 02:12:49.113"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:49.129" starttime="20161118 02:12:49.066"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:49.129" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:49.129" starttime="20161118 02:12:49.129"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:49.129" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:49.129" starttime="20161118 02:12:49.129"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.145" starttime="20161118 02:12:49.129"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.160" starttime="20161118 02:12:49.160"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:49.160" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:49.160" starttime="20161118 02:12:49.160"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.160" starttime="20161118 02:12:49.160"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:49.160" starttime="20161118 02:12:49.129"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended1" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.191" starttime="20161118 02:12:49.160"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%☺%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161118 02:12:49.207" level="INFO">${SQL_TalentPoolIdToGet} = 776</msg>
<status status="PASS" endtime="20161118 02:12:49.207" starttime="20161118 02:12:49.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.207" level="INFO">${SQL_TalentPoolIdToGet} = 776</msg>
<status status="PASS" endtime="20161118 02:12:49.207" starttime="20161118 02:12:49.207"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161118 02:12:49.223" level="INFO">${SQL_TalentPoolTitleById} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20161118 02:12:49.223" starttime="20161118 02:12:49.207"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:49.223" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:49.223" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:49.223" starttime="20161118 02:12:49.223"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.223" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:49.223" starttime="20161118 02:12:49.223"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.223" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:49.223" starttime="20161118 02:12:49.223"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.223" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:49.223" starttime="20161118 02:12:49.223"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:49.238" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:49.238" starttime="20161118 02:12:49.238"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.254" starttime="20161118 02:12:49.238"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.270" starttime="20161118 02:12:49.254"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:49.270" level="INFO">${resBody} = {"TalentpoolId":776,"Title":"&lt;=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb...</msg>
<status status="PASS" endtime="20161118 02:12:49.270" starttime="20161118 02:12:49.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.270" level="INFO">{"TalentpoolId":776,"Title":"&lt;=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb6\xc3\xb2\xc3\xbb\xc3\xb9\xc3\xbf\xc2\xa2\xc2\xa3\xc2\xa5\xe2\x82\xa7\xc6\x92\xc3\xa1\xc3\xad\xc3\xb3\xc3\xba\xc3\xb1\xc3\x91\xc2\xaa","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-03-04T01:07:09.773","ModifierId":1,"ModifiedDate":"2016-03-04T01:07:09.773","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:49.270" starttime="20161118 02:12:49.270"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:49.270" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'...</msg>
<status status="PASS" endtime="20161118 02:12:49.270" starttime="20161118 02:12:49.270"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:49.270" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'...</msg>
<status status="PASS" endtime="20161118 02:12:49.270" starttime="20161118 02:12:49.270"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:49.270" level="INFO">${keyValue} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20161118 02:12:49.270" starttime="20161118 02:12:49.270"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:49.270" starttime="20161118 02:12:49.160"></status>
</kw>
<doc>*Name:*
API_TPC_Extended1

*Description:*
verify ASCII characters 1

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:49.270" critical="yes" starttime="20161118 02:12:49.066"></status>
</test>
<test id="s1-s1-s1-t30" name="GET-API_TPC_GET_Return_Title_Extended2">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.301" starttime="20161118 02:12:49.270"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:49.301" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:49.301" starttime="20161118 02:12:49.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.301" level="INFO">1336</msg>
<status status="PASS" endtime="20161118 02:12:49.301" starttime="20161118 02:12:49.301"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:49.301" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:49.301" starttime="20161118 02:12:49.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.301" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:49.301" starttime="20161118 02:12:49.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.301" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:49.301" starttime="20161118 02:12:49.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.301" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:49.301" starttime="20161118 02:12:49.301"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:49.316" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:49.316" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:49.316" starttime="20161118 02:12:49.316"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.316" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:49.316" starttime="20161118 02:12:49.316"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.316" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:49.316" starttime="20161118 02:12:49.316"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.316" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:49.316" starttime="20161118 02:12:49.316"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:49.316" starttime="20161118 02:12:49.270"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:49.316" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:49.316" starttime="20161118 02:12:49.316"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:49.316" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:49.316" starttime="20161118 02:12:49.316"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.348" starttime="20161118 02:12:49.316"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.348" starttime="20161118 02:12:49.348"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:49.348" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:49.348" starttime="20161118 02:12:49.348"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.348" starttime="20161118 02:12:49.348"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:49.348" starttime="20161118 02:12:49.316"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended2" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.363" starttime="20161118 02:12:49.348"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%=%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161118 02:12:49.379" level="INFO">${SQL_TalentPoolIdToGet} = 2494</msg>
<status status="PASS" endtime="20161118 02:12:49.379" starttime="20161118 02:12:49.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.395" level="INFO">${SQL_TalentPoolIdToGet} = 2494</msg>
<status status="PASS" endtime="20161118 02:12:49.395" starttime="20161118 02:12:49.395"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161118 02:12:49.395" level="INFO">${SQL_TalentPoolTitleById} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20161118 02:12:49.395" starttime="20161118 02:12:49.395"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:49.395" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:49.395" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:49.395" starttime="20161118 02:12:49.395"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.395" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:49.395" starttime="20161118 02:12:49.395"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.395" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:49.395" starttime="20161118 02:12:49.395"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.395" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:49.395" starttime="20161118 02:12:49.395"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:49.395" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:49.395" starttime="20161118 02:12:49.395"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.441" starttime="20161118 02:12:49.410"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.441" starttime="20161118 02:12:49.441"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:49.441" level="INFO">${resBody} = {"TalentpoolId":2494,"Title":"&lt;=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\x...</msg>
<status status="PASS" endtime="20161118 02:12:49.441" starttime="20161118 02:12:49.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.441" level="INFO">{"TalentpoolId":2494,"Title":"&lt;=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb6\xc3\xb2\xc3\xbb\xc3\xb9\xc3\xbf\xc2\xa2\xc2\xa3\xc2\xa5\xe2\x82\xa7\xc6\x92\xc3\xa1\xc3\xad\xc3\xb3\xc3\xba\xc3\xb1\xc3\x91\xc2\xaa","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-09-13T20:58:23.95","ModifierId":1,"ModifiedDate":"2016-09-13T20:58:23.95","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:49.441" starttime="20161118 02:12:49.441"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:49.441" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'...</msg>
<status status="PASS" endtime="20161118 02:12:49.441" starttime="20161118 02:12:49.441"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:49.441" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'...</msg>
<status status="PASS" endtime="20161118 02:12:49.441" starttime="20161118 02:12:49.441"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:49.441" level="INFO">${keyValue} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20161118 02:12:49.441" starttime="20161118 02:12:49.441"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:49.441" starttime="20161118 02:12:49.348"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended2

*Description:*
verify ASCII characters 2

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:49.441" critical="yes" starttime="20161118 02:12:49.270"></status>
</test>
<test id="s1-s1-s1-t31" name="GET-API_TPC_GET_Return_Title_Extended3">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.473" starttime="20161118 02:12:49.441"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:49.488" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:49.488" starttime="20161118 02:12:49.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.488" level="INFO">1336</msg>
<status status="PASS" endtime="20161118 02:12:49.488" starttime="20161118 02:12:49.488"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:49.488" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:49.488" starttime="20161118 02:12:49.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.488" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:49.488" starttime="20161118 02:12:49.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.488" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:49.488" starttime="20161118 02:12:49.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.488" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:49.488" starttime="20161118 02:12:49.488"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:49.488" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:49.488" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:49.488" starttime="20161118 02:12:49.488"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.504" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:49.504" starttime="20161118 02:12:49.504"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.504" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:49.504" starttime="20161118 02:12:49.504"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.504" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:49.504" starttime="20161118 02:12:49.504"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:49.504" starttime="20161118 02:12:49.441"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:49.504" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:49.504" starttime="20161118 02:12:49.504"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:49.504" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:49.504" starttime="20161118 02:12:49.504"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.520" starttime="20161118 02:12:49.504"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.520" starttime="20161118 02:12:49.520"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:49.535" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:49.535" starttime="20161118 02:12:49.535"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.535" starttime="20161118 02:12:49.535"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:49.535" starttime="20161118 02:12:49.504"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended3" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.551" starttime="20161118 02:12:49.535"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%ú%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161118 02:12:49.551" level="INFO">${SQL_TalentPoolIdToGet} = 5381</msg>
<status status="PASS" endtime="20161118 02:12:49.551" starttime="20161118 02:12:49.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.566" level="INFO">${SQL_TalentPoolIdToGet} = 5381</msg>
<status status="PASS" endtime="20161118 02:12:49.566" starttime="20161118 02:12:49.551"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161118 02:12:49.566" level="INFO">${SQL_TalentPoolTitleById} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20161118 02:12:49.566" starttime="20161118 02:12:49.566"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:49.566" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:49.566" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:49.566" starttime="20161118 02:12:49.566"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.566" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:49.566" starttime="20161118 02:12:49.566"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.566" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:49.566" starttime="20161118 02:12:49.566"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.566" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:49.566" starttime="20161118 02:12:49.566"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:49.566" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:49.566" starttime="20161118 02:12:49.566"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.613" starttime="20161118 02:12:49.566"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.613" starttime="20161118 02:12:49.613"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:49.613" level="INFO">${resBody} = {"TalentpoolId":5381,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\x...</msg>
<status status="PASS" endtime="20161118 02:12:49.613" starttime="20161118 02:12:49.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.613" level="INFO">{"TalentpoolId":5381,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\xc2\xae\xc2\xaf\xc2\xb3\xc2\xb4\xc2\xb8U\xc2\xbe\xc3\x80\xc3\x81\xc3\x82\xc3\x83\xc3\x84\xc3\x85\xc3\x88\xc3\x89\xc3\x8a\xc3\x8b\xc3\x8c\xc3\x8d\xc3\x8e\xc3\x8f\xc3\x90\xc3\x92\xc3\x93\xc3\x94\xc3\x95\xc3\x96\xc3\x97\xc3\x98\xc3\x99\xc3\x9a\xc3\x9b\xc3\x9c","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-05T09:46:56.21","ModifierId":1,"ModifiedDate":"2016-11-05T09:46:56.21","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:49.613" starttime="20161118 02:12:49.613"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:49.629" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20161118 02:12:49.629" starttime="20161118 02:12:49.613"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:49.629" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20161118 02:12:49.629" starttime="20161118 02:12:49.629"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:49.629" level="INFO">${keyValue} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20161118 02:12:49.629" starttime="20161118 02:12:49.629"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:49.629" starttime="20161118 02:12:49.535"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended3

*Description:*
verify ASCII characters 3

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:49.629" critical="yes" starttime="20161118 02:12:49.441"></status>
</test>
<test id="s1-s1-s1-t32" name="GET-API_TPC_GET_Return_Title_Extended5">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.660" starttime="20161118 02:12:49.629"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:49.660" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:49.660" starttime="20161118 02:12:49.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.676" level="INFO">1336</msg>
<status status="PASS" endtime="20161118 02:12:49.676" starttime="20161118 02:12:49.660"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:49.676" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:49.676" starttime="20161118 02:12:49.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.676" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:49.676" starttime="20161118 02:12:49.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.676" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:49.676" starttime="20161118 02:12:49.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.676" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:49.676" starttime="20161118 02:12:49.676"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:49.676" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:49.676" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:49.676" starttime="20161118 02:12:49.676"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.676" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:49.676" starttime="20161118 02:12:49.676"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.676" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:49.676" starttime="20161118 02:12:49.676"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.676" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:49.676" starttime="20161118 02:12:49.676"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:49.676" starttime="20161118 02:12:49.629"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:49.691" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:49.691" starttime="20161118 02:12:49.691"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:49.691" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:49.691" starttime="20161118 02:12:49.691"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.707" starttime="20161118 02:12:49.691"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.707" starttime="20161118 02:12:49.707"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:49.707" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:49.707" starttime="20161118 02:12:49.707"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.707" starttime="20161118 02:12:49.707"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:49.707" starttime="20161118 02:12:49.676"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended5" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.738" starttime="20161118 02:12:49.723"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND title LIKE '%Š%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161118 02:12:49.754" level="INFO">${SQL_TalentPoolIdToGet} = 679</msg>
<status status="PASS" endtime="20161118 02:12:49.754" starttime="20161118 02:12:49.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.754" level="INFO">${SQL_TalentPoolIdToGet} = 679</msg>
<status status="PASS" endtime="20161118 02:12:49.754" starttime="20161118 02:12:49.754"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161118 02:12:49.754" level="INFO">${SQL_TalentPoolTitleById} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20161118 02:12:49.754" starttime="20161118 02:12:49.754"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:49.754" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:49.754" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:49.754" starttime="20161118 02:12:49.754"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.770" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:49.770" starttime="20161118 02:12:49.754"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.770" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:49.770" starttime="20161118 02:12:49.770"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.770" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:49.770" starttime="20161118 02:12:49.770"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:49.770" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:49.770" starttime="20161118 02:12:49.770"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.801" starttime="20161118 02:12:49.770"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.801" starttime="20161118 02:12:49.801"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:49.801" level="INFO">${resBody} = {"TalentpoolId":679,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\xc...</msg>
<status status="PASS" endtime="20161118 02:12:49.801" starttime="20161118 02:12:49.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.801" level="INFO">{"TalentpoolId":679,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\xc2\xae\xc2\xaf\xc2\xb3\xc2\xb4\xc2\xb8U\xc2\xbe\xc3\x80\xc3\x81\xc3\x82\xc3\x83\xc3\x84\xc3\x85\xc3\x88\xc3\x89\xc3\x8a\xc3\x8b\xc3\x8c\xc3\x8d\xc3\x8e\xc3\x8f\xc3\x90\xc3\x92\xc3\x93\xc3\x94\xc3\x95\xc3\x96\xc3\x97\xc3\x98\xc3\x99\xc3\x9a\xc3\x9b\xc3\x9c","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-03-01T21:05:21.813","ModifierId":1,"ModifiedDate":"2016-03-01T21:05:21.813","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:49.801" starttime="20161118 02:12:49.801"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:49.801" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20161118 02:12:49.801" starttime="20161118 02:12:49.801"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:49.801" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20161118 02:12:49.801" starttime="20161118 02:12:49.801"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:49.801" level="INFO">${keyValue} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20161118 02:12:49.801" starttime="20161118 02:12:49.801"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:49.801" starttime="20161118 02:12:49.723"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended5

*Description:*
verify ASCII characters 5

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:49.801" critical="yes" starttime="20161118 02:12:49.629"></status>
</test>
<test id="s1-s1-s1-t33" name="GET-API_TPC_GET_Return_Title_Extended6">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.816" starttime="20161118 02:12:49.816"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:49.816" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:49.816" starttime="20161118 02:12:49.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.816" level="INFO">1336</msg>
<status status="PASS" endtime="20161118 02:12:49.816" starttime="20161118 02:12:49.816"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:49.832" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:49.832" starttime="20161118 02:12:49.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.832" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:49.832" starttime="20161118 02:12:49.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.832" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:49.832" starttime="20161118 02:12:49.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.832" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:49.832" starttime="20161118 02:12:49.832"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:49.832" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:49.832" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:49.832" starttime="20161118 02:12:49.832"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.832" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:49.832" starttime="20161118 02:12:49.832"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.832" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:49.832" starttime="20161118 02:12:49.832"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.832" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:49.832" starttime="20161118 02:12:49.832"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:49.832" starttime="20161118 02:12:49.816"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:49.832" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:49.832" starttime="20161118 02:12:49.832"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:49.848" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:49.848" starttime="20161118 02:12:49.832"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.863" starttime="20161118 02:12:49.848"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.863" starttime="20161118 02:12:49.863"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:49.863" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:49.863" starttime="20161118 02:12:49.863"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.863" starttime="20161118 02:12:49.863"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:49.863" starttime="20161118 02:12:49.832"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended6" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.879" starttime="20161118 02:12:49.879"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%Ø%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161118 02:12:49.910" level="INFO">${SQL_TalentPoolIdToGet} = 866</msg>
<status status="PASS" endtime="20161118 02:12:49.910" starttime="20161118 02:12:49.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.910" level="INFO">${SQL_TalentPoolIdToGet} = 866</msg>
<status status="PASS" endtime="20161118 02:12:49.910" starttime="20161118 02:12:49.910"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById1}</var>
</assign>
<msg timestamp="20161118 02:12:49.910" level="INFO">${SQL_TalentPoolTitleById1} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20161118 02:12:49.910" starttime="20161118 02:12:49.910"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:49.910" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:49.910" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:49.910" starttime="20161118 02:12:49.910"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.926" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:49.926" starttime="20161118 02:12:49.910"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.926" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:49.926" starttime="20161118 02:12:49.926"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.926" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:49.926" starttime="20161118 02:12:49.926"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:49.926" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:49.926" starttime="20161118 02:12:49.926"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.957" starttime="20161118 02:12:49.926"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.957" starttime="20161118 02:12:49.957"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:49.957" level="INFO">${resBody} = {"TalentpoolId":866,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\xc...</msg>
<status status="PASS" endtime="20161118 02:12:49.957" starttime="20161118 02:12:49.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.957" level="INFO">{"TalentpoolId":866,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\xc2\xae\xc2\xaf\xc2\xb3\xc2\xb4\xc2\xb8U\xc2\xbe\xc3\x80\xc3\x81\xc3\x82\xc3\x83\xc3\x84\xc3\x85\xc3\x88\xc3\x89\xc3\x8a\xc3\x8b\xc3\x8c\xc3\x8d\xc3\x8e\xc3\x8f\xc3\x90\xc3\x92\xc3\x93\xc3\x94\xc3\x95\xc3\x96\xc3\x97\xc3\x98\xc3\x99\xc3\x9a\xc3\x9b\xc3\x9c","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-03-08T20:10:01.567","ModifierId":1,"ModifiedDate":"2016-03-08T20:10:01.567","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:49.957" starttime="20161118 02:12:49.957"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:49.957" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20161118 02:12:49.957" starttime="20161118 02:12:49.957"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:49.957" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20161118 02:12:49.957" starttime="20161118 02:12:49.957"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:49.957" level="INFO">${keyValue} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20161118 02:12:49.957" starttime="20161118 02:12:49.957"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:49.957" starttime="20161118 02:12:49.879"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended6

*Description:*
verify ASCII characters 6

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:49.973" critical="yes" starttime="20161118 02:12:49.816"></status>
</test>
<test id="s1-s1-s1-t34" name="GET-API_TPC_GET_Return_Title_Char_Foreign_Russian">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:49.973" starttime="20161118 02:12:49.973"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:49.973" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:49.988" starttime="20161118 02:12:49.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.988" level="INFO">1336</msg>
<status status="PASS" endtime="20161118 02:12:49.988" starttime="20161118 02:12:49.988"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:49.988" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:49.988" starttime="20161118 02:12:49.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.988" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:49.988" starttime="20161118 02:12:49.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.988" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:49.988" starttime="20161118 02:12:49.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.988" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:49.988" starttime="20161118 02:12:49.988"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:49.988" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:49.988" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:49.988" starttime="20161118 02:12:49.988"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.988" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:49.988" starttime="20161118 02:12:49.988"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.988" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:49.988" starttime="20161118 02:12:49.988"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:49.988" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:49.988" starttime="20161118 02:12:49.988"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:49.988" starttime="20161118 02:12:49.973"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:50.004" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:50.004" starttime="20161118 02:12:50.004"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:50.004" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:50.004" starttime="20161118 02:12:50.004"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.020" starttime="20161118 02:12:50.004"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.020" starttime="20161118 02:12:50.020"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:50.020" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:50.020" starttime="20161118 02:12:50.020"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.020" starttime="20161118 02:12:50.020"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:50.020" starttime="20161118 02:12:50.004"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Foreign_Russian" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.051" starttime="20161118 02:12:50.035"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%ё%' \ ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161118 02:12:50.066" level="INFO">${SQL_TalentPoolIdToGet} = 5013</msg>
<status status="PASS" endtime="20161118 02:12:50.066" starttime="20161118 02:12:50.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.066" level="INFO">${SQL_TalentPoolIdToGet} = 5013</msg>
<status status="PASS" endtime="20161118 02:12:50.066" starttime="20161118 02:12:50.066"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById1}</var>
</assign>
<msg timestamp="20161118 02:12:50.066" level="INFO">${SQL_TalentPoolTitleById1} = &lt;=&gt;?@</msg>
<status status="PASS" endtime="20161118 02:12:50.066" starttime="20161118 02:12:50.066"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:50.082" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:50.082" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:50.082" starttime="20161118 02:12:50.082"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.082" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:50.082" starttime="20161118 02:12:50.082"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.082" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:50.082" starttime="20161118 02:12:50.082"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.082" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:50.082" starttime="20161118 02:12:50.082"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:50.082" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:50.082" starttime="20161118 02:12:50.082"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.113" starttime="20161118 02:12:50.082"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.113" starttime="20161118 02:12:50.113"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:50.113" level="INFO">${resBody} = {"TalentpoolId":5013,"Title":"&lt;=&gt;?@","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-10-29T00:23:11.377","ModifierId":1,"Modi...</msg>
<status status="PASS" endtime="20161118 02:12:50.113" starttime="20161118 02:12:50.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.113" level="INFO">{"TalentpoolId":5013,"Title":"&lt;=&gt;?@","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-10-29T00:23:11.377","ModifierId":1,"ModifiedDate":"2016-10-29T00:23:11.377","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:50.113" starttime="20161118 02:12:50.113"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:50.113" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@', u'TalentpoolId': 5013, u'ModifiedDate': u'2016-10-29T00:23:11.377', u'CreatedDate': u'2016-10-29T00:23:11.377', u'Owner': {u'LastName': u'TalentPoolAutomationU...</msg>
<status status="PASS" endtime="20161118 02:12:50.113" starttime="20161118 02:12:50.113"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:50.113" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@', u'CreatedDate': u'2016-10-29T00:23:11.377', u'ModifiedDate': u'2016-10-29T00:23:11.377', u'TalentpoolId': 5013, u'Owner': {u'LastName': u'TalentPoolAutomationU...</msg>
<status status="PASS" endtime="20161118 02:12:50.113" starttime="20161118 02:12:50.113"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:50.113" level="INFO">${keyValue} = &lt;=&gt;?@</msg>
<status status="PASS" endtime="20161118 02:12:50.113" starttime="20161118 02:12:50.113"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:50.113" starttime="20161118 02:12:50.035"></status>
</kw>
<doc>*Name:*
API_TP_Get_Return_Title_Char_Foreign_Russian

*Description:*
verify russian alphabet

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:50.113" critical="yes" starttime="20161118 02:12:49.973"></status>
</test>
<test id="s1-s1-s1-t35" name="GET-API_TPC_GET_Return_Title_Char_Foreign_Arabic">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.129" starttime="20161118 02:12:50.129"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:50.129" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:50.129" starttime="20161118 02:12:50.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.129" level="INFO">1336</msg>
<status status="PASS" endtime="20161118 02:12:50.129" starttime="20161118 02:12:50.129"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:50.145" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:50.145" starttime="20161118 02:12:50.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.145" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:50.145" starttime="20161118 02:12:50.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.145" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:50.145" starttime="20161118 02:12:50.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.145" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:50.145" starttime="20161118 02:12:50.145"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:50.145" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:50.145" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:50.145" starttime="20161118 02:12:50.145"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.145" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:50.145" starttime="20161118 02:12:50.145"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.145" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:50.145" starttime="20161118 02:12:50.145"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.145" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:50.145" starttime="20161118 02:12:50.145"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:50.145" starttime="20161118 02:12:50.129"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:50.160" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:50.160" starttime="20161118 02:12:50.160"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:50.160" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:50.160" starttime="20161118 02:12:50.160"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.176" starttime="20161118 02:12:50.160"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.176" starttime="20161118 02:12:50.176"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:50.176" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:50.176" starttime="20161118 02:12:50.176"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.176" starttime="20161118 02:12:50.176"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:50.176" starttime="20161118 02:12:50.145"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Foreign_Arabic" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.207" starttime="20161118 02:12:50.191"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%ز%' \ ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161118 02:12:50.223" level="INFO">${SQL_TalentPoolIdToGet} = 840</msg>
<status status="PASS" endtime="20161118 02:12:50.223" starttime="20161118 02:12:50.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.223" level="INFO">${SQL_TalentPoolIdToGet} = 840</msg>
<status status="PASS" endtime="20161118 02:12:50.223" starttime="20161118 02:12:50.223"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById1}</var>
</assign>
<msg timestamp="20161118 02:12:50.238" level="INFO">${SQL_TalentPoolTitleById1} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20161118 02:12:50.238" starttime="20161118 02:12:50.223"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:50.238" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:50.238" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:50.238" starttime="20161118 02:12:50.238"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.238" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:50.238" starttime="20161118 02:12:50.238"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.238" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:50.238" starttime="20161118 02:12:50.238"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.238" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:50.238" starttime="20161118 02:12:50.238"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:50.238" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:50.238" starttime="20161118 02:12:50.238"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.270" starttime="20161118 02:12:50.238"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.270" starttime="20161118 02:12:50.270"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:50.270" level="INFO">${resBody} = {"TalentpoolId":840,"Title":"&lt;=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb...</msg>
<status status="PASS" endtime="20161118 02:12:50.270" starttime="20161118 02:12:50.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.270" level="INFO">{"TalentpoolId":840,"Title":"&lt;=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb6\xc3\xb2\xc3\xbb\xc3\xb9\xc3\xbf\xc2\xa2\xc2\xa3\xc2\xa5\xe2\x82\xa7\xc6\x92\xc3\xa1\xc3\xad\xc3\xb3\xc3\xba\xc3\xb1\xc3\x91\xc2\xaa","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-03-08T02:02:38.89","ModifierId":1,"ModifiedDate":"2016-03-08T02:02:38.89","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:50.270" starttime="20161118 02:12:50.270"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:50.285" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'...</msg>
<status status="PASS" endtime="20161118 02:12:50.285" starttime="20161118 02:12:50.270"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:50.285" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'...</msg>
<status status="PASS" endtime="20161118 02:12:50.285" starttime="20161118 02:12:50.285"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:50.285" level="INFO">${keyValue} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20161118 02:12:50.285" starttime="20161118 02:12:50.285"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:50.285" starttime="20161118 02:12:50.191"></status>
</kw>
<doc>*Name:*
API_TP_Get_Return_Title_Char_Foreign_Arabic

*Description:*
verify arabic alphabet

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:50.285" critical="yes" starttime="20161118 02:12:50.113"></status>
</test>
<test id="s1-s1-s1-t36" name="GET-API_TPC_GET_Input_TP_Does_Not_Exist">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.301" starttime="20161118 02:12:50.285"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:50.316" level="INFO">${SQL_GET_USERID} = 62</msg>
<status status="PASS" endtime="20161118 02:12:50.316" starttime="20161118 02:12:50.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.316" level="INFO">62</msg>
<status status="PASS" endtime="20161118 02:12:50.316" starttime="20161118 02:12:50.316"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:50.316" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:50.316" starttime="20161118 02:12:50.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.332" level="INFO">${SQL_GET_USERID} = 62</msg>
<status status="PASS" endtime="20161118 02:12:50.332" starttime="20161118 02:12:50.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.332" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:50.332" starttime="20161118 02:12:50.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.332" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:50.332" starttime="20161118 02:12:50.332"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:50.332" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:50.332" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:50.332" starttime="20161118 02:12:50.332"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.332" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:50.332" starttime="20161118 02:12:50.332"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.332" level="INFO">Set request header "X-USERID" to "62"</msg>
<status status="PASS" endtime="20161118 02:12:50.332" starttime="20161118 02:12:50.332"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.332" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:50.332" starttime="20161118 02:12:50.332"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:50.332" starttime="20161118 02:12:50.285"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:50.348" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:50.348" starttime="20161118 02:12:50.348"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:50.348" level="INFO">Request body set to "{   "UserId": 62,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_62",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:50.348" starttime="20161118 02:12:50.348"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.363" starttime="20161118 02:12:50.348"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.363" starttime="20161118 02:12:50.363"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:50.363" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:50.363" starttime="20161118 02:12:50.363"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.363" starttime="20161118 02:12:50.363"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:50.363" starttime="20161118 02:12:50.348"></status>
</kw>
<kw name="GET_TalentPool_Does_Not_Exist" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>404</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.379" starttime="20161118 02:12:50.379"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id+1000 FROM ou WHERE ou.type_id = 131072 ORDER BY ou_id DESC</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161118 02:12:50.395" level="INFO">${SQL_TalentPoolIdToGet} = 6831</msg>
<status status="PASS" endtime="20161118 02:12:50.395" starttime="20161118 02:12:50.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.395" level="INFO">${SQL_TalentPoolIdToGet} = 6831</msg>
<status status="PASS" endtime="20161118 02:12:50.395" starttime="20161118 02:12:50.395"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:50.395" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:50.395" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:50.395" starttime="20161118 02:12:50.395"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.395" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:50.395" starttime="20161118 02:12:50.395"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.395" level="INFO">Set request header "X-USERID" to "62"</msg>
<status status="PASS" endtime="20161118 02:12:50.395" starttime="20161118 02:12:50.395"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.395" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:50.395" starttime="20161118 02:12:50.395"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:50.395" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:50.395" starttime="20161118 02:12:50.395"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161118 02:12:50.410" starttime="20161118 02:12:50.395"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.441" starttime="20161118 02:12:50.410"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.441" starttime="20161118 02:12:50.441"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:50.441" level="INFO">${resBody} = {"Message":"Talent pool not found."}</msg>
<status status="PASS" endtime="20161118 02:12:50.441" starttime="20161118 02:12:50.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.441" level="INFO">{"Message":"Talent pool not found."}</msg>
<status status="PASS" endtime="20161118 02:12:50.457" starttime="20161118 02:12:50.441"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:50.457" starttime="20161118 02:12:50.379"></status>
</kw>
<doc>*Name:*
API_TP_Get_Input_TP_DNE

*Description:*
verify failure when talent pool id provided does not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:50.457" critical="yes" starttime="20161118 02:12:50.285"></status>
</test>
<test id="s1-s1-s1-t37" name="GET-API_TPC_GET_Input_User_Does_Not_Exist">
<kw name="REST_NOAUTH_NonExistentUser" library="SMP_Keywords">
<doc>*REST_NOAUTH_NonExistentUser:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.504" starttime="20161118 02:12:50.457"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:50.520" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20161118 02:12:50.520" starttime="20161118 02:12:50.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.520" level="INFO">2347</msg>
<status status="PASS" endtime="20161118 02:12:50.520" starttime="20161118 02:12:50.520"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT 1</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:50.520" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:50.520" starttime="20161118 02:12:50.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.520" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20161118 02:12:50.520" starttime="20161118 02:12:50.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.520" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:50.520" starttime="20161118 02:12:50.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.520" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:50.520" starttime="20161118 02:12:50.520"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:50.520" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:50.520" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:50.520" starttime="20161118 02:12:50.520"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.520" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:50.520" starttime="20161118 02:12:50.520"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.520" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20161118 02:12:50.520" starttime="20161118 02:12:50.520"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.535" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:50.535" starttime="20161118 02:12:50.535"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:50.535" starttime="20161118 02:12:50.457"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:50.535" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:50.535" starttime="20161118 02:12:50.535"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:50.535" level="INFO">Request body set to "{   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_2347",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:50.535" starttime="20161118 02:12:50.535"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.551" starttime="20161118 02:12:50.535"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.551" starttime="20161118 02:12:50.551"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:50.551" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:50.551" starttime="20161118 02:12:50.551"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.551" starttime="20161118 02:12:50.551"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:50.566" starttime="20161118 02:12:50.535"></status>
</kw>
<kw name="GET_User_Does_Not_Exist" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>401</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.582" starttime="20161118 02:12:50.566"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161118 02:12:50.582" level="INFO">${SQL_TalentPoolIdToGet} = 4475</msg>
<status status="PASS" endtime="20161118 02:12:50.582" starttime="20161118 02:12:50.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.582" level="INFO">${SQL_TalentPoolIdToGet} = 4475</msg>
<status status="PASS" endtime="20161118 02:12:50.582" starttime="20161118 02:12:50.582"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:50.582" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:50.582" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:50.582" starttime="20161118 02:12:50.582"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.582" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:50.582" starttime="20161118 02:12:50.582"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.582" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20161118 02:12:50.598" starttime="20161118 02:12:50.582"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.598" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:50.598" starttime="20161118 02:12:50.598"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:50.598" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:50.598" starttime="20161118 02:12:50.598"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161118 02:12:50.598" starttime="20161118 02:12:50.598"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.645" starttime="20161118 02:12:50.598"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.645" starttime="20161118 02:12:50.645"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:50.645" level="INFO">${resBody} = {"Message":"You don't have access to the talentpool."}</msg>
<status status="PASS" endtime="20161118 02:12:50.645" starttime="20161118 02:12:50.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.645" level="INFO">{"Message":"You don't have access to the talentpool."}</msg>
<status status="PASS" endtime="20161118 02:12:50.645" starttime="20161118 02:12:50.645"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:50.645" starttime="20161118 02:12:50.566"></status>
</kw>
<doc>*Name:*
API_TP_Get_Input_User_DNE

*Description:*
verify failure when user provided does not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:50.645" critical="yes" starttime="20161118 02:12:50.457"></status>
</test>
<test id="s1-s1-s1-t38" name="GET-API_TPC_GET_Input_User_Did_Not_Create">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.660" starttime="20161118 02:12:50.645"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:50.676" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161118 02:12:50.676" starttime="20161118 02:12:50.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.676" level="INFO">514</msg>
<status status="PASS" endtime="20161118 02:12:50.676" starttime="20161118 02:12:50.676"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:50.676" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:50.676" starttime="20161118 02:12:50.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.676" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161118 02:12:50.676" starttime="20161118 02:12:50.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.676" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:50.676" starttime="20161118 02:12:50.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.676" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:50.676" starttime="20161118 02:12:50.676"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:50.676" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:50.676" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:50.676" starttime="20161118 02:12:50.676"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.676" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:50.676" starttime="20161118 02:12:50.676"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.676" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161118 02:12:50.676" starttime="20161118 02:12:50.676"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.691" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:50.691" starttime="20161118 02:12:50.676"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:50.691" starttime="20161118 02:12:50.645"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:50.691" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:50.691" starttime="20161118 02:12:50.691"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:50.691" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:50.691" starttime="20161118 02:12:50.691"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.723" starttime="20161118 02:12:50.691"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.723" starttime="20161118 02:12:50.723"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:50.723" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:50.723" starttime="20161118 02:12:50.723"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.723" starttime="20161118 02:12:50.723"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:50.723" starttime="20161118 02:12:50.691"></status>
</kw>
<kw name="GET_User_Did_Not_Create" library="SMP_Keywords">
<doc>*GET_User_Did_Not_Create:*</doc>
<arguments>
<arg>Title</arg>
<arg>401</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.738" starttime="20161118 02:12:50.723"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id&lt;&gt; ${SQL_GET_USERID} ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161118 02:12:50.738" level="INFO">${SQL_TalentPoolIdToGet} = 2282</msg>
<status status="PASS" endtime="20161118 02:12:50.738" starttime="20161118 02:12:50.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.738" level="INFO">${SQL_TalentPoolIdToGet} = 2282</msg>
<status status="PASS" endtime="20161118 02:12:50.738" starttime="20161118 02:12:50.738"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:50.754" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:50.754" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:50.754" starttime="20161118 02:12:50.754"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.754" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:50.754" starttime="20161118 02:12:50.754"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.754" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161118 02:12:50.754" starttime="20161118 02:12:50.754"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.754" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:50.754" starttime="20161118 02:12:50.754"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:50.754" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:50.754" starttime="20161118 02:12:50.754"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161118 02:12:50.754" starttime="20161118 02:12:50.754"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.785" starttime="20161118 02:12:50.754"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.785" starttime="20161118 02:12:50.785"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:50.785" level="INFO">${resBody} = {"Message":"You don't have access to the talentpool."}</msg>
<status status="PASS" endtime="20161118 02:12:50.785" starttime="20161118 02:12:50.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.785" level="INFO">{"Message":"You don't have access to the talentpool."}</msg>
<status status="PASS" endtime="20161118 02:12:50.785" starttime="20161118 02:12:50.785"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:50.785" starttime="20161118 02:12:50.723"></status>
</kw>
<doc>*Name:*
API_TP_Get_Input_User_DidNotCreate

*Description:*
verify failure when user provided did not create the talent pool

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:50.785" critical="yes" starttime="20161118 02:12:50.645"></status>
</test>
<test id="s1-s1-s1-t39" name="POST-API_TPC_Add_Security_Script">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.816" starttime="20161118 02:12:50.801"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:50.832" level="INFO">${SQL_GET_USERID} = 58</msg>
<status status="PASS" endtime="20161118 02:12:50.832" starttime="20161118 02:12:50.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.832" level="INFO">58</msg>
<status status="PASS" endtime="20161118 02:12:50.832" starttime="20161118 02:12:50.832"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:50.832" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:50.832" starttime="20161118 02:12:50.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.832" level="INFO">${SQL_GET_USERID} = 58</msg>
<status status="PASS" endtime="20161118 02:12:50.832" starttime="20161118 02:12:50.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.832" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:50.832" starttime="20161118 02:12:50.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.832" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:50.832" starttime="20161118 02:12:50.832"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:50.832" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:50.832" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:50.832" starttime="20161118 02:12:50.832"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.832" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:50.832" starttime="20161118 02:12:50.832"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.832" level="INFO">Set request header "X-USERID" to "58"</msg>
<status status="PASS" endtime="20161118 02:12:50.832" starttime="20161118 02:12:50.832"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.832" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:50.832" starttime="20161118 02:12:50.832"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:50.832" starttime="20161118 02:12:50.801"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:50.848" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:50.848" starttime="20161118 02:12:50.848"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:50.848" level="INFO">Request body set to "{   "UserId": 58,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_58",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:50.848" starttime="20161118 02:12:50.848"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.863" starttime="20161118 02:12:50.848"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.863" starttime="20161118 02:12:50.863"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:50.863" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:50.863" starttime="20161118 02:12:50.863"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.863" starttime="20161118 02:12:50.863"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:50.879" starttime="20161118 02:12:50.832"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Add" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:50.895" starttime="20161118 02:12:50.879"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161118 02:12:50.895" level="INFO">${SQL_TalentPoolId} = 723</msg>
<status status="PASS" endtime="20161118 02:12:50.895" starttime="20161118 02:12:50.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.895" level="INFO">${SQL_TalentPoolId} = 723</msg>
<status status="PASS" endtime="20161118 02:12:50.895" starttime="20161118 02:12:50.895"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND name_first LIKE '%&lt;script&gt;alert(123)&lt;/script&gt;%' AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20161118 02:12:50.910" level="INFO">${SQL_UserToAdd1} = 1342</msg>
<status status="PASS" endtime="20161118 02:12:50.910" starttime="20161118 02:12:50.895"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:50.910" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:50.910" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:50.910" starttime="20161118 02:12:50.910"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.926" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:50.926" starttime="20161118 02:12:50.910"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.926" level="INFO">Set request header "X-USERID" to "58"</msg>
<status status="PASS" endtime="20161118 02:12:50.926" starttime="20161118 02:12:50.926"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:50.926" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:50.926" starttime="20161118 02:12:50.926"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:50.926" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:50.926" starttime="20161118 02:12:50.926"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{ \"UserId\": ${SQL_UserToAdd1}, \"Status\": 128 }]</arg>
</arguments>
<msg timestamp="20161118 02:12:50.926" level="INFO">Request body set to "[{ "UserId": 1342, "Status": 128 }]".</msg>
<status status="PASS" endtime="20161118 02:12:50.926" starttime="20161118 02:12:50.926"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161118 02:12:50.926" level="INFO">${SQL_CandidateCountBefore} = 4</msg>
<status status="PASS" endtime="20161118 02:12:50.926" starttime="20161118 02:12:50.926"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.191" starttime="20161118 02:12:50.926"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.191" starttime="20161118 02:12:51.191"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:51.191" level="INFO">${resBody} = [{"UserId":1342,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":nu...</msg>
<status status="PASS" endtime="20161118 02:12:51.191" starttime="20161118 02:12:51.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.191" level="INFO">[{"UserId":1342,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":2}]</msg>
<status status="PASS" endtime="20161118 02:12:51.191" starttime="20161118 02:12:51.191"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20161118 02:12:51.207" level="INFO">${SQL_CandidatesCountAfter} = 4</msg>
<status status="PASS" endtime="20161118 02:12:51.207" starttime="20161118 02:12:51.191"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${SQL_CandidateCountBefore} == ${SQL_CandidatesCountAfter}"</arg>
<arg>Set Test Message</arg>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.207" level="INFO">Set test message to:
The 4 matches with 4</msg>
<status status="PASS" endtime="20161118 02:12:51.207" starttime="20161118 02:12:51.207"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:51.207" starttime="20161118 02:12:51.207"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:51.207" starttime="20161118 02:12:50.879"></status>
</kw>
<doc>*Name:*
API_TPC_Security_Script

*Description:*
verify script injection is allowed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:51.207" critical="yes" starttime="20161118 02:12:50.785">The 4 matches with 4</status>
</test>
<test id="s1-s1-s1-t40" name="POST-API_TPC_Add_Already_Added_Subset">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.223" starttime="20161118 02:12:51.207"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:51.238" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:51.238" starttime="20161118 02:12:51.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.238" level="INFO">1336</msg>
<status status="PASS" endtime="20161118 02:12:51.238" starttime="20161118 02:12:51.238"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:51.238" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:51.238" starttime="20161118 02:12:51.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.238" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:51.238" starttime="20161118 02:12:51.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.238" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:51.238" starttime="20161118 02:12:51.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.238" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:51.238" starttime="20161118 02:12:51.238"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:51.238" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:51.254" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:51.254" starttime="20161118 02:12:51.238"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.254" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:51.254" starttime="20161118 02:12:51.254"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.254" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:51.254" starttime="20161118 02:12:51.254"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.254" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:51.254" starttime="20161118 02:12:51.254"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:51.254" starttime="20161118 02:12:51.207"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:51.254" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:51.254" starttime="20161118 02:12:51.254"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:51.254" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:51.254" starttime="20161118 02:12:51.254"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.285" starttime="20161118 02:12:51.254"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.285" starttime="20161118 02:12:51.285"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:51.285" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:51.285" starttime="20161118 02:12:51.285"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.285" starttime="20161118 02:12:51.285"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:51.285" starttime="20161118 02:12:51.254"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Add_SubSet" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.316" starttime="20161118 02:12:51.285"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161118 02:12:51.332" level="INFO">${SQL_TalentPoolId} = 2468</msg>
<status status="PASS" endtime="20161118 02:12:51.332" starttime="20161118 02:12:51.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.332" level="INFO">${SQL_TalentPoolId} = 2468</msg>
<status status="PASS" endtime="20161118 02:12:51.332" starttime="20161118 02:12:51.332"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20161118 02:12:51.348" level="INFO">${SQL_UserToAdd1} = 715</msg>
<status status="PASS" endtime="20161118 02:12:51.348" starttime="20161118 02:12:51.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.348" level="INFO">${SQL_UserToAdd1} = 715</msg>
<status status="PASS" endtime="20161118 02:12:51.348" starttime="20161118 02:12:51.348"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id &lt;&gt; ${SQL_UserToAdd1} AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd2}</var>
</assign>
<msg timestamp="20161118 02:12:51.363" level="INFO">${SQL_UserToAdd2} = 464</msg>
<status status="PASS" endtime="20161118 02:12:51.363" starttime="20161118 02:12:51.348"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:51.363" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:51.363" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:51.363" starttime="20161118 02:12:51.363"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.363" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:51.363" starttime="20161118 02:12:51.363"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.363" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:51.363" starttime="20161118 02:12:51.363"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.363" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:51.363" starttime="20161118 02:12:51.363"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:51.363" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:51.363" starttime="20161118 02:12:51.363"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{\"UserId\": ${SQL_UserToAdd1}},{\"UserId\": ${SQL_UserToAdd2}}]</arg>
</arguments>
<msg timestamp="20161118 02:12:51.363" level="INFO">Request body set to "[{"UserId": 715},{"UserId": 464}]".</msg>
<status status="PASS" endtime="20161118 02:12:51.363" starttime="20161118 02:12:51.363"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161118 02:12:51.379" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20161118 02:12:51.379" starttime="20161118 02:12:51.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.379" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20161118 02:12:51.379" starttime="20161118 02:12:51.379"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.441" starttime="20161118 02:12:51.379"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.441" starttime="20161118 02:12:51.441"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:51.457" level="INFO">${resBody} = [{"UserId":464,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":nul...</msg>
<status status="PASS" endtime="20161118 02:12:51.457" starttime="20161118 02:12:51.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.457" level="INFO">[{"UserId":464,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":2},{"UserId":715,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":1}]</msg>
<status status="PASS" endtime="20161118 02:12:51.457" starttime="20161118 02:12:51.457"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20161118 02:12:51.457" level="INFO">${SQL_CandidatesCountAfter} = 2</msg>
<status status="PASS" endtime="20161118 02:12:51.457" starttime="20161118 02:12:51.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.457" level="INFO">${SQL_CandidatesCountAfter} = 2</msg>
<status status="PASS" endtime="20161118 02:12:51.457" starttime="20161118 02:12:51.457"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${SQL_CandidateCountBefore} == ${SQL_CandidatesCountAfter}"</arg>
<arg>Set Test Message</arg>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.457" level="INFO">Set test message to:
The 2 matches with 2</msg>
<status status="PASS" endtime="20161118 02:12:51.457" starttime="20161118 02:12:51.457"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:51.457" starttime="20161118 02:12:51.457"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:51.457" starttime="20161118 02:12:51.285"></status>
</kw>
<doc>*Name:*
API_TPC_Add_Already_Added_Subset

*Description:*
Verify success when subset of added users are already added

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:51.457" critical="yes" starttime="20161118 02:12:51.207">The 2 matches with 2</status>
</test>
<test id="s1-s1-s1-t41" name="POST-API_TPC_Add_Already_Added_Single">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.473" starttime="20161118 02:12:51.457"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:51.488" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:51.488" starttime="20161118 02:12:51.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.488" level="INFO">1336</msg>
<status status="PASS" endtime="20161118 02:12:51.488" starttime="20161118 02:12:51.488"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:51.488" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:51.488" starttime="20161118 02:12:51.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.488" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:51.488" starttime="20161118 02:12:51.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.488" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:51.488" starttime="20161118 02:12:51.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.488" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:51.504" starttime="20161118 02:12:51.488"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:51.504" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:51.504" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:51.504" starttime="20161118 02:12:51.504"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.504" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:51.504" starttime="20161118 02:12:51.504"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.504" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:51.504" starttime="20161118 02:12:51.504"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.504" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:51.504" starttime="20161118 02:12:51.504"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:51.504" starttime="20161118 02:12:51.457"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:51.504" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:51.504" starttime="20161118 02:12:51.504"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:51.504" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:51.504" starttime="20161118 02:12:51.504"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.535" starttime="20161118 02:12:51.504"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.535" starttime="20161118 02:12:51.535"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:51.535" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:51.535" starttime="20161118 02:12:51.535"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.535" starttime="20161118 02:12:51.535"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:51.535" starttime="20161118 02:12:51.504"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Already_Added_Single" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.551" starttime="20161118 02:12:51.535"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161118 02:12:51.566" level="INFO">${SQL_TalentPoolId} = 737</msg>
<status status="PASS" endtime="20161118 02:12:51.566" starttime="20161118 02:12:51.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.566" level="INFO">${SQL_TalentPoolId} = 737</msg>
<status status="PASS" endtime="20161118 02:12:51.566" starttime="20161118 02:12:51.566"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20161118 02:12:51.582" level="INFO">${SQL_UserToAdd1} = 776</msg>
<status status="PASS" endtime="20161118 02:12:51.582" starttime="20161118 02:12:51.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.582" level="INFO">${SQL_UserToAdd1} = 776</msg>
<status status="PASS" endtime="20161118 02:12:51.582" starttime="20161118 02:12:51.582"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:51.582" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:51.582" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:51.582" starttime="20161118 02:12:51.582"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.582" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:51.582" starttime="20161118 02:12:51.582"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.582" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:51.582" starttime="20161118 02:12:51.582"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.582" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:51.582" starttime="20161118 02:12:51.582"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:51.582" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:51.582" starttime="20161118 02:12:51.582"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{\"UserId\": ${SQL_UserToAdd1}}]</arg>
</arguments>
<msg timestamp="20161118 02:12:51.582" level="INFO">Request body set to "[{"UserId": 776}]".</msg>
<status status="PASS" endtime="20161118 02:12:51.582" starttime="20161118 02:12:51.582"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161118 02:12:51.582" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20161118 02:12:51.582" starttime="20161118 02:12:51.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.582" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20161118 02:12:51.582" starttime="20161118 02:12:51.582"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.660" starttime="20161118 02:12:51.598"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.660" starttime="20161118 02:12:51.660"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:51.660" level="INFO">${resBody} = [{"UserId":776,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":nul...</msg>
<status status="PASS" endtime="20161118 02:12:51.660" starttime="20161118 02:12:51.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.660" level="INFO">[{"UserId":776,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":1}]</msg>
<status status="PASS" endtime="20161118 02:12:51.660" starttime="20161118 02:12:51.660"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20161118 02:12:51.660" level="INFO">${SQL_CandidatesCountAfter} = 2</msg>
<status status="PASS" endtime="20161118 02:12:51.660" starttime="20161118 02:12:51.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.676" level="INFO">${SQL_CandidatesCountAfter} = 2</msg>
<status status="PASS" endtime="20161118 02:12:51.676" starttime="20161118 02:12:51.660"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${SQL_CandidateCountBefore} == ${SQL_CandidatesCountAfter}"</arg>
<arg>Set Test Message</arg>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.676" level="INFO">Set test message to:
The 2 matches with 2</msg>
<status status="PASS" endtime="20161118 02:12:51.676" starttime="20161118 02:12:51.676"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:51.676" starttime="20161118 02:12:51.676"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:51.676" starttime="20161118 02:12:51.535"></status>
</kw>
<doc>*Name:*
API_TPC_Add_AlreadyAdded_Single

*Description:*
Verify success when single added user is already added

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:51.676" critical="yes" starttime="20161118 02:12:51.457">The 2 matches with 2</status>
</test>
<test id="s1-s1-s1-t42" name="POST-API_TPC_Add_Already_Added_All">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.691" starttime="20161118 02:12:51.676"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:51.691" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:51.691" starttime="20161118 02:12:51.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.691" level="INFO">1336</msg>
<status status="PASS" endtime="20161118 02:12:51.691" starttime="20161118 02:12:51.691"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:51.691" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:51.691" starttime="20161118 02:12:51.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.691" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:51.691" starttime="20161118 02:12:51.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.691" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:51.691" starttime="20161118 02:12:51.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.691" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:51.691" starttime="20161118 02:12:51.691"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:51.691" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:51.691" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:51.691" starttime="20161118 02:12:51.691"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.707" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:51.707" starttime="20161118 02:12:51.691"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.707" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:51.707" starttime="20161118 02:12:51.707"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.707" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:51.707" starttime="20161118 02:12:51.707"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:51.707" starttime="20161118 02:12:51.676"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:51.707" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:51.707" starttime="20161118 02:12:51.707"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:51.707" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:51.707" starttime="20161118 02:12:51.707"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.723" starttime="20161118 02:12:51.707"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.723" starttime="20161118 02:12:51.723"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:51.723" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:51.723" starttime="20161118 02:12:51.723"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.738" starttime="20161118 02:12:51.738"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:51.738" starttime="20161118 02:12:51.707"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Already_Added_All" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.754" starttime="20161118 02:12:51.738"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 2) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161118 02:12:51.754" level="INFO">${SQL_TalentPoolId} = 4649</msg>
<status status="PASS" endtime="20161118 02:12:51.754" starttime="20161118 02:12:51.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.754" level="INFO">${SQL_TalentPoolId} = 4649</msg>
<status status="PASS" endtime="20161118 02:12:51.754" starttime="20161118 02:12:51.754"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20161118 02:12:51.770" level="INFO">${SQL_UserToAdd1} = 577</msg>
<status status="PASS" endtime="20161118 02:12:51.770" starttime="20161118 02:12:51.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.770" level="INFO">${SQL_UserToAdd1} = 577</msg>
<status status="PASS" endtime="20161118 02:12:51.770" starttime="20161118 02:12:51.770"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id &lt;&gt; ${SQL_UserToAdd1} AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd2}</var>
</assign>
<msg timestamp="20161118 02:12:51.785" level="INFO">${SQL_UserToAdd2} = 720</msg>
<status status="PASS" endtime="20161118 02:12:51.785" starttime="20161118 02:12:51.770"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:51.785" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:51.785" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:51.785" starttime="20161118 02:12:51.785"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.785" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:51.785" starttime="20161118 02:12:51.785"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.785" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:51.785" starttime="20161118 02:12:51.785"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.785" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:51.785" starttime="20161118 02:12:51.785"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:51.785" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:51.785" starttime="20161118 02:12:51.785"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{\"UserId\": ${SQL_UserToAdd1}},{\"UserId\": ${SQL_UserToAdd2}}]</arg>
</arguments>
<msg timestamp="20161118 02:12:51.785" level="INFO">Request body set to "[{"UserId": 577},{"UserId": 720}]".</msg>
<status status="PASS" endtime="20161118 02:12:51.785" starttime="20161118 02:12:51.785"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161118 02:12:51.801" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20161118 02:12:51.801" starttime="20161118 02:12:51.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.801" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20161118 02:12:51.801" starttime="20161118 02:12:51.801"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.879" starttime="20161118 02:12:51.801"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.879" starttime="20161118 02:12:51.879"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:51.879" level="INFO">${resBody} = [{"UserId":577,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":nul...</msg>
<status status="PASS" endtime="20161118 02:12:51.879" starttime="20161118 02:12:51.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.879" level="INFO">[{"UserId":577,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":1},{"UserId":720,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":1}]</msg>
<status status="PASS" endtime="20161118 02:12:51.879" starttime="20161118 02:12:51.879"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20161118 02:12:51.879" level="INFO">${SQL_CandidatesCountAfter} = 2</msg>
<status status="PASS" endtime="20161118 02:12:51.879" starttime="20161118 02:12:51.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.879" level="INFO">${SQL_CandidatesCountAfter} = 2</msg>
<status status="PASS" endtime="20161118 02:12:51.879" starttime="20161118 02:12:51.879"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${SQL_CandidateCountBefore} == ${SQL_CandidatesCountAfter}"</arg>
<arg>Set Test Message</arg>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.879" level="INFO">Set test message to:
The 2 matches with 2</msg>
<status status="PASS" endtime="20161118 02:12:51.879" starttime="20161118 02:12:51.879"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:51.895" starttime="20161118 02:12:51.879"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:51.895" starttime="20161118 02:12:51.738"></status>
</kw>
<doc>*Name:*
Api_TPC_Add_AlreadyAdded_All

*Description:*
Verify success when multiple added users are already added

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST3</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:51.895" critical="yes" starttime="20161118 02:12:51.676">The 2 matches with 2</status>
</test>
<test id="s1-s1-s1-t43" name="POST-API_TPC_Add_Access_No_Visibility_Subset">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.895" starttime="20161118 02:12:51.895"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:51.910" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:51.910" starttime="20161118 02:12:51.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.910" level="INFO">1336</msg>
<status status="PASS" endtime="20161118 02:12:51.910" starttime="20161118 02:12:51.910"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:51.910" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:51.910" starttime="20161118 02:12:51.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.910" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:51.910" starttime="20161118 02:12:51.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.910" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:51.910" starttime="20161118 02:12:51.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.910" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:51.910" starttime="20161118 02:12:51.910"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:51.910" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:51.910" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:51.910" starttime="20161118 02:12:51.910"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.910" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:51.910" starttime="20161118 02:12:51.910"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.910" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:51.910" starttime="20161118 02:12:51.910"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.910" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:51.910" starttime="20161118 02:12:51.910"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:51.910" starttime="20161118 02:12:51.895"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:51.926" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:51.926" starttime="20161118 02:12:51.926"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:51.926" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:51.926" starttime="20161118 02:12:51.926"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.941" starttime="20161118 02:12:51.926"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.941" starttime="20161118 02:12:51.941"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:51.941" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:51.941" starttime="20161118 02:12:51.941"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.957" starttime="20161118 02:12:51.941"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:51.957" starttime="20161118 02:12:51.926"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>POST_TalentPool_Candidates_Already_Added_All</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.957" starttime="20161118 02:12:51.957"></status>
</kw>
<doc>*Name:*
API_TPC_Add_Access_NoVis_SubSet

*Description:*
Verify failure when no actor does not have Visibility on a subset of added multiple users

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST3</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:51.957" critical="yes" starttime="20161118 02:12:51.895"></status>
</test>
<test id="s1-s1-s1-t44" name="POST-API_TPC_Add_2Users">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:51.957" starttime="20161118 02:12:51.957"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:51.973" level="INFO">${SQL_GET_USERID} = 62</msg>
<status status="PASS" endtime="20161118 02:12:51.973" starttime="20161118 02:12:51.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.973" level="INFO">62</msg>
<status status="PASS" endtime="20161118 02:12:51.973" starttime="20161118 02:12:51.973"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:51.973" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:51.973" starttime="20161118 02:12:51.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.973" level="INFO">${SQL_GET_USERID} = 62</msg>
<status status="PASS" endtime="20161118 02:12:51.973" starttime="20161118 02:12:51.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.973" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:51.973" starttime="20161118 02:12:51.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.973" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:51.973" starttime="20161118 02:12:51.973"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:51.973" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:51.973" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:51.973" starttime="20161118 02:12:51.973"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.988" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:51.988" starttime="20161118 02:12:51.988"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.988" level="INFO">Set request header "X-USERID" to "62"</msg>
<status status="PASS" endtime="20161118 02:12:51.988" starttime="20161118 02:12:51.988"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:51.988" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:51.988" starttime="20161118 02:12:51.988"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:51.988" starttime="20161118 02:12:51.957"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:51.988" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:52.004" starttime="20161118 02:12:51.988"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:52.004" level="INFO">Request body set to "{   "UserId": 62,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_62",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:52.004" starttime="20161118 02:12:52.004"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.020" starttime="20161118 02:12:52.004"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.020" starttime="20161118 02:12:52.020"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:52.020" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:52.020" starttime="20161118 02:12:52.020"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.020" starttime="20161118 02:12:52.020"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:52.020" starttime="20161118 02:12:51.988"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Add_2Users" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.035" starttime="20161118 02:12:52.035"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161118 02:12:52.035" level="INFO">${SQL_TalentPoolId} = 704</msg>
<status status="PASS" endtime="20161118 02:12:52.035" starttime="20161118 02:12:52.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.051" level="INFO">${SQL_TalentPoolId} = 704</msg>
<status status="PASS" endtime="20161118 02:12:52.051" starttime="20161118 02:12:52.051"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20161118 02:12:52.051" level="INFO">${SQL_UserToAdd1} = 830</msg>
<status status="PASS" endtime="20161118 02:12:52.051" starttime="20161118 02:12:52.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.051" level="INFO">${SQL_UserToAdd1} = 830</msg>
<status status="PASS" endtime="20161118 02:12:52.051" starttime="20161118 02:12:52.051"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id &lt;&gt; ${SQL_UserToAdd1} AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd2}</var>
</assign>
<msg timestamp="20161118 02:12:52.066" level="INFO">${SQL_UserToAdd2} = 531</msg>
<status status="PASS" endtime="20161118 02:12:52.066" starttime="20161118 02:12:52.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd2}</arg>
<arg>${SQL_UserToAdd2}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.082" level="INFO">${SQL_UserToAdd2} = 531</msg>
<status status="PASS" endtime="20161118 02:12:52.082" starttime="20161118 02:12:52.066"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:52.082" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:52.082" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:52.082" starttime="20161118 02:12:52.082"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.082" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:52.082" starttime="20161118 02:12:52.082"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.082" level="INFO">Set request header "X-USERID" to "62"</msg>
<status status="PASS" endtime="20161118 02:12:52.082" starttime="20161118 02:12:52.082"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.082" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:52.082" starttime="20161118 02:12:52.082"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:52.082" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:52.082" starttime="20161118 02:12:52.082"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_UserToAdd1}},{"UserId": ${SQL_UserToAdd2}}]</arg>
</arguments>
<msg timestamp="20161118 02:12:52.082" level="INFO">Request body set to "[{"UserId": 830},{"UserId": 531}]".</msg>
<status status="PASS" endtime="20161118 02:12:52.082" starttime="20161118 02:12:52.082"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161118 02:12:52.082" level="INFO">${SQL_CandidateCountBefore} = 7</msg>
<status status="PASS" endtime="20161118 02:12:52.082" starttime="20161118 02:12:52.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.082" level="INFO">${SQL_CandidateCountBefore} = 7</msg>
<status status="PASS" endtime="20161118 02:12:52.082" starttime="20161118 02:12:52.082"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.207" starttime="20161118 02:12:52.082"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.207" starttime="20161118 02:12:52.207"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:52.207" level="INFO">${resBody} = [{"UserId":830,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"P...</msg>
<status status="PASS" endtime="20161118 02:12:52.207" starttime="20161118 02:12:52.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.223" level="INFO">[{"UserId":830,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":0},{"UserId":531,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":0}]</msg>
<status status="PASS" endtime="20161118 02:12:52.223" starttime="20161118 02:12:52.207"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20161118 02:12:52.223" level="INFO">${SQL_CandidatesCountAfter} = 9</msg>
<status status="PASS" endtime="20161118 02:12:52.223" starttime="20161118 02:12:52.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.223" level="INFO">${SQL_CandidatesCountAfter} = 9</msg>
<status status="PASS" endtime="20161118 02:12:52.223" starttime="20161118 02:12:52.223"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+2</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161118 02:12:52.223" level="INFO">${SQL_NUM} = 9</msg>
<status status="PASS" endtime="20161118 02:12:52.223" starttime="20161118 02:12:52.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.223" level="INFO">9</msg>
<status status="PASS" endtime="20161118 02:12:52.223" starttime="20161118 02:12:52.223"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'== '${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.223" level="INFO">Set test message to:
The 9 matches with 9</msg>
<status status="PASS" endtime="20161118 02:12:52.223" starttime="20161118 02:12:52.223"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:52.223" starttime="20161118 02:12:52.223"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:52.238" starttime="20161118 02:12:52.223"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidatesCountAfter} did not match ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.238" starttime="20161118 02:12:52.238"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:52.238" starttime="20161118 02:12:52.035"></status>
</kw>
<doc>*Name:*
API_TPC_Add_2Users

*Description:*
Verify success when adding 2 users

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>USER</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:52.238" critical="yes" starttime="20161118 02:12:51.957">The 9 matches with 9</status>
</test>
<test id="s1-s1-s1-t45" name="POST-API_TPC_Add_1Users">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.254" starttime="20161118 02:12:52.238"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:52.254" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161118 02:12:52.254" starttime="20161118 02:12:52.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.254" level="INFO">415</msg>
<status status="PASS" endtime="20161118 02:12:52.254" starttime="20161118 02:12:52.254"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:52.254" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:52.254" starttime="20161118 02:12:52.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.254" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161118 02:12:52.254" starttime="20161118 02:12:52.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.254" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:52.254" starttime="20161118 02:12:52.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.254" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:52.254" starttime="20161118 02:12:52.254"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:52.254" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:52.254" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:52.254" starttime="20161118 02:12:52.254"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.254" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:52.270" starttime="20161118 02:12:52.254"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.270" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161118 02:12:52.270" starttime="20161118 02:12:52.270"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.270" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:52.270" starttime="20161118 02:12:52.270"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:52.270" starttime="20161118 02:12:52.238"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:52.270" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:52.270" starttime="20161118 02:12:52.270"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:52.270" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:52.270" starttime="20161118 02:12:52.270"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.285" starttime="20161118 02:12:52.270"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.285" starttime="20161118 02:12:52.285"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:52.285" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:52.285" starttime="20161118 02:12:52.285"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.301" starttime="20161118 02:12:52.301"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:52.301" starttime="20161118 02:12:52.270"></status>
</kw>
<kw name="POST_TalentPool_Add_1Users" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.316" starttime="20161118 02:12:52.301"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161118 02:12:52.316" level="INFO">${SQL_TalentPoolId} = 2395</msg>
<status status="PASS" endtime="20161118 02:12:52.316" starttime="20161118 02:12:52.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.316" level="INFO">${SQL_TalentPoolId} = 2395</msg>
<status status="PASS" endtime="20161118 02:12:52.316" starttime="20161118 02:12:52.316"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20161118 02:12:52.332" level="INFO">${SQL_UserToAdd1} = 848</msg>
<status status="PASS" endtime="20161118 02:12:52.332" starttime="20161118 02:12:52.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.332" level="INFO">${SQL_UserToAdd1} = 848</msg>
<status status="PASS" endtime="20161118 02:12:52.332" starttime="20161118 02:12:52.332"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd2}</var>
</assign>
<msg timestamp="20161118 02:12:52.332" level="INFO">${SQL_UserToAdd2} = 5764</msg>
<status status="PASS" endtime="20161118 02:12:52.332" starttime="20161118 02:12:52.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd2}</arg>
<arg>${SQL_UserToAdd2}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.332" level="INFO">${SQL_UserToAdd2} = 5764</msg>
<status status="PASS" endtime="20161118 02:12:52.332" starttime="20161118 02:12:52.332"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:52.332" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:52.332" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:52.332" starttime="20161118 02:12:52.332"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.348" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:52.348" starttime="20161118 02:12:52.348"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.348" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161118 02:12:52.348" starttime="20161118 02:12:52.348"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.348" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:52.348" starttime="20161118 02:12:52.348"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:52.348" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:52.348" starttime="20161118 02:12:52.348"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_UserToAdd1}}]</arg>
</arguments>
<msg timestamp="20161118 02:12:52.348" level="INFO">Request body set to "[{"UserId": 848}]".</msg>
<status status="PASS" endtime="20161118 02:12:52.348" starttime="20161118 02:12:52.348"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161118 02:12:52.348" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20161118 02:12:52.348" starttime="20161118 02:12:52.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.348" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20161118 02:12:52.348" starttime="20161118 02:12:52.348"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.426" starttime="20161118 02:12:52.348"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.426" starttime="20161118 02:12:52.426"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:52.441" level="INFO">${resBody} = [{"UserId":848,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"P...</msg>
<status status="PASS" endtime="20161118 02:12:52.441" starttime="20161118 02:12:52.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.441" level="INFO">[{"UserId":848,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":0}]</msg>
<status status="PASS" endtime="20161118 02:12:52.441" starttime="20161118 02:12:52.441"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20161118 02:12:52.441" level="INFO">${SQL_CandidatesCountAfter} = 1</msg>
<status status="PASS" endtime="20161118 02:12:52.441" starttime="20161118 02:12:52.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.441" level="INFO">${SQL_CandidatesCountAfter} = 1</msg>
<status status="PASS" endtime="20161118 02:12:52.441" starttime="20161118 02:12:52.441"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+1</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161118 02:12:52.441" level="INFO">${SQL_NUM} = 1</msg>
<status status="PASS" endtime="20161118 02:12:52.441" starttime="20161118 02:12:52.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.457" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:52.457" starttime="20161118 02:12:52.441"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'== '${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.457" level="INFO">Set test message to:
The 1 matches with 1</msg>
<status status="PASS" endtime="20161118 02:12:52.457" starttime="20161118 02:12:52.457"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:52.457" starttime="20161118 02:12:52.457"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:52.457" starttime="20161118 02:12:52.457"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidatesCountAfter} did not match ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.457" starttime="20161118 02:12:52.457"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:52.457" starttime="20161118 02:12:52.301"></status>
</kw>
<doc>*Name:*
API_TPC_Add_1Users

*Description:*
Verify success when adding 1 user

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>USER11</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:52.457" critical="yes" starttime="20161118 02:12:52.238">The 1 matches with 1</status>
</test>
<test id="s1-s1-s1-t46" name="POST-API_TPC_Add_0Users">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.473" starttime="20161118 02:12:52.473"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:52.488" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:52.488" starttime="20161118 02:12:52.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.488" level="INFO">1336</msg>
<status status="PASS" endtime="20161118 02:12:52.488" starttime="20161118 02:12:52.488"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:52.488" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:52.488" starttime="20161118 02:12:52.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.488" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:52.488" starttime="20161118 02:12:52.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.488" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:52.488" starttime="20161118 02:12:52.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.488" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:52.488" starttime="20161118 02:12:52.488"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:52.488" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:52.488" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:52.488" starttime="20161118 02:12:52.488"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.488" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:52.504" starttime="20161118 02:12:52.488"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.504" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:52.504" starttime="20161118 02:12:52.504"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.504" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:52.504" starttime="20161118 02:12:52.504"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:52.504" starttime="20161118 02:12:52.473"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:52.504" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:52.504" starttime="20161118 02:12:52.504"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:52.504" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:52.504" starttime="20161118 02:12:52.504"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.520" starttime="20161118 02:12:52.504"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.520" starttime="20161118 02:12:52.520"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:52.535" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:52.535" starttime="20161118 02:12:52.520"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.535" starttime="20161118 02:12:52.535"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:52.535" starttime="20161118 02:12:52.504"></status>
</kw>
<kw name="POST_TalentPool_Add_0Users" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.551" starttime="20161118 02:12:52.535"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161118 02:12:52.551" level="INFO">${SQL_TalentPoolId} = 2276</msg>
<status status="PASS" endtime="20161118 02:12:52.551" starttime="20161118 02:12:52.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.551" level="INFO">${SQL_TalentPoolId} = 2276</msg>
<status status="PASS" endtime="20161118 02:12:52.551" starttime="20161118 02:12:52.551"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:52.551" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:52.551" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:52.551" starttime="20161118 02:12:52.551"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.566" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:52.566" starttime="20161118 02:12:52.566"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.566" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:52.566" starttime="20161118 02:12:52.566"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.566" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:52.566" starttime="20161118 02:12:52.566"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:52.566" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:52.566" starttime="20161118 02:12:52.566"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{}]</arg>
</arguments>
<msg timestamp="20161118 02:12:52.566" level="INFO">Request body set to "[{}]".</msg>
<status status="PASS" endtime="20161118 02:12:52.566" starttime="20161118 02:12:52.566"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161118 02:12:52.566" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20161118 02:12:52.566" starttime="20161118 02:12:52.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.566" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20161118 02:12:52.566" starttime="20161118 02:12:52.566"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.645" starttime="20161118 02:12:52.566"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.645" starttime="20161118 02:12:52.645"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:52.645" level="INFO">${resBody} = [{"UserId":0,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,...</msg>
<status status="PASS" endtime="20161118 02:12:52.645" starttime="20161118 02:12:52.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.645" level="INFO">[{"UserId":0,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":2}]</msg>
<status status="PASS" endtime="20161118 02:12:52.645" starttime="20161118 02:12:52.645"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20161118 02:12:52.660" level="INFO">${SQL_CandidatesCountAfter} = 0</msg>
<status status="PASS" endtime="20161118 02:12:52.660" starttime="20161118 02:12:52.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.660" level="INFO">${SQL_CandidatesCountAfter} = 0</msg>
<status status="PASS" endtime="20161118 02:12:52.660" starttime="20161118 02:12:52.660"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161118 02:12:52.660" level="INFO">${SQL_NUM} = 0</msg>
<status status="PASS" endtime="20161118 02:12:52.660" starttime="20161118 02:12:52.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.660" level="INFO">0</msg>
<status status="PASS" endtime="20161118 02:12:52.660" starttime="20161118 02:12:52.660"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'== '${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.660" level="INFO">Set test message to:
The 0 matches with 0</msg>
<status status="PASS" endtime="20161118 02:12:52.660" starttime="20161118 02:12:52.660"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:52.660" starttime="20161118 02:12:52.660"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:52.660" starttime="20161118 02:12:52.660"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidatesCountAfter} did not match ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.676" starttime="20161118 02:12:52.660"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:52.676" starttime="20161118 02:12:52.535"></status>
</kw>
<doc>*Name:*
API_TPC_Add_0Users

*Description:*
Verify success when adding 0 users

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>USER12</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:52.676" critical="yes" starttime="20161118 02:12:52.457">The 0 matches with 0</status>
</test>
<test id="s1-s1-s1-t47" name="POST-API_TPC_Add_BaseCase_Input_Vs_Database">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.691" starttime="20161118 02:12:52.676"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:52.691" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:52.691" starttime="20161118 02:12:52.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.691" level="INFO">1336</msg>
<status status="PASS" endtime="20161118 02:12:52.691" starttime="20161118 02:12:52.691"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:52.691" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:52.691" starttime="20161118 02:12:52.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.691" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:52.691" starttime="20161118 02:12:52.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.691" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:52.691" starttime="20161118 02:12:52.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.707" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:52.707" starttime="20161118 02:12:52.691"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:52.707" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:52.707" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:52.707" starttime="20161118 02:12:52.707"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.707" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:52.707" starttime="20161118 02:12:52.707"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.707" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:52.707" starttime="20161118 02:12:52.707"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.707" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:52.707" starttime="20161118 02:12:52.707"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:52.707" starttime="20161118 02:12:52.676"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:52.707" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:52.707" starttime="20161118 02:12:52.707"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:52.707" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:52.707" starttime="20161118 02:12:52.707"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.738" starttime="20161118 02:12:52.707"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.738" starttime="20161118 02:12:52.738"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:52.738" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:52.738" starttime="20161118 02:12:52.738"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.738" starttime="20161118 02:12:52.738"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:52.738" starttime="20161118 02:12:52.707"></status>
</kw>
<kw name="POST_TalentPool_BaseCase_InputVsDataBase" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:52.754" starttime="20161118 02:12:52.738"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161118 02:12:52.754" level="INFO">${SQL_TalentPoolId} = 780</msg>
<status status="PASS" endtime="20161118 02:12:52.754" starttime="20161118 02:12:52.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.770" level="INFO">${SQL_TalentPoolId} = 780</msg>
<status status="PASS" endtime="20161118 02:12:52.770" starttime="20161118 02:12:52.770"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20161118 02:12:52.770" level="INFO">${SQL_UserToAdd1} = 531</msg>
<status status="PASS" endtime="20161118 02:12:52.770" starttime="20161118 02:12:52.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.770" level="INFO">${SQL_UserToAdd1} = 531</msg>
<status status="PASS" endtime="20161118 02:12:52.770" starttime="20161118 02:12:52.770"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:52.770" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:52.770" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:52.770" starttime="20161118 02:12:52.770"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.770" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:52.770" starttime="20161118 02:12:52.770"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.785" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:52.785" starttime="20161118 02:12:52.785"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.785" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:52.785" starttime="20161118 02:12:52.785"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:52.785" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:52.785" starttime="20161118 02:12:52.785"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_UserToAdd1}}]</arg>
</arguments>
<msg timestamp="20161118 02:12:52.785" level="INFO">Request body set to "[{"UserId": 531}]".</msg>
<status status="PASS" endtime="20161118 02:12:52.785" starttime="20161118 02:12:52.785"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161118 02:12:52.785" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20161118 02:12:52.785" starttime="20161118 02:12:52.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20161118 02:12:52.785" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20161118 02:12:52.785" starttime="20161118 02:12:52.785"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:53.020" starttime="20161118 02:12:52.785"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:53.020" starttime="20161118 02:12:53.020"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:53.020" level="INFO">${resBody} = [{"UserId":531,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"P...</msg>
<status status="PASS" endtime="20161118 02:12:53.020" starttime="20161118 02:12:53.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.020" level="INFO">[{"UserId":531,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":0}]</msg>
<status status="PASS" endtime="20161118 02:12:53.020" starttime="20161118 02:12:53.020"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20161118 02:12:53.020" level="INFO">${SQL_CandidatesCountAfter} = 1</msg>
<status status="PASS" endtime="20161118 02:12:53.020" starttime="20161118 02:12:53.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.020" level="INFO">${SQL_CandidatesCountAfter} = 1</msg>
<status status="PASS" endtime="20161118 02:12:53.020" starttime="20161118 02:12:53.020"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+1</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161118 02:12:53.035" level="INFO">${SQL_NUM} = 1</msg>
<status status="PASS" endtime="20161118 02:12:53.035" starttime="20161118 02:12:53.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.035" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:53.035" starttime="20161118 02:12:53.035"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'== '${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.035" level="INFO">Set test message to:
The 1 matches with 1</msg>
<status status="PASS" endtime="20161118 02:12:53.035" starttime="20161118 02:12:53.035"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:53.035" starttime="20161118 02:12:53.035"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:53.035" starttime="20161118 02:12:53.035"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidatesCountAfter} did not match ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:53.051" starttime="20161118 02:12:53.035"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:53.051" starttime="20161118 02:12:52.738"></status>
</kw>
<doc>*Name:*
API_TPC_Add_BaseCase_InputVsDatabase

*Description:*
Verify successful input user ends up in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DB</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:53.051" critical="yes" starttime="20161118 02:12:52.676">The 1 matches with 1</status>
</test>
<test id="s1-s1-s1-t48" name="POST-API_TPC_Add_BaseCase_Input_Vs_Output_Value">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:53.129" starttime="20161118 02:12:53.051"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:53.145" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:53.145" starttime="20161118 02:12:53.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.145" level="INFO">1336</msg>
<status status="PASS" endtime="20161118 02:12:53.145" starttime="20161118 02:12:53.145"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:53.145" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:53.145" starttime="20161118 02:12:53.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.145" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161118 02:12:53.145" starttime="20161118 02:12:53.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.145" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:53.145" starttime="20161118 02:12:53.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.160" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:53.160" starttime="20161118 02:12:53.160"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:53.160" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:53.160" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:53.160" starttime="20161118 02:12:53.160"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.160" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:53.160" starttime="20161118 02:12:53.160"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.160" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:53.160" starttime="20161118 02:12:53.160"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.160" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:53.160" starttime="20161118 02:12:53.160"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:53.160" starttime="20161118 02:12:53.051"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:53.160" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:53.160" starttime="20161118 02:12:53.160"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:53.176" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:53.176" starttime="20161118 02:12:53.160"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:53.191" starttime="20161118 02:12:53.176"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:53.191" starttime="20161118 02:12:53.191"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:53.191" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:53.191" starttime="20161118 02:12:53.191"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:53.191" starttime="20161118 02:12:53.191"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:53.191" starttime="20161118 02:12:53.160"></status>
</kw>
<kw name="POST_TalentPool_BaseCase_InputVsDataBase_Value" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:53.207" starttime="20161118 02:12:53.207"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161118 02:12:53.207" level="INFO">${SQL_TalentPoolId} = 2808</msg>
<status status="PASS" endtime="20161118 02:12:53.223" starttime="20161118 02:12:53.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.223" level="INFO">${SQL_TalentPoolId} = 2808</msg>
<status status="PASS" endtime="20161118 02:12:53.223" starttime="20161118 02:12:53.223"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20161118 02:12:53.223" level="INFO">${SQL_UserToAdd1} = 490</msg>
<status status="PASS" endtime="20161118 02:12:53.223" starttime="20161118 02:12:53.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.223" level="INFO">${SQL_UserToAdd1} = 490</msg>
<status status="PASS" endtime="20161118 02:12:53.223" starttime="20161118 02:12:53.223"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:53.223" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:53.223" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:53.223" starttime="20161118 02:12:53.223"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.223" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:53.223" starttime="20161118 02:12:53.223"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.238" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161118 02:12:53.238" starttime="20161118 02:12:53.238"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.238" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:53.238" starttime="20161118 02:12:53.238"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:53.238" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:53.238" starttime="20161118 02:12:53.238"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_UserToAdd1}}]</arg>
</arguments>
<msg timestamp="20161118 02:12:53.238" level="INFO">Request body set to "[{"UserId": 490}]".</msg>
<status status="PASS" endtime="20161118 02:12:53.238" starttime="20161118 02:12:53.238"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:53.520" starttime="20161118 02:12:53.238"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:53.520" starttime="20161118 02:12:53.520"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:53.520" level="INFO">${resBody} = [{"UserId":490,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"P...</msg>
<status status="PASS" endtime="20161118 02:12:53.520" starttime="20161118 02:12:53.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.535" level="INFO">[{"UserId":490,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":0}]</msg>
<status status="PASS" endtime="20161118 02:12:53.535" starttime="20161118 02:12:53.535"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} AND user_id = ${SQL_UserToAdd1}</arg>
</arguments>
<assign>
<var>${SQL_GetAddedCandidateId}</var>
</assign>
<msg timestamp="20161118 02:12:53.535" level="INFO">${SQL_GetAddedCandidateId} = 490</msg>
<status status="PASS" endtime="20161118 02:12:53.535" starttime="20161118 02:12:53.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetAddedCandidateId}</arg>
<arg>${SQL_GetAddedCandidateId}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.535" level="INFO">${SQL_GetAddedCandidateId} = 490</msg>
<status status="PASS" endtime="20161118 02:12:53.535" starttime="20161118 02:12:53.535"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_UserToAdd1}'== '${SQL_GetAddedCandidateId}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_UserToAdd1} matches with ${SQL_GetAddedCandidateId}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_UserToAdd1} matches with ${SQL_GetAddedCandidateId}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.535" level="INFO">Set test message to:
The 490 matches with 490</msg>
<status status="PASS" endtime="20161118 02:12:53.535" starttime="20161118 02:12:53.535"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:53.535" starttime="20161118 02:12:53.535"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:53.535" starttime="20161118 02:12:53.535"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_UserToAdd1}'&lt;&gt; '${SQL_GetAddedCandidateId}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_UserToAdd1} did not match ${SQL_GetAddedCandidateId}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:53.551" starttime="20161118 02:12:53.535"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:53.551" starttime="20161118 02:12:53.207"></status>
</kw>
<doc>*Name:*
API_TPC_Add_BC_InputVsOutput_Value

*Description:*
Verify successful input user ends up in output

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DBV</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:53.551" critical="yes" starttime="20161118 02:12:53.051">The 490 matches with 490</status>
</test>
<test id="s1-s1-s1-t49" name="PUT-API_TPC_Rename">
<kw name="REST_NOAUTH_Random_Active_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:53.551" starttime="20161118 02:12:53.551"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:53.582" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161118 02:12:53.582" starttime="20161118 02:12:53.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.582" level="INFO">48</msg>
<status status="PASS" endtime="20161118 02:12:53.582" starttime="20161118 02:12:53.582"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:53.582" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:53.582" starttime="20161118 02:12:53.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.582" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161118 02:12:53.582" starttime="20161118 02:12:53.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.582" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:53.582" starttime="20161118 02:12:53.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.582" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:53.582" starttime="20161118 02:12:53.582"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:53.582" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:53.582" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:53.582" starttime="20161118 02:12:53.582"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.598" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:53.598" starttime="20161118 02:12:53.582"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.598" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161118 02:12:53.598" starttime="20161118 02:12:53.598"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.598" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:53.598" starttime="20161118 02:12:53.598"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:53.598" starttime="20161118 02:12:53.551"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:53.598" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:53.598" starttime="20161118 02:12:53.598"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:53.598" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:53.598" starttime="20161118 02:12:53.598"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:53.613" starttime="20161118 02:12:53.598"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:53.613" starttime="20161118 02:12:53.613"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:53.613" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:53.613" starttime="20161118 02:12:53.613"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:53.613" starttime="20161118 02:12:53.613"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:53.629" starttime="20161118 02:12:53.598"></status>
</kw>
<kw name="PUT_TalentPool_Rename_Access" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>test 2</arg>
<arg>Title</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161118 02:12:53.645" level="INFO">${SQL_TalentPoolId} = 5639</msg>
<status status="PASS" endtime="20161118 02:12:53.645" starttime="20161118 02:12:53.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.645" level="INFO">${SQL_TalentPoolId} = 5639</msg>
<status status="PASS" endtime="20161118 02:12:53.645" starttime="20161118 02:12:53.645"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:53.645" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:53.645" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:53.645" starttime="20161118 02:12:53.645"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.645" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:53.645" starttime="20161118 02:12:53.645"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.645" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161118 02:12:53.645" starttime="20161118 02:12:53.645"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.645" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:53.645" starttime="20161118 02:12:53.645"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:53.645" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:53.645" starttime="20161118 02:12:53.645"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161118 02:12:53.645" starttime="20161118 02:12:53.645"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.660" level="INFO">Request body set to "{ "Title":"test 2"}".</msg>
<status status="PASS" endtime="20161118 02:12:53.660" starttime="20161118 02:12:53.660"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:53.738" starttime="20161118 02:12:53.660"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:53.738" level="INFO">${resBody} = {"TalentpoolId":5639,"Title":"test 2","Owner":{"UserId":48,"FirstName":"Jeffrey","LastName":"Trattner"},"CreatedDate":"2016-11-14T15:23:59.587","ModifierId":48,"ModifiedDate":"2016-11-18T10:12:53.6571...</msg>
<status status="PASS" endtime="20161118 02:12:53.738" starttime="20161118 02:12:53.738"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API PUT Test Passed.</arg>
</arguments>
<msg timestamp="20161118 02:12:53.754" level="INFO">Set test message to:
The {"TalentpoolId":5639,"Title":"test 2","Owner":{"UserId":48,"FirstName":"Jeffrey","LastName":"Trattner"},"CreatedDate":"2016-11-14T15:23:59.587","ModifierId":48,"ModifiedDate":"2016-11-18T10:12:53.6571734Z","IsShared":false,"UserCount":0,"LatestUsers":[]} message from the API PUT Test Passed.</msg>
<status status="PASS" endtime="20161118 02:12:53.754" starttime="20161118 02:12:53.738"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:53.754" starttime="20161118 02:12:53.629"></status>
</kw>
<doc>*Name:*
PUT-TP_Rename_Access.

*Description:*
Access: Verify success when actor shared

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:53.754" critical="yes" starttime="20161118 02:12:53.551">The {"TalentpoolId":5639,"Title":"test 2","Owner":{"UserId":48,"FirstName":"Jeffrey","LastName":"Trattner"},"CreatedDate":"2016-11-14T15:23:59.587","ModifierId":48,"ModifiedDate":"2016-11-18T10:12:53.6571734Z","IsShared":false,"UserCount":0,"LatestUsers":[]} message from the API PUT Test Passed.</status>
</test>
<test id="s1-s1-s1-t50" name="PUT-API_Talent_Pool_Candidate_Search_Set_UseCase_Base_InputVsStatusDatabase">
<kw name="REST_NOAUTH_Random_Active_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:53.770" starttime="20161118 02:12:53.754"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:53.770" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161118 02:12:53.770" starttime="20161118 02:12:53.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.770" level="INFO">48</msg>
<status status="PASS" endtime="20161118 02:12:53.770" starttime="20161118 02:12:53.770"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:53.770" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:53.770" starttime="20161118 02:12:53.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.785" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161118 02:12:53.785" starttime="20161118 02:12:53.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.785" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:53.785" starttime="20161118 02:12:53.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.785" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:53.785" starttime="20161118 02:12:53.785"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:53.785" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:53.785" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:53.785" starttime="20161118 02:12:53.785"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.785" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:53.785" starttime="20161118 02:12:53.785"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.785" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161118 02:12:53.785" starttime="20161118 02:12:53.785"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.785" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:53.785" starttime="20161118 02:12:53.785"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:53.785" starttime="20161118 02:12:53.754"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:53.785" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:53.785" starttime="20161118 02:12:53.785"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:53.801" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:53.801" starttime="20161118 02:12:53.785"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:53.816" starttime="20161118 02:12:53.801"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:53.816" starttime="20161118 02:12:53.816"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:53.816" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:53.816" starttime="20161118 02:12:53.816"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:53.816" starttime="20161118 02:12:53.816"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:53.816" starttime="20161118 02:12:53.785"></status>
</kw>
<kw name="PUT_TalentPool_Candidate_Status_Set" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161118 02:12:53.848" level="INFO">${SQL_TalentPoolId} = 3072</msg>
<status status="PASS" endtime="20161118 02:12:53.848" starttime="20161118 02:12:53.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.848" level="INFO">${SQL_TalentPoolId} = 3072</msg>
<status status="PASS" endtime="20161118 02:12:53.848" starttime="20161118 02:12:53.848"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1}</var>
</assign>
<msg timestamp="20161118 02:12:53.863" level="INFO">${SQL_GetCandidateId1} = 762</msg>
<status status="PASS" endtime="20161118 02:12:53.863" starttime="20161118 02:12:53.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1}</arg>
<arg>${SQL_GetCandidateId1}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.863" level="INFO">${SQL_GetCandidateId1} = 762</msg>
<status status="PASS" endtime="20161118 02:12:53.863" starttime="20161118 02:12:53.863"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 status_id FROM ou_user_status WHERE culture_id = 1 AND status_id IN (128,256,512,1024) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1Status}</var>
</assign>
<msg timestamp="20161118 02:12:53.863" level="INFO">${SQL_GetCandidateId1Status} = 512</msg>
<status status="PASS" endtime="20161118 02:12:53.863" starttime="20161118 02:12:53.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1Status}</arg>
<arg>${SQL_GetCandidateId1Status}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.863" level="INFO">${SQL_GetCandidateId1Status} = 512</msg>
<status status="PASS" endtime="20161118 02:12:53.863" starttime="20161118 02:12:53.863"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:53.863" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:53.879" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:53.879" starttime="20161118 02:12:53.863"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.879" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:53.879" starttime="20161118 02:12:53.879"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.879" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161118 02:12:53.879" starttime="20161118 02:12:53.879"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:53.879" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:53.879" starttime="20161118 02:12:53.879"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:53.879" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:53.879" starttime="20161118 02:12:53.879"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_GetCandidateId1},"Status": ${SQL_GetCandidateId1Status}}]</arg>
</arguments>
<msg timestamp="20161118 02:12:53.879" level="INFO">Request body set to "[{"UserId": 762,"Status": 512}]".</msg>
<status status="PASS" endtime="20161118 02:12:53.879" starttime="20161118 02:12:53.879"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates/status</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.020" starttime="20161118 02:12:53.879"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:54.020" level="INFO">${resBody} = [{"UserId":762,"FirstName":"Woods","LastName":"Sebastian","Ref":"Wsebastian","TypeId":0,"UserStatusId":0,"CandidateStatusId":512,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":nu...</msg>
<status status="PASS" endtime="20161118 02:12:54.020" starttime="20161118 02:12:54.020"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT status_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} AND user_id = ${SQL_GetCandidateId1} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidate1Status_After}</var>
</assign>
<msg timestamp="20161118 02:12:54.020" level="INFO">${SQL_GetCandidate1Status_After} = 512</msg>
<status status="PASS" endtime="20161118 02:12:54.020" starttime="20161118 02:12:54.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidate1Status_After}</arg>
<arg>${SQL_GetCandidate1Status_After}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.020" level="INFO">${SQL_GetCandidate1Status_After} = 512</msg>
<status status="PASS" endtime="20161118 02:12:54.035" starttime="20161118 02:12:54.020"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'== '${SQL_GetCandidateId1Status}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.035" level="INFO">Set test message to:
The 512 matches with 512</msg>
<status status="PASS" endtime="20161118 02:12:54.035" starttime="20161118 02:12:54.035"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:54.035" starttime="20161118 02:12:54.035"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:54.035" starttime="20161118 02:12:54.035"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'&lt;&gt; '${SQL_GetCandidateId1Status}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_GetCandidate1Status_After} did not match ${SQL_GetCandidateId1Status}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.035" starttime="20161118 02:12:54.035"></status>
</kw>
<kw name="Close" library="SQLlibrary">
<status status="PASS" endtime="20161118 02:12:54.035" starttime="20161118 02:12:54.035"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:54.035" starttime="20161118 02:12:53.832"></status>
</kw>
<doc>*Name:*
PUT-API_Talent_Pool_Candidate_Search_Set_UseCase_Base_InputVsStatusDatabase

*Description:*
UseCase_Base: Verify provided status matches new entry in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:54.035" critical="yes" starttime="20161118 02:12:53.754">The 512 matches with 512</status>
</test>
<test id="s1-s1-s1-t51" name="PUT-API_TalentPool_Candidate_Status_Set_UseCase_Elaborate_Users_1">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.066" starttime="20161118 02:12:54.051"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:54.113" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161118 02:12:54.113" starttime="20161118 02:12:54.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.113" level="INFO">415</msg>
<status status="PASS" endtime="20161118 02:12:54.113" starttime="20161118 02:12:54.113"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:54.129" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:54.129" starttime="20161118 02:12:54.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.129" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161118 02:12:54.129" starttime="20161118 02:12:54.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.129" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:54.129" starttime="20161118 02:12:54.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.129" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:54.129" starttime="20161118 02:12:54.129"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:54.129" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:54.129" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:54.145" starttime="20161118 02:12:54.129"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.145" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:54.145" starttime="20161118 02:12:54.145"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.145" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161118 02:12:54.145" starttime="20161118 02:12:54.145"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.145" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:54.145" starttime="20161118 02:12:54.145"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:54.145" starttime="20161118 02:12:54.051"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:54.145" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:54.145" starttime="20161118 02:12:54.145"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:54.145" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:54.145" starttime="20161118 02:12:54.145"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.191" starttime="20161118 02:12:54.145"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.191" starttime="20161118 02:12:54.191"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:54.191" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:54.191" starttime="20161118 02:12:54.191"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.191" starttime="20161118 02:12:54.191"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:54.191" starttime="20161118 02:12:54.145"></status>
</kw>
<kw name="PUT_TalentPool_Candidate_Status_Set" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161118 02:12:54.223" level="INFO">${SQL_TalentPoolId} = 2197</msg>
<status status="PASS" endtime="20161118 02:12:54.223" starttime="20161118 02:12:54.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.223" level="INFO">${SQL_TalentPoolId} = 2197</msg>
<status status="PASS" endtime="20161118 02:12:54.223" starttime="20161118 02:12:54.223"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1}</var>
</assign>
<msg timestamp="20161118 02:12:54.223" level="INFO">${SQL_GetCandidateId1} = 829</msg>
<status status="PASS" endtime="20161118 02:12:54.223" starttime="20161118 02:12:54.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1}</arg>
<arg>${SQL_GetCandidateId1}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.223" level="INFO">${SQL_GetCandidateId1} = 829</msg>
<status status="PASS" endtime="20161118 02:12:54.223" starttime="20161118 02:12:54.223"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 status_id FROM ou_user_status WHERE culture_id = 1 AND status_id IN (128,256,512,1024) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1Status}</var>
</assign>
<msg timestamp="20161118 02:12:54.238" level="INFO">${SQL_GetCandidateId1Status} = 1024</msg>
<status status="PASS" endtime="20161118 02:12:54.238" starttime="20161118 02:12:54.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1Status}</arg>
<arg>${SQL_GetCandidateId1Status}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.238" level="INFO">${SQL_GetCandidateId1Status} = 1024</msg>
<status status="PASS" endtime="20161118 02:12:54.238" starttime="20161118 02:12:54.238"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:54.238" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:54.238" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:54.238" starttime="20161118 02:12:54.238"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.238" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:54.238" starttime="20161118 02:12:54.238"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.238" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161118 02:12:54.238" starttime="20161118 02:12:54.238"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.238" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:54.238" starttime="20161118 02:12:54.238"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:54.238" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:54.238" starttime="20161118 02:12:54.238"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_GetCandidateId1},"Status": ${SQL_GetCandidateId1Status}}]</arg>
</arguments>
<msg timestamp="20161118 02:12:54.238" level="INFO">Request body set to "[{"UserId": 829,"Status": 1024}]".</msg>
<status status="PASS" endtime="20161118 02:12:54.238" starttime="20161118 02:12:54.238"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates/status</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.363" starttime="20161118 02:12:54.238"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:54.363" level="INFO">${resBody} = [{"UserId":829,"FirstName":"Watkins","LastName":"Gage","Ref":"Wgage","TypeId":0,"UserStatusId":0,"CandidateStatusId":1024,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"Cre...</msg>
<status status="PASS" endtime="20161118 02:12:54.363" starttime="20161118 02:12:54.363"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT status_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} AND user_id = ${SQL_GetCandidateId1} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidate1Status_After}</var>
</assign>
<msg timestamp="20161118 02:12:54.363" level="INFO">${SQL_GetCandidate1Status_After} = 1024</msg>
<status status="PASS" endtime="20161118 02:12:54.363" starttime="20161118 02:12:54.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidate1Status_After}</arg>
<arg>${SQL_GetCandidate1Status_After}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.363" level="INFO">${SQL_GetCandidate1Status_After} = 1024</msg>
<status status="PASS" endtime="20161118 02:12:54.363" starttime="20161118 02:12:54.363"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'== '${SQL_GetCandidateId1Status}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.379" level="INFO">Set test message to:
The 1024 matches with 1024</msg>
<status status="PASS" endtime="20161118 02:12:54.379" starttime="20161118 02:12:54.379"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:54.379" starttime="20161118 02:12:54.379"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:54.379" starttime="20161118 02:12:54.363"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'&lt;&gt; '${SQL_GetCandidateId1Status}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_GetCandidate1Status_After} did not match ${SQL_GetCandidateId1Status}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.379" starttime="20161118 02:12:54.379"></status>
</kw>
<kw name="Close" library="SQLlibrary">
<status status="PASS" endtime="20161118 02:12:54.379" starttime="20161118 02:12:54.379"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:54.379" starttime="20161118 02:12:54.207"></status>
</kw>
<doc>*Name:*
PUT-API_TP_CS_Set_UC_Elab_Users_1

*Description:*
UseCase_Elaborate: Verify success when status passed is identical

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:54.379" critical="yes" starttime="20161118 02:12:54.035">The 1024 matches with 1024</status>
</test>
<test id="s1-s1-s1-t52" name="PUT-API_TPC_Rename_Access_Owner">
<kw name="REST_NOAUTH_Random_Active_Owner" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.395" starttime="20161118 02:12:54.395"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:54.410" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161118 02:12:54.410" starttime="20161118 02:12:54.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.410" level="INFO">48</msg>
<status status="PASS" endtime="20161118 02:12:54.410" starttime="20161118 02:12:54.410"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:54.410" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:54.410" starttime="20161118 02:12:54.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.410" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161118 02:12:54.410" starttime="20161118 02:12:54.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.426" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:54.426" starttime="20161118 02:12:54.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.426" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:54.426" starttime="20161118 02:12:54.426"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:54.426" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:54.426" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:54.426" starttime="20161118 02:12:54.426"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.426" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:54.426" starttime="20161118 02:12:54.426"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.426" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161118 02:12:54.426" starttime="20161118 02:12:54.426"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.426" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:54.426" starttime="20161118 02:12:54.426"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:54.426" starttime="20161118 02:12:54.395"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:54.426" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:54.426" starttime="20161118 02:12:54.426"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:54.441" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:54.441" starttime="20161118 02:12:54.426"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.457" starttime="20161118 02:12:54.441"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.457" starttime="20161118 02:12:54.457"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:54.457" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:54.457" starttime="20161118 02:12:54.457"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.457" starttime="20161118 02:12:54.457"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:54.457" starttime="20161118 02:12:54.426"></status>
</kw>
<kw name="PUT_TalentPool_Rename_Access_Owner" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>SimpleName</arg>
<arg>Title</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id &lt;&gt; ${SQL_GET_USERID} AND ou_id NOT IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161118 02:12:54.488" level="INFO">${SQL_TalentPoolId} = 2923</msg>
<status status="PASS" endtime="20161118 02:12:54.488" starttime="20161118 02:12:54.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.488" level="INFO">${SQL_TalentPoolId} = 2923</msg>
<status status="PASS" endtime="20161118 02:12:54.488" starttime="20161118 02:12:54.488"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:54.488" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:54.488" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:54.488" starttime="20161118 02:12:54.488"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.488" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:54.488" starttime="20161118 02:12:54.488"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.488" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161118 02:12:54.488" starttime="20161118 02:12:54.488"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.504" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:54.504" starttime="20161118 02:12:54.488"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:54.504" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:54.504" starttime="20161118 02:12:54.504"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161118 02:12:54.504" starttime="20161118 02:12:54.504"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.504" level="INFO">Request body set to "{ "Title":"SimpleName"}".</msg>
<status status="PASS" endtime="20161118 02:12:54.504" starttime="20161118 02:12:54.504"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161118 02:12:54.504" starttime="20161118 02:12:54.504"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.535" starttime="20161118 02:12:54.504"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:54.535" level="INFO">${resBody} = {"Message":"You don't have access to the talentpool."}</msg>
<status status="PASS" endtime="20161118 02:12:54.535" starttime="20161118 02:12:54.535"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20161118 02:12:54.535" level="INFO">Set test message to:
The {"Message":"You don't have access to the talentpool."} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20161118 02:12:54.535" starttime="20161118 02:12:54.535"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:54.535" starttime="20161118 02:12:54.473"></status>
</kw>
<doc>*Name:*
PUT-TP_Rename_Access.

*Description:*
Access: Verify success when actor shared

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:54.535" critical="yes" starttime="20161118 02:12:54.379">The {"Message":"You don't have access to the talentpool."} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-s1-t53" name="PUT-API_TalentPool_Rename_Access_Not_Active">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.551" starttime="20161118 02:12:54.535"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:54.566" level="INFO">${SQL_GET_USERID} = 409</msg>
<status status="PASS" endtime="20161118 02:12:54.566" starttime="20161118 02:12:54.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.566" level="INFO">409</msg>
<status status="PASS" endtime="20161118 02:12:54.566" starttime="20161118 02:12:54.566"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:54.582" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:54.582" starttime="20161118 02:12:54.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.582" level="INFO">${SQL_GET_USERID} = 409</msg>
<status status="PASS" endtime="20161118 02:12:54.582" starttime="20161118 02:12:54.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.582" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:54.582" starttime="20161118 02:12:54.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.582" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:54.582" starttime="20161118 02:12:54.582"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:54.582" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:54.582" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:54.582" starttime="20161118 02:12:54.582"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.582" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:54.582" starttime="20161118 02:12:54.582"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.582" level="INFO">Set request header "X-USERID" to "409"</msg>
<status status="PASS" endtime="20161118 02:12:54.582" starttime="20161118 02:12:54.582"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.582" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:54.582" starttime="20161118 02:12:54.582"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:54.582" starttime="20161118 02:12:54.535"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:54.582" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:54.582" starttime="20161118 02:12:54.582"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:54.598" level="INFO">Request body set to "{   "UserId": 409,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_409",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:54.598" starttime="20161118 02:12:54.582"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.613" starttime="20161118 02:12:54.598"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.613" starttime="20161118 02:12:54.613"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:54.613" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:54.613" starttime="20161118 02:12:54.613"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.613" starttime="20161118 02:12:54.613"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:54.613" starttime="20161118 02:12:54.582"></status>
</kw>
<kw name="PUT_TalentPool_Candidate_Status_Set" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161118 02:12:54.645" level="INFO">${SQL_TalentPoolId} = 220</msg>
<status status="PASS" endtime="20161118 02:12:54.645" starttime="20161118 02:12:54.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.645" level="INFO">${SQL_TalentPoolId} = 220</msg>
<status status="PASS" endtime="20161118 02:12:54.645" starttime="20161118 02:12:54.645"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1}</var>
</assign>
<msg timestamp="20161118 02:12:54.660" level="INFO">${SQL_GetCandidateId1} = 409</msg>
<status status="PASS" endtime="20161118 02:12:54.660" starttime="20161118 02:12:54.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1}</arg>
<arg>${SQL_GetCandidateId1}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.660" level="INFO">${SQL_GetCandidateId1} = 409</msg>
<status status="PASS" endtime="20161118 02:12:54.660" starttime="20161118 02:12:54.660"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 status_id FROM ou_user_status WHERE culture_id = 1 AND status_id IN (128,256,512,1024) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1Status}</var>
</assign>
<msg timestamp="20161118 02:12:54.660" level="INFO">${SQL_GetCandidateId1Status} = 1024</msg>
<status status="PASS" endtime="20161118 02:12:54.660" starttime="20161118 02:12:54.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1Status}</arg>
<arg>${SQL_GetCandidateId1Status}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.676" level="INFO">${SQL_GetCandidateId1Status} = 1024</msg>
<status status="PASS" endtime="20161118 02:12:54.676" starttime="20161118 02:12:54.676"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:54.676" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:54.676" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:54.676" starttime="20161118 02:12:54.676"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.676" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:54.676" starttime="20161118 02:12:54.676"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.676" level="INFO">Set request header "X-USERID" to "409"</msg>
<status status="PASS" endtime="20161118 02:12:54.676" starttime="20161118 02:12:54.676"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.676" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:54.676" starttime="20161118 02:12:54.676"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:54.676" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:54.676" starttime="20161118 02:12:54.676"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_GetCandidateId1},"Status": ${SQL_GetCandidateId1Status}}]</arg>
</arguments>
<msg timestamp="20161118 02:12:54.676" level="INFO">Request body set to "[{"UserId": 409,"Status": 1024}]".</msg>
<status status="PASS" endtime="20161118 02:12:54.676" starttime="20161118 02:12:54.676"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates/status</arg>
</arguments>
<msg timestamp="20161118 02:12:54.754" level="FAIL">Request should have succeeded, but was "401 Unauthorized".</msg>
<status status="FAIL" endtime="20161118 02:12:54.754" starttime="20161118 02:12:54.676"></status>
</kw>
<status status="FAIL" endtime="20161118 02:12:54.754" starttime="20161118 02:12:54.629"></status>
</kw>
<doc>*Name:*
PUT-API_TP_Rename_Access_NotActive

*Description:*
Access: Verify failure when actor not active

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
</tags>
<status status="FAIL" endtime="20161118 02:12:54.754" critical="yes" starttime="20161118 02:12:54.535">Request should have succeeded, but was "401 Unauthorized".</status>
</test>
<test id="s1-s1-s1-t54" name="PUT-API_TalentPool_Rename_Not_Active">
<kw name="REST_NOAUTH_Random_Not_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.770" starttime="20161118 02:12:54.770"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id &lt;&gt; 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:54.816" level="INFO">${SQL_GET_USERID} = 417</msg>
<status status="PASS" endtime="20161118 02:12:54.816" starttime="20161118 02:12:54.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.816" level="INFO">417</msg>
<status status="PASS" endtime="20161118 02:12:54.816" starttime="20161118 02:12:54.816"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:54.832" level="INFO">${SQL_GET_USER_CULTURE} = 12</msg>
<status status="PASS" endtime="20161118 02:12:54.832" starttime="20161118 02:12:54.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.832" level="INFO">${SQL_GET_USERID} = 417</msg>
<status status="PASS" endtime="20161118 02:12:54.832" starttime="20161118 02:12:54.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.832" level="INFO">${SQL_GET_USER_CULTURE} = 12</msg>
<status status="PASS" endtime="20161118 02:12:54.832" starttime="20161118 02:12:54.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.832" level="INFO">12</msg>
<status status="PASS" endtime="20161118 02:12:54.832" starttime="20161118 02:12:54.832"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:54.832" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:54.832" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:54.832" starttime="20161118 02:12:54.832"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.832" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:54.832" starttime="20161118 02:12:54.832"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.832" level="INFO">Set request header "X-USERID" to "417"</msg>
<status status="PASS" endtime="20161118 02:12:54.832" starttime="20161118 02:12:54.832"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.832" level="INFO">Set request header "X-CULTUREID" to "12"</msg>
<status status="PASS" endtime="20161118 02:12:54.832" starttime="20161118 02:12:54.832"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:54.832" starttime="20161118 02:12:54.754"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:54.832" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:54.848" starttime="20161118 02:12:54.832"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:54.848" level="INFO">Request body set to "{   "UserId": 417,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_417",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:54.848" starttime="20161118 02:12:54.848"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.863" starttime="20161118 02:12:54.848"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.863" starttime="20161118 02:12:54.863"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:54.863" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:54.863" starttime="20161118 02:12:54.863"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.863" starttime="20161118 02:12:54.863"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:54.863" starttime="20161118 02:12:54.832"></status>
</kw>
<kw name="PUT_TalentPool_Rename_Access_Not_Active" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>test 2</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID}) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161118 02:12:54.879" level="INFO">${SQL_TalentPoolId} = 3022</msg>
<status status="PASS" endtime="20161118 02:12:54.879" starttime="20161118 02:12:54.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.879" level="INFO">${SQL_TalentPoolId} = 3022</msg>
<status status="PASS" endtime="20161118 02:12:54.879" starttime="20161118 02:12:54.879"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:54.879" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:54.879" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:54.879" starttime="20161118 02:12:54.879"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.879" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:54.879" starttime="20161118 02:12:54.879"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.879" level="INFO">Set request header "X-USERID" to "417"</msg>
<status status="PASS" endtime="20161118 02:12:54.879" starttime="20161118 02:12:54.879"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.895" level="INFO">Set request header "X-CULTUREID" to "12"</msg>
<status status="PASS" endtime="20161118 02:12:54.895" starttime="20161118 02:12:54.895"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:54.895" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:54.895" starttime="20161118 02:12:54.895"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.895" level="INFO">Request body set to "{ "Title":"test 2"}".</msg>
<status status="PASS" endtime="20161118 02:12:54.895" starttime="20161118 02:12:54.895"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.957" starttime="20161118 02:12:54.895"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.957" starttime="20161118 02:12:54.957"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:54.957" level="INFO">${resBody} = {"TalentpoolId":3022,"Title":"test 2","Owner":{"UserId":417,"FirstName":"Bob","LastName":"Bishop"},"CreatedDate":"2016-10-05T21:10:12.82","ModifierId":417,"ModifiedDate":"2016-11-18T10:12:54.9151724Z"...</msg>
<status status="PASS" endtime="20161118 02:12:54.957" starttime="20161118 02:12:54.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.957" level="INFO">{"TalentpoolId":3022,"Title":"test 2","Owner":{"UserId":417,"FirstName":"Bob","LastName":"Bishop"},"CreatedDate":"2016-10-05T21:10:12.82","ModifierId":417,"ModifiedDate":"2016-11-18T10:12:54.9151724Z","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161118 02:12:54.957" starttime="20161118 02:12:54.957"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161118 02:12:54.957" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'test 2', u'TalentpoolId': 3022, u'ModifiedDate': u'2016-11-18T10:12:54.9151724Z', u'CreatedDate': u'2016-10-05T21:10:12.82', u'Owner': {u'LastName': u'Bishop', u'UserI...</msg>
<status status="PASS" endtime="20161118 02:12:54.957" starttime="20161118 02:12:54.957"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161118 02:12:54.957" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'test 2', u'CreatedDate': u'2016-10-05T21:10:12.82', u'ModifiedDate': u'2016-11-18T10:12:54.9151724Z', u'TalentpoolId': 3022, u'Owner': {u'LastName': u'Bishop', u'UserI...</msg>
<status status="PASS" endtime="20161118 02:12:54.957" starttime="20161118 02:12:54.957"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161118 02:12:54.957" level="INFO">${keyValue} = test 2</msg>
<status status="PASS" endtime="20161118 02:12:54.957" starttime="20161118 02:12:54.957"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:54.957" starttime="20161118 02:12:54.879"></status>
</kw>
<doc>*Name:*
PUT-API_TP_Rename_Access_NotActive

*Description:*
Access: Verify failure when actor not active

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:54.957" critical="yes" starttime="20161118 02:12:54.754"></status>
</test>
<test id="s1-s1-s1-t55" name="PUT-API_TalentPool_Candidate_Status_Set_UseCase_Base_InputVsUserDatabase">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:54.973" starttime="20161118 02:12:54.957"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:54.973" level="INFO">${SQL_GET_USERID} = 1</msg>
<status status="PASS" endtime="20161118 02:12:54.973" starttime="20161118 02:12:54.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.973" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:54.973" starttime="20161118 02:12:54.973"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:54.973" level="INFO">${SQL_GET_USER_CULTURE} = 2</msg>
<status status="PASS" endtime="20161118 02:12:54.973" starttime="20161118 02:12:54.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.988" level="INFO">${SQL_GET_USERID} = 1</msg>
<status status="PASS" endtime="20161118 02:12:54.988" starttime="20161118 02:12:54.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.988" level="INFO">${SQL_GET_USER_CULTURE} = 2</msg>
<status status="PASS" endtime="20161118 02:12:54.988" starttime="20161118 02:12:54.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.988" level="INFO">2</msg>
<status status="PASS" endtime="20161118 02:12:54.988" starttime="20161118 02:12:54.988"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:54.988" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:54.988" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:54.988" starttime="20161118 02:12:54.988"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.988" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:54.988" starttime="20161118 02:12:54.988"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.988" level="INFO">Set request header "X-USERID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:54.988" starttime="20161118 02:12:54.988"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:54.988" level="INFO">Set request header "X-CULTUREID" to "2"</msg>
<status status="PASS" endtime="20161118 02:12:54.988" starttime="20161118 02:12:54.988"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:54.988" starttime="20161118 02:12:54.957"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:55.004" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:55.004" starttime="20161118 02:12:55.004"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:55.004" level="INFO">Request body set to "{   "UserId": 1,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161118 02:12:55.004" starttime="20161118 02:12:55.004"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:55.020" starttime="20161118 02:12:55.004"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:55.020" starttime="20161118 02:12:55.020"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:55.020" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161118 02:12:55.020" starttime="20161118 02:12:55.020"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:55.035" starttime="20161118 02:12:55.020"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:55.035" starttime="20161118 02:12:55.004"></status>
</kw>
<kw name="PUT_TalentPool_Candidate_Status_Set" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>test 2</arg>
<arg>Title</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161118 02:12:55.051" level="INFO">${SQL_TalentPoolId} = 827</msg>
<status status="PASS" endtime="20161118 02:12:55.051" starttime="20161118 02:12:55.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.051" level="INFO">${SQL_TalentPoolId} = 827</msg>
<status status="PASS" endtime="20161118 02:12:55.051" starttime="20161118 02:12:55.051"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1}</var>
</assign>
<msg timestamp="20161118 02:12:55.066" level="INFO">${SQL_GetCandidateId1} = 17</msg>
<status status="PASS" endtime="20161118 02:12:55.066" starttime="20161118 02:12:55.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1}</arg>
<arg>${SQL_GetCandidateId1}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.066" level="INFO">${SQL_GetCandidateId1} = 17</msg>
<status status="PASS" endtime="20161118 02:12:55.066" starttime="20161118 02:12:55.066"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 status_id FROM ou_user_status WHERE culture_id = 1 AND status_id IN (128,256,512,1024) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1Status}</var>
</assign>
<msg timestamp="20161118 02:12:55.066" level="INFO">${SQL_GetCandidateId1Status} = 1024</msg>
<status status="PASS" endtime="20161118 02:12:55.066" starttime="20161118 02:12:55.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1Status}</arg>
<arg>${SQL_GetCandidateId1Status}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.066" level="INFO">${SQL_GetCandidateId1Status} = 1024</msg>
<status status="PASS" endtime="20161118 02:12:55.066" starttime="20161118 02:12:55.066"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:55.066" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:55.066" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:55.066" starttime="20161118 02:12:55.066"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.066" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:55.066" starttime="20161118 02:12:55.066"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.066" level="INFO">Set request header "X-USERID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:55.066" starttime="20161118 02:12:55.066"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.082" level="INFO">Set request header "X-CULTUREID" to "2"</msg>
<status status="PASS" endtime="20161118 02:12:55.082" starttime="20161118 02:12:55.082"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161118 02:12:55.082" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161118 02:12:55.082" starttime="20161118 02:12:55.082"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_GetCandidateId1},"Status": ${SQL_GetCandidateId1Status}}]</arg>
</arguments>
<msg timestamp="20161118 02:12:55.082" level="INFO">Request body set to "[{"UserId": 17,"Status": 1024}]".</msg>
<status status="PASS" endtime="20161118 02:12:55.082" starttime="20161118 02:12:55.082"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates/status</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:55.223" starttime="20161118 02:12:55.082"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161118 02:12:55.223" level="INFO">${resBody} = [{"UserId":17,"FirstName":"Ellen","LastName":"Rogers","Ref":"ERogers","TypeId":0,"UserStatusId":0,"CandidateStatusId":1024,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"Cr...</msg>
<status status="PASS" endtime="20161118 02:12:55.223" starttime="20161118 02:12:55.223"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT status_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} AND user_id = ${SQL_GetCandidateId1} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidate1Status_After}</var>
</assign>
<msg timestamp="20161118 02:12:55.223" level="INFO">${SQL_GetCandidate1Status_After} = 1024</msg>
<status status="PASS" endtime="20161118 02:12:55.223" starttime="20161118 02:12:55.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidate1Status_After}</arg>
<arg>${SQL_GetCandidate1Status_After}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.223" level="INFO">${SQL_GetCandidate1Status_After} = 1024</msg>
<status status="PASS" endtime="20161118 02:12:55.223" starttime="20161118 02:12:55.223"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'== '${SQL_GetCandidateId1Status}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.223" level="INFO">Set test message to:
The 1024 matches with 1024</msg>
<status status="PASS" endtime="20161118 02:12:55.223" starttime="20161118 02:12:55.223"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:55.238" starttime="20161118 02:12:55.223"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:55.238" starttime="20161118 02:12:55.223"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'&lt;&gt; '${SQL_GetCandidateId1Status}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_GetCandidate1Status_After} did not match ${SQL_GetCandidateId1Status}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:55.238" starttime="20161118 02:12:55.238"></status>
</kw>
<kw name="Close" library="SQLlibrary">
<status status="PASS" endtime="20161118 02:12:55.238" starttime="20161118 02:12:55.238"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:55.238" starttime="20161118 02:12:55.035"></status>
</kw>
<doc>*Name:*
PUT-API_TC_Status_Set_UC_Base_InputVsUDB

*Description:*
UseCase_Base: Verify provided user matches the new entry in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:55.238" critical="yes" starttime="20161118 02:12:54.957">The 1024 matches with 1024</status>
</test>
<test id="s1-s1-s1-t56" name="DELETE-API_TPC_Remove1Users">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:55.254" starttime="20161118 02:12:55.254"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:55.270" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161118 02:12:55.270" starttime="20161118 02:12:55.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.270" level="INFO">415</msg>
<status status="PASS" endtime="20161118 02:12:55.270" starttime="20161118 02:12:55.270"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:55.270" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:55.270" starttime="20161118 02:12:55.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.285" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161118 02:12:55.285" starttime="20161118 02:12:55.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.285" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:55.285" starttime="20161118 02:12:55.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.285" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:55.285" starttime="20161118 02:12:55.285"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:55.285" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:55.285" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:55.285" starttime="20161118 02:12:55.285"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.285" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:55.285" starttime="20161118 02:12:55.285"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.285" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161118 02:12:55.285" starttime="20161118 02:12:55.285"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.285" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:55.285" starttime="20161118 02:12:55.285"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:55.285" starttime="20161118 02:12:55.238"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161118 02:12:55.285" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161118 02:12:55.285" starttime="20161118 02:12:55.285"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:55.285" starttime="20161118 02:12:55.285"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161118 02:12:55.301" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20161118 02:12:55.301" starttime="20161118 02:12:55.301"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:55.301" level="INFO">${body} = {   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3":...</msg>
<status status="PASS" endtime="20161118 02:12:55.301" starttime="20161118 02:12:55.301"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161118 02:12:55.301" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161118 02:12:55.316" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20161118 02:12:55.332" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161118 02:12:55.332" starttime="20161118 02:12:55.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.332" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161118 02:12:55.332" starttime="20161118 02:12:55.332"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20161118 02:12:55.332" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161118 02:12:55.332" starttime="20161118 02:12:55.332"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:55.332" starttime="20161118 02:12:55.285"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_1User" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remove_1User:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:55.348" starttime="20161118 02:12:55.332"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161118 02:12:55.348" level="INFO">${SQL_TalentPoolId} = 2439</msg>
<status status="PASS" endtime="20161118 02:12:55.348" starttime="20161118 02:12:55.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.348" level="INFO">${SQL_TalentPoolId} = 2439</msg>
<status status="PASS" endtime="20161118 02:12:55.348" starttime="20161118 02:12:55.348"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20161118 02:12:55.363" level="INFO">${SQL_UserToRemove1} = 784</msg>
<status status="PASS" endtime="20161118 02:12:55.363" starttime="20161118 02:12:55.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.363" level="INFO">${SQL_UserToRemove1} = 784</msg>
<status status="PASS" endtime="20161118 02:12:55.363" starttime="20161118 02:12:55.363"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161118 02:12:55.363" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=0415 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20161118 02:12:55.363" starttime="20161118 02:12:55.363"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161118 02:12:55.363" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161118 02:12:55.379" starttime="20161118 02:12:55.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20161118 02:12:55.379" level="INFO">${body} = [{"UserId": 784}]</msg>
<status status="PASS" endtime="20161118 02:12:55.379" starttime="20161118 02:12:55.379"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161118 02:12:55.379" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20161118 02:12:55.379" starttime="20161118 02:12:55.379"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161118 02:12:55.379" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161118 02:12:55.645" level="INFO">Delete Request using : alias=http, uri=/talentpools/2439/candidates, data=[{"UserId": 784}],                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'0415', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20161118 02:12:55.645" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20161118 02:12:55.645" starttime="20161118 02:12:55.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.645" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20161118 02:12:55.645" starttime="20161118 02:12:55.645"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20161118 02:12:55.660" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161118 02:12:55.660" starttime="20161118 02:12:55.645"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20161118 02:12:55.660" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20161118 02:12:55.660" starttime="20161118 02:12:55.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.660" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20161118 02:12:55.660" starttime="20161118 02:12:55.660"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}-1</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161118 02:12:55.660" level="INFO">${SQL_NUM} = 1</msg>
<status status="PASS" endtime="20161118 02:12:55.660" starttime="20161118 02:12:55.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.676" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:55.676" starttime="20161118 02:12:55.660"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.676" level="INFO">Set test message to:
The 1 matches with 1</msg>
<status status="PASS" endtime="20161118 02:12:55.676" starttime="20161118 02:12:55.676"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:55.676" starttime="20161118 02:12:55.676"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:55.676" starttime="20161118 02:12:55.676"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:55.676" starttime="20161118 02:12:55.676"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:55.676" starttime="20161118 02:12:55.332"></status>
</kw>
<tags>
<tag>put</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:55.676" critical="yes" starttime="20161118 02:12:55.238">The 1 matches with 1</status>
</test>
<test id="s1-s1-s1-t57" name="DELETE-API_TPC_Remove_Acc_NOT_TP_Owner">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:55.754" starttime="20161118 02:12:55.676"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:55.770" level="INFO">${SQL_GET_USERID} = 62</msg>
<status status="PASS" endtime="20161118 02:12:55.770" starttime="20161118 02:12:55.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.770" level="INFO">62</msg>
<status status="PASS" endtime="20161118 02:12:55.770" starttime="20161118 02:12:55.770"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:55.770" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:55.770" starttime="20161118 02:12:55.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.770" level="INFO">${SQL_GET_USERID} = 62</msg>
<status status="PASS" endtime="20161118 02:12:55.770" starttime="20161118 02:12:55.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.785" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:55.785" starttime="20161118 02:12:55.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.785" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:55.785" starttime="20161118 02:12:55.785"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:55.785" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:55.785" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:55.785" starttime="20161118 02:12:55.785"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.785" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:55.785" starttime="20161118 02:12:55.785"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.785" level="INFO">Set request header "X-USERID" to "62"</msg>
<status status="PASS" endtime="20161118 02:12:55.785" starttime="20161118 02:12:55.785"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.785" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:55.785" starttime="20161118 02:12:55.785"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:55.785" starttime="20161118 02:12:55.676"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161118 02:12:55.785" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161118 02:12:55.785" starttime="20161118 02:12:55.785"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:55.785" starttime="20161118 02:12:55.785"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161118 02:12:55.785" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20161118 02:12:55.785" starttime="20161118 02:12:55.785"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:55.801" level="INFO">${body} = {   "UserId": 62,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": ...</msg>
<status status="PASS" endtime="20161118 02:12:55.801" starttime="20161118 02:12:55.785"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161118 02:12:55.801" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161118 02:12:55.816" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 62,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_62",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20161118 02:12:55.816" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161118 02:12:55.816" starttime="20161118 02:12:55.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.816" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161118 02:12:55.816" starttime="20161118 02:12:55.816"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20161118 02:12:55.816" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161118 02:12:55.816" starttime="20161118 02:12:55.816"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:55.816" starttime="20161118 02:12:55.785"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_Not_TP_Owner" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remove_1User:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:55.832" starttime="20161118 02:12:55.832"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id &lt;&gt; ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161118 02:12:55.848" level="INFO">${SQL_TalentPoolId} = 5190</msg>
<status status="PASS" endtime="20161118 02:12:55.848" starttime="20161118 02:12:55.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.848" level="INFO">${SQL_TalentPoolId} = 5190</msg>
<status status="PASS" endtime="20161118 02:12:55.848" starttime="20161118 02:12:55.848"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_user.user_id FROM ou_user LEFT JOIN users ON ou_user.user_id = users.user_id WHERE users.user_id &gt; 0 AND ou_user.ou_id = ${SQL_TalentPoolId} AND users.user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND users.status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20161118 02:12:55.863" level="INFO">${SQL_UserToRemove1} = 725</msg>
<status status="PASS" endtime="20161118 02:12:55.863" starttime="20161118 02:12:55.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.863" level="INFO">${SQL_UserToRemove1} = 725</msg>
<status status="PASS" endtime="20161118 02:12:55.863" starttime="20161118 02:12:55.863"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161118 02:12:55.863" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=062 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20161118 02:12:55.863" starttime="20161118 02:12:55.863"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161118 02:12:55.863" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161118 02:12:55.863" starttime="20161118 02:12:55.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20161118 02:12:55.863" level="INFO">${body} = [{"UserId": 725}]</msg>
<status status="PASS" endtime="20161118 02:12:55.863" starttime="20161118 02:12:55.863"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161118 02:12:55.879" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20161118 02:12:55.879" starttime="20161118 02:12:55.863"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161118 02:12:55.879" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161118 02:12:55.941" level="INFO">Delete Request using : alias=http, uri=/talentpools/5190/candidates, data=[{"UserId": 725}],                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'062', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20161118 02:12:55.941" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20161118 02:12:55.941" starttime="20161118 02:12:55.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.941" level="INFO">&lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20161118 02:12:55.941" starttime="20161118 02:12:55.941"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>401</arg>
</arguments>
<msg timestamp="20161118 02:12:55.941" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161118 02:12:55.941" starttime="20161118 02:12:55.941"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20161118 02:12:55.957" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20161118 02:12:55.957" starttime="20161118 02:12:55.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.957" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20161118 02:12:55.957" starttime="20161118 02:12:55.957"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20161118 02:12:55.957" level="INFO">${SQL_NUM} = 1</msg>
<status status="PASS" endtime="20161118 02:12:55.957" starttime="20161118 02:12:55.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.957" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:55.957" starttime="20161118 02:12:55.957"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.957" level="INFO">Set test message to:
The 1 matches with 1</msg>
<status status="PASS" endtime="20161118 02:12:55.957" starttime="20161118 02:12:55.957"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:55.957" starttime="20161118 02:12:55.957"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:55.957" starttime="20161118 02:12:55.957"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:55.973" starttime="20161118 02:12:55.957"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:55.973" starttime="20161118 02:12:55.816"></status>
</kw>
<tags>
<tag>put</tag>
</tags>
<status status="PASS" endtime="20161118 02:12:55.973" critical="yes" starttime="20161118 02:12:55.676">The 1 matches with 1</status>
</test>
<test id="s1-s1-s1-t58" name="DELETE-API_TPC_Remove_AlreadyRemoved_All">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:55.973" starttime="20161118 02:12:55.973"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161118 02:12:55.988" level="INFO">${SQL_GET_USERID} = 58</msg>
<status status="PASS" endtime="20161118 02:12:55.988" starttime="20161118 02:12:55.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:55.988" level="INFO">58</msg>
<status status="PASS" endtime="20161118 02:12:55.988" starttime="20161118 02:12:55.988"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161118 02:12:55.988" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:56.004" starttime="20161118 02:12:55.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:56.004" level="INFO">${SQL_GET_USERID} = 58</msg>
<status status="PASS" endtime="20161118 02:12:56.004" starttime="20161118 02:12:56.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:56.004" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161118 02:12:56.004" starttime="20161118 02:12:56.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:56.004" level="INFO">1</msg>
<status status="PASS" endtime="20161118 02:12:56.004" starttime="20161118 02:12:56.004"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161118 02:12:56.004" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161118 02:12:56.004" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161118 02:12:56.004" starttime="20161118 02:12:56.004"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161118 02:12:56.004" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161118 02:12:56.004" starttime="20161118 02:12:56.004"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161118 02:12:56.004" level="INFO">Set request header "X-USERID" to "58"</msg>
<status status="PASS" endtime="20161118 02:12:56.004" starttime="20161118 02:12:56.004"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161118 02:12:56.004" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161118 02:12:56.004" starttime="20161118 02:12:56.004"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:56.004" starttime="20161118 02:12:55.973"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161118 02:12:56.004" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161118 02:12:56.004" starttime="20161118 02:12:56.004"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:56.004" starttime="20161118 02:12:56.004"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161118 02:12:56.020" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20161118 02:12:56.020" starttime="20161118 02:12:56.004"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161118 02:12:56.020" level="INFO">${body} = {   "UserId": 58,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": ...</msg>
<status status="PASS" endtime="20161118 02:12:56.020" starttime="20161118 02:12:56.020"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161118 02:12:56.020" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161118 02:12:56.035" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 58,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_58",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20161118 02:12:56.035" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161118 02:12:56.035" starttime="20161118 02:12:56.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161118 02:12:56.035" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20161118 02:12:56.035" starttime="20161118 02:12:56.035"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20161118 02:12:56.035" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20161118 02:12:56.035" starttime="20161118 02:12:56.035"></status>
</kw>
<status status="PASS" endtime="20161118 02:12:56.035" starttime="20161118 02:12:56.004"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_AlreadyRemoved_All" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_AlreadyRemoved_All:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161118 02:12:56.051" starttime="20161118 02:12:56.051"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161118 02:12:56.066" level="INFO">${SQL_TalentPoolId} = 784</msg>
<status status="PASS" endtime="20161118 02:12:56.066" starttime="20161118 02:12:56.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161118 02:12:56.066" level="INFO">${SQL_TalentPoolId} = 784</msg>
<status status="PASS" endtime="20161118 02:12:56.066" starttime="20161118 02:12:56.066"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20161118 02:12:56.082" level="INFO">${SQL_UserToRemove1} = 724</msg>
<status status="PASS" endtime="20161118 02:12:56.082" starttime="20161118 02:12:56.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20161118 02:12:56.082" level="INFO">${SQL_UserToRemove1} = 724</msg>
<status status="PASS" endtime="20161118 02:12:56.082" starttime="20161118 02:12:56.082"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 AND user_id &lt;&gt; ${SQL_UserToRemove1} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove2}</var>
</assign>
<msg timestamp="20161118 02:12:56.098" level="INFO">${SQL_UserToRemove2} = 484</msg>
<status status="PASS" endtime="20161118 02:12:56.098" starttime="20161118 02:12:56.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove2}</arg>
<arg>${SQL_UserToRemove2}</arg>
</arguments>
<msg timestamp="20161118 02:12:56.098" level="INFO">${SQL_UserToRemove2} = 484</msg>
<status status="PASS" endtime="20161118 02:12:56.098" starttime="20161118 02:12:56.098"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20161118 02:12:56.098" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=058 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20161118 02:12:56.098" starttime="20161118 02:12:56.098"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20161118 02:12:56.098" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20161118 02:12:56.098" starttime="20161118 02:12:56.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}},{"UserId": ${SQL_UserToRemove2}}]</arg>
</arguments>
<msg timestamp="20161118 02:12:56.098" level="INFO">${body} = [{"UserId": 724},{"UserId": 484}]</msg>
<status status="PASS" endtime="20161118 02:12:56.098" starttime="20161118 02:12:56.098"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161118 02:12:56.113" level="INFO">${SQL_CandidateCountBefore} = 7</msg>
<status status="PASS" endtime="20161118 02:12:56.113" starttime="20161118 02:12:56.098"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20161118 02:12:56.113" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20161118 02:12:56.191" level="INFO">Delete Request using : alias=http, uri=/talentpools/784/candidates, data=[{"UserId": 724},{"UserId": 484}],                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'058', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20161118 02:12:56.191" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20161118 02:12:56.191" starttime="20161118 02:12:56.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20161118 02:12:56.191" level="INFO">&lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20161118 02:12:56.191" starttime="20161118 02:12:56.191"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20161118 02:12:56.191" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20161118 02:12:56.191" level="FAIL">401 != 200</msg>
<status status="FAIL" endtime="20161118 02:12:56.191" starttime="20161118 02:12:56.191"></status>
</kw>
<status status="FAIL" endtime="20161118 02:12:56.191" starttime="20161118 02:12:56.051"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_AlreadyRemoved_All

*Description:*
Verify success when multiple removed users are already removed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>put</tag>
</tags>
<status status="FAIL" endtime="20161118 02:12:56.191" critical="yes" starttime="20161118 02:12:55.973">401 != 200</status>
</test>
<status status="FAIL" endtime="20161118 02:12:56.191" starttime="20161118 02:12:44.254"></status>
</suite>
<status status="FAIL" endtime="20161118 02:12:56.223" starttime="20161118 02:12:44.254"></status>
</suite>
<status status="FAIL" endtime="20161118 02:12:56.238" starttime="20161118 02:12:44.223"></status>
</suite>
<statistics>
<total>
<stat fail="2" pass="56">Critical Tests</stat>
<stat fail="2" pass="56">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="7">ASCII</stat>
<stat fail="0" pass="1">DB</stat>
<stat fail="0" pass="1">DBV</stat>
<stat fail="0" pass="5">NEGATIVETEST</stat>
<stat fail="0" pass="40">POST</stat>
<stat fail="0" pass="2">POST3</stat>
<stat fail="2" pass="8">PUT</stat>
<stat fail="0" pass="1">USER</stat>
<stat fail="0" pass="1">USER11</stat>
<stat fail="0" pass="1">USER12</stat>
</tag>
<suite>
<stat fail="2" id="s1" name="COMP" pass="56">COMP</stat>
<stat fail="2" id="s1-s1" name="TestSuites" pass="56">COMP.TestSuites</stat>
<stat fail="2" id="s1-s1-s1" name="SMP-API-Talent Pool" pass="56">COMP.TestSuites.SMP-API-Talent Pool</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
