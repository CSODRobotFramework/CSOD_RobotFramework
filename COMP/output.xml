<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170405 10:18:32.605" generator="Robot 3.0 (Python 2.7.12 on win32)">
<suite source="C:\Users\gfung\.jenkins\workspace\SMP-API-Talent_Pool_QA052\COMP\TestSuites" id="s1" name="TestSuites">
<suite source="C:\Users\gfung\.jenkins\workspace\SMP-API-Talent_Pool_QA052\COMP\TestSuites\SMP-API-Talent_Pool.robot" id="s1-s1" name="SMP-API-Talent Pool">
<test id="s1-s1-t1" name="POST-API_Talent_Pool_Success_NewEntryExist">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.276" starttime="20170405 10:18:33.136"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:33.292" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170405 10:18:33.292" starttime="20170405 10:18:33.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.292" level="INFO">415</msg>
<status status="PASS" endtime="20170405 10:18:33.292" starttime="20170405 10:18:33.292"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:33.292" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:33.292" starttime="20170405 10:18:33.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.292" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170405 10:18:33.292" starttime="20170405 10:18:33.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.292" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:33.292" starttime="20170405 10:18:33.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.292" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:33.292" starttime="20170405 10:18:33.292"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:33.292" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:33.292" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:33.292" starttime="20170405 10:18:33.292"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.292" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:33.292" starttime="20170405 10:18:33.292"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.292" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170405 10:18:33.292" starttime="20170405 10:18:33.292"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.292" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:33.292" starttime="20170405 10:18:33.292"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:33.292" starttime="20170405 10:18:33.136"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:33.292" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:33.292" starttime="20170405 10:18:33.292"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:33.308" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:33.308" starttime="20170405 10:18:33.292"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.308" starttime="20170405 10:18:33.308"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.323" starttime="20170405 10:18:33.308"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:33.323" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:33.323" starttime="20170405 10:18:33.323"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.323" starttime="20170405 10:18:33.323"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:33.323" starttime="20170405 10:18:33.292"></status>
</kw>
<kw name="POST_TalentPool_Create_Random_Title" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Title</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.355" starttime="20170405 10:18:33.323"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT CONVERT(varchar(255), NEWID())</arg>
</arguments>
<assign>
<var>${SQL_RandomName}</var>
</assign>
<msg timestamp="20170405 10:18:33.355" level="INFO">${SQL_RandomName} = 10626A2A-0E9F-4BDC-B974-581C8728D81B</msg>
<status status="PASS" endtime="20170405 10:18:33.355" starttime="20170405 10:18:33.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_RandomName}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.355" level="INFO">${SQL_RandomName} = 10626A2A-0E9F-4BDC-B974-581C8728D81B</msg>
<status status="PASS" endtime="20170405 10:18:33.355" starttime="20170405 10:18:33.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_RandomName}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.355" level="INFO">10626A2A-0E9F-4BDC-B974-581C8728D81B</msg>
<status status="PASS" endtime="20170405 10:18:33.355" starttime="20170405 10:18:33.355"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:33.355" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:33.355" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:33.355" starttime="20170405 10:18:33.355"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.355" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:33.355" starttime="20170405 10:18:33.355"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.355" level="INFO">Set request header "x-csod-user-id" to "415"</msg>
<status status="PASS" endtime="20170405 10:18:33.355" starttime="20170405 10:18:33.355"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.355" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:33.355" starttime="20170405 10:18:33.355"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:33.355" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:33.355" starttime="20170405 10:18:33.355"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SQL_RandomName}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.355" level="INFO">Request body set to "{ "Title":"10626A2A-0E9F-4BDC-B974-581C8728D81B"}".</msg>
<status status="PASS" endtime="20170405 10:18:33.355" starttime="20170405 10:18:33.355"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.480" starttime="20170405 10:18:33.355"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.480" starttime="20170405 10:18:33.480"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 title FROM ou WHERE ou.type_id = 131072 AND title = '${SQL_RandomName}'</arg>
</arguments>
<assign>
<var>${SQL_GetTalentPoolIdByName}</var>
</assign>
<msg timestamp="20170405 10:18:33.495" level="INFO">${SQL_GetTalentPoolIdByName} = 10626A2A-0E9F-4BDC-B974-581C8728D81B</msg>
<status status="PASS" endtime="20170405 10:18:33.495" starttime="20170405 10:18:33.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GetTalentPoolIdByName}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.495" level="INFO">10626A2A-0E9F-4BDC-B974-581C8728D81B</msg>
<status status="PASS" endtime="20170405 10:18:33.495" starttime="20170405 10:18:33.495"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${SQL_GetTalentPoolIdByName}==${SQL_RandomName}"</arg>
<arg>Set Test Message</arg>
<arg>Passed Random Name was matched with Database entry.</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>Passed Random Name was matched with Database entry.</arg>
</arguments>
<msg timestamp="20170405 10:18:33.495" level="INFO">Set test message to:
Passed Random Name was matched with Database entry.</msg>
<status status="PASS" endtime="20170405 10:18:33.495" starttime="20170405 10:18:33.495"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:33.495" starttime="20170405 10:18:33.495"></status>
</kw>
<kw name="Close" library="SQLlibrary">
<status status="PASS" endtime="20170405 10:18:33.495" starttime="20170405 10:18:33.495"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:33.495" starttime="20170405 10:18:33.323"></status>
</kw>
<doc>*Name:*
API_Talent_Pool_Success_NewEntryExist.

*Description:*
verify new talent pool in data base

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24403</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:33.495" critical="yes" starttime="20170405 10:18:33.120">Passed Random Name was matched with Database entry.</status>
</test>
<test id="s1-s1-t2" name="POST-API_TPC_Length_0">
<kw name="REST_NOAUTH_Shared_TalentPools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.511" starttime="20170405 10:18:33.495"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 talent_pool_shared_user.user_id FROM talent_pool_shared_user JOIN users ON talent_pool_shared_user.user_id = users.user_id WHERE users.culture_lang_id IS NOT NULL GROUP BY talent_pool_shared_user.user_id ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:33.526" level="INFO">${SQL_GET_USERID} = 46</msg>
<status status="PASS" endtime="20170405 10:18:33.526" starttime="20170405 10:18:33.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.526" level="INFO">46</msg>
<status status="PASS" endtime="20170405 10:18:33.526" starttime="20170405 10:18:33.526"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:33.526" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:33.526" starttime="20170405 10:18:33.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.526" level="INFO">${SQL_GET_USERID} = 46</msg>
<status status="PASS" endtime="20170405 10:18:33.526" starttime="20170405 10:18:33.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.526" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:33.526" starttime="20170405 10:18:33.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.526" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:33.526" starttime="20170405 10:18:33.526"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:33.526" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:33.526" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:33.526" starttime="20170405 10:18:33.526"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.526" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:33.526" starttime="20170405 10:18:33.526"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.526" level="INFO">Set request header "X-USERID" to "46"</msg>
<status status="PASS" endtime="20170405 10:18:33.526" starttime="20170405 10:18:33.526"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.526" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:33.526" starttime="20170405 10:18:33.526"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:33.526" starttime="20170405 10:18:33.495"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:33.542" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:33.542" starttime="20170405 10:18:33.542"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:33.542" level="INFO">Request body set to "{   "UserId": 46,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_46",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:33.542" starttime="20170405 10:18:33.542"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.558" starttime="20170405 10:18:33.542"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.558" starttime="20170405 10:18:33.558"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:33.558" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:33.558" starttime="20170405 10:18:33.558"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.558" starttime="20170405 10:18:33.558"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:33.558" starttime="20170405 10:18:33.542"></status>
</kw>
<kw name="POST_TalentPool_Create_Empty_String" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${EMPTY}</arg>
<arg>Title</arg>
<arg>400</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:33.558" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:33.558" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:33.558" starttime="20170405 10:18:33.558"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.558" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:33.558" starttime="20170405 10:18:33.558"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.573" level="INFO">Set request header "x-csod-user-id" to "46"</msg>
<status status="PASS" endtime="20170405 10:18:33.573" starttime="20170405 10:18:33.558"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.573" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:33.573" starttime="20170405 10:18:33.573"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:33.573" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20170405 10:18:33.573" starttime="20170405 10:18:33.573"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20170405 10:18:33.573" starttime="20170405 10:18:33.573"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"${KEY_NAME_JSON}\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.573" level="INFO">Request body set to "{ "Title":""}".</msg>
<status status="PASS" endtime="20170405 10:18:33.573" starttime="20170405 10:18:33.573"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.589" starttime="20170405 10:18:33.573"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.589" starttime="20170405 10:18:33.589"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:33.589" level="INFO">${resBody} = {"Message":"Title cannot be empty."}</msg>
<status status="PASS" endtime="20170405 10:18:33.589" starttime="20170405 10:18:33.589"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20170405 10:18:33.589" level="INFO">Set test message to:
The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20170405 10:18:33.589" starttime="20170405 10:18:33.589"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:33.589" starttime="20170405 10:18:33.558"></status>
</kw>
<doc>*Name:*
Api_TPC_Length_0.

*Description:*
verify failure when title length is 0

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
<tag>testrailid=24404</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:33.589" critical="yes" starttime="20170405 10:18:33.495">The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-t3" name="POST-API_TPC_Length_1">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.605" starttime="20170405 10:18:33.605"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:33.636" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170405 10:18:33.636" starttime="20170405 10:18:33.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.636" level="INFO">415</msg>
<status status="PASS" endtime="20170405 10:18:33.636" starttime="20170405 10:18:33.636"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:33.636" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:33.636" starttime="20170405 10:18:33.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.636" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170405 10:18:33.636" starttime="20170405 10:18:33.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.636" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:33.636" starttime="20170405 10:18:33.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.636" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:33.636" starttime="20170405 10:18:33.636"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:33.636" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:33.636" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:33.636" starttime="20170405 10:18:33.636"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.636" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:33.636" starttime="20170405 10:18:33.636"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.636" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170405 10:18:33.636" starttime="20170405 10:18:33.636"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.636" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:33.651" starttime="20170405 10:18:33.636"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:33.651" starttime="20170405 10:18:33.605"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:33.651" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:33.651" starttime="20170405 10:18:33.651"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:33.651" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:33.651" starttime="20170405 10:18:33.651"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.651" starttime="20170405 10:18:33.651"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.667" starttime="20170405 10:18:33.651"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:33.667" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:33.667" starttime="20170405 10:18:33.667"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.667" starttime="20170405 10:18:33.667"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:33.667" starttime="20170405 10:18:33.651"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>1</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:33.667" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:33.667" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:33.667" starttime="20170405 10:18:33.667"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.667" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:33.667" starttime="20170405 10:18:33.667"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.667" level="INFO">Set request header "x-csod-user-id" to "415"</msg>
<status status="PASS" endtime="20170405 10:18:33.667" starttime="20170405 10:18:33.667"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.667" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:33.667" starttime="20170405 10:18:33.667"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:33.667" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:33.667" starttime="20170405 10:18:33.667"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.683" level="INFO">Request body set to "{ "Title":"1"}".</msg>
<status status="PASS" endtime="20170405 10:18:33.683" starttime="20170405 10:18:33.683"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.714" starttime="20170405 10:18:33.683"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.714" starttime="20170405 10:18:33.714"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:33.714" level="INFO">${resBody} = {"TalentpoolId":12896,"Title":"1","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2017-04-05T17:18:33.85","ModifierId":1,"ModifiedDate":"2017-04-05T17:18:33.85","IsSha...</msg>
<status status="PASS" endtime="20170405 10:18:33.714" starttime="20170405 10:18:33.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.714" level="INFO">{"TalentpoolId":12896,"Title":"1","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2017-04-05T17:18:33.85","ModifierId":1,"ModifiedDate":"2017-04-05T17:18:33.85","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:33.714" starttime="20170405 10:18:33.714"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:33.714" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'1', u'TalentpoolId': 12896, u'ModifiedDate': u'2017-04-05T17:18:33.85', u'CreatedDate': u'2017-04-05T17:18:33.85', u'Owner': {u'LastName': u'Kaplowitz', u'UserId': 415...</msg>
<status status="PASS" endtime="20170405 10:18:33.714" starttime="20170405 10:18:33.714"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:33.714" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'1', u'CreatedDate': u'2017-04-05T17:18:33.85', u'ModifiedDate': u'2017-04-05T17:18:33.85', u'TalentpoolId': 12896, u'Owner': {u'LastName': u'Kaplowitz', u'UserId': 415...</msg>
<status status="PASS" endtime="20170405 10:18:33.714" starttime="20170405 10:18:33.714"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:33.714" level="INFO">${keyValue} = 1</msg>
<status status="PASS" endtime="20170405 10:18:33.714" starttime="20170405 10:18:33.714"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:33.714" starttime="20170405 10:18:33.667"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Length_1

*Description:*
verify success when title length is 1

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24405</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:33.714" critical="yes" starttime="20170405 10:18:33.605"></status>
</test>
<test id="s1-s1-t4" name="POST-API_TPC_Length_50">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.730" starttime="20170405 10:18:33.714"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:33.730" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:33.730" starttime="20170405 10:18:33.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.730" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:33.730" starttime="20170405 10:18:33.730"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:33.730" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:33.730" starttime="20170405 10:18:33.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.745" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:33.745" starttime="20170405 10:18:33.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.745" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:33.745" starttime="20170405 10:18:33.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.745" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:33.745" starttime="20170405 10:18:33.745"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:33.745" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:33.745" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:33.745" starttime="20170405 10:18:33.745"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.745" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:33.745" starttime="20170405 10:18:33.745"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.745" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:33.745" starttime="20170405 10:18:33.745"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.745" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:33.745" starttime="20170405 10:18:33.745"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:33.745" starttime="20170405 10:18:33.714"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:33.745" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:33.745" starttime="20170405 10:18:33.745"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:33.745" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:33.745" starttime="20170405 10:18:33.745"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.761" starttime="20170405 10:18:33.745"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.761" starttime="20170405 10:18:33.761"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:33.761" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:33.761" starttime="20170405 10:18:33.761"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.761" starttime="20170405 10:18:33.761"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:33.761" starttime="20170405 10:18:33.745"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>12345678901234567890123456789012345678901234567890</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:33.776" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:33.776" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:33.776" starttime="20170405 10:18:33.776"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.776" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:33.776" starttime="20170405 10:18:33.776"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.776" level="INFO">Set request header "x-csod-user-id" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:33.776" starttime="20170405 10:18:33.776"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.776" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:33.776" starttime="20170405 10:18:33.776"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:33.776" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:33.776" starttime="20170405 10:18:33.776"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.776" level="INFO">Request body set to "{ "Title":"12345678901234567890123456789012345678901234567890"}".</msg>
<status status="PASS" endtime="20170405 10:18:33.776" starttime="20170405 10:18:33.776"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.808" starttime="20170405 10:18:33.776"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.808" starttime="20170405 10:18:33.808"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:33.808" level="INFO">${resBody} = {"TalentpoolId":12897,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":...</msg>
<status status="PASS" endtime="20170405 10:18:33.808" starttime="20170405 10:18:33.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.808" level="INFO">{"TalentpoolId":12897,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2017-04-05T17:18:33.943","ModifierId":1,"ModifiedDate":"2017-04-05T17:18:33.943","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:33.808" starttime="20170405 10:18:33.808"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:33.808" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'TalentpoolId': 12897, u'ModifiedDate': u'2017-04-05T17:18:33.943', u'CreatedDate': u'2017-04-05T17:18:33.943', u...</msg>
<status status="PASS" endtime="20170405 10:18:33.808" starttime="20170405 10:18:33.808"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:33.808" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'CreatedDate': u'2017-04-05T17:18:33.943', u'ModifiedDate': u'2017-04-05T17:18:33.943', u'TalentpoolId': 12897, u...</msg>
<status status="PASS" endtime="20170405 10:18:33.808" starttime="20170405 10:18:33.808"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:33.823" level="INFO">${keyValue} = 12345678901234567890123456789012345678901234567890</msg>
<status status="PASS" endtime="20170405 10:18:33.823" starttime="20170405 10:18:33.808"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:33.823" starttime="20170405 10:18:33.776"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Length_50

*Description:*
verify success when title length is 50

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24406</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:33.823" critical="yes" starttime="20170405 10:18:33.714"></status>
</test>
<test id="s1-s1-t5" name="POST-API_TPC_Length_51">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.855" starttime="20170405 10:18:33.823"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:33.870" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170405 10:18:33.870" starttime="20170405 10:18:33.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.870" level="INFO">415</msg>
<status status="PASS" endtime="20170405 10:18:33.870" starttime="20170405 10:18:33.870"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:33.870" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:33.870" starttime="20170405 10:18:33.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.870" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170405 10:18:33.870" starttime="20170405 10:18:33.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.870" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:33.870" starttime="20170405 10:18:33.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.870" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:33.870" starttime="20170405 10:18:33.870"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:33.870" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:33.870" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:33.870" starttime="20170405 10:18:33.870"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.870" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:33.870" starttime="20170405 10:18:33.870"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.870" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170405 10:18:33.870" starttime="20170405 10:18:33.870"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.870" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:33.870" starttime="20170405 10:18:33.870"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:33.870" starttime="20170405 10:18:33.823"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:33.870" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:33.886" starttime="20170405 10:18:33.870"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:33.886" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:33.886" starttime="20170405 10:18:33.886"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.886" starttime="20170405 10:18:33.886"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.886" starttime="20170405 10:18:33.886"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:33.886" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:33.886" starttime="20170405 10:18:33.886"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.886" starttime="20170405 10:18:33.886"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:33.886" starttime="20170405 10:18:33.870"></status>
</kw>
<kw name="POST_TalentPool_Create_Over_Max_Count" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>123456789012345678901234567890123456789012345678901</arg>
<arg>Title</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:33.901" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:33.901" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:33.901" starttime="20170405 10:18:33.901"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.901" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:33.901" starttime="20170405 10:18:33.901"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.901" level="INFO">Set request header "x-csod-user-id" to "415"</msg>
<status status="PASS" endtime="20170405 10:18:33.901" starttime="20170405 10:18:33.901"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.901" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:33.901" starttime="20170405 10:18:33.901"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:33.901" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:33.901" starttime="20170405 10:18:33.901"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20170405 10:18:33.901" starttime="20170405 10:18:33.901"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.901" level="INFO">Request body set to "{ "Title":"123456789012345678901234567890123456789012345678901"}".</msg>
<status status="PASS" endtime="20170405 10:18:33.901" starttime="20170405 10:18:33.901"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.933" starttime="20170405 10:18:33.901"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:33.933" level="INFO">${resBody} = {"Message":"Maximum length for title is 50 characters."}</msg>
<status status="PASS" endtime="20170405 10:18:33.933" starttime="20170405 10:18:33.933"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20170405 10:18:33.933" level="INFO">Set test message to:
The {"Message":"Maximum length for title is 50 characters."} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20170405 10:18:33.933" starttime="20170405 10:18:33.933"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:33.933" starttime="20170405 10:18:33.901"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Length_51

*Description:*
verify failure when title length is 51

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
<tag>testrailid=24407</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:33.933" critical="yes" starttime="20170405 10:18:33.823">The {"Message":"Maximum length for title is 50 characters."} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-t6" name="POST-API_TPC_Trim_Space">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:33.964" starttime="20170405 10:18:33.933"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:33.964" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170405 10:18:33.964" starttime="20170405 10:18:33.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.964" level="INFO">1338</msg>
<status status="PASS" endtime="20170405 10:18:33.980" starttime="20170405 10:18:33.964"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:33.980" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:33.980" starttime="20170405 10:18:33.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.980" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170405 10:18:33.980" starttime="20170405 10:18:33.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.980" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:33.980" starttime="20170405 10:18:33.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.980" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:33.980" starttime="20170405 10:18:33.980"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:33.980" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:33.980" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:33.980" starttime="20170405 10:18:33.980"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.980" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:33.980" starttime="20170405 10:18:33.980"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.980" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20170405 10:18:33.980" starttime="20170405 10:18:33.980"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:33.980" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:33.980" starttime="20170405 10:18:33.980"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:33.980" starttime="20170405 10:18:33.933"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:33.980" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:33.980" starttime="20170405 10:18:33.980"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:33.980" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:33.980" starttime="20170405 10:18:33.980"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.019" starttime="20170405 10:18:33.980"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.019" starttime="20170405 10:18:34.019"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:34.023" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:34.023" starttime="20170405 10:18:34.019"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.023" starttime="20170405 10:18:34.023"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.023" starttime="20170405 10:18:33.980"></status>
</kw>
<kw name="POST_TalentPool_Create_Empty_String" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${SPACE * 3}</arg>
<arg>Title</arg>
<arg>400</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:34.031" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:34.031" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:34.031" starttime="20170405 10:18:34.031"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.031" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:34.031" starttime="20170405 10:18:34.031"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.035" level="INFO">Set request header "x-csod-user-id" to "1338"</msg>
<status status="PASS" endtime="20170405 10:18:34.035" starttime="20170405 10:18:34.031"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.035" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:34.035" starttime="20170405 10:18:34.035"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:34.035" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20170405 10:18:34.035" starttime="20170405 10:18:34.035"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20170405 10:18:34.039" starttime="20170405 10:18:34.039"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"${KEY_NAME_JSON}\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.039" level="INFO">Request body set to "{ "Title":"   "}".</msg>
<status status="PASS" endtime="20170405 10:18:34.039" starttime="20170405 10:18:34.039"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.063" starttime="20170405 10:18:34.039"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.063" starttime="20170405 10:18:34.063"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:34.067" level="INFO">${resBody} = {"Message":"Title cannot be empty."}</msg>
<status status="PASS" endtime="20170405 10:18:34.067" starttime="20170405 10:18:34.063"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20170405 10:18:34.067" level="INFO">Set test message to:
The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20170405 10:18:34.067" starttime="20170405 10:18:34.067"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.067" starttime="20170405 10:18:34.031"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Space

*Description:*
verify trimming with only space

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
<tag>testrailid=24408</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:34.067" critical="yes" starttime="20170405 10:18:33.933">The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-t7" name="POST-API_TPC_Trim_TabSpace">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.106" starttime="20170405 10:18:34.071"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:34.112" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170405 10:18:34.112" starttime="20170405 10:18:34.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.112" level="INFO">415</msg>
<status status="PASS" endtime="20170405 10:18:34.112" starttime="20170405 10:18:34.112"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:34.112" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:34.112" starttime="20170405 10:18:34.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.112" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170405 10:18:34.112" starttime="20170405 10:18:34.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.112" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:34.112" starttime="20170405 10:18:34.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.112" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:34.112" starttime="20170405 10:18:34.112"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:34.112" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:34.112" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:34.112" starttime="20170405 10:18:34.112"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.112" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:34.112" starttime="20170405 10:18:34.112"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.112" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170405 10:18:34.112" starttime="20170405 10:18:34.112"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.112" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:34.112" starttime="20170405 10:18:34.112"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.112" starttime="20170405 10:18:34.067"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:34.112" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:34.112" starttime="20170405 10:18:34.112"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:34.127" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:34.127" starttime="20170405 10:18:34.112"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.127" starttime="20170405 10:18:34.127"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.127" starttime="20170405 10:18:34.127"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:34.127" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:34.127" starttime="20170405 10:18:34.127"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.127" starttime="20170405 10:18:34.127"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.127" starttime="20170405 10:18:34.112"></status>
</kw>
<kw name="POST_TalentPool_Create_Empty_String" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${EMPTY}</arg>
<arg>Title</arg>
<arg>400</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:34.143" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:34.143" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:34.143" starttime="20170405 10:18:34.143"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.143" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:34.143" starttime="20170405 10:18:34.143"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.143" level="INFO">Set request header "x-csod-user-id" to "415"</msg>
<status status="PASS" endtime="20170405 10:18:34.143" starttime="20170405 10:18:34.143"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.143" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:34.143" starttime="20170405 10:18:34.143"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:34.143" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20170405 10:18:34.143" starttime="20170405 10:18:34.143"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20170405 10:18:34.143" starttime="20170405 10:18:34.143"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"${KEY_NAME_JSON}\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.143" level="INFO">Request body set to "{ "Title":""}".</msg>
<status status="PASS" endtime="20170405 10:18:34.143" starttime="20170405 10:18:34.143"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.174" starttime="20170405 10:18:34.143"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.174" starttime="20170405 10:18:34.174"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:34.174" level="INFO">${resBody} = {"Message":"Title cannot be empty."}</msg>
<status status="PASS" endtime="20170405 10:18:34.174" starttime="20170405 10:18:34.174"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20170405 10:18:34.174" level="INFO">Set test message to:
The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20170405 10:18:34.174" starttime="20170405 10:18:34.174"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.174" starttime="20170405 10:18:34.143"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_TabSpace

*Description:*
verify trimming with only tab-space

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
<tag>testrailid=24409</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:34.174" critical="yes" starttime="20170405 10:18:34.067">The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-t8" name="POST-API_TPC_Trim_Leading">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.205" starttime="20170405 10:18:34.174"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:34.221" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170405 10:18:34.221" starttime="20170405 10:18:34.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.221" level="INFO">48</msg>
<status status="PASS" endtime="20170405 10:18:34.221" starttime="20170405 10:18:34.221"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:34.221" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:34.221" starttime="20170405 10:18:34.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.221" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170405 10:18:34.221" starttime="20170405 10:18:34.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.221" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:34.221" starttime="20170405 10:18:34.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.221" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:34.221" starttime="20170405 10:18:34.221"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:34.221" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:34.221" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:34.221" starttime="20170405 10:18:34.221"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.221" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:34.221" starttime="20170405 10:18:34.221"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.221" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170405 10:18:34.221" starttime="20170405 10:18:34.221"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.221" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:34.221" starttime="20170405 10:18:34.221"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.221" starttime="20170405 10:18:34.174"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:34.221" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:34.221" starttime="20170405 10:18:34.221"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:34.237" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:34.237" starttime="20170405 10:18:34.221"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.237" starttime="20170405 10:18:34.237"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.237" starttime="20170405 10:18:34.237"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:34.237" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:34.237" starttime="20170405 10:18:34.237"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.237" starttime="20170405 10:18:34.237"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.237" starttime="20170405 10:18:34.221"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${SPACE * 2}Leading</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:34.252" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:34.252" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:34.252" starttime="20170405 10:18:34.252"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.252" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:34.252" starttime="20170405 10:18:34.252"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.252" level="INFO">Set request header "x-csod-user-id" to "48"</msg>
<status status="PASS" endtime="20170405 10:18:34.252" starttime="20170405 10:18:34.252"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.252" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:34.252" starttime="20170405 10:18:34.252"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:34.252" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:34.252" starttime="20170405 10:18:34.252"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.252" level="INFO">Request body set to "{ "Title":"  Leading"}".</msg>
<status status="PASS" endtime="20170405 10:18:34.252" starttime="20170405 10:18:34.252"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.299" starttime="20170405 10:18:34.252"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.299" starttime="20170405 10:18:34.299"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:34.299" level="INFO">${resBody} = {"TalentpoolId":12898,"Title":"Leading","Owner":{"UserId":48,"FirstName":"Jeffrey","LastName":"Trattner"},"CreatedDate":"2017-04-05T17:18:34.427","ModifierId":1,"ModifiedDate":"2017-04-05T17:18:34.427...</msg>
<status status="PASS" endtime="20170405 10:18:34.299" starttime="20170405 10:18:34.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.315" level="INFO">{"TalentpoolId":12898,"Title":"Leading","Owner":{"UserId":48,"FirstName":"Jeffrey","LastName":"Trattner"},"CreatedDate":"2017-04-05T17:18:34.427","ModifierId":1,"ModifiedDate":"2017-04-05T17:18:34.427","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:34.315" starttime="20170405 10:18:34.299"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:34.315" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'Leading', u'TalentpoolId': 12898, u'ModifiedDate': u'2017-04-05T17:18:34.427', u'CreatedDate': u'2017-04-05T17:18:34.427', u'Owner': {u'LastName': u'Trattner', u'UserI...</msg>
<status status="PASS" endtime="20170405 10:18:34.315" starttime="20170405 10:18:34.315"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:34.315" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'Leading', u'CreatedDate': u'2017-04-05T17:18:34.427', u'ModifiedDate': u'2017-04-05T17:18:34.427', u'TalentpoolId': 12898, u'Owner': {u'LastName': u'Trattner', u'UserI...</msg>
<status status="PASS" endtime="20170405 10:18:34.315" starttime="20170405 10:18:34.315"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:34.315" level="INFO">${keyValue} = Leading</msg>
<status status="PASS" endtime="20170405 10:18:34.315" starttime="20170405 10:18:34.315"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.315" starttime="20170405 10:18:34.252"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Leading

*Description:*
verify trimming leading spaces

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24410</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:34.315" critical="yes" starttime="20170405 10:18:34.174"></status>
</test>
<test id="s1-s1-t9" name="POST-API_TPC_Trim_Trailing">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.346" starttime="20170405 10:18:34.315"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:34.362" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170405 10:18:34.362" starttime="20170405 10:18:34.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.362" level="INFO">48</msg>
<status status="PASS" endtime="20170405 10:18:34.362" starttime="20170405 10:18:34.362"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:34.362" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:34.362" starttime="20170405 10:18:34.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.362" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170405 10:18:34.362" starttime="20170405 10:18:34.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.362" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:34.362" starttime="20170405 10:18:34.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.362" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:34.362" starttime="20170405 10:18:34.362"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:34.362" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:34.362" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:34.362" starttime="20170405 10:18:34.362"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.362" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:34.362" starttime="20170405 10:18:34.362"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.362" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170405 10:18:34.362" starttime="20170405 10:18:34.362"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.362" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:34.362" starttime="20170405 10:18:34.362"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.362" starttime="20170405 10:18:34.315"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:34.377" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:34.377" starttime="20170405 10:18:34.377"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:34.377" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:34.377" starttime="20170405 10:18:34.377"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.377" starttime="20170405 10:18:34.377"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.377" starttime="20170405 10:18:34.377"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:34.393" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:34.393" starttime="20170405 10:18:34.393"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.393" starttime="20170405 10:18:34.393"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.393" starttime="20170405 10:18:34.362"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Trailing${SPACE * 2}</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:34.393" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:34.393" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:34.393" starttime="20170405 10:18:34.393"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.393" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:34.393" starttime="20170405 10:18:34.393"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.393" level="INFO">Set request header "x-csod-user-id" to "48"</msg>
<status status="PASS" endtime="20170405 10:18:34.393" starttime="20170405 10:18:34.393"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.393" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:34.393" starttime="20170405 10:18:34.393"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:34.393" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:34.393" starttime="20170405 10:18:34.393"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.409" level="INFO">Request body set to "{ "Title":"Trailing  "}".</msg>
<status status="PASS" endtime="20170405 10:18:34.409" starttime="20170405 10:18:34.393"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.471" starttime="20170405 10:18:34.409"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.471" starttime="20170405 10:18:34.471"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:34.471" level="INFO">${resBody} = {"TalentpoolId":12899,"Title":"Trailing","Owner":{"UserId":48,"FirstName":"Jeffrey","LastName":"Trattner"},"CreatedDate":"2017-04-05T17:18:34.57","ModifierId":1,"ModifiedDate":"2017-04-05T17:18:34.57"...</msg>
<status status="PASS" endtime="20170405 10:18:34.471" starttime="20170405 10:18:34.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.471" level="INFO">{"TalentpoolId":12899,"Title":"Trailing","Owner":{"UserId":48,"FirstName":"Jeffrey","LastName":"Trattner"},"CreatedDate":"2017-04-05T17:18:34.57","ModifierId":1,"ModifiedDate":"2017-04-05T17:18:34.57","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:34.471" starttime="20170405 10:18:34.471"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:34.471" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'Trailing', u'TalentpoolId': 12899, u'ModifiedDate': u'2017-04-05T17:18:34.57', u'CreatedDate': u'2017-04-05T17:18:34.57', u'Owner': {u'LastName': u'Trattner', u'UserId...</msg>
<status status="PASS" endtime="20170405 10:18:34.471" starttime="20170405 10:18:34.471"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:34.471" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'Trailing', u'CreatedDate': u'2017-04-05T17:18:34.57', u'ModifiedDate': u'2017-04-05T17:18:34.57', u'TalentpoolId': 12899, u'Owner': {u'LastName': u'Trattner', u'UserId...</msg>
<status status="PASS" endtime="20170405 10:18:34.471" starttime="20170405 10:18:34.471"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:34.471" level="INFO">${keyValue} = Trailing</msg>
<status status="PASS" endtime="20170405 10:18:34.471" starttime="20170405 10:18:34.471"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.471" starttime="20170405 10:18:34.393"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Trailing

*Description:*
verify trimming trailing spaces

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24411</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:34.471" critical="yes" starttime="20170405 10:18:34.315"></status>
</test>
<test id="s1-s1-t10" name="POST-API_TPC_Trim_Middle">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.487" starttime="20170405 10:18:34.487"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:34.502" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170405 10:18:34.502" starttime="20170405 10:18:34.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.502" level="INFO">415</msg>
<status status="PASS" endtime="20170405 10:18:34.502" starttime="20170405 10:18:34.502"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:34.502" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:34.502" starttime="20170405 10:18:34.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.502" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170405 10:18:34.502" starttime="20170405 10:18:34.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.502" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:34.502" starttime="20170405 10:18:34.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.502" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:34.502" starttime="20170405 10:18:34.502"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:34.502" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:34.502" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:34.502" starttime="20170405 10:18:34.502"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.502" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:34.502" starttime="20170405 10:18:34.502"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.502" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170405 10:18:34.502" starttime="20170405 10:18:34.502"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.502" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:34.502" starttime="20170405 10:18:34.502"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.502" starttime="20170405 10:18:34.487"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:34.502" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:34.502" starttime="20170405 10:18:34.502"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:34.502" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:34.518" starttime="20170405 10:18:34.502"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.518" starttime="20170405 10:18:34.518"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.518" starttime="20170405 10:18:34.518"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:34.518" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:34.518" starttime="20170405 10:18:34.518"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.518" starttime="20170405 10:18:34.518"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.518" starttime="20170405 10:18:34.502"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>space between</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:34.534" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:34.534" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:34.534" starttime="20170405 10:18:34.534"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.534" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:34.534" starttime="20170405 10:18:34.534"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.534" level="INFO">Set request header "x-csod-user-id" to "415"</msg>
<status status="PASS" endtime="20170405 10:18:34.534" starttime="20170405 10:18:34.534"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.534" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:34.534" starttime="20170405 10:18:34.534"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:34.534" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:34.534" starttime="20170405 10:18:34.534"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.534" level="INFO">Request body set to "{ "Title":"space between"}".</msg>
<status status="PASS" endtime="20170405 10:18:34.534" starttime="20170405 10:18:34.534"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.565" starttime="20170405 10:18:34.534"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.565" starttime="20170405 10:18:34.565"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:34.565" level="INFO">${resBody} = {"TalentpoolId":12900,"Title":"space between","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2017-04-05T17:18:34.71","ModifierId":1,"ModifiedDate":"2017-04-05T17:18:3...</msg>
<status status="PASS" endtime="20170405 10:18:34.565" starttime="20170405 10:18:34.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.565" level="INFO">{"TalentpoolId":12900,"Title":"space between","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2017-04-05T17:18:34.71","ModifierId":1,"ModifiedDate":"2017-04-05T17:18:34.71","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:34.565" starttime="20170405 10:18:34.565"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:34.565" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'space between', u'TalentpoolId': 12900, u'ModifiedDate': u'2017-04-05T17:18:34.71', u'CreatedDate': u'2017-04-05T17:18:34.71', u'Owner': {u'LastName': u'Kaplowitz', u'...</msg>
<status status="PASS" endtime="20170405 10:18:34.565" starttime="20170405 10:18:34.565"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:34.580" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'space between', u'CreatedDate': u'2017-04-05T17:18:34.71', u'ModifiedDate': u'2017-04-05T17:18:34.71', u'TalentpoolId': 12900, u'Owner': {u'LastName': u'Kaplowitz', u'...</msg>
<status status="PASS" endtime="20170405 10:18:34.580" starttime="20170405 10:18:34.580"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:34.580" level="INFO">${keyValue} = space between</msg>
<status status="PASS" endtime="20170405 10:18:34.580" starttime="20170405 10:18:34.580"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.580" starttime="20170405 10:18:34.534"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Middle

*Description:*
verify no trimming middle spaces

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24412</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:34.580" critical="yes" starttime="20170405 10:18:34.487"></status>
</test>
<test id="s1-s1-t11" name="POST-API_TPC_Trim_SpaceAnd50">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.596" starttime="20170405 10:18:34.580"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:34.612" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170405 10:18:34.612" starttime="20170405 10:18:34.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.612" level="INFO">1338</msg>
<status status="PASS" endtime="20170405 10:18:34.612" starttime="20170405 10:18:34.612"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:34.612" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:34.612" starttime="20170405 10:18:34.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.612" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170405 10:18:34.612" starttime="20170405 10:18:34.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.612" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:34.612" starttime="20170405 10:18:34.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.612" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:34.612" starttime="20170405 10:18:34.612"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:34.612" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:34.612" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:34.612" starttime="20170405 10:18:34.612"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.612" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:34.612" starttime="20170405 10:18:34.612"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.612" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20170405 10:18:34.612" starttime="20170405 10:18:34.612"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.612" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:34.612" starttime="20170405 10:18:34.612"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.612" starttime="20170405 10:18:34.580"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:34.612" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:34.612" starttime="20170405 10:18:34.612"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:34.627" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:34.627" starttime="20170405 10:18:34.612"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.627" starttime="20170405 10:18:34.627"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.627" starttime="20170405 10:18:34.627"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:34.627" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:34.627" starttime="20170405 10:18:34.627"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.627" starttime="20170405 10:18:34.627"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.627" starttime="20170405 10:18:34.612"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>12345678901234567890123456789012345678901234567890${SPACE}</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:34.643" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:34.643" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:34.643" starttime="20170405 10:18:34.643"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.643" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:34.643" starttime="20170405 10:18:34.643"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.643" level="INFO">Set request header "x-csod-user-id" to "1338"</msg>
<status status="PASS" endtime="20170405 10:18:34.643" starttime="20170405 10:18:34.643"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.643" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:34.643" starttime="20170405 10:18:34.643"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:34.643" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:34.643" starttime="20170405 10:18:34.643"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.643" level="INFO">Request body set to "{ "Title":"12345678901234567890123456789012345678901234567890 "}".</msg>
<status status="PASS" endtime="20170405 10:18:34.643" starttime="20170405 10:18:34.643"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.674" starttime="20170405 10:18:34.643"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.674" starttime="20170405 10:18:34.674"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:34.674" level="INFO">${resBody} = {"TalentpoolId":12901,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":1338,"FirstName":"smaus","LastName":"smaus"},"CreatedDate":"2017-04-05T17:18:34.82","ModifierId":1,...</msg>
<status status="PASS" endtime="20170405 10:18:34.674" starttime="20170405 10:18:34.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.674" level="INFO">{"TalentpoolId":12901,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":1338,"FirstName":"smaus","LastName":"smaus"},"CreatedDate":"2017-04-05T17:18:34.82","ModifierId":1,"ModifiedDate":"2017-04-05T17:18:34.82","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:34.674" starttime="20170405 10:18:34.674"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:34.674" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'TalentpoolId': 12901, u'ModifiedDate': u'2017-04-05T17:18:34.82', u'CreatedDate': u'2017-04-05T17:18:34.82', u'O...</msg>
<status status="PASS" endtime="20170405 10:18:34.674" starttime="20170405 10:18:34.674"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:34.690" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'CreatedDate': u'2017-04-05T17:18:34.82', u'ModifiedDate': u'2017-04-05T17:18:34.82', u'TalentpoolId': 12901, u'O...</msg>
<status status="PASS" endtime="20170405 10:18:34.690" starttime="20170405 10:18:34.674"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:34.690" level="INFO">${keyValue} = 12345678901234567890123456789012345678901234567890</msg>
<status status="PASS" endtime="20170405 10:18:34.690" starttime="20170405 10:18:34.690"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.690" starttime="20170405 10:18:34.643"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_SpaceAnd50

*Description:*
verify trimming happens before submissions attempt

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24413</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:34.690" critical="yes" starttime="20170405 10:18:34.580"></status>
</test>
<test id="s1-s1-t12" name="POST-API_TPC_Security_Script">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.705" starttime="20170405 10:18:34.690"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:34.705" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170405 10:18:34.705" starttime="20170405 10:18:34.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.705" level="INFO">514</msg>
<status status="PASS" endtime="20170405 10:18:34.705" starttime="20170405 10:18:34.705"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:34.721" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:34.721" starttime="20170405 10:18:34.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.721" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170405 10:18:34.721" starttime="20170405 10:18:34.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.721" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:34.721" starttime="20170405 10:18:34.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.721" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:34.721" starttime="20170405 10:18:34.721"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:34.721" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:34.721" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:34.721" starttime="20170405 10:18:34.721"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.721" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:34.721" starttime="20170405 10:18:34.721"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.721" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20170405 10:18:34.721" starttime="20170405 10:18:34.721"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.721" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:34.721" starttime="20170405 10:18:34.721"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.721" starttime="20170405 10:18:34.690"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:34.721" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:34.721" starttime="20170405 10:18:34.721"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:34.721" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:34.721" starttime="20170405 10:18:34.721"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.737" starttime="20170405 10:18:34.721"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.737" starttime="20170405 10:18:34.737"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:34.737" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:34.737" starttime="20170405 10:18:34.737"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.737" starttime="20170405 10:18:34.737"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.737" starttime="20170405 10:18:34.721"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>&lt;script&gt;alert(123)&lt;/script&gt;</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:34.752" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:34.752" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:34.752" starttime="20170405 10:18:34.752"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.752" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:34.752" starttime="20170405 10:18:34.752"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.752" level="INFO">Set request header "x-csod-user-id" to "514"</msg>
<status status="PASS" endtime="20170405 10:18:34.752" starttime="20170405 10:18:34.752"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.752" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:34.752" starttime="20170405 10:18:34.752"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:34.752" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:34.752" starttime="20170405 10:18:34.752"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.752" level="INFO">Request body set to "{ "Title":"&lt;script&gt;alert(123)&lt;/script&gt;"}".</msg>
<status status="PASS" endtime="20170405 10:18:34.752" starttime="20170405 10:18:34.752"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.799" starttime="20170405 10:18:34.752"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.799" starttime="20170405 10:18:34.799"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:34.799" level="INFO">${resBody} = {"TalentpoolId":12902,"Title":"&lt;script&gt;alert(123)&lt;/script&gt;","Owner":{"UserId":514,"FirstName":"Juan","LastName":"Valle"},"CreatedDate":"2017-04-05T17:18:34.927","ModifierId":1,"ModifiedDate":"2017-04-...</msg>
<status status="PASS" endtime="20170405 10:18:34.799" starttime="20170405 10:18:34.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.799" level="INFO">{"TalentpoolId":12902,"Title":"&lt;script&gt;alert(123)&lt;/script&gt;","Owner":{"UserId":514,"FirstName":"Juan","LastName":"Valle"},"CreatedDate":"2017-04-05T17:18:34.927","ModifierId":1,"ModifiedDate":"2017-04-05T17:18:34.927","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:34.799" starttime="20170405 10:18:34.799"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:34.799" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;script&gt;alert(123)&lt;/script&gt;', u'TalentpoolId': 12902, u'ModifiedDate': u'2017-04-05T17:18:34.927', u'CreatedDate': u'2017-04-05T17:18:34.927', u'Owner': {u'LastName': ...</msg>
<status status="PASS" endtime="20170405 10:18:34.799" starttime="20170405 10:18:34.799"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:34.799" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;script&gt;alert(123)&lt;/script&gt;', u'CreatedDate': u'2017-04-05T17:18:34.927', u'ModifiedDate': u'2017-04-05T17:18:34.927', u'TalentpoolId': 12902, u'Owner': {u'LastName': ...</msg>
<status status="PASS" endtime="20170405 10:18:34.799" starttime="20170405 10:18:34.799"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:34.799" level="INFO">${keyValue} = &lt;script&gt;alert(123)&lt;/script&gt;</msg>
<status status="PASS" endtime="20170405 10:18:34.799" starttime="20170405 10:18:34.799"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.799" starttime="20170405 10:18:34.752"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Security_Script

*Description:*
verify script injection is allowed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24414</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:34.799" critical="yes" starttime="20170405 10:18:34.690"></status>
</test>
<test id="s1-s1-t13" name="POST-API_TPC_Security_SQL">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.831" starttime="20170405 10:18:34.815"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:34.846" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170405 10:18:34.846" starttime="20170405 10:18:34.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.846" level="INFO">1338</msg>
<status status="PASS" endtime="20170405 10:18:34.846" starttime="20170405 10:18:34.846"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:34.846" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:34.846" starttime="20170405 10:18:34.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.846" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170405 10:18:34.846" starttime="20170405 10:18:34.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.846" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:34.846" starttime="20170405 10:18:34.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.846" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:34.846" starttime="20170405 10:18:34.846"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:34.862" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:34.862" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:34.862" starttime="20170405 10:18:34.846"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.862" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:34.862" starttime="20170405 10:18:34.862"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.862" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20170405 10:18:34.862" starttime="20170405 10:18:34.862"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.862" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:34.862" starttime="20170405 10:18:34.862"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.862" starttime="20170405 10:18:34.815"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:34.862" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:34.862" starttime="20170405 10:18:34.862"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:34.862" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:34.862" starttime="20170405 10:18:34.862"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.877" starttime="20170405 10:18:34.862"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.877" starttime="20170405 10:18:34.877"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:34.877" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:34.877" starttime="20170405 10:18:34.877"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.877" starttime="20170405 10:18:34.877"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.877" starttime="20170405 10:18:34.862"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>SELECT * FROM Users</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:34.877" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:34.877" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:34.877" starttime="20170405 10:18:34.877"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.877" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:34.877" starttime="20170405 10:18:34.877"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.877" level="INFO">Set request header "x-csod-user-id" to "1338"</msg>
<status status="PASS" endtime="20170405 10:18:34.877" starttime="20170405 10:18:34.877"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.877" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:34.877" starttime="20170405 10:18:34.877"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:34.893" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:34.893" starttime="20170405 10:18:34.893"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.893" level="INFO">Request body set to "{ "Title":"SELECT * FROM Users"}".</msg>
<status status="PASS" endtime="20170405 10:18:34.893" starttime="20170405 10:18:34.893"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.940" starttime="20170405 10:18:34.893"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.940" starttime="20170405 10:18:34.940"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:34.940" level="INFO">${resBody} = {"TalentpoolId":12903,"Title":"SELECT * FROM Users","Owner":{"UserId":1338,"FirstName":"smaus","LastName":"smaus"},"CreatedDate":"2017-04-05T17:18:35.053","ModifierId":1,"ModifiedDate":"2017-04-05T17:...</msg>
<status status="PASS" endtime="20170405 10:18:34.940" starttime="20170405 10:18:34.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.940" level="INFO">{"TalentpoolId":12903,"Title":"SELECT * FROM Users","Owner":{"UserId":1338,"FirstName":"smaus","LastName":"smaus"},"CreatedDate":"2017-04-05T17:18:35.053","ModifierId":1,"ModifiedDate":"2017-04-05T17:18:35.053","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:34.940" starttime="20170405 10:18:34.940"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:34.940" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'SELECT * FROM Users', u'TalentpoolId': 12903, u'ModifiedDate': u'2017-04-05T17:18:35.053', u'CreatedDate': u'2017-04-05T17:18:35.053', u'Owner': {u'LastName': u'smaus'...</msg>
<status status="PASS" endtime="20170405 10:18:34.940" starttime="20170405 10:18:34.940"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:34.940" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'SELECT * FROM Users', u'CreatedDate': u'2017-04-05T17:18:35.053', u'ModifiedDate': u'2017-04-05T17:18:35.053', u'TalentpoolId': 12903, u'Owner': {u'LastName': u'smaus'...</msg>
<status status="PASS" endtime="20170405 10:18:34.940" starttime="20170405 10:18:34.940"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:34.940" level="INFO">${keyValue} = SELECT * FROM Users</msg>
<status status="PASS" endtime="20170405 10:18:34.940" starttime="20170405 10:18:34.940"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.940" starttime="20170405 10:18:34.877"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Security_SQL

*Description:*
verify sql injection fails

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24415</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:34.940" critical="yes" starttime="20170405 10:18:34.799"></status>
</test>
<test id="s1-s1-t14" name="POST-API_TPC_Characters_Extended3">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.955" starttime="20170405 10:18:34.940"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:34.955" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:34.955" starttime="20170405 10:18:34.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.955" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:34.971" starttime="20170405 10:18:34.955"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:34.971" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:34.971" starttime="20170405 10:18:34.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.971" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:34.971" starttime="20170405 10:18:34.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.971" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:34.971" starttime="20170405 10:18:34.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.971" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:34.971" starttime="20170405 10:18:34.971"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:34.971" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:34.971" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:34.971" starttime="20170405 10:18:34.971"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.971" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:34.971" starttime="20170405 10:18:34.971"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.971" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:34.971" starttime="20170405 10:18:34.971"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:34.971" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:34.971" starttime="20170405 10:18:34.971"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.971" starttime="20170405 10:18:34.940"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:34.971" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:34.971" starttime="20170405 10:18:34.971"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:34.971" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:34.971" starttime="20170405 10:18:34.971"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.987" starttime="20170405 10:18:34.987"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.987" starttime="20170405 10:18:34.987"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:34.987" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:34.987" starttime="20170405 10:18:34.987"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:34.987" starttime="20170405 10:18:34.987"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:34.987" starttime="20170405 10:18:34.971"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>\ º¿¬¬½¼¡«»¦¦¦¦¦¦¦++¦¦++++++--+-+¦¦++--¦-+----++++++</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:35.002" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:35.002" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:35.002" starttime="20170405 10:18:35.002"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.002" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:35.002" starttime="20170405 10:18:35.002"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.002" level="INFO">Set request header "x-csod-user-id" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:35.002" starttime="20170405 10:18:35.002"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.002" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:35.002" starttime="20170405 10:18:35.002"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:35.002" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:35.002" starttime="20170405 10:18:35.002"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.002" level="INFO">Request body set to "{ "Title":" º¿¬¬½¼¡«»¦¦¦¦¦¦¦++¦¦++++++--+-+¦¦++--¦-+----++++++"}".</msg>
<status status="PASS" endtime="20170405 10:18:35.002" starttime="20170405 10:18:35.002"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.065" starttime="20170405 10:18:35.002"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.065" starttime="20170405 10:18:35.065"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:35.065" level="INFO">${resBody} = {"TalentpoolId":12904,"Title":"\xc2\xba\xc2\xbf\xc2\xac\xc2\xac\xc2\xbd\xc2\xbc\xc2\xa1\xc2\xab\xc2\xbb\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6++\xc2\xa6\xc2\xa6++++++--+-+\xc2\xa6\xc2...</msg>
<status status="PASS" endtime="20170405 10:18:35.065" starttime="20170405 10:18:35.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.065" level="INFO">{"TalentpoolId":12904,"Title":"\xc2\xba\xc2\xbf\xc2\xac\xc2\xac\xc2\xbd\xc2\xbc\xc2\xa1\xc2\xab\xc2\xbb\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6++\xc2\xa6\xc2\xa6++++++--+-+\xc2\xa6\xc2\xa6++--\xc2\xa6-+----++++++","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2017-04-05T17:18:35.177","ModifierId":1,"ModifiedDate":"2017-04-05T17:18:35.177","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:35.065" starttime="20170405 10:18:35.065"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:35.065" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\xba\xbf\xac\xac\xbd\xbc\xa1\xab\xbb\xa6\xa6\xa6\xa6\xa6\xa6\xa6++\xa6\xa6++++++--+-+\xa6\xa6++--\xa6-+----++++++', u'TalentpoolId': 12904, u'ModifiedDate': u'2017-04-...</msg>
<status status="PASS" endtime="20170405 10:18:35.065" starttime="20170405 10:18:35.065"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:35.065" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\xba\xbf\xac\xac\xbd\xbc\xa1\xab\xbb\xa6\xa6\xa6\xa6\xa6\xa6\xa6++\xa6\xa6++++++--+-+\xa6\xa6++--\xa6-+----++++++', u'CreatedDate': u'2017-04-05T17:18:35.177', u'Modif...</msg>
<status status="PASS" endtime="20170405 10:18:35.065" starttime="20170405 10:18:35.065"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:35.065" level="INFO">${keyValue} = º¿¬¬½¼¡«»¦¦¦¦¦¦¦++¦¦++++++--+-+¦¦++--¦-+----++++++</msg>
<status status="PASS" endtime="20170405 10:18:35.065" starttime="20170405 10:18:35.065"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.065" starttime="20170405 10:18:35.002"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended3

*Description:*
verify ASCII characters 3

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
<tag>testrailid=24417</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:35.065" critical="yes" starttime="20170405 10:18:34.940"></status>
</test>
<test id="s1-s1-t15" name="POST-API_TPC_Characters_Extended4">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.096" starttime="20170405 10:18:35.065"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:35.098" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170405 10:18:35.098" starttime="20170405 10:18:35.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.098" level="INFO">48</msg>
<status status="PASS" endtime="20170405 10:18:35.098" starttime="20170405 10:18:35.098"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:35.102" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:35.102" starttime="20170405 10:18:35.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.102" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170405 10:18:35.102" starttime="20170405 10:18:35.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.102" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:35.102" starttime="20170405 10:18:35.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.106" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:35.106" starttime="20170405 10:18:35.106"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:35.106" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:35.106" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:35.106" starttime="20170405 10:18:35.106"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.106" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:35.106" starttime="20170405 10:18:35.106"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.106" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170405 10:18:35.106" starttime="20170405 10:18:35.106"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.106" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:35.106" starttime="20170405 10:18:35.106"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.106" starttime="20170405 10:18:35.065"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:35.110" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:35.110" starttime="20170405 10:18:35.110"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:35.114" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:35.114" starttime="20170405 10:18:35.110"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.122" starttime="20170405 10:18:35.114"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.122" starttime="20170405 10:18:35.122"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:35.122" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:35.122" starttime="20170405 10:18:35.122"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.126" starttime="20170405 10:18:35.122"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.126" starttime="20170405 10:18:35.110"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:35.134" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:35.134" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:35.134" starttime="20170405 10:18:35.134"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.134" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:35.134" starttime="20170405 10:18:35.134"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.134" level="INFO">Set request header "x-csod-user-id" to "48"</msg>
<status status="PASS" endtime="20170405 10:18:35.134" starttime="20170405 10:18:35.134"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.138" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:35.138" starttime="20170405 10:18:35.138"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:35.138" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:35.140" starttime="20170405 10:18:35.138"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.140" level="INFO">Request body set to "{ "Title":"++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ"}".</msg>
<status status="PASS" endtime="20170405 10:18:35.140" starttime="20170405 10:18:35.140"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.171" starttime="20170405 10:18:35.140"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.171" starttime="20170405 10:18:35.171"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:35.171" level="INFO">${resBody} = {"TalentpoolId":12905,"Title":"++\xc2\xa6_\xc2\xa6\xc2\xa6\xc2\xafa\xc3\x9fGpSs\xc2\xb5tFTOd8fen=\xc2\xb1==()\xc3\xb7\xcb\x9c\xc2\xb0\xe2\x80\xa2\xc2\xb7vn\xc2\xb2\xc2\xa6\xe2\x82\xac\xe2\x80\x9e\xe2\...</msg>
<status status="PASS" endtime="20170405 10:18:35.171" starttime="20170405 10:18:35.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.171" level="INFO">{"TalentpoolId":12905,"Title":"++\xc2\xa6_\xc2\xa6\xc2\xa6\xc2\xafa\xc3\x9fGpSs\xc2\xb5tFTOd8fen=\xc2\xb1==()\xc3\xb7\xcb\x9c\xc2\xb0\xe2\x80\xa2\xc2\xb7vn\xc2\xb2\xc2\xa6\xe2\x82\xac\xe2\x80\x9e\xe2\x80\xa6\xe2\x80\xa0\xe2\x80\xa1\xcb\x86\xe2\x80\xb0\xc5\xa0\xe2\x80\xb9\xc5\x92\xc5\xbd","Owner":{"UserId":48,"FirstName":"Jeffrey","LastName":"Trattner"},"CreatedDate":"2017-04-05T17:18:35.303","ModifierId":1,"ModifiedDate":"2017-04-05T17:18:35.303","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:35.171" starttime="20170405 10:18:35.171"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:35.171" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'++\xa6_\xa6\xa6\xafa\xdfGpSs\xb5tFTOd8fen=\xb1==()\xf7\u02dc\xb0\u2022\xb7vn\xb2\xa6\u20ac\u201e\u2026\u2020\u2021\u02c6\u2030\u0160\u2039\u0152\u017d', u'TalentpoolId...</msg>
<status status="PASS" endtime="20170405 10:18:35.171" starttime="20170405 10:18:35.171"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:35.171" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'++\xa6_\xa6\xa6\xafa\xdfGpSs\xb5tFTOd8fen=\xb1==()\xf7\u02dc\xb0\u2022\xb7vn\xb2\xa6\u20ac\u201e\u2026\u2020\u2021\u02c6\u2030\u0160\u2039\u0152\u017d', u'CreatedDate'...</msg>
<status status="PASS" endtime="20170405 10:18:35.171" starttime="20170405 10:18:35.171"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:35.171" level="INFO">${keyValue} = ++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ</msg>
<status status="PASS" endtime="20170405 10:18:35.171" starttime="20170405 10:18:35.171"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.171" starttime="20170405 10:18:35.134"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended4

*Description:*
verify ASCII characters 4

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
<tag>testrailid=24418</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:35.171" critical="yes" starttime="20170405 10:18:35.065"></status>
</test>
<test id="s1-s1-t16" name="POST-API_TPC_Characters_Extended5">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.202" starttime="20170405 10:18:35.187"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:35.202" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170405 10:18:35.202" starttime="20170405 10:18:35.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.202" level="INFO">514</msg>
<status status="PASS" endtime="20170405 10:18:35.202" starttime="20170405 10:18:35.202"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:35.202" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:35.202" starttime="20170405 10:18:35.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.202" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170405 10:18:35.202" starttime="20170405 10:18:35.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.202" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:35.202" starttime="20170405 10:18:35.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.202" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:35.202" starttime="20170405 10:18:35.202"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:35.202" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:35.202" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:35.202" starttime="20170405 10:18:35.202"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.202" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:35.202" starttime="20170405 10:18:35.202"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.202" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20170405 10:18:35.202" starttime="20170405 10:18:35.202"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.202" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:35.202" starttime="20170405 10:18:35.202"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.218" starttime="20170405 10:18:35.187"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:35.218" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:35.218" starttime="20170405 10:18:35.218"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:35.218" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:35.218" starttime="20170405 10:18:35.218"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.218" starttime="20170405 10:18:35.218"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.234" starttime="20170405 10:18:35.218"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:35.234" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:35.234" starttime="20170405 10:18:35.234"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.234" starttime="20170405 10:18:35.234"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.234" starttime="20170405 10:18:35.218"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:35.234" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:35.234" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:35.234" starttime="20170405 10:18:35.234"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.234" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:35.234" starttime="20170405 10:18:35.234"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.234" level="INFO">Set request header "x-csod-user-id" to "514"</msg>
<status status="PASS" endtime="20170405 10:18:35.234" starttime="20170405 10:18:35.234"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.234" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:35.234" starttime="20170405 10:18:35.234"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:35.234" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:35.234" starttime="20170405 10:18:35.234"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.234" level="INFO">Request body set to "{ "Title":"‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ"}".</msg>
<status status="PASS" endtime="20170405 10:18:35.234" starttime="20170405 10:18:35.234"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.280" starttime="20170405 10:18:35.234"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.280" starttime="20170405 10:18:35.280"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:35.280" level="INFO">${resBody} = {"TalentpoolId":12906,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\...</msg>
<status status="PASS" endtime="20170405 10:18:35.280" starttime="20170405 10:18:35.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.280" level="INFO">{"TalentpoolId":12906,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\xc2\xae\xc2\xaf\xc2\xb3\xc2\xb4\xc2\xb8U\xc2\xbe\xc3\x80\xc3\x81\xc3\x82\xc3\x83\xc3\x84\xc3\x85\xc3\x88\xc3\x89\xc3\x8a\xc3\x8b\xc3\x8c\xc3\x8d\xc3\x8e\xc3\x8f\xc3\x90\xc3\x92\xc3\x93\xc3\x94\xc3\x95\xc3\x96\xc3\x97\xc3\x98\xc3\x99\xc3\x9a\xc3\x9b\xc3\x9c","Owner":{"UserId":514,"FirstName":"Juan","LastName":"Valle"},"CreatedDate":"2017-04-05T17:18:35.413","ModifierId":1,"ModifiedDate":"2017-04-05T17:18:35.413","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:35.280" starttime="20170405 10:18:35.280"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:35.280" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20170405 10:18:35.280" starttime="20170405 10:18:35.280"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:35.280" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20170405 10:18:35.280" starttime="20170405 10:18:35.280"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:35.280" level="INFO">${keyValue} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20170405 10:18:35.280" starttime="20170405 10:18:35.280"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.280" starttime="20170405 10:18:35.234"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended5

*Description:*
verify ASCII characters 5

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
<tag>testrailid=24419</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:35.280" critical="yes" starttime="20170405 10:18:35.171"></status>
</test>
<test id="s1-s1-t17" name="POST-API_TPC_Characters_Extended6">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.296" starttime="20170405 10:18:35.280"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:35.312" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170405 10:18:35.312" starttime="20170405 10:18:35.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.312" level="INFO">1338</msg>
<status status="PASS" endtime="20170405 10:18:35.312" starttime="20170405 10:18:35.312"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:35.312" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:35.312" starttime="20170405 10:18:35.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.312" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170405 10:18:35.312" starttime="20170405 10:18:35.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.312" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:35.312" starttime="20170405 10:18:35.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.312" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:35.312" starttime="20170405 10:18:35.312"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:35.312" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:35.312" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:35.312" starttime="20170405 10:18:35.312"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.312" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:35.312" starttime="20170405 10:18:35.312"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.312" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20170405 10:18:35.312" starttime="20170405 10:18:35.312"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.312" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:35.312" starttime="20170405 10:18:35.312"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.312" starttime="20170405 10:18:35.280"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:35.312" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:35.312" starttime="20170405 10:18:35.312"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:35.327" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:35.327" starttime="20170405 10:18:35.312"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.327" starttime="20170405 10:18:35.327"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.327" starttime="20170405 10:18:35.327"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:35.327" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:35.327" starttime="20170405 10:18:35.327"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.327" starttime="20170405 10:18:35.327"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.327" starttime="20170405 10:18:35.312"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>ÝÞãðýþ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:35.343" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:35.343" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:35.343" starttime="20170405 10:18:35.343"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.343" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:35.343" starttime="20170405 10:18:35.343"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.343" level="INFO">Set request header "x-csod-user-id" to "1338"</msg>
<status status="PASS" endtime="20170405 10:18:35.343" starttime="20170405 10:18:35.343"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.343" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:35.343" starttime="20170405 10:18:35.343"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:35.359" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:35.359" starttime="20170405 10:18:35.343"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.359" level="INFO">Request body set to "{ "Title":"ÝÞãðýþ"}".</msg>
<status status="PASS" endtime="20170405 10:18:35.359" starttime="20170405 10:18:35.359"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.405" starttime="20170405 10:18:35.359"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.405" starttime="20170405 10:18:35.405"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:35.405" level="INFO">${resBody} = {"TalentpoolId":12907,"Title":"\xc3\x9d\xc3\x9e\xc3\xa3\xc3\xb0\xc3\xbd\xc3\xbe","Owner":{"UserId":1338,"FirstName":"smaus","LastName":"smaus"},"CreatedDate":"2017-04-05T17:18:35.52","ModifierId":1,"M...</msg>
<status status="PASS" endtime="20170405 10:18:35.405" starttime="20170405 10:18:35.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.405" level="INFO">{"TalentpoolId":12907,"Title":"\xc3\x9d\xc3\x9e\xc3\xa3\xc3\xb0\xc3\xbd\xc3\xbe","Owner":{"UserId":1338,"FirstName":"smaus","LastName":"smaus"},"CreatedDate":"2017-04-05T17:18:35.52","ModifierId":1,"ModifiedDate":"2017-04-05T17:18:35.52","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:35.405" starttime="20170405 10:18:35.405"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:35.405" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\xdd\xde\xe3\xf0\xfd\xfe', u'TalentpoolId': 12907, u'ModifiedDate': u'2017-04-05T17:18:35.52', u'CreatedDate': u'2017-04-05T17:18:35.52', u'Owner': {u'LastName': u'sma...</msg>
<status status="PASS" endtime="20170405 10:18:35.405" starttime="20170405 10:18:35.405"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:35.405" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\xdd\xde\xe3\xf0\xfd\xfe', u'CreatedDate': u'2017-04-05T17:18:35.52', u'ModifiedDate': u'2017-04-05T17:18:35.52', u'TalentpoolId': 12907, u'Owner': {u'LastName': u'sma...</msg>
<status status="PASS" endtime="20170405 10:18:35.405" starttime="20170405 10:18:35.405"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:35.405" level="INFO">${keyValue} = ÝÞãðýþ</msg>
<status status="PASS" endtime="20170405 10:18:35.405" starttime="20170405 10:18:35.405"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.405" starttime="20170405 10:18:35.343"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended6

*Description:*
verify ASCII characters 6

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
<tag>testrailid=24420</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:35.405" critical="yes" starttime="20170405 10:18:35.280"></status>
</test>
<test id="s1-s1-t18" name="POST-API_TPC_Foreign_Russian">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.437" starttime="20170405 10:18:35.405"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:35.452" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170405 10:18:35.452" starttime="20170405 10:18:35.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.452" level="INFO">415</msg>
<status status="PASS" endtime="20170405 10:18:35.452" starttime="20170405 10:18:35.452"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:35.452" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:35.452" starttime="20170405 10:18:35.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.452" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170405 10:18:35.452" starttime="20170405 10:18:35.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.452" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:35.452" starttime="20170405 10:18:35.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.452" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:35.452" starttime="20170405 10:18:35.452"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:35.452" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:35.452" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:35.452" starttime="20170405 10:18:35.452"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.452" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:35.452" starttime="20170405 10:18:35.452"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.452" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170405 10:18:35.452" starttime="20170405 10:18:35.452"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.452" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:35.452" starttime="20170405 10:18:35.452"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.452" starttime="20170405 10:18:35.405"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:35.452" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:35.452" starttime="20170405 10:18:35.452"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:35.468" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:35.468" starttime="20170405 10:18:35.452"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.468" starttime="20170405 10:18:35.468"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.468" starttime="20170405 10:18:35.468"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:35.468" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:35.468" starttime="20170405 10:18:35.468"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.468" starttime="20170405 10:18:35.468"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.468" starttime="20170405 10:18:35.452"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>ёъяшертыуиопющэасдфгчйкльжзхцвбнмЁЪЯШЕРТЫУИОПЮЩЭЖЬ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:35.484" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:35.484" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:35.484" starttime="20170405 10:18:35.484"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.484" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:35.484" starttime="20170405 10:18:35.484"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.484" level="INFO">Set request header "x-csod-user-id" to "415"</msg>
<status status="PASS" endtime="20170405 10:18:35.484" starttime="20170405 10:18:35.484"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.484" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:35.484" starttime="20170405 10:18:35.484"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:35.484" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:35.484" starttime="20170405 10:18:35.484"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.484" level="INFO">Request body set to "{ "Title":"ёъяшертыуиопющэасдфгчйкльжзхцвбнмЁЪЯШЕРТЫУИОПЮЩЭЖЬ"}".</msg>
<status status="PASS" endtime="20170405 10:18:35.484" starttime="20170405 10:18:35.484"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.531" starttime="20170405 10:18:35.484"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.531" starttime="20170405 10:18:35.531"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:35.531" level="INFO">${resBody} = {"TalentpoolId":12908,"Title":"\xd1\x91\xd1\x8a\xd1\x8f\xd1\x88\xd0\xb5\xd1\x80\xd1\x82\xd1\x8b\xd1\x83\xd0\xb8\xd0\xbe\xd0\xbf\xd1\x8e\xd1\x89\xd1\x8d\xd0\xb0\xd1\x81\xd0\xb4\xd1\x84\xd0\xb3\xd1\x87\...</msg>
<status status="PASS" endtime="20170405 10:18:35.531" starttime="20170405 10:18:35.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.531" level="INFO">{"TalentpoolId":12908,"Title":"\xd1\x91\xd1\x8a\xd1\x8f\xd1\x88\xd0\xb5\xd1\x80\xd1\x82\xd1\x8b\xd1\x83\xd0\xb8\xd0\xbe\xd0\xbf\xd1\x8e\xd1\x89\xd1\x8d\xd0\xb0\xd1\x81\xd0\xb4\xd1\x84\xd0\xb3\xd1\x87\xd0\xb9\xd0\xba\xd0\xbb\xd1\x8c\xd0\xb6\xd0\xb7\xd1\x85\xd1\x86\xd0\xb2\xd0\xb1\xd0\xbd\xd0\xbc\xd0\x81\xd0\xaa\xd0\xaf\xd0\xa8\xd0\x95\xd0\xa0\xd0\xa2\xd0\xab\xd0\xa3\xd0\x98\xd0\x9e\xd0\x9f\xd0\xae\xd0\xa9\xd0\xad\xd0\x96\xd0\xac","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2017-04-05T17:18:35.663","ModifierId":1,"ModifiedDate":"2017-04-05T17:18:35.663","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:35.531" starttime="20170405 10:18:35.531"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:35.531" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u0451\u044a\u044f\u0448\u0435\u0440\u0442\u044b\u0443\u0438\u043e\u043f\u044e\u0449\u044d\u0430\u0441\u0434\u0444\u0433\u0447\u0439\u043a\u043b\u044c\u0436\u0437\u044...</msg>
<status status="PASS" endtime="20170405 10:18:35.531" starttime="20170405 10:18:35.531"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:35.531" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u0451\u044a\u044f\u0448\u0435\u0440\u0442\u044b\u0443\u0438\u043e\u043f\u044e\u0449\u044d\u0430\u0441\u0434\u0444\u0433\u0447\u0439\u043a\u043b\u044c\u0436\u0437\u044...</msg>
<status status="PASS" endtime="20170405 10:18:35.531" starttime="20170405 10:18:35.531"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:35.531" level="INFO">${keyValue} = ёъяшертыуиопющэасдфгчйкльжзхцвбнмЁЪЯШЕРТЫУИОПЮЩЭЖЬ</msg>
<status status="PASS" endtime="20170405 10:18:35.531" starttime="20170405 10:18:35.531"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.531" starttime="20170405 10:18:35.484"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Foreign_Russian

*Description:*
verify russian alphabet

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
<tag>testrailid=24421</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:35.531" critical="yes" starttime="20170405 10:18:35.405"></status>
</test>
<test id="s1-s1-t19" name="POST-API_TPC_Foreign_Arabic">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.562" starttime="20170405 10:18:35.531"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:35.562" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170405 10:18:35.562" starttime="20170405 10:18:35.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.577" level="INFO">48</msg>
<status status="PASS" endtime="20170405 10:18:35.577" starttime="20170405 10:18:35.577"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:35.577" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:35.577" starttime="20170405 10:18:35.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.577" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170405 10:18:35.577" starttime="20170405 10:18:35.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.577" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:35.577" starttime="20170405 10:18:35.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.577" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:35.577" starttime="20170405 10:18:35.577"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:35.577" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:35.577" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:35.577" starttime="20170405 10:18:35.577"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.577" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:35.577" starttime="20170405 10:18:35.577"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.577" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170405 10:18:35.577" starttime="20170405 10:18:35.577"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.577" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:35.577" starttime="20170405 10:18:35.577"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.577" starttime="20170405 10:18:35.531"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:35.577" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:35.577" starttime="20170405 10:18:35.577"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:35.593" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:35.593" starttime="20170405 10:18:35.577"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.593" starttime="20170405 10:18:35.593"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.593" starttime="20170405 10:18:35.593"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:35.593" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:35.593" starttime="20170405 10:18:35.593"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.593" starttime="20170405 10:18:35.593"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.593" starttime="20170405 10:18:35.577"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>غظضذخثتشرقصفعسنملكيطحزوهدجباشغظذخثتسرقضفعصنملكيطحز</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:35.609" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:35.609" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:35.609" starttime="20170405 10:18:35.609"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.609" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:35.609" starttime="20170405 10:18:35.609"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.609" level="INFO">Set request header "x-csod-user-id" to "48"</msg>
<status status="PASS" endtime="20170405 10:18:35.609" starttime="20170405 10:18:35.609"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.609" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:35.609" starttime="20170405 10:18:35.609"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:35.609" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:35.609" starttime="20170405 10:18:35.609"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.609" level="INFO">Request body set to "{ "Title":"غظضذخثتشرقصفعسنملكيطحزوهدجباشغظذخثتسرقضفعصنملكيطحز"}".</msg>
<status status="PASS" endtime="20170405 10:18:35.609" starttime="20170405 10:18:35.609"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.655" starttime="20170405 10:18:35.609"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.655" starttime="20170405 10:18:35.655"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:35.655" level="INFO">${resBody} = {"TalentpoolId":12909,"Title":"\xd8\xba\xd8\xb8\xd8\xb6\xd8\xb0\xd8\xae\xd8\xab\xd8\xaa\xd8\xb4\xd8\xb1\xd9\x82\xd8\xb5\xd9\x81\xd8\xb9\xd8\xb3\xd9\x86\xd9\x85\xd9\x84\xd9\x83\xd9\x8a\xd8\xb7\xd8\xad\...</msg>
<status status="PASS" endtime="20170405 10:18:35.655" starttime="20170405 10:18:35.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.655" level="INFO">{"TalentpoolId":12909,"Title":"\xd8\xba\xd8\xb8\xd8\xb6\xd8\xb0\xd8\xae\xd8\xab\xd8\xaa\xd8\xb4\xd8\xb1\xd9\x82\xd8\xb5\xd9\x81\xd8\xb9\xd8\xb3\xd9\x86\xd9\x85\xd9\x84\xd9\x83\xd9\x8a\xd8\xb7\xd8\xad\xd8\xb2\xd9\x88\xd9\x87\xd8\xaf\xd8\xac\xd8\xa8\xd8\xa7\xd8\xb4\xd8\xba\xd8\xb8\xd8\xb0\xd8\xae\xd8\xab\xd8\xaa\xd8\xb3\xd8\xb1\xd9\x82\xd8\xb6\xd9\x81\xd8\xb9\xd8\xb5\xd9\x86\xd9\x85\xd9\x84\xd9\x83\xd9\x8a\xd8\xb7\xd8\xad\xd8\xb2","Owner":{"UserId":48,"FirstName":"Jeffrey","LastName":"Trattner"},"CreatedDate":"2017-04-05T17:18:35.787","ModifierId":1,"ModifiedDate":"2017-04-05T17:18:35.787","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:35.655" starttime="20170405 10:18:35.655"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:35.655" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u063a\u0638\u0636\u0630\u062e\u062b\u062a\u0634\u0631\u0642\u0635\u0641\u0639\u0633\u0646\u0645\u0644\u0643\u064a\u0637\u062d\u0632\u0648\u0647\u062f\u062c\u0628\u062...</msg>
<status status="PASS" endtime="20170405 10:18:35.655" starttime="20170405 10:18:35.655"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:35.655" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u063a\u0638\u0636\u0630\u062e\u062b\u062a\u0634\u0631\u0642\u0635\u0641\u0639\u0633\u0646\u0645\u0644\u0643\u064a\u0637\u062d\u0632\u0648\u0647\u062f\u062c\u0628\u062...</msg>
<status status="PASS" endtime="20170405 10:18:35.655" starttime="20170405 10:18:35.655"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:35.655" level="INFO">${keyValue} = غظضذخثتشرقصفعسنملكيطحزوهدجباشغظذخثتسرقضفعصنملكيطحز</msg>
<status status="PASS" endtime="20170405 10:18:35.655" starttime="20170405 10:18:35.655"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.655" starttime="20170405 10:18:35.609"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Foreign_Arabic

*Description:*
verify arabic alphabet

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
<tag>testrailid=24422</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:35.655" critical="yes" starttime="20170405 10:18:35.531"></status>
</test>
<test id="s1-s1-t20" name="POST-API_TPC_Access_Does_Not_Exist">
<kw name="REST_NOAUTH_NonExistentUser" library="SMP_Keywords">
<doc>*REST_NOAUTH_NonExistentUser:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.687" starttime="20170405 10:18:35.655"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:35.687" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20170405 10:18:35.687" starttime="20170405 10:18:35.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.687" level="INFO">2347</msg>
<status status="PASS" endtime="20170405 10:18:35.687" starttime="20170405 10:18:35.687"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT 1</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:35.702" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:35.702" starttime="20170405 10:18:35.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.702" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20170405 10:18:35.702" starttime="20170405 10:18:35.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.702" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:35.702" starttime="20170405 10:18:35.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.702" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:35.702" starttime="20170405 10:18:35.702"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:35.702" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:35.702" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:35.702" starttime="20170405 10:18:35.702"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.702" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:35.702" starttime="20170405 10:18:35.702"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.702" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20170405 10:18:35.702" starttime="20170405 10:18:35.702"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.702" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:35.702" starttime="20170405 10:18:35.702"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.702" starttime="20170405 10:18:35.655"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:35.702" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:35.702" starttime="20170405 10:18:35.702"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:35.702" level="INFO">Request body set to "{   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_2347",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:35.702" starttime="20170405 10:18:35.702"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.718" starttime="20170405 10:18:35.702"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.718" starttime="20170405 10:18:35.718"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:35.718" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:35.718" starttime="20170405 10:18:35.718"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.718" starttime="20170405 10:18:35.718"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.718" starttime="20170405 10:18:35.702"></status>
</kw>
<kw name="POST_TalentPool_Create_Empty_String" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>InnocentName</arg>
<arg>Title</arg>
<arg>500</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:35.734" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:35.734" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:35.734" starttime="20170405 10:18:35.734"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.734" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:35.734" starttime="20170405 10:18:35.734"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.734" level="INFO">Set request header "x-csod-user-id" to "2347"</msg>
<status status="PASS" endtime="20170405 10:18:35.734" starttime="20170405 10:18:35.734"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.734" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:35.734" starttime="20170405 10:18:35.734"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:35.734" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20170405 10:18:35.734" starttime="20170405 10:18:35.734"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20170405 10:18:35.734" starttime="20170405 10:18:35.734"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"${KEY_NAME_JSON}\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.734" level="INFO">Request body set to "{ "Title":"InnocentName"}".</msg>
<status status="PASS" endtime="20170405 10:18:35.734" starttime="20170405 10:18:35.734"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.796" starttime="20170405 10:18:35.734"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.796" starttime="20170405 10:18:35.796"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:35.796" level="INFO">${resBody} = {"Message":"An error has occurred.","ExceptionMessage":"The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_ou_owner_id_user\". The conflict occurred in database \"ces_qa052-auto-smp-...</msg>
<status status="PASS" endtime="20170405 10:18:35.796" starttime="20170405 10:18:35.796"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20170405 10:18:35.796" level="INFO">Set test message to:
The {"Message":"An error has occurred.","ExceptionMessage":"The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_ou_owner_id_user\". The conflict occurred in database \"ces_qa052-auto-smp-API\", table \"dbo.users\", column 'user_id'.\r\nCannot insert the value NULL into column 'ou_id', table 'ces_qa052-auto-smp-API.dbo.ou_tree'; column does not allow nulls. INSERT fails.\r\nCannot insert the value NULL into column 'child_id', table 'ces_qa052-auto-smp-API.dbo.ou_speed'; column does not allow nulls. INSERT fails.\r\nCannot insert the value NULL into column 'ou_id', table 'ces_qa052-auto-smp-API.dbo.ou_audit'; column does not allow nulls. INSERT fails.\r\nThe statement has been terminated.\r\nThe statement has been terminated.\r\nThe statement has been terminated.\r\nThe statement has been terminated.","ExceptionType":"System.Data.SqlClient.SqlException","StackTrace":"   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean&amp; dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task&amp; task, Boolean asyncWrite, SqlDataReader ds, Boolean describeParameterEncryptionRequest)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task&amp; task, Boolean asyncWrite)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)\r\n   at System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext,TResult](TTarget target, Func`3 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)\r\n   at System.Data.Entity.Infrastructure.Interception.DbCommandDispatcher.Reader(DbCommand command, DbCommandInterceptionContext interceptionContext)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryInternal[TElement](String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.&lt;&gt;c__DisplayClass65`1.&lt;ExecuteStoreQueryReliably&gt;b__64()\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteInTransaction[T](Func`1 func, IDbExecutionStrategy executionStrategy, Boolean startLocalTransaction, Boolean releaseConnectionOnSuccess)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.&lt;&gt;c__DisplayClass65`1.&lt;ExecuteStoreQueryReliably&gt;b__63()\r\n   at System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute[TResult](Func`1 operation)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryReliably[TElement](String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQuery[TElement](String commandText, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Internal.LazyEnumerator`1.MoveNext()\r\n   at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source)\r\n   at Cornerstone.Smp.TalentPool.Data.TalentPoolRepository.AddTalentPool(OuEntity entity) in C:\\TeamCity\\buildAgent\\work\\94ef6c472a780b34\\src\\TalentPool.Data\\TalentPoolRepository.cs:line 76\r\n   at Cornerstone.Smp.TalentPool.Core.Services.TalentPoolService.CreateTalentPool(TalentPoolRequestModel model) in C:\\TeamCity\\buildAgent\\work\\94ef6c472a780b34\\src\\TalentPool.Core\\Services\\Impl\\TalentPoolService.cs:line 145\r\n   at Cornerstone.Smp.TalentPool.Api.TalentPoolController.CreateTalentPool(TalentPoolRequestModel request) in C:\\TeamCity\\buildAgent\\work\\94ef6c472a780b34\\src\\TalentPool.Api\\Controllers\\TalentPoolController.cs:line 69\r\n   at lambda_method(Closure , Object , Object[] )\r\n   at System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.&lt;&gt;c__DisplayClass10.&lt;GetExecutor&gt;b__9(Object instance, Object[] methodParameters)\r\n   at System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(HttpControllerContext controllerContext, IDictionary`2 arguments, CancellationToken cancellationToken)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Controllers.ApiControllerActionInvoker.&lt;InvokeActionAsyncCore&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Controllers.ActionFilterResult.&lt;ExecuteAsync&gt;d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Filters.AuthorizationFilterAttribute.&lt;ExecuteAuthorizationFilterAsyncCore&gt;d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Controllers.ExceptionFilterResult.&lt;ExecuteAsync&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Web.Http.Controllers.ExceptionFilterResult.&lt;ExecuteAsync&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Dispatcher.HttpControllerDispatcher.&lt;SendAsync&gt;d__1.MoveNext()"} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20170405 10:18:35.796" starttime="20170405 10:18:35.796"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.796" starttime="20170405 10:18:35.734"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Access_DNE

*Description:*
verify failure when user does not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
<tag>testrailid=24423</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:35.796" critical="yes" starttime="20170405 10:18:35.655">The {"Message":"An error has occurred.","ExceptionMessage":"The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_ou_owner_id_user\". The conflict occurred in database \"ces_qa052-auto-smp-API\", table \"dbo.users\", column 'user_id'.\r\nCannot insert the value NULL into column 'ou_id', table 'ces_qa052-auto-smp-API.dbo.ou_tree'; column does not allow nulls. INSERT fails.\r\nCannot insert the value NULL into column 'child_id', table 'ces_qa052-auto-smp-API.dbo.ou_speed'; column does not allow nulls. INSERT fails.\r\nCannot insert the value NULL into column 'ou_id', table 'ces_qa052-auto-smp-API.dbo.ou_audit'; column does not allow nulls. INSERT fails.\r\nThe statement has been terminated.\r\nThe statement has been terminated.\r\nThe statement has been terminated.\r\nThe statement has been terminated.","ExceptionType":"System.Data.SqlClient.SqlException","StackTrace":"   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean&amp; dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task&amp; task, Boolean asyncWrite, SqlDataReader ds, Boolean describeParameterEncryptionRequest)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task&amp; task, Boolean asyncWrite)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)\r\n   at System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext,TResult](TTarget target, Func`3 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)\r\n   at System.Data.Entity.Infrastructure.Interception.DbCommandDispatcher.Reader(DbCommand command, DbCommandInterceptionContext interceptionContext)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryInternal[TElement](String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.&lt;&gt;c__DisplayClass65`1.&lt;ExecuteStoreQueryReliably&gt;b__64()\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteInTransaction[T](Func`1 func, IDbExecutionStrategy executionStrategy, Boolean startLocalTransaction, Boolean releaseConnectionOnSuccess)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.&lt;&gt;c__DisplayClass65`1.&lt;ExecuteStoreQueryReliably&gt;b__63()\r\n   at System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute[TResult](Func`1 operation)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryReliably[TElement](String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQuery[TElement](String commandText, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Internal.LazyEnumerator`1.MoveNext()\r\n   at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source)\r\n   at Cornerstone.Smp.TalentPool.Data.TalentPoolRepository.AddTalentPool(OuEntity entity) in C:\\TeamCity\\buildAgent\\work\\94ef6c472a780b34\\src\\TalentPool.Data\\TalentPoolRepository.cs:line 76\r\n   at Cornerstone.Smp.TalentPool.Core.Services.TalentPoolService.CreateTalentPool(TalentPoolRequestModel model) in C:\\TeamCity\\buildAgent\\work\\94ef6c472a780b34\\src\\TalentPool.Core\\Services\\Impl\\TalentPoolService.cs:line 145\r\n   at Cornerstone.Smp.TalentPool.Api.TalentPoolController.CreateTalentPool(TalentPoolRequestModel request) in C:\\TeamCity\\buildAgent\\work\\94ef6c472a780b34\\src\\TalentPool.Api\\Controllers\\TalentPoolController.cs:line 69\r\n   at lambda_method(Closure , Object , Object[] )\r\n   at System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.&lt;&gt;c__DisplayClass10.&lt;GetExecutor&gt;b__9(Object instance, Object[] methodParameters)\r\n   at System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(HttpControllerContext controllerContext, IDictionary`2 arguments, CancellationToken cancellationToken)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Controllers.ApiControllerActionInvoker.&lt;InvokeActionAsyncCore&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Controllers.ActionFilterResult.&lt;ExecuteAsync&gt;d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Filters.AuthorizationFilterAttribute.&lt;ExecuteAuthorizationFilterAsyncCore&gt;d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Controllers.ExceptionFilterResult.&lt;ExecuteAsync&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Web.Http.Controllers.ExceptionFilterResult.&lt;ExecuteAsync&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Dispatcher.HttpControllerDispatcher.&lt;SendAsync&gt;d__1.MoveNext()"} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-t21" name="GET-API_TPC_GET_Return_ID_Expected">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.812" starttime="20170405 10:18:35.796"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:35.812" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:35.812" starttime="20170405 10:18:35.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.812" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:35.812" starttime="20170405 10:18:35.812"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:35.812" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:35.812" starttime="20170405 10:18:35.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.827" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:35.827" starttime="20170405 10:18:35.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.827" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:35.827" starttime="20170405 10:18:35.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.827" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:35.827" starttime="20170405 10:18:35.827"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:35.827" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:35.827" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:35.827" starttime="20170405 10:18:35.827"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.827" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:35.827" starttime="20170405 10:18:35.827"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.827" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:35.827" starttime="20170405 10:18:35.827"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.827" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:35.827" starttime="20170405 10:18:35.827"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.827" starttime="20170405 10:18:35.796"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:35.827" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:35.827" starttime="20170405 10:18:35.827"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:35.827" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:35.827" starttime="20170405 10:18:35.827"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.843" starttime="20170405 10:18:35.827"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.843" starttime="20170405 10:18:35.843"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:35.843" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:35.843" starttime="20170405 10:18:35.843"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.843" starttime="20170405 10:18:35.843"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.843" starttime="20170405 10:18:35.827"></status>
</kw>
<kw name="GET_TalentPool" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>TalentpoolId</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.874" starttime="20170405 10:18:35.843"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170405 10:18:35.890" level="INFO">${SQL_TalentPoolIdToGet} = 7513</msg>
<status status="PASS" endtime="20170405 10:18:35.890" starttime="20170405 10:18:35.874"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:35.890" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:35.890" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:35.890" starttime="20170405 10:18:35.890"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.890" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:35.890" starttime="20170405 10:18:35.890"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.890" level="INFO">Set request header "x-csod-user-id" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:35.890" starttime="20170405 10:18:35.890"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.905" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:35.905" starttime="20170405 10:18:35.890"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:35.905" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:35.905" starttime="20170405 10:18:35.905"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.921" starttime="20170405 10:18:35.905"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.921" starttime="20170405 10:18:35.921"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:35.921" level="INFO">${resBody} = {"TalentpoolId":7513,"Title":"InnocentName","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-12-14T08:41:09.46","ModifierId":1...</msg>
<status status="PASS" endtime="20170405 10:18:35.921" starttime="20170405 10:18:35.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.921" level="INFO">{"TalentpoolId":7513,"Title":"InnocentName","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-12-14T08:41:09.46","ModifierId":1,"ModifiedDate":"2016-12-14T08:41:09.46","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:35.921" starttime="20170405 10:18:35.921"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:35.921" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'InnocentName', u'TalentpoolId': 7513, u'ModifiedDate': u'2016-12-14T08:41:09.46', u'CreatedDate': u'2016-12-14T08:41:09.46', u'Owner': {u'LastName': u'TalentPoolAutoma...</msg>
<status status="PASS" endtime="20170405 10:18:35.921" starttime="20170405 10:18:35.921"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:35.921" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'InnocentName', u'CreatedDate': u'2016-12-14T08:41:09.46', u'ModifiedDate': u'2016-12-14T08:41:09.46', u'TalentpoolId': 7513, u'Owner': {u'LastName': u'TalentPoolAutoma...</msg>
<status status="PASS" endtime="20170405 10:18:35.921" starttime="20170405 10:18:35.921"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:35.937" level="INFO">${keyValue} = 7513</msg>
<status status="PASS" endtime="20170405 10:18:35.937" starttime="20170405 10:18:35.921"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.937" starttime="20170405 10:18:35.843"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_ID_Expected

*Description:*
verify the id passed is matching the id returned

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24424</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:35.937" critical="yes" starttime="20170405 10:18:35.796"></status>
</test>
<test id="s1-s1-t22" name="GET-API_TPC_GET_Return_Title_Happy">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:35.962" starttime="20170405 10:18:35.940"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:35.978" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:35.978" starttime="20170405 10:18:35.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.979" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:35.979" starttime="20170405 10:18:35.978"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:35.982" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:35.982" starttime="20170405 10:18:35.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.984" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:35.984" starttime="20170405 10:18:35.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.985" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:35.985" starttime="20170405 10:18:35.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.985" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:35.986" starttime="20170405 10:18:35.985"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:35.986" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:35.986" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:35.986" starttime="20170405 10:18:35.986"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.987" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:35.987" starttime="20170405 10:18:35.987"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.988" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:35.988" starttime="20170405 10:18:35.988"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:35.989" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:35.989" starttime="20170405 10:18:35.989"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:35.989" starttime="20170405 10:18:35.939"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:35.991" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:35.991" starttime="20170405 10:18:35.991"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:35.995" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:35.995" starttime="20170405 10:18:35.992"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.004" starttime="20170405 10:18:35.995"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.005" starttime="20170405 10:18:36.004"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:36.005" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:36.005" starttime="20170405 10:18:36.005"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.006" starttime="20170405 10:18:36.005"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:36.006" starttime="20170405 10:18:35.990"></status>
</kw>
<kw name="GET_TalentPool_Title_Happy" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.023" starttime="20170405 10:18:36.007"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%InnocentName%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170405 10:18:36.038" level="INFO">${SQL_TalentPoolIdToGet} = 580</msg>
<status status="PASS" endtime="20170405 10:18:36.038" starttime="20170405 10:18:36.023"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:36.038" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:36.038" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:36.038" starttime="20170405 10:18:36.038"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.038" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:36.038" starttime="20170405 10:18:36.038"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.038" level="INFO">Set request header "x-csod-user-id" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:36.038" starttime="20170405 10:18:36.038"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.038" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:36.038" starttime="20170405 10:18:36.038"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:36.038" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:36.038" starttime="20170405 10:18:36.038"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.069" starttime="20170405 10:18:36.038"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.069" starttime="20170405 10:18:36.069"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:36.069" level="INFO">${resBody} = {"TalentpoolId":580,"Title":"InnocentName","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-02-24T06:07:00.977","ModifierId":1...</msg>
<status status="PASS" endtime="20170405 10:18:36.069" starttime="20170405 10:18:36.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.069" level="INFO">{"TalentpoolId":580,"Title":"InnocentName","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-02-24T06:07:00.977","ModifierId":1,"ModifiedDate":"2016-02-24T06:07:00.977","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:36.069" starttime="20170405 10:18:36.069"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:36.069" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'InnocentName', u'TalentpoolId': 580, u'ModifiedDate': u'2016-02-24T06:07:00.977', u'CreatedDate': u'2016-02-24T06:07:00.977', u'Owner': {u'LastName': u'TalentPoolAutom...</msg>
<status status="PASS" endtime="20170405 10:18:36.069" starttime="20170405 10:18:36.069"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:36.069" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'InnocentName', u'CreatedDate': u'2016-02-24T06:07:00.977', u'ModifiedDate': u'2016-02-24T06:07:00.977', u'TalentpoolId': 580, u'Owner': {u'LastName': u'TalentPoolAutom...</msg>
<status status="PASS" endtime="20170405 10:18:36.069" starttime="20170405 10:18:36.069"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:36.069" level="INFO">${keyValue} = InnocentName</msg>
<status status="PASS" endtime="20170405 10:18:36.069" starttime="20170405 10:18:36.069"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:36.069" starttime="20170405 10:18:36.007"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Happy

*Description:*
verify a random name matches

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24425</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:36.069" critical="yes" starttime="20170405 10:18:35.938"></status>
</test>
<test id="s1-s1-t23" name="GET-API_TPC_GET_Return_Title_Length_1">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.169" starttime="20170405 10:18:36.085"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:36.187" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:36.187" starttime="20170405 10:18:36.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.187" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:36.187" starttime="20170405 10:18:36.187"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:36.187" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:36.187" starttime="20170405 10:18:36.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.187" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:36.187" starttime="20170405 10:18:36.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.187" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:36.187" starttime="20170405 10:18:36.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.187" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:36.187" starttime="20170405 10:18:36.187"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:36.187" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:36.187" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:36.187" starttime="20170405 10:18:36.187"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.187" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:36.187" starttime="20170405 10:18:36.187"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.187" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:36.187" starttime="20170405 10:18:36.187"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.187" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:36.187" starttime="20170405 10:18:36.187"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:36.187" starttime="20170405 10:18:36.085"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:36.187" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:36.187" starttime="20170405 10:18:36.187"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:36.202" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:36.202" starttime="20170405 10:18:36.187"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.202" starttime="20170405 10:18:36.202"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.202" starttime="20170405 10:18:36.202"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:36.202" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:36.202" starttime="20170405 10:18:36.202"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.202" starttime="20170405 10:18:36.202"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:36.202" starttime="20170405 10:18:36.187"></status>
</kw>
<kw name="GET_TalentPool_Title_Length_1" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.233" starttime="20170405 10:18:36.218"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND LEN(title)=1 ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170405 10:18:36.249" level="INFO">${SQL_TalentPoolIdToGet} = 11636</msg>
<status status="PASS" endtime="20170405 10:18:36.249" starttime="20170405 10:18:36.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.249" level="INFO">${SQL_TalentPoolIdToGet} = 11636</msg>
<status status="PASS" endtime="20170405 10:18:36.249" starttime="20170405 10:18:36.249"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20170405 10:18:36.265" level="INFO">${SQL_TalentPoolTitleById} = 1</msg>
<status status="PASS" endtime="20170405 10:18:36.265" starttime="20170405 10:18:36.249"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:36.265" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:36.265" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:36.265" starttime="20170405 10:18:36.265"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.265" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:36.265" starttime="20170405 10:18:36.265"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.265" level="INFO">Set request header "x-csod-user-id" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:36.265" starttime="20170405 10:18:36.265"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.265" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:36.265" starttime="20170405 10:18:36.265"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:36.265" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:36.265" starttime="20170405 10:18:36.265"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.296" starttime="20170405 10:18:36.265"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.296" starttime="20170405 10:18:36.296"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:36.296" level="INFO">${resBody} = {"TalentpoolId":11636,"Title":"1","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2017-02-15T09:19:11.26","ModifierId":1,"Modified...</msg>
<status status="PASS" endtime="20170405 10:18:36.296" starttime="20170405 10:18:36.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.296" level="INFO">{"TalentpoolId":11636,"Title":"1","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2017-02-15T09:19:11.26","ModifierId":1,"ModifiedDate":"2017-02-15T09:19:11.26","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:36.296" starttime="20170405 10:18:36.296"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:36.296" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'1', u'TalentpoolId': 11636, u'ModifiedDate': u'2017-02-15T09:19:11.26', u'CreatedDate': u'2017-02-15T09:19:11.26', u'Owner': {u'LastName': u'TalentPoolAutomationUser1'...</msg>
<status status="PASS" endtime="20170405 10:18:36.296" starttime="20170405 10:18:36.296"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:36.296" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'1', u'CreatedDate': u'2017-02-15T09:19:11.26', u'ModifiedDate': u'2017-02-15T09:19:11.26', u'TalentpoolId': 11636, u'Owner': {u'LastName': u'TalentPoolAutomationUser1'...</msg>
<status status="PASS" endtime="20170405 10:18:36.296" starttime="20170405 10:18:36.296"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:36.296" level="INFO">${keyValue} = 1</msg>
<status status="PASS" endtime="20170405 10:18:36.296" starttime="20170405 10:18:36.296"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:36.296" starttime="20170405 10:18:36.218"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Length_1

*Description:*
verify success when title length is 1

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24426</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:36.296" critical="yes" starttime="20170405 10:18:36.085"></status>
</test>
<test id="s1-s1-t24" name="GET-API_TPC_GET_Return_Title_Length_50">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.312" starttime="20170405 10:18:36.296"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:36.327" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:36.327" starttime="20170405 10:18:36.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.327" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:36.327" starttime="20170405 10:18:36.327"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:36.327" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:36.327" starttime="20170405 10:18:36.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.327" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:36.327" starttime="20170405 10:18:36.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.343" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:36.343" starttime="20170405 10:18:36.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.343" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:36.343" starttime="20170405 10:18:36.343"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:36.343" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:36.343" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:36.343" starttime="20170405 10:18:36.343"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.343" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:36.343" starttime="20170405 10:18:36.343"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.343" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:36.343" starttime="20170405 10:18:36.343"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.343" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:36.343" starttime="20170405 10:18:36.343"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:36.343" starttime="20170405 10:18:36.296"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:36.343" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:36.343" starttime="20170405 10:18:36.343"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:36.343" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:36.343" starttime="20170405 10:18:36.343"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.358" starttime="20170405 10:18:36.343"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.358" starttime="20170405 10:18:36.358"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:36.358" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:36.358" starttime="20170405 10:18:36.358"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.358" starttime="20170405 10:18:36.358"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:36.358" starttime="20170405 10:18:36.343"></status>
</kw>
<kw name="GET_TalentPool_Title_Length_50" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.390" starttime="20170405 10:18:36.358"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND LEN(title)=50 ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170405 10:18:36.390" level="INFO">${SQL_TalentPoolIdToGet} = 4598</msg>
<status status="PASS" endtime="20170405 10:18:36.390" starttime="20170405 10:18:36.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.390" level="INFO">${SQL_TalentPoolIdToGet} = 4598</msg>
<status status="PASS" endtime="20170405 10:18:36.390" starttime="20170405 10:18:36.390"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20170405 10:18:36.405" level="INFO">${SQL_TalentPoolTitleById} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20170405 10:18:36.405" starttime="20170405 10:18:36.390"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:36.405" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:36.405" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:36.405" starttime="20170405 10:18:36.405"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.405" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:36.405" starttime="20170405 10:18:36.405"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.405" level="INFO">Set request header "x-csod-user-id" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:36.405" starttime="20170405 10:18:36.405"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.405" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:36.405" starttime="20170405 10:18:36.405"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:36.405" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:36.405" starttime="20170405 10:18:36.405"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.437" starttime="20170405 10:18:36.405"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.437" starttime="20170405 10:18:36.437"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:36.437" level="INFO">${resBody} = {"TalentpoolId":4598,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\x...</msg>
<status status="PASS" endtime="20170405 10:18:36.437" starttime="20170405 10:18:36.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.437" level="INFO">{"TalentpoolId":4598,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\xc2\xae\xc2\xaf\xc2\xb3\xc2\xb4\xc2\xb8U\xc2\xbe\xc3\x80\xc3\x81\xc3\x82\xc3\x83\xc3\x84\xc3\x85\xc3\x88\xc3\x89\xc3\x8a\xc3\x8b\xc3\x8c\xc3\x8d\xc3\x8e\xc3\x8f\xc3\x90\xc3\x92\xc3\x93\xc3\x94\xc3\x95\xc3\x96\xc3\x97\xc3\x98\xc3\x99\xc3\x9a\xc3\x9b\xc3\x9c","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-10-23T14:50:21.903","ModifierId":1,"ModifiedDate":"2016-10-23T14:50:21.903","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:36.437" starttime="20170405 10:18:36.437"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:36.437" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20170405 10:18:36.437" starttime="20170405 10:18:36.437"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:36.437" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20170405 10:18:36.437" starttime="20170405 10:18:36.437"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:36.437" level="INFO">${keyValue} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20170405 10:18:36.437" starttime="20170405 10:18:36.437"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:36.437" starttime="20170405 10:18:36.358"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Length_50

*Description:*
verify success when title length is 50

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24427</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:36.437" critical="yes" starttime="20170405 10:18:36.296"></status>
</test>
<test id="s1-s1-t25" name="GET-API_TPC_GET_Return_Title_SQL">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.452" starttime="20170405 10:18:36.437"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:36.452" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:36.452" starttime="20170405 10:18:36.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.452" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:36.452" starttime="20170405 10:18:36.452"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:36.468" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:36.468" starttime="20170405 10:18:36.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.468" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:36.468" starttime="20170405 10:18:36.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.468" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:36.468" starttime="20170405 10:18:36.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.468" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:36.468" starttime="20170405 10:18:36.468"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:36.468" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:36.468" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:36.468" starttime="20170405 10:18:36.468"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.468" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:36.468" starttime="20170405 10:18:36.468"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.468" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:36.468" starttime="20170405 10:18:36.468"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.468" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:36.468" starttime="20170405 10:18:36.468"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:36.468" starttime="20170405 10:18:36.437"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:36.468" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:36.468" starttime="20170405 10:18:36.468"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:36.468" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:36.468" starttime="20170405 10:18:36.468"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.483" starttime="20170405 10:18:36.468"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.483" starttime="20170405 10:18:36.483"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:36.483" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:36.483" starttime="20170405 10:18:36.483"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.483" starttime="20170405 10:18:36.483"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:36.483" starttime="20170405 10:18:36.468"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Securit_SQL" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.515" starttime="20170405 10:18:36.483"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%SELECT * FROM Users%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170405 10:18:36.546" level="INFO">${SQL_TalentPoolIdToGet} = 6736</msg>
<status status="PASS" endtime="20170405 10:18:36.546" starttime="20170405 10:18:36.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.546" level="INFO">${SQL_TalentPoolIdToGet} = 6736</msg>
<status status="PASS" endtime="20170405 10:18:36.546" starttime="20170405 10:18:36.546"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20170405 10:18:36.546" level="INFO">${SQL_TalentPoolTitleById} = SELECT * FROM Users</msg>
<status status="PASS" endtime="20170405 10:18:36.546" starttime="20170405 10:18:36.546"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:36.546" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:36.546" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:36.546" starttime="20170405 10:18:36.546"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.546" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:36.546" starttime="20170405 10:18:36.546"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.546" level="INFO">Set request header "x-csod-user-id" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:36.546" starttime="20170405 10:18:36.546"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.546" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:36.546" starttime="20170405 10:18:36.546"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:36.546" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:36.546" starttime="20170405 10:18:36.546"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.577" starttime="20170405 10:18:36.546"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.577" starttime="20170405 10:18:36.577"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:36.577" level="INFO">${resBody} = {"TalentpoolId":6736,"Title":"SELECT * FROM Users","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-29T19:59:24.61","Modifi...</msg>
<status status="PASS" endtime="20170405 10:18:36.577" starttime="20170405 10:18:36.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.577" level="INFO">{"TalentpoolId":6736,"Title":"SELECT * FROM Users","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-29T19:59:24.61","ModifierId":1,"ModifiedDate":"2016-11-29T19:59:24.61","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:36.577" starttime="20170405 10:18:36.577"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:36.577" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'SELECT * FROM Users', u'TalentpoolId': 6736, u'ModifiedDate': u'2016-11-29T19:59:24.61', u'CreatedDate': u'2016-11-29T19:59:24.61', u'Owner': {u'LastName': u'TalentPoo...</msg>
<status status="PASS" endtime="20170405 10:18:36.577" starttime="20170405 10:18:36.577"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:36.593" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'SELECT * FROM Users', u'CreatedDate': u'2016-11-29T19:59:24.61', u'ModifiedDate': u'2016-11-29T19:59:24.61', u'TalentpoolId': 6736, u'Owner': {u'LastName': u'TalentPoo...</msg>
<status status="PASS" endtime="20170405 10:18:36.593" starttime="20170405 10:18:36.577"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:36.593" level="INFO">${keyValue} = SELECT * FROM Users</msg>
<status status="PASS" endtime="20170405 10:18:36.593" starttime="20170405 10:18:36.593"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:36.593" starttime="20170405 10:18:36.483"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_SQL

*Description:*
verify sql injection fails

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24428</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:36.593" critical="yes" starttime="20170405 10:18:36.437"></status>
</test>
<test id="s1-s1-t26" name="GET-API_TPC_GET_Return_Title_Security_Script">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.608" starttime="20170405 10:18:36.593"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:36.608" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:36.608" starttime="20170405 10:18:36.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.608" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:36.608" starttime="20170405 10:18:36.608"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:36.608" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:36.608" starttime="20170405 10:18:36.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.608" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:36.608" starttime="20170405 10:18:36.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.624" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:36.624" starttime="20170405 10:18:36.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.624" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:36.624" starttime="20170405 10:18:36.624"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:36.624" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:36.624" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:36.624" starttime="20170405 10:18:36.624"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.624" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:36.624" starttime="20170405 10:18:36.624"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.624" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:36.624" starttime="20170405 10:18:36.624"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.624" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:36.624" starttime="20170405 10:18:36.624"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:36.624" starttime="20170405 10:18:36.593"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:36.624" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:36.624" starttime="20170405 10:18:36.624"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:36.624" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:36.624" starttime="20170405 10:18:36.624"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.640" starttime="20170405 10:18:36.624"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.640" starttime="20170405 10:18:36.640"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:36.640" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:36.640" starttime="20170405 10:18:36.640"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.640" starttime="20170405 10:18:36.640"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:36.640" starttime="20170405 10:18:36.624"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Securit_Script" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.671" starttime="20170405 10:18:36.640"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%＜script＞alert(123)＜/script＞%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170405 10:18:36.718" level="INFO">${SQL_TalentPoolIdToGet} = 5454</msg>
<status status="PASS" endtime="20170405 10:18:36.718" starttime="20170405 10:18:36.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.718" level="INFO">${SQL_TalentPoolIdToGet} = 5454</msg>
<status status="PASS" endtime="20170405 10:18:36.718" starttime="20170405 10:18:36.718"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20170405 10:18:36.718" level="INFO">${SQL_TalentPoolTitleById} = &lt;script&gt;alert(123)&lt;/script&gt;</msg>
<status status="PASS" endtime="20170405 10:18:36.718" starttime="20170405 10:18:36.718"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:36.733" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:36.733" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:36.733" starttime="20170405 10:18:36.733"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.733" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:36.733" starttime="20170405 10:18:36.733"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.733" level="INFO">Set request header "x-csod-user-id" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:36.733" starttime="20170405 10:18:36.733"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.733" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:36.733" starttime="20170405 10:18:36.733"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:36.733" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:36.733" starttime="20170405 10:18:36.733"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.749" starttime="20170405 10:18:36.733"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.749" starttime="20170405 10:18:36.749"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:36.765" level="INFO">${resBody} = {"TalentpoolId":5454,"Title":"&lt;script&gt;alert(123)&lt;/script&gt;","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-07T17:49:52.34"...</msg>
<status status="PASS" endtime="20170405 10:18:36.765" starttime="20170405 10:18:36.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.765" level="INFO">{"TalentpoolId":5454,"Title":"&lt;script&gt;alert(123)&lt;/script&gt;","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-07T17:49:52.34","ModifierId":1,"ModifiedDate":"2016-11-07T17:49:52.34","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:36.765" starttime="20170405 10:18:36.765"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:36.765" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;script&gt;alert(123)&lt;/script&gt;', u'TalentpoolId': 5454, u'ModifiedDate': u'2016-11-07T17:49:52.34', u'CreatedDate': u'2016-11-07T17:49:52.34', u'Owner': {u'LastName': u'T...</msg>
<status status="PASS" endtime="20170405 10:18:36.765" starttime="20170405 10:18:36.765"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:36.765" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;script&gt;alert(123)&lt;/script&gt;', u'CreatedDate': u'2016-11-07T17:49:52.34', u'ModifiedDate': u'2016-11-07T17:49:52.34', u'TalentpoolId': 5454, u'Owner': {u'LastName': u'T...</msg>
<status status="PASS" endtime="20170405 10:18:36.765" starttime="20170405 10:18:36.765"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:36.765" level="INFO">${keyValue} = &lt;script&gt;alert(123)&lt;/script&gt;</msg>
<status status="PASS" endtime="20170405 10:18:36.765" starttime="20170405 10:18:36.765"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:36.765" starttime="20170405 10:18:36.640"></status>
</kw>
<doc>*Name:*
TP_Get_Ret_Title_sec_script

*Description:*
verify script injection is allowed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24429</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:36.765" critical="yes" starttime="20170405 10:18:36.593"></status>
</test>
<test id="s1-s1-t27" name="GET-API_TPC_GET_Return_Title_Extended1">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.780" starttime="20170405 10:18:36.765"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:36.796" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:36.796" starttime="20170405 10:18:36.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.796" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:36.796" starttime="20170405 10:18:36.796"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:36.796" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:36.796" starttime="20170405 10:18:36.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.796" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:36.796" starttime="20170405 10:18:36.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.796" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:36.796" starttime="20170405 10:18:36.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.796" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:36.796" starttime="20170405 10:18:36.796"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:36.796" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:36.796" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:36.796" starttime="20170405 10:18:36.796"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.796" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:36.796" starttime="20170405 10:18:36.796"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.796" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:36.796" starttime="20170405 10:18:36.796"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.796" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:36.796" starttime="20170405 10:18:36.796"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:36.796" starttime="20170405 10:18:36.765"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:36.796" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:36.796" starttime="20170405 10:18:36.796"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:36.812" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:36.812" starttime="20170405 10:18:36.796"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.812" starttime="20170405 10:18:36.812"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.812" starttime="20170405 10:18:36.812"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:36.812" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:36.812" starttime="20170405 10:18:36.812"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.812" starttime="20170405 10:18:36.812"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:36.812" starttime="20170405 10:18:36.796"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended1" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.843" starttime="20170405 10:18:36.827"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%☺%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170405 10:18:36.858" level="INFO">${SQL_TalentPoolIdToGet} = 7936</msg>
<status status="PASS" endtime="20170405 10:18:36.858" starttime="20170405 10:18:36.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.858" level="INFO">${SQL_TalentPoolIdToGet} = 7936</msg>
<status status="PASS" endtime="20170405 10:18:36.858" starttime="20170405 10:18:36.858"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20170405 10:18:36.858" level="INFO">${SQL_TalentPoolTitleById} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20170405 10:18:36.858" starttime="20170405 10:18:36.858"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:36.858" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:36.858" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:36.858" starttime="20170405 10:18:36.858"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.858" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:36.858" starttime="20170405 10:18:36.858"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.858" level="INFO">Set request header "x-csod-user-id" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:36.858" starttime="20170405 10:18:36.858"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.858" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:36.858" starttime="20170405 10:18:36.858"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:36.858" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20170405 10:18:36.858" starttime="20170405 10:18:36.858"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.890" starttime="20170405 10:18:36.858"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.890" starttime="20170405 10:18:36.890"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:36.890" level="INFO">${resBody} = {"TalentpoolId":7936,"Title":"&lt;=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\x...</msg>
<status status="PASS" endtime="20170405 10:18:36.890" starttime="20170405 10:18:36.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.890" level="INFO">{"TalentpoolId":7936,"Title":"&lt;=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb6\xc3\xb2\xc3\xbb\xc3\xb9\xc3\xbf\xc2\xa2\xc2\xa3\xc2\xa5\xe2\x82\xa7\xc6\x92\xc3\xa1\xc3\xad\xc3\xb3\xc3\xba\xc3\xb1\xc3\x91\xc2\xaa","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-12-19T13:43:43.027","ModifierId":1,"ModifiedDate":"2016-12-19T13:43:43.027","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:36.890" starttime="20170405 10:18:36.890"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:36.890" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'...</msg>
<status status="PASS" endtime="20170405 10:18:36.890" starttime="20170405 10:18:36.890"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:36.890" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'...</msg>
<status status="PASS" endtime="20170405 10:18:36.890" starttime="20170405 10:18:36.890"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:36.890" level="INFO">${keyValue} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20170405 10:18:36.890" starttime="20170405 10:18:36.890"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:36.890" starttime="20170405 10:18:36.827"></status>
</kw>
<doc>*Name:*
API_TPC_Extended1

*Description:*
verify ASCII characters 1

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24430</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:36.890" critical="yes" starttime="20170405 10:18:36.765"></status>
</test>
<test id="s1-s1-t28" name="GET-API_TPC_GET_Return_Title_Extended2">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.921" starttime="20170405 10:18:36.905"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:36.921" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:36.921" starttime="20170405 10:18:36.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.921" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:36.921" starttime="20170405 10:18:36.921"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:36.921" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:36.921" starttime="20170405 10:18:36.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.921" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:36.921" starttime="20170405 10:18:36.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.921" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:36.921" starttime="20170405 10:18:36.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.921" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:36.921" starttime="20170405 10:18:36.921"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:36.921" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:36.921" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:36.921" starttime="20170405 10:18:36.921"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.921" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:36.921" starttime="20170405 10:18:36.921"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.921" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:36.921" starttime="20170405 10:18:36.921"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.937" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:36.937" starttime="20170405 10:18:36.937"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:36.937" starttime="20170405 10:18:36.905"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:36.937" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:36.937" starttime="20170405 10:18:36.937"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:36.937" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:36.937" starttime="20170405 10:18:36.937"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.937" starttime="20170405 10:18:36.937"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.952" starttime="20170405 10:18:36.937"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:36.952" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:36.952" starttime="20170405 10:18:36.952"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.952" starttime="20170405 10:18:36.952"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:36.952" starttime="20170405 10:18:36.937"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended2" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:36.968" starttime="20170405 10:18:36.952"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%=%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170405 10:18:36.983" level="INFO">${SQL_TalentPoolIdToGet} = 12270</msg>
<status status="PASS" endtime="20170405 10:18:36.983" starttime="20170405 10:18:36.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.983" level="INFO">${SQL_TalentPoolIdToGet} = 12270</msg>
<status status="PASS" endtime="20170405 10:18:36.983" starttime="20170405 10:18:36.983"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20170405 10:18:36.983" level="INFO">${SQL_TalentPoolTitleById} = &lt;=&gt;?@^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20170405 10:18:36.983" starttime="20170405 10:18:36.983"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:36.983" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:36.983" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:36.983" starttime="20170405 10:18:36.983"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.983" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:36.983" starttime="20170405 10:18:36.983"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.983" level="INFO">Set request header "x-csod-user-id" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:36.983" starttime="20170405 10:18:36.983"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:36.983" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:36.983" starttime="20170405 10:18:36.983"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:36.983" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:36.983" starttime="20170405 10:18:36.983"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.015" starttime="20170405 10:18:36.983"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.015" starttime="20170405 10:18:37.015"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:37.015" level="INFO">${resBody} = {"TalentpoolId":12270,"Title":"&lt;=&gt;?@^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb6\...</msg>
<status status="PASS" endtime="20170405 10:18:37.015" starttime="20170405 10:18:37.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.015" level="INFO">{"TalentpoolId":12270,"Title":"&lt;=&gt;?@^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb6\xc3\xb2\xc3\xbb\xc3\xb9\xc3\xbf\xc2\xa2\xc2\xa3\xc2\xa5\xe2\x82\xa7\xc6\x92\xc3\xa1\xc3\xad\xc3\xb3\xc3\xba\xc3\xb1\xc3\x91\xc2\xaa","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2017-03-12T17:33:49.603","ModifierId":1,"ModifiedDate":"2017-03-12T17:33:49.603","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:37.030" starttime="20170405 10:18:37.015"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:37.030" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'Tale...</msg>
<status status="PASS" endtime="20170405 10:18:37.030" starttime="20170405 10:18:37.030"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:37.030" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'Crea...</msg>
<status status="PASS" endtime="20170405 10:18:37.030" starttime="20170405 10:18:37.030"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:37.030" level="INFO">${keyValue} = &lt;=&gt;?@^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20170405 10:18:37.030" starttime="20170405 10:18:37.030"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:37.030" starttime="20170405 10:18:36.952"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended2

*Description:*
verify ASCII characters 2

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24431</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:37.030" critical="yes" starttime="20170405 10:18:36.890"></status>
</test>
<test id="s1-s1-t29" name="GET-API_TPC_GET_Return_Title_Extended3">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.046" starttime="20170405 10:18:37.030"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:37.046" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:37.046" starttime="20170405 10:18:37.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.046" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:37.046" starttime="20170405 10:18:37.046"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:37.046" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:37.046" starttime="20170405 10:18:37.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.046" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:37.046" starttime="20170405 10:18:37.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.046" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:37.046" starttime="20170405 10:18:37.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.046" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:37.046" starttime="20170405 10:18:37.046"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:37.046" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:37.046" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:37.046" starttime="20170405 10:18:37.046"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.046" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:37.046" starttime="20170405 10:18:37.046"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.046" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:37.046" starttime="20170405 10:18:37.046"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.062" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:37.062" starttime="20170405 10:18:37.046"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:37.062" starttime="20170405 10:18:37.030"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:37.062" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:37.062" starttime="20170405 10:18:37.062"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:37.062" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:37.062" starttime="20170405 10:18:37.062"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.062" starttime="20170405 10:18:37.062"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.062" starttime="20170405 10:18:37.062"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:37.062" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:37.062" starttime="20170405 10:18:37.062"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.077" starttime="20170405 10:18:37.062"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:37.077" starttime="20170405 10:18:37.062"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended3" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.093" starttime="20170405 10:18:37.077"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%ú%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170405 10:18:37.124" level="INFO">${SQL_TalentPoolIdToGet} = 2554</msg>
<status status="PASS" endtime="20170405 10:18:37.124" starttime="20170405 10:18:37.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.124" level="INFO">${SQL_TalentPoolIdToGet} = 2554</msg>
<status status="PASS" endtime="20170405 10:18:37.124" starttime="20170405 10:18:37.124"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20170405 10:18:37.124" level="INFO">${SQL_TalentPoolTitleById} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20170405 10:18:37.124" starttime="20170405 10:18:37.124"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:37.124" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:37.124" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:37.124" starttime="20170405 10:18:37.124"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.124" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:37.124" starttime="20170405 10:18:37.124"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.124" level="INFO">Set request header "x-csod-user-id" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:37.124" starttime="20170405 10:18:37.124"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.124" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:37.124" starttime="20170405 10:18:37.124"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:37.124" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:37.124" starttime="20170405 10:18:37.124"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.164" starttime="20170405 10:18:37.124"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.164" starttime="20170405 10:18:37.164"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:37.164" level="INFO">${resBody} = {"TalentpoolId":2554,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\x...</msg>
<status status="PASS" endtime="20170405 10:18:37.164" starttime="20170405 10:18:37.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.164" level="INFO">{"TalentpoolId":2554,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\xc2\xae\xc2\xaf\xc2\xb3\xc2\xb4\xc2\xb8U\xc2\xbe\xc3\x80\xc3\x81\xc3\x82\xc3\x83\xc3\x84\xc3\x85\xc3\x88\xc3\x89\xc3\x8a\xc3\x8b\xc3\x8c\xc3\x8d\xc3\x8e\xc3\x8f\xc3\x90\xc3\x92\xc3\x93\xc3\x94\xc3\x95\xc3\x96\xc3\x97\xc3\x98\xc3\x99\xc3\x9a\xc3\x9b\xc3\x9c","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-09-15T20:13:52.18","ModifierId":1,"ModifiedDate":"2016-09-15T20:13:52.18","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:37.164" starttime="20170405 10:18:37.164"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:37.168" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20170405 10:18:37.168" starttime="20170405 10:18:37.168"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:37.168" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20170405 10:18:37.168" starttime="20170405 10:18:37.168"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:37.168" level="INFO">${keyValue} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20170405 10:18:37.168" starttime="20170405 10:18:37.168"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:37.168" starttime="20170405 10:18:37.077"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended3

*Description:*
verify ASCII characters 3

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24432</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:37.168" critical="yes" starttime="20170405 10:18:37.030"></status>
</test>
<test id="s1-s1-t30" name="GET-API_TPC_GET_Return_Title_Extended5">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.186" starttime="20170405 10:18:37.172"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:37.186" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:37.186" starttime="20170405 10:18:37.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.186" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:37.186" starttime="20170405 10:18:37.186"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:37.186" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:37.186" starttime="20170405 10:18:37.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.202" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:37.202" starttime="20170405 10:18:37.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.202" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:37.202" starttime="20170405 10:18:37.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.202" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:37.202" starttime="20170405 10:18:37.202"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:37.202" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:37.202" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:37.202" starttime="20170405 10:18:37.202"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.202" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:37.202" starttime="20170405 10:18:37.202"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.202" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:37.202" starttime="20170405 10:18:37.202"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.202" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:37.202" starttime="20170405 10:18:37.202"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:37.202" starttime="20170405 10:18:37.172"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:37.202" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:37.202" starttime="20170405 10:18:37.202"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:37.202" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:37.202" starttime="20170405 10:18:37.202"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.217" starttime="20170405 10:18:37.202"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.217" starttime="20170405 10:18:37.217"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:37.217" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:37.217" starttime="20170405 10:18:37.217"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.217" starttime="20170405 10:18:37.217"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:37.217" starttime="20170405 10:18:37.202"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended5" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.248" starttime="20170405 10:18:37.217"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND title LIKE '%Š%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170405 10:18:37.264" level="INFO">${SQL_TalentPoolIdToGet} = 5287</msg>
<status status="PASS" endtime="20170405 10:18:37.264" starttime="20170405 10:18:37.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.264" level="INFO">${SQL_TalentPoolIdToGet} = 5287</msg>
<status status="PASS" endtime="20170405 10:18:37.264" starttime="20170405 10:18:37.264"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20170405 10:18:37.264" level="INFO">${SQL_TalentPoolTitleById} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20170405 10:18:37.264" starttime="20170405 10:18:37.264"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:37.264" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:37.264" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:37.264" starttime="20170405 10:18:37.264"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.264" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:37.264" starttime="20170405 10:18:37.264"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.264" level="INFO">Set request header "x-csod-user-id" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:37.264" starttime="20170405 10:18:37.264"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.264" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:37.264" starttime="20170405 10:18:37.264"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:37.264" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:37.264" starttime="20170405 10:18:37.264"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.295" starttime="20170405 10:18:37.264"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.295" starttime="20170405 10:18:37.295"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:37.311" level="INFO">${resBody} = {"TalentpoolId":5287,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\x...</msg>
<status status="PASS" endtime="20170405 10:18:37.311" starttime="20170405 10:18:37.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.311" level="INFO">{"TalentpoolId":5287,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\xc2\xae\xc2\xaf\xc2\xb3\xc2\xb4\xc2\xb8U\xc2\xbe\xc3\x80\xc3\x81\xc3\x82\xc3\x83\xc3\x84\xc3\x85\xc3\x88\xc3\x89\xc3\x8a\xc3\x8b\xc3\x8c\xc3\x8d\xc3\x8e\xc3\x8f\xc3\x90\xc3\x92\xc3\x93\xc3\x94\xc3\x95\xc3\x96\xc3\x97\xc3\x98\xc3\x99\xc3\x9a\xc3\x9b\xc3\x9c","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-02T12:46:36.363","ModifierId":1,"ModifiedDate":"2016-11-02T12:46:36.363","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:37.311" starttime="20170405 10:18:37.311"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:37.311" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20170405 10:18:37.311" starttime="20170405 10:18:37.311"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:37.311" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20170405 10:18:37.311" starttime="20170405 10:18:37.311"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:37.311" level="INFO">${keyValue} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20170405 10:18:37.311" starttime="20170405 10:18:37.311"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:37.311" starttime="20170405 10:18:37.217"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended5

*Description:*
verify ASCII characters 5

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24433</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:37.311" critical="yes" starttime="20170405 10:18:37.172"></status>
</test>
<test id="s1-s1-t31" name="GET-API_TPC_GET_Return_Title_Extended6">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.327" starttime="20170405 10:18:37.311"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:37.327" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:37.327" starttime="20170405 10:18:37.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.327" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:37.327" starttime="20170405 10:18:37.327"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:37.327" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:37.327" starttime="20170405 10:18:37.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.327" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:37.327" starttime="20170405 10:18:37.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.342" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:37.342" starttime="20170405 10:18:37.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.342" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:37.342" starttime="20170405 10:18:37.342"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:37.342" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:37.342" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:37.342" starttime="20170405 10:18:37.342"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.342" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:37.342" starttime="20170405 10:18:37.342"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.342" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:37.342" starttime="20170405 10:18:37.342"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.342" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:37.342" starttime="20170405 10:18:37.342"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:37.342" starttime="20170405 10:18:37.311"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:37.342" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:37.342" starttime="20170405 10:18:37.342"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:37.342" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:37.342" starttime="20170405 10:18:37.342"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.358" starttime="20170405 10:18:37.342"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.358" starttime="20170405 10:18:37.358"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:37.358" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:37.358" starttime="20170405 10:18:37.358"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.358" starttime="20170405 10:18:37.358"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:37.358" starttime="20170405 10:18:37.342"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended6" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.389" starttime="20170405 10:18:37.358"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%Ø%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170405 10:18:37.420" level="INFO">${SQL_TalentPoolIdToGet} = 2263</msg>
<status status="PASS" endtime="20170405 10:18:37.420" starttime="20170405 10:18:37.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.420" level="INFO">${SQL_TalentPoolIdToGet} = 2263</msg>
<status status="PASS" endtime="20170405 10:18:37.420" starttime="20170405 10:18:37.420"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById1}</var>
</assign>
<msg timestamp="20170405 10:18:37.420" level="INFO">${SQL_TalentPoolTitleById1} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20170405 10:18:37.420" starttime="20170405 10:18:37.420"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:37.420" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:37.420" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:37.420" starttime="20170405 10:18:37.420"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.420" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:37.420" starttime="20170405 10:18:37.420"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.420" level="INFO">Set request header "x-csod-user-id" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:37.420" starttime="20170405 10:18:37.420"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.420" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:37.420" starttime="20170405 10:18:37.420"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:37.420" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:37.420" starttime="20170405 10:18:37.420"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.467" starttime="20170405 10:18:37.420"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.467" starttime="20170405 10:18:37.467"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:37.467" level="INFO">${resBody} = {"TalentpoolId":2263,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\x...</msg>
<status status="PASS" endtime="20170405 10:18:37.467" starttime="20170405 10:18:37.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.483" level="INFO">{"TalentpoolId":2263,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\xc2\xae\xc2\xaf\xc2\xb3\xc2\xb4\xc2\xb8U\xc2\xbe\xc3\x80\xc3\x81\xc3\x82\xc3\x83\xc3\x84\xc3\x85\xc3\x88\xc3\x89\xc3\x8a\xc3\x8b\xc3\x8c\xc3\x8d\xc3\x8e\xc3\x8f\xc3\x90\xc3\x92\xc3\x93\xc3\x94\xc3\x95\xc3\x96\xc3\x97\xc3\x98\xc3\x99\xc3\x9a\xc3\x9b\xc3\x9c","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-07-14T20:41:58.41","ModifierId":1,"ModifiedDate":"2016-07-14T20:41:58.41","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:37.483" starttime="20170405 10:18:37.467"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:37.483" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20170405 10:18:37.483" starttime="20170405 10:18:37.483"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:37.483" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20170405 10:18:37.483" starttime="20170405 10:18:37.483"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:37.483" level="INFO">${keyValue} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20170405 10:18:37.483" starttime="20170405 10:18:37.483"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:37.483" starttime="20170405 10:18:37.358"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended6

*Description:*
verify ASCII characters 6

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24434</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:37.483" critical="yes" starttime="20170405 10:18:37.311"></status>
</test>
<test id="s1-s1-t32" name="GET-API_TPC_GET_Return_Title_Char_Foreign_Russian">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.498" starttime="20170405 10:18:37.483"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:37.498" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:37.498" starttime="20170405 10:18:37.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.498" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:37.498" starttime="20170405 10:18:37.498"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:37.498" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:37.498" starttime="20170405 10:18:37.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.498" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:37.498" starttime="20170405 10:18:37.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.514" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:37.514" starttime="20170405 10:18:37.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.514" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:37.514" starttime="20170405 10:18:37.514"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:37.514" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:37.514" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:37.514" starttime="20170405 10:18:37.514"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.514" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:37.514" starttime="20170405 10:18:37.514"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.514" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:37.514" starttime="20170405 10:18:37.514"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.514" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:37.514" starttime="20170405 10:18:37.514"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:37.514" starttime="20170405 10:18:37.483"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:37.514" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:37.514" starttime="20170405 10:18:37.514"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:37.514" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:37.514" starttime="20170405 10:18:37.514"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.530" starttime="20170405 10:18:37.514"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.530" starttime="20170405 10:18:37.530"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:37.530" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:37.530" starttime="20170405 10:18:37.530"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.530" starttime="20170405 10:18:37.530"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:37.530" starttime="20170405 10:18:37.514"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Foreign_Russian" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.545" starttime="20170405 10:18:37.530"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%ё%' \ ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170405 10:18:37.561" level="INFO">${SQL_TalentPoolIdToGet} = 2664</msg>
<status status="PASS" endtime="20170405 10:18:37.561" starttime="20170405 10:18:37.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.561" level="INFO">${SQL_TalentPoolIdToGet} = 2664</msg>
<status status="PASS" endtime="20170405 10:18:37.561" starttime="20170405 10:18:37.561"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById1}</var>
</assign>
<msg timestamp="20170405 10:18:37.561" level="INFO">${SQL_TalentPoolTitleById1} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20170405 10:18:37.561" starttime="20170405 10:18:37.561"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:37.561" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:37.561" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:37.561" starttime="20170405 10:18:37.561"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.561" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:37.561" starttime="20170405 10:18:37.561"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.561" level="INFO">Set request header "x-csod-user-id" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:37.561" starttime="20170405 10:18:37.561"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.561" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:37.561" starttime="20170405 10:18:37.561"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:37.561" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:37.561" starttime="20170405 10:18:37.561"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.592" starttime="20170405 10:18:37.561"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.592" starttime="20170405 10:18:37.592"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:37.592" level="INFO">${resBody} = {"TalentpoolId":2664,"Title":"&lt;=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\x...</msg>
<status status="PASS" endtime="20170405 10:18:37.592" starttime="20170405 10:18:37.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.592" level="INFO">{"TalentpoolId":2664,"Title":"&lt;=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb6\xc3\xb2\xc3\xbb\xc3\xb9\xc3\xbf\xc2\xa2\xc2\xa3\xc2\xa5\xe2\x82\xa7\xc6\x92\xc3\xa1\xc3\xad\xc3\xb3\xc3\xba\xc3\xb1\xc3\x91\xc2\xaa","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-09-19T16:34:58.983","ModifierId":1,"ModifiedDate":"2016-09-19T16:34:58.983","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:37.592" starttime="20170405 10:18:37.592"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:37.592" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'...</msg>
<status status="PASS" endtime="20170405 10:18:37.592" starttime="20170405 10:18:37.592"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:37.592" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'...</msg>
<status status="PASS" endtime="20170405 10:18:37.592" starttime="20170405 10:18:37.592"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:37.608" level="INFO">${keyValue} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20170405 10:18:37.608" starttime="20170405 10:18:37.592"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:37.608" starttime="20170405 10:18:37.530"></status>
</kw>
<doc>*Name:*
API_TP_Get_Return_Title_Char_Foreign_Russian

*Description:*
verify russian alphabet

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24435</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:37.608" critical="yes" starttime="20170405 10:18:37.483"></status>
</test>
<test id="s1-s1-t33" name="GET-API_TPC_GET_Return_Title_Char_Foreign_Arabic">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.623" starttime="20170405 10:18:37.608"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:37.623" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:37.623" starttime="20170405 10:18:37.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.623" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:37.623" starttime="20170405 10:18:37.623"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:37.623" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:37.623" starttime="20170405 10:18:37.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.623" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:37.623" starttime="20170405 10:18:37.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.623" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:37.623" starttime="20170405 10:18:37.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.623" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:37.623" starttime="20170405 10:18:37.623"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:37.623" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:37.623" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:37.623" starttime="20170405 10:18:37.623"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.623" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:37.623" starttime="20170405 10:18:37.623"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.623" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:37.623" starttime="20170405 10:18:37.623"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.623" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:37.623" starttime="20170405 10:18:37.623"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:37.623" starttime="20170405 10:18:37.608"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:37.623" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:37.623" starttime="20170405 10:18:37.623"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:37.639" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:37.639" starttime="20170405 10:18:37.623"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.639" starttime="20170405 10:18:37.639"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.639" starttime="20170405 10:18:37.639"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:37.639" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:37.639" starttime="20170405 10:18:37.639"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.639" starttime="20170405 10:18:37.639"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:37.639" starttime="20170405 10:18:37.623"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Foreign_Arabic" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.670" starttime="20170405 10:18:37.655"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%ز%' \ ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170405 10:18:37.717" level="INFO">${SQL_TalentPoolIdToGet} = 2058</msg>
<status status="PASS" endtime="20170405 10:18:37.717" starttime="20170405 10:18:37.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.717" level="INFO">${SQL_TalentPoolIdToGet} = 2058</msg>
<status status="PASS" endtime="20170405 10:18:37.717" starttime="20170405 10:18:37.717"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById1}</var>
</assign>
<msg timestamp="20170405 10:18:37.717" level="INFO">${SQL_TalentPoolTitleById1} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20170405 10:18:37.717" starttime="20170405 10:18:37.717"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:37.717" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:37.717" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:37.717" starttime="20170405 10:18:37.717"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.717" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:37.717" starttime="20170405 10:18:37.717"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.717" level="INFO">Set request header "x-csod-user-id" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:37.717" starttime="20170405 10:18:37.717"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.717" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:37.717" starttime="20170405 10:18:37.717"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:37.733" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:37.733" starttime="20170405 10:18:37.717"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.748" starttime="20170405 10:18:37.733"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.748" starttime="20170405 10:18:37.748"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:37.764" level="INFO">${resBody} = {"TalentpoolId":2058,"Title":"&lt;=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\x...</msg>
<status status="PASS" endtime="20170405 10:18:37.764" starttime="20170405 10:18:37.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.764" level="INFO">{"TalentpoolId":2058,"Title":"&lt;=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb6\xc3\xb2\xc3\xbb\xc3\xb9\xc3\xbf\xc2\xa2\xc2\xa3\xc2\xa5\xe2\x82\xa7\xc6\x92\xc3\xa1\xc3\xad\xc3\xb3\xc3\xba\xc3\xb1\xc3\x91\xc2\xaa","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-06-30T20:04:08.3","ModifierId":1,"ModifiedDate":"2016-06-30T20:04:08.3","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:37.764" starttime="20170405 10:18:37.764"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:37.764" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'...</msg>
<status status="PASS" endtime="20170405 10:18:37.764" starttime="20170405 10:18:37.764"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:37.764" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'...</msg>
<status status="PASS" endtime="20170405 10:18:37.764" starttime="20170405 10:18:37.764"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:37.764" level="INFO">${keyValue} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20170405 10:18:37.764" starttime="20170405 10:18:37.764"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:37.764" starttime="20170405 10:18:37.655"></status>
</kw>
<doc>*Name:*
API_TP_Get_Return_Title_Char_Foreign_Arabic

*Description:*
verify arabic alphabet

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24436</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:37.764" critical="yes" starttime="20170405 10:18:37.608"></status>
</test>
<test id="s1-s1-t34" name="GET-API_TPC_GET_Input_TP_Does_Not_Exist">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.780" starttime="20170405 10:18:37.764"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:37.811" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170405 10:18:37.811" starttime="20170405 10:18:37.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.811" level="INFO">48</msg>
<status status="PASS" endtime="20170405 10:18:37.811" starttime="20170405 10:18:37.811"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:37.811" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:37.811" starttime="20170405 10:18:37.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.811" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170405 10:18:37.811" starttime="20170405 10:18:37.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.811" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:37.811" starttime="20170405 10:18:37.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.811" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:37.811" starttime="20170405 10:18:37.811"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:37.811" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:37.811" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:37.811" starttime="20170405 10:18:37.811"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.811" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:37.811" starttime="20170405 10:18:37.811"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.811" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170405 10:18:37.811" starttime="20170405 10:18:37.811"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.827" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:37.827" starttime="20170405 10:18:37.811"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:37.827" starttime="20170405 10:18:37.764"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:37.827" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:37.827" starttime="20170405 10:18:37.827"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:37.827" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:37.827" starttime="20170405 10:18:37.827"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.842" starttime="20170405 10:18:37.827"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.842" starttime="20170405 10:18:37.842"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:37.842" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:37.842" starttime="20170405 10:18:37.842"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.842" starttime="20170405 10:18:37.842"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:37.842" starttime="20170405 10:18:37.827"></status>
</kw>
<kw name="GET_TalentPool_Does_Not_Exist" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>404</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.873" starttime="20170405 10:18:37.842"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id+1000 FROM ou WHERE ou.type_id = 131072 ORDER BY ou_id DESC</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170405 10:18:37.873" level="INFO">${SQL_TalentPoolIdToGet} = 13909</msg>
<status status="PASS" endtime="20170405 10:18:37.873" starttime="20170405 10:18:37.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.873" level="INFO">${SQL_TalentPoolIdToGet} = 13909</msg>
<status status="PASS" endtime="20170405 10:18:37.873" starttime="20170405 10:18:37.873"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:37.873" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:37.873" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:37.873" starttime="20170405 10:18:37.873"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.873" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:37.873" starttime="20170405 10:18:37.873"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.873" level="INFO">Set request header "x-csod-user-id" to "48"</msg>
<status status="PASS" endtime="20170405 10:18:37.873" starttime="20170405 10:18:37.873"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.873" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:37.873" starttime="20170405 10:18:37.873"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:37.873" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:37.873" starttime="20170405 10:18:37.873"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20170405 10:18:37.889" starttime="20170405 10:18:37.873"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.905" starttime="20170405 10:18:37.889"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.905" starttime="20170405 10:18:37.905"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:37.905" level="INFO">${resBody} = {"Message":"Talent pool not found."}</msg>
<status status="PASS" endtime="20170405 10:18:37.905" starttime="20170405 10:18:37.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.905" level="INFO">{"Message":"Talent pool not found."}</msg>
<status status="PASS" endtime="20170405 10:18:37.905" starttime="20170405 10:18:37.905"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:37.905" starttime="20170405 10:18:37.842"></status>
</kw>
<doc>*Name:*
API_TP_Get_Input_TP_DNE

*Description:*
verify failure when talent pool id provided does not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24437</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:37.905" critical="yes" starttime="20170405 10:18:37.764"></status>
</test>
<test id="s1-s1-t35" name="GET-API_TPC_GET_Input_User_Does_Not_Exist">
<kw name="REST_NOAUTH_NonExistentUser" library="SMP_Keywords">
<doc>*REST_NOAUTH_NonExistentUser:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.936" starttime="20170405 10:18:37.920"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:37.936" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20170405 10:18:37.936" starttime="20170405 10:18:37.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.936" level="INFO">2347</msg>
<status status="PASS" endtime="20170405 10:18:37.936" starttime="20170405 10:18:37.936"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT 1</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:37.936" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:37.936" starttime="20170405 10:18:37.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.936" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20170405 10:18:37.936" starttime="20170405 10:18:37.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.936" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:37.936" starttime="20170405 10:18:37.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.936" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:37.936" starttime="20170405 10:18:37.936"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:37.936" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:37.936" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:37.936" starttime="20170405 10:18:37.936"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.936" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:37.936" starttime="20170405 10:18:37.936"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.936" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20170405 10:18:37.936" starttime="20170405 10:18:37.936"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:37.936" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:37.936" starttime="20170405 10:18:37.936"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:37.936" starttime="20170405 10:18:37.920"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:37.952" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:37.952" starttime="20170405 10:18:37.952"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:37.952" level="INFO">Request body set to "{   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_2347",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:37.952" starttime="20170405 10:18:37.952"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.967" starttime="20170405 10:18:37.952"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.967" starttime="20170405 10:18:37.967"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:37.967" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:37.967" starttime="20170405 10:18:37.967"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.967" starttime="20170405 10:18:37.967"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:37.967" starttime="20170405 10:18:37.952"></status>
</kw>
<kw name="GET_User_Does_Not_Exist" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>401</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:37.983" starttime="20170405 10:18:37.983"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170405 10:18:38.014" level="INFO">${SQL_TalentPoolIdToGet} = 2843</msg>
<status status="PASS" endtime="20170405 10:18:38.014" starttime="20170405 10:18:37.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.014" level="INFO">${SQL_TalentPoolIdToGet} = 2843</msg>
<status status="PASS" endtime="20170405 10:18:38.014" starttime="20170405 10:18:38.014"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:38.014" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:38.014" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:38.014" starttime="20170405 10:18:38.014"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.014" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:38.014" starttime="20170405 10:18:38.014"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.014" level="INFO">Set request header "x-csod-user-id" to "2347"</msg>
<status status="PASS" endtime="20170405 10:18:38.014" starttime="20170405 10:18:38.014"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.014" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:38.014" starttime="20170405 10:18:38.014"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:38.014" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:38.014" starttime="20170405 10:18:38.014"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20170405 10:18:38.014" starttime="20170405 10:18:38.014"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:38.045" starttime="20170405 10:18:38.014"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:38.045" starttime="20170405 10:18:38.045"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:38.045" level="INFO">${resBody} = {"Message":"You don't have access to the talentpool."}</msg>
<status status="PASS" endtime="20170405 10:18:38.045" starttime="20170405 10:18:38.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.061" level="INFO">{"Message":"You don't have access to the talentpool."}</msg>
<status status="PASS" endtime="20170405 10:18:38.061" starttime="20170405 10:18:38.045"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:38.061" starttime="20170405 10:18:37.967"></status>
</kw>
<doc>*Name:*
API_TP_Get_Input_User_DNE

*Description:*
verify failure when user provided does not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24438</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:38.061" critical="yes" starttime="20170405 10:18:37.905"></status>
</test>
<test id="s1-s1-t36" name="GET-API_TPC_GET_Input_User_Did_Not_Create">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:38.061" starttime="20170405 10:18:38.061"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:38.092" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20170405 10:18:38.092" starttime="20170405 10:18:38.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.092" level="INFO">55</msg>
<status status="PASS" endtime="20170405 10:18:38.092" starttime="20170405 10:18:38.092"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:38.092" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:38.092" starttime="20170405 10:18:38.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.092" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20170405 10:18:38.092" starttime="20170405 10:18:38.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.092" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:38.092" starttime="20170405 10:18:38.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.092" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:38.092" starttime="20170405 10:18:38.092"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:38.092" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:38.092" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:38.092" starttime="20170405 10:18:38.092"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.092" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:38.092" starttime="20170405 10:18:38.092"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.092" level="INFO">Set request header "X-USERID" to "55"</msg>
<status status="PASS" endtime="20170405 10:18:38.092" starttime="20170405 10:18:38.092"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.092" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:38.092" starttime="20170405 10:18:38.092"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:38.092" starttime="20170405 10:18:38.061"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:38.092" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:38.092" starttime="20170405 10:18:38.092"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:38.108" level="INFO">Request body set to "{   "UserId": 55,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_55",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:38.108" starttime="20170405 10:18:38.092"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:38.108" starttime="20170405 10:18:38.108"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:38.108" starttime="20170405 10:18:38.108"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:38.108" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:38.108" starttime="20170405 10:18:38.108"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:38.108" starttime="20170405 10:18:38.108"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:38.108" starttime="20170405 10:18:38.092"></status>
</kw>
<kw name="GET_User_Did_Not_Create" library="SMP_Keywords">
<doc>*GET_User_Did_Not_Create:*</doc>
<arguments>
<arg>Title</arg>
<arg>401</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:38.123" starttime="20170405 10:18:38.123"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id&lt;&gt; ${SQL_GET_USERID} ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170405 10:18:38.139" level="INFO">${SQL_TalentPoolIdToGet} = 6797</msg>
<status status="PASS" endtime="20170405 10:18:38.139" starttime="20170405 10:18:38.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.139" level="INFO">${SQL_TalentPoolIdToGet} = 6797</msg>
<status status="PASS" endtime="20170405 10:18:38.139" starttime="20170405 10:18:38.139"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:38.139" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:38.139" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:38.139" starttime="20170405 10:18:38.139"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.139" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:38.139" starttime="20170405 10:18:38.139"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.139" level="INFO">Set request header "x-csod-user-id" to "55"</msg>
<status status="PASS" endtime="20170405 10:18:38.139" starttime="20170405 10:18:38.139"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.155" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:38.155" starttime="20170405 10:18:38.139"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:38.155" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:38.155" starttime="20170405 10:18:38.155"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20170405 10:18:38.155" starttime="20170405 10:18:38.155"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:38.170" starttime="20170405 10:18:38.155"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:38.170" starttime="20170405 10:18:38.170"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:38.170" level="INFO">${resBody} = {"Message":"You don't have access to the talentpool."}</msg>
<status status="PASS" endtime="20170405 10:18:38.170" starttime="20170405 10:18:38.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.186" level="INFO">{"Message":"You don't have access to the talentpool."}</msg>
<status status="PASS" endtime="20170405 10:18:38.186" starttime="20170405 10:18:38.170"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:38.186" starttime="20170405 10:18:38.123"></status>
</kw>
<doc>*Name:*
API_TP_Get_Input_User_DidNotCreate

*Description:*
verify failure when user provided did not create the talent pool

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24439</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:38.186" critical="yes" starttime="20170405 10:18:38.061"></status>
</test>
<test id="s1-s1-t37" name="POST-API_TPC_Add_Security_Script">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:38.208" starttime="20170405 10:18:38.189"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:38.213" level="INFO">${SQL_GET_USERID} = 62</msg>
<status status="PASS" endtime="20170405 10:18:38.213" starttime="20170405 10:18:38.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.213" level="INFO">62</msg>
<status status="PASS" endtime="20170405 10:18:38.213" starttime="20170405 10:18:38.213"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:38.213" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:38.213" starttime="20170405 10:18:38.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.213" level="INFO">${SQL_GET_USERID} = 62</msg>
<status status="PASS" endtime="20170405 10:18:38.213" starttime="20170405 10:18:38.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.213" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:38.213" starttime="20170405 10:18:38.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.213" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:38.213" starttime="20170405 10:18:38.213"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:38.213" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:38.213" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:38.213" starttime="20170405 10:18:38.213"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.213" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:38.213" starttime="20170405 10:18:38.213"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.213" level="INFO">Set request header "X-USERID" to "62"</msg>
<status status="PASS" endtime="20170405 10:18:38.213" starttime="20170405 10:18:38.213"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.213" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:38.213" starttime="20170405 10:18:38.213"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:38.213" starttime="20170405 10:18:38.189"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:38.213" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:38.213" starttime="20170405 10:18:38.213"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:38.229" level="INFO">Request body set to "{   "UserId": 62,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_62",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:38.229" starttime="20170405 10:18:38.213"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:38.229" starttime="20170405 10:18:38.229"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:38.229" starttime="20170405 10:18:38.229"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:38.229" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:38.229" starttime="20170405 10:18:38.229"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:38.229" starttime="20170405 10:18:38.229"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:38.244" starttime="20170405 10:18:38.213"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Add" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:38.260" starttime="20170405 10:18:38.244"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:38.260" level="INFO">${SQL_TalentPoolId} = 705</msg>
<status status="PASS" endtime="20170405 10:18:38.260" starttime="20170405 10:18:38.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.260" level="INFO">${SQL_TalentPoolId} = 705</msg>
<status status="PASS" endtime="20170405 10:18:38.260" starttime="20170405 10:18:38.260"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND name_first LIKE '%&lt;script&gt;alert(123)&lt;/script&gt;%' AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20170405 10:18:38.275" level="INFO">${SQL_UserToAdd1} = 1342</msg>
<status status="PASS" endtime="20170405 10:18:38.275" starttime="20170405 10:18:38.260"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:38.275" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:38.275" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:38.275" starttime="20170405 10:18:38.275"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.275" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:38.275" starttime="20170405 10:18:38.275"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.275" level="INFO">Set request header "x-csod-user-id" to "62"</msg>
<status status="PASS" endtime="20170405 10:18:38.275" starttime="20170405 10:18:38.275"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:38.275" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:38.275" starttime="20170405 10:18:38.275"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:38.291" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:38.291" starttime="20170405 10:18:38.291"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{ \"UserId\": ${SQL_UserToAdd1}, \"Status\": 128 }]</arg>
</arguments>
<msg timestamp="20170405 10:18:38.291" level="INFO">Request body set to "[{ "UserId": 1342, "Status": 128 }]".</msg>
<status status="PASS" endtime="20170405 10:18:38.291" starttime="20170405 10:18:38.291"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:38.291" level="INFO">${SQL_CandidateCountBefore} = 9</msg>
<status status="PASS" endtime="20170405 10:18:38.291" starttime="20170405 10:18:38.291"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:39.119" starttime="20170405 10:18:38.291"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:39.119" starttime="20170405 10:18:39.119"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:39.119" level="INFO">${resBody} = [{"UserId":1342,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":nu...</msg>
<status status="PASS" endtime="20170405 10:18:39.119" starttime="20170405 10:18:39.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.135" level="INFO">[{"UserId":1342,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":2}]</msg>
<status status="PASS" endtime="20170405 10:18:39.135" starttime="20170405 10:18:39.119"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:39.135" level="INFO">${SQL_CandidatesCountAfter} = 9</msg>
<status status="PASS" endtime="20170405 10:18:39.135" starttime="20170405 10:18:39.135"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${SQL_CandidateCountBefore} == ${SQL_CandidatesCountAfter}"</arg>
<arg>Set Test Message</arg>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.135" level="INFO">Set test message to:
The 9 matches with 9</msg>
<status status="PASS" endtime="20170405 10:18:39.135" starttime="20170405 10:18:39.135"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:39.135" starttime="20170405 10:18:39.135"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:39.135" starttime="20170405 10:18:38.244"></status>
</kw>
<doc>*Name:*
API_TPC_Security_Script

*Description:*
verify script injection is allowed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24440</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:39.135" critical="yes" starttime="20170405 10:18:38.186">The 9 matches with 9</status>
</test>
<test id="s1-s1-t38" name="POST-API_TPC_Add_Already_Added_Subset">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:39.150" starttime="20170405 10:18:39.135"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:39.150" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:39.150" starttime="20170405 10:18:39.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.150" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:39.150" starttime="20170405 10:18:39.150"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:39.150" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:39.150" starttime="20170405 10:18:39.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.150" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:39.150" starttime="20170405 10:18:39.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.150" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:39.150" starttime="20170405 10:18:39.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.150" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:39.166" starttime="20170405 10:18:39.150"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:39.166" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:39.166" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:39.166" starttime="20170405 10:18:39.166"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.166" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:39.166" starttime="20170405 10:18:39.166"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.166" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:39.166" starttime="20170405 10:18:39.166"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.166" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:39.166" starttime="20170405 10:18:39.166"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:39.166" starttime="20170405 10:18:39.135"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:39.166" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:39.166" starttime="20170405 10:18:39.166"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:39.166" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:39.166" starttime="20170405 10:18:39.166"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:39.182" starttime="20170405 10:18:39.166"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:39.182" starttime="20170405 10:18:39.182"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:39.182" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:39.182" starttime="20170405 10:18:39.182"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:39.182" starttime="20170405 10:18:39.182"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:39.182" starttime="20170405 10:18:39.166"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Add_SubSet" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:39.197" starttime="20170405 10:18:39.182"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:39.218" level="INFO">${SQL_TalentPoolId} = 809</msg>
<status status="PASS" endtime="20170405 10:18:39.218" starttime="20170405 10:18:39.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.222" level="INFO">${SQL_TalentPoolId} = 809</msg>
<status status="PASS" endtime="20170405 10:18:39.222" starttime="20170405 10:18:39.222"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20170405 10:18:39.234" level="INFO">${SQL_UserToAdd1} = 847</msg>
<status status="PASS" endtime="20170405 10:18:39.234" starttime="20170405 10:18:39.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.238" level="INFO">${SQL_UserToAdd1} = 847</msg>
<status status="PASS" endtime="20170405 10:18:39.238" starttime="20170405 10:18:39.238"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id &lt;&gt; ${SQL_UserToAdd1} AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd2}</var>
</assign>
<msg timestamp="20170405 10:18:39.241" level="INFO">${SQL_UserToAdd2} = 627</msg>
<status status="PASS" endtime="20170405 10:18:39.241" starttime="20170405 10:18:39.238"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:39.241" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:39.241" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:39.241" starttime="20170405 10:18:39.241"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.256" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:39.256" starttime="20170405 10:18:39.241"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.256" level="INFO">Set request header "x-csod-user-id" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:39.256" starttime="20170405 10:18:39.256"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.256" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:39.256" starttime="20170405 10:18:39.256"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:39.256" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:39.256" starttime="20170405 10:18:39.256"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{\"UserId\": ${SQL_UserToAdd1}},{\"UserId\": ${SQL_UserToAdd2}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:39.256" level="INFO">Request body set to "[{"UserId": 847},{"UserId": 627}]".</msg>
<status status="PASS" endtime="20170405 10:18:39.256" starttime="20170405 10:18:39.256"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:39.256" level="INFO">${SQL_CandidateCountBefore} = 7</msg>
<status status="PASS" endtime="20170405 10:18:39.256" starttime="20170405 10:18:39.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.256" level="INFO">${SQL_CandidateCountBefore} = 7</msg>
<status status="PASS" endtime="20170405 10:18:39.256" starttime="20170405 10:18:39.256"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:39.819" starttime="20170405 10:18:39.256"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:39.819" starttime="20170405 10:18:39.819"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:39.819" level="INFO">${resBody} = [{"UserId":847,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":nul...</msg>
<status status="PASS" endtime="20170405 10:18:39.819" starttime="20170405 10:18:39.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.819" level="INFO">[{"UserId":847,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":1},{"UserId":627,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":0}]</msg>
<status status="PASS" endtime="20170405 10:18:39.819" starttime="20170405 10:18:39.819"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:39.819" level="INFO">${SQL_CandidatesCountAfter} = 8</msg>
<status status="PASS" endtime="20170405 10:18:39.819" starttime="20170405 10:18:39.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.819" level="INFO">${SQL_CandidatesCountAfter} = 8</msg>
<status status="PASS" endtime="20170405 10:18:39.819" starttime="20170405 10:18:39.819"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${SQL_CandidateCountBefore} == ${SQL_CandidatesCountAfter}"</arg>
<arg>Set Test Message</arg>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.819" level="INFO">Set test message to:
The 7 matches with 8</msg>
<status status="PASS" endtime="20170405 10:18:39.819" starttime="20170405 10:18:39.819"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:39.819" starttime="20170405 10:18:39.819"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:39.819" starttime="20170405 10:18:39.182"></status>
</kw>
<doc>*Name:*
API_TPC_Add_Already_Added_Subset

*Description:*
Verify success when subset of added users are already added

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24441</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:39.819" critical="yes" starttime="20170405 10:18:39.135">The 7 matches with 8</status>
</test>
<test id="s1-s1-t39" name="POST-API_TPC_Add_Already_Added_Single">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:39.881" starttime="20170405 10:18:39.819"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:39.897" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:39.897" starttime="20170405 10:18:39.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.897" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:39.897" starttime="20170405 10:18:39.897"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:39.897" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:39.897" starttime="20170405 10:18:39.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.897" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:39.897" starttime="20170405 10:18:39.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.897" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:39.897" starttime="20170405 10:18:39.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.897" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:39.913" starttime="20170405 10:18:39.897"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:39.913" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:39.913" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:39.913" starttime="20170405 10:18:39.913"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.913" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:39.913" starttime="20170405 10:18:39.913"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.913" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:39.913" starttime="20170405 10:18:39.913"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.913" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:39.913" starttime="20170405 10:18:39.913"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:39.913" starttime="20170405 10:18:39.819"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:39.913" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:39.913" starttime="20170405 10:18:39.913"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:39.913" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:39.913" starttime="20170405 10:18:39.913"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:39.928" starttime="20170405 10:18:39.913"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:39.928" starttime="20170405 10:18:39.928"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:39.928" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:39.928" starttime="20170405 10:18:39.928"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:39.928" starttime="20170405 10:18:39.928"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:39.928" starttime="20170405 10:18:39.913"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Already_Added_Single" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:39.944" starttime="20170405 10:18:39.928"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:39.960" level="INFO">${SQL_TalentPoolId} = 776</msg>
<status status="PASS" endtime="20170405 10:18:39.960" starttime="20170405 10:18:39.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.960" level="INFO">${SQL_TalentPoolId} = 776</msg>
<status status="PASS" endtime="20170405 10:18:39.960" starttime="20170405 10:18:39.960"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20170405 10:18:39.975" level="INFO">${SQL_UserToAdd1} = 644</msg>
<status status="PASS" endtime="20170405 10:18:39.975" starttime="20170405 10:18:39.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.975" level="INFO">${SQL_UserToAdd1} = 644</msg>
<status status="PASS" endtime="20170405 10:18:39.975" starttime="20170405 10:18:39.975"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:39.975" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:39.975" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:39.975" starttime="20170405 10:18:39.975"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.975" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:39.975" starttime="20170405 10:18:39.975"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.975" level="INFO">Set request header "x-csod-user-id" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:39.975" starttime="20170405 10:18:39.975"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.975" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:39.975" starttime="20170405 10:18:39.975"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:39.975" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:39.975" starttime="20170405 10:18:39.975"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{\"UserId\": ${SQL_UserToAdd1}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:39.975" level="INFO">Request body set to "[{"UserId": 644}]".</msg>
<status status="PASS" endtime="20170405 10:18:39.975" starttime="20170405 10:18:39.975"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:39.991" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20170405 10:18:39.991" starttime="20170405 10:18:39.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20170405 10:18:39.991" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20170405 10:18:39.991" starttime="20170405 10:18:39.991"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.100" starttime="20170405 10:18:39.991"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.100" starttime="20170405 10:18:40.100"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:40.100" level="INFO">${resBody} = [{"UserId":644,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":nul...</msg>
<status status="PASS" endtime="20170405 10:18:40.100" starttime="20170405 10:18:40.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.100" level="INFO">[{"UserId":644,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":1}]</msg>
<status status="PASS" endtime="20170405 10:18:40.100" starttime="20170405 10:18:40.100"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:40.116" level="INFO">${SQL_CandidatesCountAfter} = 2</msg>
<status status="PASS" endtime="20170405 10:18:40.116" starttime="20170405 10:18:40.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.116" level="INFO">${SQL_CandidatesCountAfter} = 2</msg>
<status status="PASS" endtime="20170405 10:18:40.116" starttime="20170405 10:18:40.116"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${SQL_CandidateCountBefore} == ${SQL_CandidatesCountAfter}"</arg>
<arg>Set Test Message</arg>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.116" level="INFO">Set test message to:
The 2 matches with 2</msg>
<status status="PASS" endtime="20170405 10:18:40.116" starttime="20170405 10:18:40.116"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:40.116" starttime="20170405 10:18:40.116"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:40.116" starttime="20170405 10:18:39.928"></status>
</kw>
<doc>*Name:*
API_TPC_Add_AlreadyAdded_Single

*Description:*
Verify success when single added user is already added

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24442</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:40.116" critical="yes" starttime="20170405 10:18:39.819">The 2 matches with 2</status>
</test>
<test id="s1-s1-t40" name="POST-API_TPC_Add_Already_Added_All">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.131" starttime="20170405 10:18:40.116"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:40.163" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:40.163" starttime="20170405 10:18:40.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.163" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:40.163" starttime="20170405 10:18:40.163"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:40.163" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:40.163" starttime="20170405 10:18:40.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.163" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:40.163" starttime="20170405 10:18:40.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.163" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:40.163" starttime="20170405 10:18:40.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.163" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:40.163" starttime="20170405 10:18:40.163"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:40.163" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:40.163" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:40.163" starttime="20170405 10:18:40.163"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.163" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:40.163" starttime="20170405 10:18:40.163"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.178" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:40.178" starttime="20170405 10:18:40.163"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.178" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:40.178" starttime="20170405 10:18:40.178"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:40.178" starttime="20170405 10:18:40.116"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:40.178" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:40.178" starttime="20170405 10:18:40.178"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:40.178" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:40.178" starttime="20170405 10:18:40.178"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.194" starttime="20170405 10:18:40.178"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.194" starttime="20170405 10:18:40.194"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:40.194" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:40.194" starttime="20170405 10:18:40.194"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.194" starttime="20170405 10:18:40.194"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:40.194" starttime="20170405 10:18:40.178"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Already_Added_All" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.210" starttime="20170405 10:18:40.194"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 2) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:40.239" level="INFO">${SQL_TalentPoolId} = 2645</msg>
<status status="PASS" endtime="20170405 10:18:40.239" starttime="20170405 10:18:40.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.239" level="INFO">${SQL_TalentPoolId} = 2645</msg>
<status status="PASS" endtime="20170405 10:18:40.239" starttime="20170405 10:18:40.239"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20170405 10:18:40.247" level="INFO">${SQL_UserToAdd1} = 612</msg>
<status status="PASS" endtime="20170405 10:18:40.247" starttime="20170405 10:18:40.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.247" level="INFO">${SQL_UserToAdd1} = 612</msg>
<status status="PASS" endtime="20170405 10:18:40.247" starttime="20170405 10:18:40.247"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id &lt;&gt; ${SQL_UserToAdd1} AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd2}</var>
</assign>
<msg timestamp="20170405 10:18:40.263" level="INFO">${SQL_UserToAdd2} = 619</msg>
<status status="PASS" endtime="20170405 10:18:40.263" starttime="20170405 10:18:40.247"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:40.263" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:40.263" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:40.263" starttime="20170405 10:18:40.263"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.263" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:40.263" starttime="20170405 10:18:40.263"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.263" level="INFO">Set request header "x-csod-user-id" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:40.263" starttime="20170405 10:18:40.263"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.263" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:40.263" starttime="20170405 10:18:40.263"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:40.263" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:40.263" starttime="20170405 10:18:40.263"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{\"UserId\": ${SQL_UserToAdd1}},{\"UserId\": ${SQL_UserToAdd2}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:40.263" level="INFO">Request body set to "[{"UserId": 612},{"UserId": 619}]".</msg>
<status status="PASS" endtime="20170405 10:18:40.263" starttime="20170405 10:18:40.263"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:40.263" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20170405 10:18:40.263" starttime="20170405 10:18:40.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.263" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20170405 10:18:40.263" starttime="20170405 10:18:40.263"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.497" starttime="20170405 10:18:40.263"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.497" starttime="20170405 10:18:40.497"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:40.497" level="INFO">${resBody} = [{"UserId":612,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":nul...</msg>
<status status="PASS" endtime="20170405 10:18:40.497" starttime="20170405 10:18:40.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.497" level="INFO">[{"UserId":612,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":1},{"UserId":619,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":1}]</msg>
<status status="PASS" endtime="20170405 10:18:40.497" starttime="20170405 10:18:40.497"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:40.497" level="INFO">${SQL_CandidatesCountAfter} = 2</msg>
<status status="PASS" endtime="20170405 10:18:40.497" starttime="20170405 10:18:40.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.497" level="INFO">${SQL_CandidatesCountAfter} = 2</msg>
<status status="PASS" endtime="20170405 10:18:40.497" starttime="20170405 10:18:40.497"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${SQL_CandidateCountBefore} == ${SQL_CandidatesCountAfter}"</arg>
<arg>Set Test Message</arg>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.513" level="INFO">Set test message to:
The 2 matches with 2</msg>
<status status="PASS" endtime="20170405 10:18:40.513" starttime="20170405 10:18:40.513"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:40.513" starttime="20170405 10:18:40.497"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:40.513" starttime="20170405 10:18:40.194"></status>
</kw>
<doc>*Name:*
Api_TPC_Add_AlreadyAdded_All

*Description:*
Verify success when multiple added users are already added

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24443</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:40.513" critical="yes" starttime="20170405 10:18:40.116">The 2 matches with 2</status>
</test>
<test id="s1-s1-t41" name="POST-API_TPC_Add_Access_No_Visibility_Subset">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.528" starttime="20170405 10:18:40.513"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:40.544" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:40.544" starttime="20170405 10:18:40.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.544" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:40.544" starttime="20170405 10:18:40.544"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:40.544" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:40.544" starttime="20170405 10:18:40.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.544" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:40.544" starttime="20170405 10:18:40.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.544" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:40.544" starttime="20170405 10:18:40.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.544" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:40.544" starttime="20170405 10:18:40.544"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:40.544" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:40.544" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:40.544" starttime="20170405 10:18:40.544"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.544" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:40.544" starttime="20170405 10:18:40.544"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.544" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:40.544" starttime="20170405 10:18:40.544"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.544" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:40.544" starttime="20170405 10:18:40.544"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:40.544" starttime="20170405 10:18:40.513"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:40.560" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:40.560" starttime="20170405 10:18:40.560"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:40.560" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:40.560" starttime="20170405 10:18:40.560"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.575" starttime="20170405 10:18:40.560"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.575" starttime="20170405 10:18:40.575"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:40.575" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:40.575" starttime="20170405 10:18:40.575"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.575" starttime="20170405 10:18:40.575"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:40.575" starttime="20170405 10:18:40.560"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>POST_TalentPool_Candidates_Already_Added_All</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.575" starttime="20170405 10:18:40.575"></status>
</kw>
<doc>*Name:*
API_TPC_Add_Access_NoVis_SubSet

*Description:*
Verify failure when no actor does not have Visibility on a subset of added multiple users

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24444</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:40.575" critical="yes" starttime="20170405 10:18:40.513"></status>
</test>
<test id="s1-s1-t42" name="POST-API_TPC_Add_2Users">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.607" starttime="20170405 10:18:40.575"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:40.638" level="INFO">${SQL_GET_USERID} = 62</msg>
<status status="PASS" endtime="20170405 10:18:40.638" starttime="20170405 10:18:40.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.638" level="INFO">62</msg>
<status status="PASS" endtime="20170405 10:18:40.638" starttime="20170405 10:18:40.638"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:40.638" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:40.638" starttime="20170405 10:18:40.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.638" level="INFO">${SQL_GET_USERID} = 62</msg>
<status status="PASS" endtime="20170405 10:18:40.638" starttime="20170405 10:18:40.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.638" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:40.638" starttime="20170405 10:18:40.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.638" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:40.638" starttime="20170405 10:18:40.638"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:40.638" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:40.638" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:40.638" starttime="20170405 10:18:40.638"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.638" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:40.638" starttime="20170405 10:18:40.638"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.653" level="INFO">Set request header "X-USERID" to "62"</msg>
<status status="PASS" endtime="20170405 10:18:40.653" starttime="20170405 10:18:40.638"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.653" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:40.653" starttime="20170405 10:18:40.653"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:40.653" starttime="20170405 10:18:40.575"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:40.653" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:40.653" starttime="20170405 10:18:40.653"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:40.653" level="INFO">Request body set to "{   "UserId": 62,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_62",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:40.653" starttime="20170405 10:18:40.653"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.669" starttime="20170405 10:18:40.653"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.669" starttime="20170405 10:18:40.669"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:40.669" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:40.669" starttime="20170405 10:18:40.669"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.669" starttime="20170405 10:18:40.669"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:40.669" starttime="20170405 10:18:40.653"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Add_2Users" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.685" starttime="20170405 10:18:40.669"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:40.685" level="INFO">${SQL_TalentPoolId} = 578</msg>
<status status="PASS" endtime="20170405 10:18:40.685" starttime="20170405 10:18:40.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.700" level="INFO">${SQL_TalentPoolId} = 578</msg>
<status status="PASS" endtime="20170405 10:18:40.700" starttime="20170405 10:18:40.700"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20170405 10:18:40.700" level="INFO">${SQL_UserToAdd1} = 413</msg>
<status status="PASS" endtime="20170405 10:18:40.700" starttime="20170405 10:18:40.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.700" level="INFO">${SQL_UserToAdd1} = 413</msg>
<status status="PASS" endtime="20170405 10:18:40.700" starttime="20170405 10:18:40.700"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id &lt;&gt; ${SQL_UserToAdd1} AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd2}</var>
</assign>
<msg timestamp="20170405 10:18:40.716" level="INFO">${SQL_UserToAdd2} = 647</msg>
<status status="PASS" endtime="20170405 10:18:40.716" starttime="20170405 10:18:40.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd2}</arg>
<arg>${SQL_UserToAdd2}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.716" level="INFO">${SQL_UserToAdd2} = 647</msg>
<status status="PASS" endtime="20170405 10:18:40.716" starttime="20170405 10:18:40.716"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:40.716" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:40.716" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:40.716" starttime="20170405 10:18:40.716"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.716" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:40.716" starttime="20170405 10:18:40.716"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.716" level="INFO">Set request header "x-csod-user-id" to "62"</msg>
<status status="PASS" endtime="20170405 10:18:40.716" starttime="20170405 10:18:40.716"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.716" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:40.716" starttime="20170405 10:18:40.716"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:40.716" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:40.716" starttime="20170405 10:18:40.716"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_UserToAdd1}},{"UserId": ${SQL_UserToAdd2}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:40.716" level="INFO">Request body set to "[{"UserId": 413},{"UserId": 647}]".</msg>
<status status="PASS" endtime="20170405 10:18:40.716" starttime="20170405 10:18:40.716"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:40.716" level="INFO">${SQL_CandidateCountBefore} = 21</msg>
<status status="PASS" endtime="20170405 10:18:40.716" starttime="20170405 10:18:40.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.732" level="INFO">${SQL_CandidateCountBefore} = 21</msg>
<status status="PASS" endtime="20170405 10:18:40.732" starttime="20170405 10:18:40.732"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.982" starttime="20170405 10:18:40.732"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.982" starttime="20170405 10:18:40.982"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:40.982" level="INFO">${resBody} = [{"UserId":413,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":nul...</msg>
<status status="PASS" endtime="20170405 10:18:40.982" starttime="20170405 10:18:40.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.982" level="INFO">[{"UserId":413,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":2},{"UserId":647,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":0}]</msg>
<status status="PASS" endtime="20170405 10:18:40.982" starttime="20170405 10:18:40.982"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:40.982" level="INFO">${SQL_CandidatesCountAfter} = 22</msg>
<status status="PASS" endtime="20170405 10:18:40.982" starttime="20170405 10:18:40.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.982" level="INFO">${SQL_CandidatesCountAfter} = 22</msg>
<status status="PASS" endtime="20170405 10:18:40.982" starttime="20170405 10:18:40.982"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+2</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20170405 10:18:40.982" level="INFO">${SQL_NUM} = 23</msg>
<status status="PASS" endtime="20170405 10:18:40.982" starttime="20170405 10:18:40.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.997" level="INFO">23</msg>
<status status="PASS" endtime="20170405 10:18:40.997" starttime="20170405 10:18:40.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'== '${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:40.997" starttime="20170405 10:18:40.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidatesCountAfter} did not match ${SQL_NUM}</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>The ${SQL_CandidatesCountAfter} did not match ${SQL_NUM}</arg>
</arguments>
<msg timestamp="20170405 10:18:40.997" level="FAIL">The 22 did not match 23</msg>
<status status="FAIL" endtime="20170405 10:18:40.997" starttime="20170405 10:18:40.997"></status>
</kw>
<status status="FAIL" endtime="20170405 10:18:40.997" starttime="20170405 10:18:40.997"></status>
</kw>
<status status="FAIL" endtime="20170405 10:18:40.997" starttime="20170405 10:18:40.669"></status>
</kw>
<doc>*Name:*
API_TPC_Add_2Users

*Description:*
Verify success when adding 2 users

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24445</tag>
</tags>
<status status="FAIL" endtime="20170405 10:18:40.997" critical="yes" starttime="20170405 10:18:40.575">The 22 did not match 23</status>
</test>
<test id="s1-s1-t43" name="POST-API_TPC_Add_1Users">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:41.013" starttime="20170405 10:18:40.997"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:41.028" level="INFO">${SQL_GET_USERID} = 58</msg>
<status status="PASS" endtime="20170405 10:18:41.028" starttime="20170405 10:18:41.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.028" level="INFO">58</msg>
<status status="PASS" endtime="20170405 10:18:41.028" starttime="20170405 10:18:41.028"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:41.028" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:41.028" starttime="20170405 10:18:41.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.028" level="INFO">${SQL_GET_USERID} = 58</msg>
<status status="PASS" endtime="20170405 10:18:41.028" starttime="20170405 10:18:41.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.028" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:41.028" starttime="20170405 10:18:41.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.044" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:41.044" starttime="20170405 10:18:41.028"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:41.044" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:41.044" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:41.044" starttime="20170405 10:18:41.044"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.044" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:41.044" starttime="20170405 10:18:41.044"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.044" level="INFO">Set request header "X-USERID" to "58"</msg>
<status status="PASS" endtime="20170405 10:18:41.044" starttime="20170405 10:18:41.044"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.044" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:41.044" starttime="20170405 10:18:41.044"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:41.044" starttime="20170405 10:18:40.997"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:41.044" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:41.044" starttime="20170405 10:18:41.044"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:41.044" level="INFO">Request body set to "{   "UserId": 58,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_58",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:41.044" starttime="20170405 10:18:41.044"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:41.060" starttime="20170405 10:18:41.044"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:41.060" starttime="20170405 10:18:41.060"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:41.060" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:41.060" starttime="20170405 10:18:41.060"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:41.060" starttime="20170405 10:18:41.060"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:41.060" starttime="20170405 10:18:41.044"></status>
</kw>
<kw name="POST_TalentPool_Add_1Users" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:41.075" starttime="20170405 10:18:41.060"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:41.075" level="INFO">${SQL_TalentPoolId} = 628</msg>
<status status="PASS" endtime="20170405 10:18:41.075" starttime="20170405 10:18:41.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.091" level="INFO">${SQL_TalentPoolId} = 628</msg>
<status status="PASS" endtime="20170405 10:18:41.091" starttime="20170405 10:18:41.075"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20170405 10:18:41.091" level="INFO">${SQL_UserToAdd1} = 650</msg>
<status status="PASS" endtime="20170405 10:18:41.091" starttime="20170405 10:18:41.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.091" level="INFO">${SQL_UserToAdd1} = 650</msg>
<status status="PASS" endtime="20170405 10:18:41.091" starttime="20170405 10:18:41.091"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd2}</var>
</assign>
<msg timestamp="20170405 10:18:41.122" level="INFO">${SQL_UserToAdd2} = 10177</msg>
<status status="PASS" endtime="20170405 10:18:41.122" starttime="20170405 10:18:41.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd2}</arg>
<arg>${SQL_UserToAdd2}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.122" level="INFO">${SQL_UserToAdd2} = 10177</msg>
<status status="PASS" endtime="20170405 10:18:41.122" starttime="20170405 10:18:41.122"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:41.122" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:41.122" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:41.122" starttime="20170405 10:18:41.122"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.122" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:41.122" starttime="20170405 10:18:41.122"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.122" level="INFO">Set request header "x-csod-user-id" to "58"</msg>
<status status="PASS" endtime="20170405 10:18:41.122" starttime="20170405 10:18:41.122"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.122" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:41.122" starttime="20170405 10:18:41.122"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:41.122" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:41.122" starttime="20170405 10:18:41.122"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_UserToAdd1}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:41.122" level="INFO">Request body set to "[{"UserId": 650}]".</msg>
<status status="PASS" endtime="20170405 10:18:41.122" starttime="20170405 10:18:41.122"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:41.122" level="INFO">${SQL_CandidateCountBefore} = 5</msg>
<status status="PASS" endtime="20170405 10:18:41.122" starttime="20170405 10:18:41.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.122" level="INFO">${SQL_CandidateCountBefore} = 5</msg>
<status status="PASS" endtime="20170405 10:18:41.122" starttime="20170405 10:18:41.122"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:41.378" starttime="20170405 10:18:41.122"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:41.378" starttime="20170405 10:18:41.378"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:41.378" level="INFO">${resBody} = [{"UserId":650,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"P...</msg>
<status status="PASS" endtime="20170405 10:18:41.378" starttime="20170405 10:18:41.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.378" level="INFO">[{"UserId":650,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":0}]</msg>
<status status="PASS" endtime="20170405 10:18:41.378" starttime="20170405 10:18:41.378"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:41.378" level="INFO">${SQL_CandidatesCountAfter} = 6</msg>
<status status="PASS" endtime="20170405 10:18:41.378" starttime="20170405 10:18:41.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.378" level="INFO">${SQL_CandidatesCountAfter} = 6</msg>
<status status="PASS" endtime="20170405 10:18:41.378" starttime="20170405 10:18:41.378"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+1</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20170405 10:18:41.378" level="INFO">${SQL_NUM} = 6</msg>
<status status="PASS" endtime="20170405 10:18:41.378" starttime="20170405 10:18:41.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.394" level="INFO">6</msg>
<status status="PASS" endtime="20170405 10:18:41.394" starttime="20170405 10:18:41.394"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'== '${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.394" level="INFO">Set test message to:
The 6 matches with 6</msg>
<status status="PASS" endtime="20170405 10:18:41.394" starttime="20170405 10:18:41.394"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:41.394" starttime="20170405 10:18:41.394"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:41.394" starttime="20170405 10:18:41.394"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidatesCountAfter} did not match ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:41.394" starttime="20170405 10:18:41.394"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:41.394" starttime="20170405 10:18:41.060"></status>
</kw>
<doc>*Name:*
API_TPC_Add_1Users

*Description:*
Verify success when adding 1 user

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24446</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:41.394" critical="yes" starttime="20170405 10:18:40.997">The 6 matches with 6</status>
</test>
<test id="s1-s1-t44" name="POST-API_TPC_Add_0Users">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:41.425" starttime="20170405 10:18:41.394"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:41.425" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170405 10:18:41.425" starttime="20170405 10:18:41.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.425" level="INFO">415</msg>
<status status="PASS" endtime="20170405 10:18:41.425" starttime="20170405 10:18:41.425"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:41.425" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:41.425" starttime="20170405 10:18:41.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.441" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170405 10:18:41.441" starttime="20170405 10:18:41.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.441" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:41.441" starttime="20170405 10:18:41.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.441" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:41.441" starttime="20170405 10:18:41.441"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:41.441" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:41.441" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:41.441" starttime="20170405 10:18:41.441"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.441" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:41.441" starttime="20170405 10:18:41.441"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.441" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170405 10:18:41.441" starttime="20170405 10:18:41.441"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.441" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:41.441" starttime="20170405 10:18:41.441"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:41.441" starttime="20170405 10:18:41.394"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:41.441" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:41.441" starttime="20170405 10:18:41.441"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:41.441" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:41.441" starttime="20170405 10:18:41.441"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:41.456" starttime="20170405 10:18:41.441"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:41.456" starttime="20170405 10:18:41.456"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:41.456" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:41.456" starttime="20170405 10:18:41.456"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:41.456" starttime="20170405 10:18:41.456"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:41.456" starttime="20170405 10:18:41.441"></status>
</kw>
<kw name="POST_TalentPool_Add_0Users" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:41.488" starttime="20170405 10:18:41.472"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:41.488" level="INFO">${SQL_TalentPoolId} = 2964</msg>
<status status="PASS" endtime="20170405 10:18:41.488" starttime="20170405 10:18:41.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.488" level="INFO">${SQL_TalentPoolId} = 2964</msg>
<status status="PASS" endtime="20170405 10:18:41.488" starttime="20170405 10:18:41.488"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:41.488" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:41.488" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:41.488" starttime="20170405 10:18:41.488"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.488" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:41.488" starttime="20170405 10:18:41.488"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.488" level="INFO">Set request header "x-csod-user-id" to "415"</msg>
<status status="PASS" endtime="20170405 10:18:41.488" starttime="20170405 10:18:41.488"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.488" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:41.488" starttime="20170405 10:18:41.488"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:41.488" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:41.488" starttime="20170405 10:18:41.488"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{}]</arg>
</arguments>
<msg timestamp="20170405 10:18:41.488" level="INFO">Request body set to "[{}]".</msg>
<status status="PASS" endtime="20170405 10:18:41.488" starttime="20170405 10:18:41.488"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:41.503" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20170405 10:18:41.503" starttime="20170405 10:18:41.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.503" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20170405 10:18:41.503" starttime="20170405 10:18:41.503"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:41.738" starttime="20170405 10:18:41.503"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:41.738" starttime="20170405 10:18:41.738"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:41.738" level="INFO">${resBody} = [{"UserId":0,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,...</msg>
<status status="PASS" endtime="20170405 10:18:41.738" starttime="20170405 10:18:41.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.738" level="INFO">[{"UserId":0,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":2}]</msg>
<status status="PASS" endtime="20170405 10:18:41.738" starttime="20170405 10:18:41.738"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:41.753" level="INFO">${SQL_CandidatesCountAfter} = 0</msg>
<status status="PASS" endtime="20170405 10:18:41.753" starttime="20170405 10:18:41.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.753" level="INFO">${SQL_CandidatesCountAfter} = 0</msg>
<status status="PASS" endtime="20170405 10:18:41.753" starttime="20170405 10:18:41.753"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20170405 10:18:41.753" level="INFO">${SQL_NUM} = 0</msg>
<status status="PASS" endtime="20170405 10:18:41.753" starttime="20170405 10:18:41.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.753" level="INFO">0</msg>
<status status="PASS" endtime="20170405 10:18:41.753" starttime="20170405 10:18:41.753"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'== '${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.753" level="INFO">Set test message to:
The 0 matches with 0</msg>
<status status="PASS" endtime="20170405 10:18:41.753" starttime="20170405 10:18:41.753"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:41.753" starttime="20170405 10:18:41.753"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:41.753" starttime="20170405 10:18:41.753"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidatesCountAfter} did not match ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:41.769" starttime="20170405 10:18:41.753"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:41.769" starttime="20170405 10:18:41.456"></status>
</kw>
<doc>*Name:*
API_TPC_Add_0Users

*Description:*
Verify success when adding 0 users

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24447</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:41.769" critical="yes" starttime="20170405 10:18:41.394">The 0 matches with 0</status>
</test>
<test id="s1-s1-t45" name="POST-API_TPC_Add_BaseCase_Input_Vs_Database">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:41.785" starttime="20170405 10:18:41.769"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:41.785" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:41.785" starttime="20170405 10:18:41.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.800" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:41.800" starttime="20170405 10:18:41.785"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:41.800" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:41.800" starttime="20170405 10:18:41.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.800" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:41.800" starttime="20170405 10:18:41.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.800" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:41.800" starttime="20170405 10:18:41.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.800" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:41.800" starttime="20170405 10:18:41.800"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:41.800" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:41.800" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:41.800" starttime="20170405 10:18:41.800"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.800" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:41.800" starttime="20170405 10:18:41.800"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.800" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:41.800" starttime="20170405 10:18:41.800"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.800" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:41.800" starttime="20170405 10:18:41.800"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:41.800" starttime="20170405 10:18:41.769"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:41.800" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:41.800" starttime="20170405 10:18:41.800"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:41.800" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:41.800" starttime="20170405 10:18:41.800"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:41.816" starttime="20170405 10:18:41.800"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:41.816" starttime="20170405 10:18:41.816"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:41.816" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:41.816" starttime="20170405 10:18:41.816"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:41.816" starttime="20170405 10:18:41.816"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:41.816" starttime="20170405 10:18:41.800"></status>
</kw>
<kw name="POST_TalentPool_BaseCase_InputVsDataBase" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:41.831" starttime="20170405 10:18:41.816"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:41.847" level="INFO">${SQL_TalentPoolId} = 6377</msg>
<status status="PASS" endtime="20170405 10:18:41.847" starttime="20170405 10:18:41.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.847" level="INFO">${SQL_TalentPoolId} = 6377</msg>
<status status="PASS" endtime="20170405 10:18:41.847" starttime="20170405 10:18:41.847"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20170405 10:18:41.847" level="INFO">${SQL_UserToAdd1} = 777</msg>
<status status="PASS" endtime="20170405 10:18:41.847" starttime="20170405 10:18:41.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.847" level="INFO">${SQL_UserToAdd1} = 777</msg>
<status status="PASS" endtime="20170405 10:18:41.847" starttime="20170405 10:18:41.847"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:41.847" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:41.847" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:41.847" starttime="20170405 10:18:41.847"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.863" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:41.863" starttime="20170405 10:18:41.847"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.863" level="INFO">Set request header "x-csod-user-id" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:41.863" starttime="20170405 10:18:41.863"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.863" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:41.863" starttime="20170405 10:18:41.863"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:41.863" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:41.863" starttime="20170405 10:18:41.863"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_UserToAdd1}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:41.863" level="INFO">Request body set to "[{"UserId": 777}]".</msg>
<status status="PASS" endtime="20170405 10:18:41.863" starttime="20170405 10:18:41.863"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:41.863" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20170405 10:18:41.863" starttime="20170405 10:18:41.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20170405 10:18:41.863" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20170405 10:18:41.863" starttime="20170405 10:18:41.863"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.144" starttime="20170405 10:18:41.863"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.144" starttime="20170405 10:18:42.144"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:42.144" level="INFO">${resBody} = [{"UserId":777,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"P...</msg>
<status status="PASS" endtime="20170405 10:18:42.144" starttime="20170405 10:18:42.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.144" level="INFO">[{"UserId":777,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":0}]</msg>
<status status="PASS" endtime="20170405 10:18:42.144" starttime="20170405 10:18:42.144"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:42.144" level="INFO">${SQL_CandidatesCountAfter} = 2</msg>
<status status="PASS" endtime="20170405 10:18:42.144" starttime="20170405 10:18:42.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.144" level="INFO">${SQL_CandidatesCountAfter} = 2</msg>
<status status="PASS" endtime="20170405 10:18:42.144" starttime="20170405 10:18:42.144"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+1</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20170405 10:18:42.160" level="INFO">${SQL_NUM} = 2</msg>
<status status="PASS" endtime="20170405 10:18:42.160" starttime="20170405 10:18:42.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.160" level="INFO">2</msg>
<status status="PASS" endtime="20170405 10:18:42.160" starttime="20170405 10:18:42.160"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'== '${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.160" level="INFO">Set test message to:
The 2 matches with 2</msg>
<status status="PASS" endtime="20170405 10:18:42.160" starttime="20170405 10:18:42.160"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:42.160" starttime="20170405 10:18:42.160"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:42.160" starttime="20170405 10:18:42.160"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidatesCountAfter} did not match ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.160" starttime="20170405 10:18:42.160"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:42.160" starttime="20170405 10:18:41.816"></status>
</kw>
<doc>*Name:*
API_TPC_Add_BaseCase_InputVsDatabase

*Description:*
Verify successful input user ends up in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24448</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:42.160" critical="yes" starttime="20170405 10:18:41.769">The 2 matches with 2</status>
</test>
<test id="s1-s1-t46" name="POST-API_TPC_Add_BaseCase_Input_Vs_Output_Value">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.175" starttime="20170405 10:18:42.175"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:42.191" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:42.191" starttime="20170405 10:18:42.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.191" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:42.191" starttime="20170405 10:18:42.191"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:42.191" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:42.191" starttime="20170405 10:18:42.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.191" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:42.191" starttime="20170405 10:18:42.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.191" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:42.191" starttime="20170405 10:18:42.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.191" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:42.191" starttime="20170405 10:18:42.191"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:42.191" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:42.191" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:42.191" starttime="20170405 10:18:42.191"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.191" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:42.191" starttime="20170405 10:18:42.191"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.191" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:42.191" starttime="20170405 10:18:42.191"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.191" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:42.191" starttime="20170405 10:18:42.191"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:42.191" starttime="20170405 10:18:42.160"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:42.191" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:42.191" starttime="20170405 10:18:42.191"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:42.191" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:42.191" starttime="20170405 10:18:42.191"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.206" starttime="20170405 10:18:42.191"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.206" starttime="20170405 10:18:42.206"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:42.206" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:42.206" starttime="20170405 10:18:42.206"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.206" starttime="20170405 10:18:42.206"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:42.206" starttime="20170405 10:18:42.191"></status>
</kw>
<kw name="POST_TalentPool_BaseCase_InputVsDataBase_Value" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.222" starttime="20170405 10:18:42.206"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:42.238" level="INFO">${SQL_TalentPoolId} = 7366</msg>
<status status="PASS" endtime="20170405 10:18:42.238" starttime="20170405 10:18:42.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.238" level="INFO">${SQL_TalentPoolId} = 7366</msg>
<status status="PASS" endtime="20170405 10:18:42.238" starttime="20170405 10:18:42.238"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20170405 10:18:42.238" level="INFO">${SQL_UserToAdd1} = 861</msg>
<status status="PASS" endtime="20170405 10:18:42.238" starttime="20170405 10:18:42.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.238" level="INFO">${SQL_UserToAdd1} = 861</msg>
<status status="PASS" endtime="20170405 10:18:42.238" starttime="20170405 10:18:42.238"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:42.238" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:42.238" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:42.238" starttime="20170405 10:18:42.238"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.238" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:42.238" starttime="20170405 10:18:42.238"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.253" level="INFO">Set request header "x-csod-user-id" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:42.253" starttime="20170405 10:18:42.238"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.253" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:42.253" starttime="20170405 10:18:42.253"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:42.253" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:42.253" starttime="20170405 10:18:42.253"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_UserToAdd1}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:42.253" level="INFO">Request body set to "[{"UserId": 861}]".</msg>
<status status="PASS" endtime="20170405 10:18:42.253" starttime="20170405 10:18:42.253"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.403" starttime="20170405 10:18:42.253"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.403" starttime="20170405 10:18:42.403"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:42.419" level="INFO">${resBody} = [{"UserId":861,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"P...</msg>
<status status="PASS" endtime="20170405 10:18:42.419" starttime="20170405 10:18:42.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.419" level="INFO">[{"UserId":861,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":0}]</msg>
<status status="PASS" endtime="20170405 10:18:42.419" starttime="20170405 10:18:42.419"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} AND user_id = ${SQL_UserToAdd1}</arg>
</arguments>
<assign>
<var>${SQL_GetAddedCandidateId}</var>
</assign>
<msg timestamp="20170405 10:18:42.419" level="INFO">${SQL_GetAddedCandidateId} = 861</msg>
<status status="PASS" endtime="20170405 10:18:42.419" starttime="20170405 10:18:42.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetAddedCandidateId}</arg>
<arg>${SQL_GetAddedCandidateId}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.419" level="INFO">${SQL_GetAddedCandidateId} = 861</msg>
<status status="PASS" endtime="20170405 10:18:42.419" starttime="20170405 10:18:42.419"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_UserToAdd1}'== '${SQL_GetAddedCandidateId}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_UserToAdd1} matches with ${SQL_GetAddedCandidateId}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_UserToAdd1} matches with ${SQL_GetAddedCandidateId}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.419" level="INFO">Set test message to:
The 861 matches with 861</msg>
<status status="PASS" endtime="20170405 10:18:42.419" starttime="20170405 10:18:42.419"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:42.419" starttime="20170405 10:18:42.419"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:42.419" starttime="20170405 10:18:42.419"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_UserToAdd1}'&lt;&gt; '${SQL_GetAddedCandidateId}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_UserToAdd1} did not match ${SQL_GetAddedCandidateId}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.434" starttime="20170405 10:18:42.419"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:42.434" starttime="20170405 10:18:42.206"></status>
</kw>
<doc>*Name:*
API_TPC_Add_BC_InputVsOutput_Value

*Description:*
Verify successful input user ends up in output

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24449</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:42.434" critical="yes" starttime="20170405 10:18:42.160">The 861 matches with 861</status>
</test>
<test id="s1-s1-t47" name="POST-API_TP_Grp_Create_UseCase_Elab_AlreadyExists">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.434" starttime="20170405 10:18:42.434"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:42.466" level="INFO">${SQL_GET_USERID} = 1</msg>
<status status="PASS" endtime="20170405 10:18:42.466" starttime="20170405 10:18:42.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.466" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:42.466" starttime="20170405 10:18:42.466"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:42.466" level="INFO">${SQL_GET_USER_CULTURE} = 2</msg>
<status status="PASS" endtime="20170405 10:18:42.466" starttime="20170405 10:18:42.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.466" level="INFO">${SQL_GET_USERID} = 1</msg>
<status status="PASS" endtime="20170405 10:18:42.466" starttime="20170405 10:18:42.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.466" level="INFO">${SQL_GET_USER_CULTURE} = 2</msg>
<status status="PASS" endtime="20170405 10:18:42.466" starttime="20170405 10:18:42.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.481" level="INFO">2</msg>
<status status="PASS" endtime="20170405 10:18:42.481" starttime="20170405 10:18:42.481"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:42.481" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:42.481" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:42.481" starttime="20170405 10:18:42.481"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.481" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:42.481" starttime="20170405 10:18:42.481"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.481" level="INFO">Set request header "X-USERID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:42.481" starttime="20170405 10:18:42.481"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.481" level="INFO">Set request header "X-CULTUREID" to "2"</msg>
<status status="PASS" endtime="20170405 10:18:42.481" starttime="20170405 10:18:42.481"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:42.481" starttime="20170405 10:18:42.434"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:42.481" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:42.481" starttime="20170405 10:18:42.481"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:42.481" level="INFO">Request body set to "{   "UserId": 1,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:42.481" starttime="20170405 10:18:42.481"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.497" starttime="20170405 10:18:42.481"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.497" starttime="20170405 10:18:42.497"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:42.497" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:42.497" starttime="20170405 10:18:42.497"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.497" starttime="20170405 10:18:42.497"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:42.497" starttime="20170405 10:18:42.481"></status>
</kw>
<kw name="POST_TalentPool_Group_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>400</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.512" starttime="20170405 10:18:42.497"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou.type_id = 131072 AND ou_id IN (SELECT related_ou_id FROM ou_relation WHERE type_id = 16) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:42.559" level="INFO">${SQL_TalentPoolId} = 823</msg>
<status status="PASS" endtime="20170405 10:18:42.559" starttime="20170405 10:18:42.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.559" level="INFO">${SQL_TalentPoolId} = 823</msg>
<status status="PASS" endtime="20170405 10:18:42.559" starttime="20170405 10:18:42.559"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT CONVERT(varchar(255), NEWID())</arg>
</arguments>
<assign>
<var>${SQL_RandomName}</var>
</assign>
<msg timestamp="20170405 10:18:42.559" level="INFO">${SQL_RandomName} = 32815BED-CC61-49BC-AD4A-17346EB17E4C</msg>
<status status="PASS" endtime="20170405 10:18:42.559" starttime="20170405 10:18:42.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_RandomName}</arg>
<arg>${SQL_RandomName}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.559" level="INFO">${SQL_RandomName} = 32815BED-CC61-49BC-AD4A-17346EB17E4C</msg>
<status status="PASS" endtime="20170405 10:18:42.559" starttime="20170405 10:18:42.559"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:42.559" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:42.559" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:42.559" starttime="20170405 10:18:42.559"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.559" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:42.559" starttime="20170405 10:18:42.559"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.559" level="INFO">Set request header "x-csod-user-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:42.559" starttime="20170405 10:18:42.559"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.559" level="INFO">Set request header "x-csod-default-culture-id" to "2"</msg>
<status status="PASS" endtime="20170405 10:18:42.559" starttime="20170405 10:18:42.559"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:42.559" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20170405 10:18:42.559" starttime="20170405 10:18:42.559"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{"Title": '${SQL_RandomName}'}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.559" level="INFO">Request body set to "{"Title": '32815BED-CC61-49BC-AD4A-17346EB17E4C'}".</msg>
<status status="PASS" endtime="20170405 10:18:42.559" starttime="20170405 10:18:42.559"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT(ou_id) FROM ou_relation WHERE type_id = 16 AND ou_id = ${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:42.559" level="INFO">${SQL_CountBefore} = 0</msg>
<status status="PASS" endtime="20170405 10:18:42.559" starttime="20170405 10:18:42.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CountBefore}</arg>
<arg>${SQL_CountBefore}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.559" level="INFO">${SQL_CountBefore} = 0</msg>
<status status="PASS" endtime="20170405 10:18:42.559" starttime="20170405 10:18:42.559"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20170405 10:18:42.559" starttime="20170405 10:18:42.559"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/groups</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.606" starttime="20170405 10:18:42.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/groups</arg>
</arguments>
<msg timestamp="20170405 10:18:42.606" level="INFO">/talentpool-api/talentpools/823/groups</msg>
<status status="PASS" endtime="20170405 10:18:42.606" starttime="20170405 10:18:42.606"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.606" starttime="20170405 10:18:42.606"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:42.606" level="INFO">${resBody} = {"Message":"A group for this talentpool or nominationlist already exists!"}</msg>
<status status="PASS" endtime="20170405 10:18:42.606" starttime="20170405 10:18:42.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.606" level="INFO">{"Message":"A group for this talentpool or nominationlist already exists!"}</msg>
<status status="PASS" endtime="20170405 10:18:42.606" starttime="20170405 10:18:42.606"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT(ou_id) FROM ou_relation WHERE type_id = 16 AND ou_id = ${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:42.606" level="INFO">${SQL_CountAfter} = 0</msg>
<status status="PASS" endtime="20170405 10:18:42.606" starttime="20170405 10:18:42.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CountAfter}</arg>
<arg>${SQL_CountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.606" level="INFO">${SQL_CountAfter} = 0</msg>
<status status="PASS" endtime="20170405 10:18:42.606" starttime="20170405 10:18:42.606"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${CountAdjustment}=</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.606" starttime="20170405 10:18:42.606"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT ${SQL_CountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_CountExpected}</var>
</assign>
<msg timestamp="20170405 10:18:42.606" level="INFO">${SQL_CountExpected} = 0</msg>
<status status="PASS" endtime="20170405 10:18:42.622" starttime="20170405 10:18:42.606"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${SQL_NUM}=</arg>
<arg>Evaluate</arg>
<arg>${SQL_CountBefore}+0</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.622" starttime="20170405 10:18:42.622"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Log</arg>
<arg>${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.622" starttime="20170405 10:18:42.622"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CountAfter}'== '${SQL_CountExpected}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CountAfter} matches with ${SQL_CountExpected}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CountAfter} matches with ${SQL_CountExpected}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.622" level="INFO">Set test message to:
The 0 matches with 0</msg>
<status status="PASS" endtime="20170405 10:18:42.622" starttime="20170405 10:18:42.622"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:42.622" starttime="20170405 10:18:42.622"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:42.622" starttime="20170405 10:18:42.622"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CountAfter}'&lt;&gt; '${SQL_CountExpected}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CountAfter} did not match ${SQL_CountExpected}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.622" starttime="20170405 10:18:42.622"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:42.622" starttime="20170405 10:18:42.497"></status>
</kw>
<doc>*Name:*
API_TPC_Add_BC_InputVsOutput_Value

*Description:*
Verify successful input user ends up in output

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24450</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:42.622" critical="yes" starttime="20170405 10:18:42.434">The 0 matches with 0</status>
</test>
<test id="s1-s1-t48" name="PUT-API_TPC_Rename">
<kw name="REST_NOAUTH_Random_Active_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.638" starttime="20170405 10:18:42.622"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:42.653" level="INFO">${SQL_GET_USERID} = 46</msg>
<status status="PASS" endtime="20170405 10:18:42.653" starttime="20170405 10:18:42.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.653" level="INFO">46</msg>
<status status="PASS" endtime="20170405 10:18:42.653" starttime="20170405 10:18:42.653"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:42.669" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:42.669" starttime="20170405 10:18:42.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.669" level="INFO">${SQL_GET_USERID} = 46</msg>
<status status="PASS" endtime="20170405 10:18:42.669" starttime="20170405 10:18:42.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.669" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:42.669" starttime="20170405 10:18:42.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.669" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:42.669" starttime="20170405 10:18:42.669"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:42.669" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:42.669" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:42.669" starttime="20170405 10:18:42.669"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.669" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:42.669" starttime="20170405 10:18:42.669"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.669" level="INFO">Set request header "X-USERID" to "46"</msg>
<status status="PASS" endtime="20170405 10:18:42.669" starttime="20170405 10:18:42.669"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.669" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:42.669" starttime="20170405 10:18:42.669"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:42.669" starttime="20170405 10:18:42.622"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:42.669" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:42.669" starttime="20170405 10:18:42.669"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:42.669" level="INFO">Request body set to "{   "UserId": 46,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_46",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:42.669" starttime="20170405 10:18:42.669"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.684" starttime="20170405 10:18:42.669"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.684" starttime="20170405 10:18:42.684"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:42.684" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:42.684" starttime="20170405 10:18:42.684"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:42.684" starttime="20170405 10:18:42.684"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:42.684" starttime="20170405 10:18:42.669"></status>
</kw>
<kw name="PUT_TalentPool_Rename_Access" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>test 2</arg>
<arg>Title</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:42.700" level="INFO">${SQL_TalentPoolId} = 204</msg>
<status status="PASS" endtime="20170405 10:18:42.700" starttime="20170405 10:18:42.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.716" level="INFO">${SQL_TalentPoolId} = 204</msg>
<status status="PASS" endtime="20170405 10:18:42.716" starttime="20170405 10:18:42.716"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:42.716" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:42.716" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:42.716" starttime="20170405 10:18:42.716"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.716" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:42.716" starttime="20170405 10:18:42.716"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.716" level="INFO">Set request header "x-csod-user-id" to "46"</msg>
<status status="PASS" endtime="20170405 10:18:42.716" starttime="20170405 10:18:42.716"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.716" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:42.716" starttime="20170405 10:18:42.716"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:42.716" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:42.716" starttime="20170405 10:18:42.716"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20170405 10:18:42.716" starttime="20170405 10:18:42.716"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:42.716" level="INFO">Request body set to "{ "Title":"test 2"}".</msg>
<status status="PASS" endtime="20170405 10:18:42.716" starttime="20170405 10:18:42.716"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:47.465" starttime="20170405 10:18:42.716"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:47.465" level="INFO">${resBody} = {"TalentpoolId":204,"Title":"test 2","Owner":{"UserId":25,"FirstName":"Julie","LastName":"Hennessy"},"CreatedDate":"2013-06-17T22:29:14.61","ModifierId":46,"ModifiedDate":"2017-04-05T17:18:42.8972819Z...</msg>
<status status="PASS" endtime="20170405 10:18:47.465" starttime="20170405 10:18:47.465"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API PUT Test Passed.</arg>
</arguments>
<msg timestamp="20170405 10:18:47.465" level="INFO">Set test message to:
The {"TalentpoolId":204,"Title":"test 2","Owner":{"UserId":25,"FirstName":"Julie","LastName":"Hennessy"},"CreatedDate":"2013-06-17T22:29:14.61","ModifierId":46,"ModifiedDate":"2017-04-05T17:18:42.8972819Z","IsShared":false,"UserCount":0,"LatestUsers":[]} message from the API PUT Test Passed.</msg>
<status status="PASS" endtime="20170405 10:18:47.465" starttime="20170405 10:18:47.465"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:47.465" starttime="20170405 10:18:42.700"></status>
</kw>
<doc>*Name:*
PUT-TP_Rename_Access.

*Description:*
Access: Verify success when actor shared

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
<tag>testrailid=24451</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:47.465" critical="yes" starttime="20170405 10:18:42.622">The {"TalentpoolId":204,"Title":"test 2","Owner":{"UserId":25,"FirstName":"Julie","LastName":"Hennessy"},"CreatedDate":"2013-06-17T22:29:14.61","ModifierId":46,"ModifiedDate":"2017-04-05T17:18:42.8972819Z","IsShared":false,"UserCount":0,"LatestUsers":[]} message from the API PUT Test Passed.</status>
</test>
<test id="s1-s1-t49" name="PUT-API_Talent_Pool_Candidate_Search_Set_UseCase_Base_InputVsStatusDatabase">
<kw name="REST_NOAUTH_Random_Active_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:47.528" starttime="20170405 10:18:47.465"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:47.543" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170405 10:18:47.543" starttime="20170405 10:18:47.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:47.543" level="INFO">48</msg>
<status status="PASS" endtime="20170405 10:18:47.543" starttime="20170405 10:18:47.543"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:47.559" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:47.559" starttime="20170405 10:18:47.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:47.559" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170405 10:18:47.559" starttime="20170405 10:18:47.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:47.559" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:47.559" starttime="20170405 10:18:47.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:47.559" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:47.559" starttime="20170405 10:18:47.559"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:47.559" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:47.559" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:47.559" starttime="20170405 10:18:47.559"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:47.559" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:47.559" starttime="20170405 10:18:47.559"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:47.559" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170405 10:18:47.559" starttime="20170405 10:18:47.559"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:47.559" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:47.559" starttime="20170405 10:18:47.559"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:47.559" starttime="20170405 10:18:47.465"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:47.559" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:47.559" starttime="20170405 10:18:47.559"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:47.559" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:47.559" starttime="20170405 10:18:47.559"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:47.574" starttime="20170405 10:18:47.559"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:47.574" starttime="20170405 10:18:47.574"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:47.574" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:47.574" starttime="20170405 10:18:47.574"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:47.574" starttime="20170405 10:18:47.574"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:47.574" starttime="20170405 10:18:47.559"></status>
</kw>
<kw name="PUT_TalentPool_Candidate_Status_Set" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:47.650" level="INFO">${SQL_TalentPoolId} = 10752</msg>
<status status="PASS" endtime="20170405 10:18:47.650" starttime="20170405 10:18:47.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:47.650" level="INFO">${SQL_TalentPoolId} = 10752</msg>
<status status="PASS" endtime="20170405 10:18:47.650" starttime="20170405 10:18:47.650"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1}</var>
</assign>
<msg timestamp="20170405 10:18:47.665" level="INFO">${SQL_GetCandidateId1} = 756</msg>
<status status="PASS" endtime="20170405 10:18:47.665" starttime="20170405 10:18:47.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1}</arg>
<arg>${SQL_GetCandidateId1}</arg>
</arguments>
<msg timestamp="20170405 10:18:47.665" level="INFO">${SQL_GetCandidateId1} = 756</msg>
<status status="PASS" endtime="20170405 10:18:47.665" starttime="20170405 10:18:47.665"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 status_id FROM ou_user_status WHERE culture_id = 1 AND status_id IN (128,256,512,1024) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1Status}</var>
</assign>
<msg timestamp="20170405 10:18:47.665" level="INFO">${SQL_GetCandidateId1Status} = 256</msg>
<status status="PASS" endtime="20170405 10:18:47.665" starttime="20170405 10:18:47.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1Status}</arg>
<arg>${SQL_GetCandidateId1Status}</arg>
</arguments>
<msg timestamp="20170405 10:18:47.665" level="INFO">${SQL_GetCandidateId1Status} = 256</msg>
<status status="PASS" endtime="20170405 10:18:47.665" starttime="20170405 10:18:47.665"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:47.665" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:47.665" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:47.665" starttime="20170405 10:18:47.665"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:47.665" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:47.665" starttime="20170405 10:18:47.665"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:47.665" level="INFO">Set request header "x-csod-user-id" to "48"</msg>
<status status="PASS" endtime="20170405 10:18:47.665" starttime="20170405 10:18:47.665"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:47.665" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:47.665" starttime="20170405 10:18:47.665"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:47.681" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:47.681" starttime="20170405 10:18:47.665"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_GetCandidateId1},"Status": ${SQL_GetCandidateId1Status}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:47.681" level="INFO">Request body set to "[{"UserId": 756,"Status": 256}]".</msg>
<status status="PASS" endtime="20170405 10:18:47.681" starttime="20170405 10:18:47.681"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates/status</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.017" starttime="20170405 10:18:47.681"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:48.017" level="INFO">${resBody} = [{"UserId":756,"FirstName":"Myers","LastName":"Julian","Ref":"Mjulian","TypeId":0,"UserStatusId":0,"CandidateStatusId":256,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"Cr...</msg>
<status status="PASS" endtime="20170405 10:18:48.017" starttime="20170405 10:18:48.017"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT status_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} AND user_id = ${SQL_GetCandidateId1} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidate1Status_After}</var>
</assign>
<msg timestamp="20170405 10:18:48.017" level="INFO">${SQL_GetCandidate1Status_After} = 256</msg>
<status status="PASS" endtime="20170405 10:18:48.017" starttime="20170405 10:18:48.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidate1Status_After}</arg>
<arg>${SQL_GetCandidate1Status_After}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.017" level="INFO">${SQL_GetCandidate1Status_After} = 256</msg>
<status status="PASS" endtime="20170405 10:18:48.017" starttime="20170405 10:18:48.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'== '${SQL_GetCandidateId1Status}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.032" level="INFO">Set test message to:
The 256 matches with 256</msg>
<status status="PASS" endtime="20170405 10:18:48.032" starttime="20170405 10:18:48.032"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:48.032" starttime="20170405 10:18:48.032"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:48.032" starttime="20170405 10:18:48.032"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'&lt;&gt; '${SQL_GetCandidateId1Status}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_GetCandidate1Status_After} did not match ${SQL_GetCandidateId1Status}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.032" starttime="20170405 10:18:48.032"></status>
</kw>
<kw name="Close" library="SQLlibrary">
<status status="PASS" endtime="20170405 10:18:48.032" starttime="20170405 10:18:48.032"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:48.032" starttime="20170405 10:18:47.590"></status>
</kw>
<doc>*Name:*
PUT-API_Talent_Pool_Candidate_Search_Set_UseCase_Base_InputVsStatusDatabase

*Description:*
UseCase_Base: Verify provided status matches new entry in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
<tag>testrailid=24452</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:48.032" critical="yes" starttime="20170405 10:18:47.465">The 256 matches with 256</status>
</test>
<test id="s1-s1-t50" name="PUT-API_TalentPool_Candidate_Status_Set_UseCase_Elaborate_Users_1">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.048" starttime="20170405 10:18:48.032"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:48.090" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20170405 10:18:48.090" starttime="20170405 10:18:48.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.090" level="INFO">25</msg>
<status status="PASS" endtime="20170405 10:18:48.090" starttime="20170405 10:18:48.090"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:48.095" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:48.095" starttime="20170405 10:18:48.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.095" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20170405 10:18:48.095" starttime="20170405 10:18:48.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.095" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:48.095" starttime="20170405 10:18:48.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.095" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:48.095" starttime="20170405 10:18:48.095"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:48.095" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:48.095" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:48.095" starttime="20170405 10:18:48.095"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.095" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:48.095" starttime="20170405 10:18:48.095"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.095" level="INFO">Set request header "X-USERID" to "25"</msg>
<status status="PASS" endtime="20170405 10:18:48.095" starttime="20170405 10:18:48.095"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.095" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:48.095" starttime="20170405 10:18:48.095"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:48.095" starttime="20170405 10:18:48.032"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:48.095" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:48.095" starttime="20170405 10:18:48.095"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:48.095" level="INFO">Request body set to "{   "UserId": 25,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_25",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:48.095" starttime="20170405 10:18:48.095"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.117" starttime="20170405 10:18:48.095"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.117" starttime="20170405 10:18:48.117"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:48.117" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:48.117" starttime="20170405 10:18:48.117"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.117" starttime="20170405 10:18:48.117"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:48.117" starttime="20170405 10:18:48.095"></status>
</kw>
<kw name="PUT_TalentPool_Candidate_Status_Set" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:48.148" level="INFO">${SQL_TalentPoolId} = 204</msg>
<status status="PASS" endtime="20170405 10:18:48.148" starttime="20170405 10:18:48.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.148" level="INFO">${SQL_TalentPoolId} = 204</msg>
<status status="PASS" endtime="20170405 10:18:48.148" starttime="20170405 10:18:48.148"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1}</var>
</assign>
<msg timestamp="20170405 10:18:48.172" level="INFO">${SQL_GetCandidateId1} = 46</msg>
<status status="PASS" endtime="20170405 10:18:48.172" starttime="20170405 10:18:48.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1}</arg>
<arg>${SQL_GetCandidateId1}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.173" level="INFO">${SQL_GetCandidateId1} = 46</msg>
<status status="PASS" endtime="20170405 10:18:48.173" starttime="20170405 10:18:48.172"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 status_id FROM ou_user_status WHERE culture_id = 1 AND status_id IN (128,256,512,1024) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1Status}</var>
</assign>
<msg timestamp="20170405 10:18:48.173" level="INFO">${SQL_GetCandidateId1Status} = 512</msg>
<status status="PASS" endtime="20170405 10:18:48.173" starttime="20170405 10:18:48.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1Status}</arg>
<arg>${SQL_GetCandidateId1Status}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.173" level="INFO">${SQL_GetCandidateId1Status} = 512</msg>
<status status="PASS" endtime="20170405 10:18:48.173" starttime="20170405 10:18:48.173"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:48.173" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:48.173" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:48.173" starttime="20170405 10:18:48.173"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.173" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:48.173" starttime="20170405 10:18:48.173"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.173" level="INFO">Set request header "x-csod-user-id" to "25"</msg>
<status status="PASS" endtime="20170405 10:18:48.173" starttime="20170405 10:18:48.173"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.173" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:48.173" starttime="20170405 10:18:48.173"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:48.173" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:48.173" starttime="20170405 10:18:48.173"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_GetCandidateId1},"Status": ${SQL_GetCandidateId1Status}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:48.173" level="INFO">Request body set to "[{"UserId": 46,"Status": 512}]".</msg>
<status status="PASS" endtime="20170405 10:18:48.173" starttime="20170405 10:18:48.173"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates/status</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.300" starttime="20170405 10:18:48.173"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:48.300" level="INFO">${resBody} = [{"UserId":46,"FirstName":"Sam","LastName":"Smith","Ref":"SSmith","TypeId":0,"UserStatusId":0,"CandidateStatusId":512,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"Created...</msg>
<status status="PASS" endtime="20170405 10:18:48.300" starttime="20170405 10:18:48.300"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT status_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} AND user_id = ${SQL_GetCandidateId1} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidate1Status_After}</var>
</assign>
<msg timestamp="20170405 10:18:48.315" level="INFO">${SQL_GetCandidate1Status_After} = 512</msg>
<status status="PASS" endtime="20170405 10:18:48.315" starttime="20170405 10:18:48.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidate1Status_After}</arg>
<arg>${SQL_GetCandidate1Status_After}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.315" level="INFO">${SQL_GetCandidate1Status_After} = 512</msg>
<status status="PASS" endtime="20170405 10:18:48.315" starttime="20170405 10:18:48.315"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'== '${SQL_GetCandidateId1Status}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.315" level="INFO">Set test message to:
The 512 matches with 512</msg>
<status status="PASS" endtime="20170405 10:18:48.315" starttime="20170405 10:18:48.315"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:48.315" starttime="20170405 10:18:48.315"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:48.315" starttime="20170405 10:18:48.315"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'&lt;&gt; '${SQL_GetCandidateId1Status}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_GetCandidate1Status_After} did not match ${SQL_GetCandidateId1Status}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.315" starttime="20170405 10:18:48.315"></status>
</kw>
<kw name="Close" library="SQLlibrary">
<status status="PASS" endtime="20170405 10:18:48.315" starttime="20170405 10:18:48.315"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:48.315" starttime="20170405 10:18:48.117"></status>
</kw>
<doc>*Name:*
PUT-API_TP_CS_Set_UC_Elab_Users_1

*Description:*
UseCase_Elaborate: Verify success when status passed is identical

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
<tag>testrailid=24453</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:48.315" critical="yes" starttime="20170405 10:18:48.032">The 512 matches with 512</status>
</test>
<test id="s1-s1-t51" name="PUT-API_TPC_Rename_Access_Owner">
<kw name="REST_NOAUTH_Random_Active_Owner" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.331" starttime="20170405 10:18:48.331"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:48.360" level="INFO">${SQL_GET_USERID} = 1</msg>
<status status="PASS" endtime="20170405 10:18:48.360" starttime="20170405 10:18:48.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.360" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:48.360" starttime="20170405 10:18:48.360"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:48.360" level="INFO">${SQL_GET_USER_CULTURE} = 2</msg>
<status status="PASS" endtime="20170405 10:18:48.360" starttime="20170405 10:18:48.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.360" level="INFO">${SQL_GET_USERID} = 1</msg>
<status status="PASS" endtime="20170405 10:18:48.360" starttime="20170405 10:18:48.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.360" level="INFO">${SQL_GET_USER_CULTURE} = 2</msg>
<status status="PASS" endtime="20170405 10:18:48.360" starttime="20170405 10:18:48.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.360" level="INFO">2</msg>
<status status="PASS" endtime="20170405 10:18:48.360" starttime="20170405 10:18:48.360"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:48.360" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:48.360" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:48.360" starttime="20170405 10:18:48.360"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.360" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:48.360" starttime="20170405 10:18:48.360"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.360" level="INFO">Set request header "X-USERID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:48.360" starttime="20170405 10:18:48.360"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.360" level="INFO">Set request header "X-CULTUREID" to "2"</msg>
<status status="PASS" endtime="20170405 10:18:48.360" starttime="20170405 10:18:48.360"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:48.360" starttime="20170405 10:18:48.331"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:48.360" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:48.360" starttime="20170405 10:18:48.360"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:48.376" level="INFO">Request body set to "{   "UserId": 1,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:48.376" starttime="20170405 10:18:48.360"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.376" starttime="20170405 10:18:48.376"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.376" starttime="20170405 10:18:48.376"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:48.376" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:48.376" starttime="20170405 10:18:48.376"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.376" starttime="20170405 10:18:48.376"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:48.376" starttime="20170405 10:18:48.360"></status>
</kw>
<kw name="PUT_TalentPool_Rename_Access_Owner" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>SimpleName</arg>
<arg>Title</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id &lt;&gt; ${SQL_GET_USERID} AND ou_id NOT IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:48.423" level="INFO">${SQL_TalentPoolId} = 5262</msg>
<status status="PASS" endtime="20170405 10:18:48.423" starttime="20170405 10:18:48.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.423" level="INFO">${SQL_TalentPoolId} = 5262</msg>
<status status="PASS" endtime="20170405 10:18:48.423" starttime="20170405 10:18:48.423"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:48.423" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:48.423" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:48.423" starttime="20170405 10:18:48.423"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.423" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:48.423" starttime="20170405 10:18:48.423"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.423" level="INFO">Set request header "x-csod-user-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:48.423" starttime="20170405 10:18:48.423"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.423" level="INFO">Set request header "x-csod-default-culture-id" to "2"</msg>
<status status="PASS" endtime="20170405 10:18:48.423" starttime="20170405 10:18:48.423"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:48.423" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:48.423" starttime="20170405 10:18:48.423"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20170405 10:18:48.423" starttime="20170405 10:18:48.423"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.423" level="INFO">Request body set to "{ "Title":"SimpleName"}".</msg>
<status status="PASS" endtime="20170405 10:18:48.423" starttime="20170405 10:18:48.423"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20170405 10:18:48.423" starttime="20170405 10:18:48.423"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.470" starttime="20170405 10:18:48.423"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:48.470" level="INFO">${resBody} = {"Message":"You don't have access to the talentpool."}</msg>
<status status="PASS" endtime="20170405 10:18:48.470" starttime="20170405 10:18:48.470"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20170405 10:18:48.470" level="INFO">Set test message to:
The {"Message":"You don't have access to the talentpool."} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20170405 10:18:48.470" starttime="20170405 10:18:48.470"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:48.470" starttime="20170405 10:18:48.392"></status>
</kw>
<doc>*Name:*
PUT-TP_Rename_Access.

*Description:*
Access: Verify success when actor shared

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
<tag>testrailid=24454</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:48.470" critical="yes" starttime="20170405 10:18:48.315">The {"Message":"You don't have access to the talentpool."} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-t52" name="PUT-API_TalentPool_Rename_Access_Not_Active">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.517" starttime="20170405 10:18:48.470"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:48.610" level="INFO">${SQL_GET_USERID} = 46</msg>
<status status="PASS" endtime="20170405 10:18:48.610" starttime="20170405 10:18:48.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.610" level="INFO">46</msg>
<status status="PASS" endtime="20170405 10:18:48.610" starttime="20170405 10:18:48.610"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:48.610" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:48.610" starttime="20170405 10:18:48.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.610" level="INFO">${SQL_GET_USERID} = 46</msg>
<status status="PASS" endtime="20170405 10:18:48.610" starttime="20170405 10:18:48.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.610" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:48.610" starttime="20170405 10:18:48.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.610" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:48.610" starttime="20170405 10:18:48.610"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:48.626" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:48.626" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:48.626" starttime="20170405 10:18:48.610"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.626" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:48.626" starttime="20170405 10:18:48.626"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.626" level="INFO">Set request header "X-USERID" to "46"</msg>
<status status="PASS" endtime="20170405 10:18:48.626" starttime="20170405 10:18:48.626"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.626" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:48.626" starttime="20170405 10:18:48.626"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:48.626" starttime="20170405 10:18:48.470"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:48.626" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:48.626" starttime="20170405 10:18:48.626"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:48.626" level="INFO">Request body set to "{   "UserId": 46,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_46",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:48.626" starttime="20170405 10:18:48.626"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.642" starttime="20170405 10:18:48.626"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.642" starttime="20170405 10:18:48.642"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:48.642" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:48.642" starttime="20170405 10:18:48.642"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.642" starttime="20170405 10:18:48.642"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:48.642" starttime="20170405 10:18:48.626"></status>
</kw>
<kw name="PUT_TalentPool_Candidate_Status_Set" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:48.704" level="INFO">${SQL_TalentPoolId} = 204</msg>
<status status="PASS" endtime="20170405 10:18:48.704" starttime="20170405 10:18:48.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.704" level="INFO">${SQL_TalentPoolId} = 204</msg>
<status status="PASS" endtime="20170405 10:18:48.704" starttime="20170405 10:18:48.704"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1}</var>
</assign>
<msg timestamp="20170405 10:18:48.704" level="INFO">${SQL_GetCandidateId1} = 10</msg>
<status status="PASS" endtime="20170405 10:18:48.704" starttime="20170405 10:18:48.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1}</arg>
<arg>${SQL_GetCandidateId1}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.704" level="INFO">${SQL_GetCandidateId1} = 10</msg>
<status status="PASS" endtime="20170405 10:18:48.704" starttime="20170405 10:18:48.704"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 status_id FROM ou_user_status WHERE culture_id = 1 AND status_id IN (128,256,512,1024) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1Status}</var>
</assign>
<msg timestamp="20170405 10:18:48.720" level="INFO">${SQL_GetCandidateId1Status} = 1024</msg>
<status status="PASS" endtime="20170405 10:18:48.720" starttime="20170405 10:18:48.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1Status}</arg>
<arg>${SQL_GetCandidateId1Status}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.720" level="INFO">${SQL_GetCandidateId1Status} = 1024</msg>
<status status="PASS" endtime="20170405 10:18:48.720" starttime="20170405 10:18:48.720"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:48.720" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:48.720" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:48.720" starttime="20170405 10:18:48.720"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.720" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:48.720" starttime="20170405 10:18:48.720"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.720" level="INFO">Set request header "x-csod-user-id" to "46"</msg>
<status status="PASS" endtime="20170405 10:18:48.720" starttime="20170405 10:18:48.720"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.720" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:48.720" starttime="20170405 10:18:48.720"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:48.720" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:48.720" starttime="20170405 10:18:48.720"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_GetCandidateId1},"Status": ${SQL_GetCandidateId1Status}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:48.720" level="INFO">Request body set to "[{"UserId": 10,"Status": 1024}]".</msg>
<status status="PASS" endtime="20170405 10:18:48.720" starttime="20170405 10:18:48.720"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates/status</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.829" starttime="20170405 10:18:48.720"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:48.829" level="INFO">${resBody} = [{"UserId":10,"FirstName":"Chief","LastName":"Overman","Ref":"COverman","TypeId":0,"UserStatusId":0,"CandidateStatusId":1024,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"...</msg>
<status status="PASS" endtime="20170405 10:18:48.829" starttime="20170405 10:18:48.829"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT status_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} AND user_id = ${SQL_GetCandidateId1} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidate1Status_After}</var>
</assign>
<msg timestamp="20170405 10:18:48.829" level="INFO">${SQL_GetCandidate1Status_After} = 1024</msg>
<status status="PASS" endtime="20170405 10:18:48.829" starttime="20170405 10:18:48.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidate1Status_After}</arg>
<arg>${SQL_GetCandidate1Status_After}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.829" level="INFO">${SQL_GetCandidate1Status_After} = 1024</msg>
<status status="PASS" endtime="20170405 10:18:48.829" starttime="20170405 10:18:48.829"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'== '${SQL_GetCandidateId1Status}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.845" level="INFO">Set test message to:
The 1024 matches with 1024</msg>
<status status="PASS" endtime="20170405 10:18:48.845" starttime="20170405 10:18:48.829"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:48.845" starttime="20170405 10:18:48.829"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:48.845" starttime="20170405 10:18:48.829"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'&lt;&gt; '${SQL_GetCandidateId1Status}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_GetCandidate1Status_After} did not match ${SQL_GetCandidateId1Status}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.845" starttime="20170405 10:18:48.845"></status>
</kw>
<kw name="Close" library="SQLlibrary">
<status status="PASS" endtime="20170405 10:18:48.845" starttime="20170405 10:18:48.845"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:48.845" starttime="20170405 10:18:48.642"></status>
</kw>
<doc>*Name:*
PUT-API_TP_Rename_Access_NotActive

*Description:*
Access: Verify failure when actor not active

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
<tag>testrailid=24455</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:48.845" critical="yes" starttime="20170405 10:18:48.470">The 1024 matches with 1024</status>
</test>
<test id="s1-s1-t53" name="PUT-API_TalentPool_Rename_Not_Active">
<kw name="REST_NOAUTH_Random_Not_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.860" starttime="20170405 10:18:48.845"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id &lt;&gt; 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:48.907" level="INFO">${SQL_GET_USERID} = 58</msg>
<status status="PASS" endtime="20170405 10:18:48.907" starttime="20170405 10:18:48.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.907" level="INFO">58</msg>
<status status="PASS" endtime="20170405 10:18:48.907" starttime="20170405 10:18:48.907"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:48.907" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:48.907" starttime="20170405 10:18:48.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.923" level="INFO">${SQL_GET_USERID} = 58</msg>
<status status="PASS" endtime="20170405 10:18:48.923" starttime="20170405 10:18:48.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.923" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:48.923" starttime="20170405 10:18:48.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.923" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:48.923" starttime="20170405 10:18:48.923"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:48.923" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:48.923" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:48.923" starttime="20170405 10:18:48.923"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.923" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:48.923" starttime="20170405 10:18:48.923"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.923" level="INFO">Set request header "X-USERID" to "58"</msg>
<status status="PASS" endtime="20170405 10:18:48.923" starttime="20170405 10:18:48.923"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.923" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:48.923" starttime="20170405 10:18:48.923"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:48.923" starttime="20170405 10:18:48.845"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:48.923" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:48.923" starttime="20170405 10:18:48.923"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:48.923" level="INFO">Request body set to "{   "UserId": 58,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_58",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:48.923" starttime="20170405 10:18:48.923"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.939" starttime="20170405 10:18:48.923"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.939" starttime="20170405 10:18:48.939"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:48.939" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:48.939" starttime="20170405 10:18:48.939"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:48.939" starttime="20170405 10:18:48.939"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:48.939" starttime="20170405 10:18:48.923"></status>
</kw>
<kw name="PUT_TalentPool_Rename_Access_Not_Active" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>test 2</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID}) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:48.954" level="INFO">${SQL_TalentPoolId} = 668</msg>
<status status="PASS" endtime="20170405 10:18:48.954" starttime="20170405 10:18:48.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.954" level="INFO">${SQL_TalentPoolId} = 668</msg>
<status status="PASS" endtime="20170405 10:18:48.954" starttime="20170405 10:18:48.954"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:48.954" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:48.954" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:48.954" starttime="20170405 10:18:48.954"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.970" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:48.970" starttime="20170405 10:18:48.954"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.970" level="INFO">Set request header "x-csod-user-id" to "58"</msg>
<status status="PASS" endtime="20170405 10:18:48.970" starttime="20170405 10:18:48.970"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.970" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:48.970" starttime="20170405 10:18:48.970"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:48.970" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20170405 10:18:48.970" starttime="20170405 10:18:48.970"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170405 10:18:48.970" level="INFO">Request body set to "{ "Title":"test 2"}".</msg>
<status status="PASS" endtime="20170405 10:18:48.970" starttime="20170405 10:18:48.970"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:49.032" starttime="20170405 10:18:48.970"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:49.032" starttime="20170405 10:18:49.032"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:49.032" level="INFO">${resBody} = {"TalentpoolId":668,"Title":"test 2","Owner":{"UserId":58,"FirstName":"isr71337","LastName":"isr71337"},"CreatedDate":"2016-03-01T21:03:37.4","ModifierId":58,"ModifiedDate":"2017-04-05T17:18:49.158515...</msg>
<status status="PASS" endtime="20170405 10:18:49.032" starttime="20170405 10:18:49.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.032" level="INFO">{"TalentpoolId":668,"Title":"test 2","Owner":{"UserId":58,"FirstName":"isr71337","LastName":"isr71337"},"CreatedDate":"2016-03-01T21:03:37.4","ModifierId":58,"ModifiedDate":"2017-04-05T17:18:49.1585157Z","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20170405 10:18:49.032" starttime="20170405 10:18:49.032"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20170405 10:18:49.032" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'test 2', u'TalentpoolId': 668, u'ModifiedDate': u'2017-04-05T17:18:49.1585157Z', u'CreatedDate': u'2016-03-01T21:03:37.4', u'Owner': {u'LastName': u'isr71337', u'UserI...</msg>
<status status="PASS" endtime="20170405 10:18:49.032" starttime="20170405 10:18:49.032"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20170405 10:18:49.032" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'test 2', u'CreatedDate': u'2016-03-01T21:03:37.4', u'ModifiedDate': u'2017-04-05T17:18:49.1585157Z', u'TalentpoolId': 668, u'Owner': {u'LastName': u'isr71337', u'UserI...</msg>
<status status="PASS" endtime="20170405 10:18:49.032" starttime="20170405 10:18:49.032"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20170405 10:18:49.032" level="INFO">${keyValue} = test 2</msg>
<status status="PASS" endtime="20170405 10:18:49.032" starttime="20170405 10:18:49.032"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:49.032" starttime="20170405 10:18:48.939"></status>
</kw>
<doc>*Name:*
PUT-API_TP_Rename_Access_NotActive

*Description:*
Access: Verify failure when actor not active

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
<tag>testrailid=24456</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:49.032" critical="yes" starttime="20170405 10:18:48.845"></status>
</test>
<test id="s1-s1-t54" name="PUT-API_TalentPool_Candidate_Status_Set_UseCase_Base_InputVsUserDatabase">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:49.079" starttime="20170405 10:18:49.032"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:49.079" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20170405 10:18:49.079" starttime="20170405 10:18:49.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.079" level="INFO">25</msg>
<status status="PASS" endtime="20170405 10:18:49.079" starttime="20170405 10:18:49.079"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:49.079" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:49.079" starttime="20170405 10:18:49.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.095" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20170405 10:18:49.095" starttime="20170405 10:18:49.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.095" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:49.095" starttime="20170405 10:18:49.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.095" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:49.095" starttime="20170405 10:18:49.095"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:49.095" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:49.095" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:49.095" starttime="20170405 10:18:49.095"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.095" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:49.095" starttime="20170405 10:18:49.095"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.095" level="INFO">Set request header "X-USERID" to "25"</msg>
<status status="PASS" endtime="20170405 10:18:49.095" starttime="20170405 10:18:49.095"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.095" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:49.095" starttime="20170405 10:18:49.095"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:49.095" starttime="20170405 10:18:49.032"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:49.095" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:49.095" starttime="20170405 10:18:49.095"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:49.095" level="INFO">Request body set to "{   "UserId": 25,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_25",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:49.095" starttime="20170405 10:18:49.095"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:49.110" starttime="20170405 10:18:49.095"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:49.110" starttime="20170405 10:18:49.110"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:49.110" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:49.110" starttime="20170405 10:18:49.110"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:49.110" starttime="20170405 10:18:49.110"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:49.110" starttime="20170405 10:18:49.095"></status>
</kw>
<kw name="PUT_TalentPool_Candidate_Status_Set" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>test 2</arg>
<arg>Title</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:49.157" level="INFO">${SQL_TalentPoolId} = 204</msg>
<status status="PASS" endtime="20170405 10:18:49.157" starttime="20170405 10:18:49.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.157" level="INFO">${SQL_TalentPoolId} = 204</msg>
<status status="PASS" endtime="20170405 10:18:49.157" starttime="20170405 10:18:49.157"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1}</var>
</assign>
<msg timestamp="20170405 10:18:49.157" level="INFO">${SQL_GetCandidateId1} = 13</msg>
<status status="PASS" endtime="20170405 10:18:49.157" starttime="20170405 10:18:49.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1}</arg>
<arg>${SQL_GetCandidateId1}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.157" level="INFO">${SQL_GetCandidateId1} = 13</msg>
<status status="PASS" endtime="20170405 10:18:49.157" starttime="20170405 10:18:49.157"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 status_id FROM ou_user_status WHERE culture_id = 1 AND status_id IN (128,256,512,1024) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1Status}</var>
</assign>
<msg timestamp="20170405 10:18:49.157" level="INFO">${SQL_GetCandidateId1Status} = 512</msg>
<status status="PASS" endtime="20170405 10:18:49.157" starttime="20170405 10:18:49.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1Status}</arg>
<arg>${SQL_GetCandidateId1Status}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.157" level="INFO">${SQL_GetCandidateId1Status} = 512</msg>
<status status="PASS" endtime="20170405 10:18:49.157" starttime="20170405 10:18:49.157"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:49.157" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:49.157" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:49.173" starttime="20170405 10:18:49.157"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.173" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:49.173" starttime="20170405 10:18:49.173"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.173" level="INFO">Set request header "x-csod-user-id" to "25"</msg>
<status status="PASS" endtime="20170405 10:18:49.173" starttime="20170405 10:18:49.173"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.173" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:49.173" starttime="20170405 10:18:49.173"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:49.173" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:49.173" starttime="20170405 10:18:49.173"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_GetCandidateId1},"Status": ${SQL_GetCandidateId1Status}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:49.173" level="INFO">Request body set to "[{"UserId": 13,"Status": 512}]".</msg>
<status status="PASS" endtime="20170405 10:18:49.173" starttime="20170405 10:18:49.173"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates/status</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:49.329" starttime="20170405 10:18:49.173"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:49.329" level="INFO">${resBody} = [{"UserId":13,"FirstName":"Darren","LastName":"Elkind","Ref":"DElkind","TypeId":0,"UserStatusId":0,"CandidateStatusId":512,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"Cr...</msg>
<status status="PASS" endtime="20170405 10:18:49.329" starttime="20170405 10:18:49.329"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT status_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} AND user_id = ${SQL_GetCandidateId1} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidate1Status_After}</var>
</assign>
<msg timestamp="20170405 10:18:49.329" level="INFO">${SQL_GetCandidate1Status_After} = 512</msg>
<status status="PASS" endtime="20170405 10:18:49.329" starttime="20170405 10:18:49.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidate1Status_After}</arg>
<arg>${SQL_GetCandidate1Status_After}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.329" level="INFO">${SQL_GetCandidate1Status_After} = 512</msg>
<status status="PASS" endtime="20170405 10:18:49.329" starttime="20170405 10:18:49.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'== '${SQL_GetCandidateId1Status}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.338" level="INFO">Set test message to:
The 512 matches with 512</msg>
<status status="PASS" endtime="20170405 10:18:49.338" starttime="20170405 10:18:49.338"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:49.338" starttime="20170405 10:18:49.338"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:49.338" starttime="20170405 10:18:49.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'&lt;&gt; '${SQL_GetCandidateId1Status}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_GetCandidate1Status_After} did not match ${SQL_GetCandidateId1Status}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:49.346" starttime="20170405 10:18:49.338"></status>
</kw>
<kw name="Close" library="SQLlibrary">
<status status="PASS" endtime="20170405 10:18:49.347" starttime="20170405 10:18:49.347"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:49.347" starttime="20170405 10:18:49.110"></status>
</kw>
<doc>*Name:*
PUT-API_TC_Status_Set_UC_Base_InputVsUDB

*Description:*
UseCase_Base: Verify provided user matches the new entry in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
<tag>testrailid=24457</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:49.347" critical="yes" starttime="20170405 10:18:49.032">The 512 matches with 512</status>
</test>
<test id="s1-s1-t55" name="PUT-API_TPC_Status_Set_UC_Elaborate_Status_Value_Placed">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:49.376" starttime="20170405 10:18:49.347"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:49.376" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170405 10:18:49.376" starttime="20170405 10:18:49.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.376" level="INFO">48</msg>
<status status="PASS" endtime="20170405 10:18:49.376" starttime="20170405 10:18:49.376"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:49.376" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:49.376" starttime="20170405 10:18:49.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.376" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170405 10:18:49.392" starttime="20170405 10:18:49.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.392" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:49.392" starttime="20170405 10:18:49.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.392" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:49.392" starttime="20170405 10:18:49.392"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:49.392" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:49.392" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:49.392" starttime="20170405 10:18:49.392"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.392" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:49.392" starttime="20170405 10:18:49.392"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.392" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170405 10:18:49.392" starttime="20170405 10:18:49.392"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.392" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:49.392" starttime="20170405 10:18:49.392"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:49.407" starttime="20170405 10:18:49.347"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:49.407" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:49.407" starttime="20170405 10:18:49.407"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:49.407" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:49.407" starttime="20170405 10:18:49.407"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:49.420" starttime="20170405 10:18:49.407"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:49.424" starttime="20170405 10:18:49.424"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:49.424" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:49.424" starttime="20170405 10:18:49.424"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:49.424" starttime="20170405 10:18:49.424"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:49.424" starttime="20170405 10:18:49.407"></status>
</kw>
<kw name="PUT_TalentPool_Candidate_Status_Set_Value_Placed" library="SMP_Keywords">
<doc>*PUT_TalentPool_Candidate_Status_Set_Value_Placed:*</doc>
<arguments>
<arg>1024</arg>
<arg>200</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:49.477" level="INFO">${SQL_TalentPoolId} = 10752</msg>
<status status="PASS" endtime="20170405 10:18:49.477" starttime="20170405 10:18:49.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.477" level="INFO">${SQL_TalentPoolId} = 10752</msg>
<status status="PASS" endtime="20170405 10:18:49.477" starttime="20170405 10:18:49.477"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1}</var>
</assign>
<msg timestamp="20170405 10:18:49.477" level="INFO">${SQL_GetCandidateId1} = 756</msg>
<status status="PASS" endtime="20170405 10:18:49.477" starttime="20170405 10:18:49.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1}</arg>
<arg>${SQL_GetCandidateId1}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.477" level="INFO">${SQL_GetCandidateId1} = 756</msg>
<status status="PASS" endtime="20170405 10:18:49.477" starttime="20170405 10:18:49.477"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT 1024</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1Status}</var>
</assign>
<msg timestamp="20170405 10:18:49.493" level="INFO">${SQL_GetCandidateId1Status} = 1024</msg>
<status status="PASS" endtime="20170405 10:18:49.493" starttime="20170405 10:18:49.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1Status}</arg>
<arg>${SQL_GetCandidateId1Status}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.493" level="INFO">${SQL_GetCandidateId1Status} = 1024</msg>
<status status="PASS" endtime="20170405 10:18:49.493" starttime="20170405 10:18:49.493"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:49.493" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:49.493" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:49.493" starttime="20170405 10:18:49.493"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.493" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:49.493" starttime="20170405 10:18:49.493"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.493" level="INFO">Set request header "x-csod-user-id" to "48"</msg>
<status status="PASS" endtime="20170405 10:18:49.493" starttime="20170405 10:18:49.493"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.493" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:49.493" starttime="20170405 10:18:49.493"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:49.493" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:49.493" starttime="20170405 10:18:49.493"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_GetCandidateId1},"Status": ${SQL_GetCandidateId1Status}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:49.493" level="INFO">Request body set to "[{"UserId": 756,"Status": 1024}]".</msg>
<status status="PASS" endtime="20170405 10:18:49.493" starttime="20170405 10:18:49.493"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates/status</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:49.602" starttime="20170405 10:18:49.493"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:49.602" starttime="20170405 10:18:49.602"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:49.602" level="INFO">${resBody} = [{"UserId":756,"FirstName":"Myers","LastName":"Julian","Ref":"Mjulian","TypeId":0,"UserStatusId":0,"CandidateStatusId":1024,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"C...</msg>
<status status="PASS" endtime="20170405 10:18:49.602" starttime="20170405 10:18:49.602"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT status_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} AND user_id = ${SQL_GetCandidateId1} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidate1Status_After}</var>
</assign>
<msg timestamp="20170405 10:18:49.618" level="INFO">${SQL_GetCandidate1Status_After} = 1024</msg>
<status status="PASS" endtime="20170405 10:18:49.618" starttime="20170405 10:18:49.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidate1Status_After}</arg>
<arg>${SQL_GetCandidate1Status_After}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.618" level="INFO">${SQL_GetCandidate1Status_After} = 1024</msg>
<status status="PASS" endtime="20170405 10:18:49.618" starttime="20170405 10:18:49.618"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'== '${SQL_GetCandidateId1Status}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.618" level="INFO">Set test message to:
The 1024 matches with 1024</msg>
<status status="PASS" endtime="20170405 10:18:49.618" starttime="20170405 10:18:49.618"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:49.618" starttime="20170405 10:18:49.618"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:49.618" starttime="20170405 10:18:49.618"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'&lt;&gt; '${SQL_GetCandidateId1Status}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_GetCandidate1Status_After} did not match ${SQL_GetCandidateId1Status}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:49.618" starttime="20170405 10:18:49.618"></status>
</kw>
<kw name="Close" library="SQLlibrary">
<status status="PASS" endtime="20170405 10:18:49.633" starttime="20170405 10:18:49.618"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:49.633" starttime="20170405 10:18:49.431"></status>
</kw>
<tags>
<tag>PUT</tag>
<tag>testrailid=24458</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:49.633" critical="yes" starttime="20170405 10:18:49.347">The 1024 matches with 1024</status>
</test>
<test id="s1-s1-t56" name="PUT-API_TPC_Status_Set_UC_Elab_Users_2">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared_With_2_Candidates" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:49.649" starttime="20170405 10:18:49.633"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072 AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 2)) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user WHERE ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 2))) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:49.805" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170405 10:18:49.805" starttime="20170405 10:18:49.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.805" level="INFO">514</msg>
<status status="PASS" endtime="20170405 10:18:49.805" starttime="20170405 10:18:49.805"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:49.805" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:49.805" starttime="20170405 10:18:49.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.821" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170405 10:18:49.821" starttime="20170405 10:18:49.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.821" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:49.821" starttime="20170405 10:18:49.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.821" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:49.821" starttime="20170405 10:18:49.821"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:49.821" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:49.821" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:49.821" starttime="20170405 10:18:49.821"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.821" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:49.821" starttime="20170405 10:18:49.821"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.821" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20170405 10:18:49.821" starttime="20170405 10:18:49.821"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.821" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:49.821" starttime="20170405 10:18:49.821"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:49.821" starttime="20170405 10:18:49.633"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:49.821" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:49.821" starttime="20170405 10:18:49.821"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:49.821" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170405 10:18:49.821" starttime="20170405 10:18:49.821"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:49.836" starttime="20170405 10:18:49.821"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:49.836" starttime="20170405 10:18:49.836"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:49.836" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170405 10:18:49.836" starttime="20170405 10:18:49.836"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:49.836" starttime="20170405 10:18:49.836"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:49.836" starttime="20170405 10:18:49.821"></status>
</kw>
<kw name="PUT_TalentPool_Candidate_Status_Set_Value_Placed" library="SMP_Keywords">
<doc>*PUT_TalentPool_Candidate_Status_Set_Value_Placed:*</doc>
<arguments>
<arg>1024</arg>
<arg>200</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:49.899" level="INFO">${SQL_TalentPoolId} = 10990</msg>
<status status="PASS" endtime="20170405 10:18:49.899" starttime="20170405 10:18:49.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.899" level="INFO">${SQL_TalentPoolId} = 10990</msg>
<status status="PASS" endtime="20170405 10:18:49.899" starttime="20170405 10:18:49.899"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1}</var>
</assign>
<msg timestamp="20170405 10:18:49.899" level="INFO">${SQL_GetCandidateId1} = 691</msg>
<status status="PASS" endtime="20170405 10:18:49.899" starttime="20170405 10:18:49.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1}</arg>
<arg>${SQL_GetCandidateId1}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.914" level="INFO">${SQL_GetCandidateId1} = 691</msg>
<status status="PASS" endtime="20170405 10:18:49.914" starttime="20170405 10:18:49.899"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT 1024</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1Status}</var>
</assign>
<msg timestamp="20170405 10:18:49.914" level="INFO">${SQL_GetCandidateId1Status} = 1024</msg>
<status status="PASS" endtime="20170405 10:18:49.914" starttime="20170405 10:18:49.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1Status}</arg>
<arg>${SQL_GetCandidateId1Status}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.914" level="INFO">${SQL_GetCandidateId1Status} = 1024</msg>
<status status="PASS" endtime="20170405 10:18:49.914" starttime="20170405 10:18:49.914"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:49.914" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:49.914" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:49.914" starttime="20170405 10:18:49.914"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.914" level="INFO">Set request header "x-csod-corp-id" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:49.914" starttime="20170405 10:18:49.914"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.914" level="INFO">Set request header "x-csod-user-id" to "514"</msg>
<status status="PASS" endtime="20170405 10:18:49.914" starttime="20170405 10:18:49.914"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:49.914" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:49.914" starttime="20170405 10:18:49.914"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170405 10:18:49.914" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170405 10:18:49.914" starttime="20170405 10:18:49.914"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_GetCandidateId1},"Status": ${SQL_GetCandidateId1Status}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:49.914" level="INFO">Request body set to "[{"UserId": 691,"Status": 1024}]".</msg>
<status status="PASS" endtime="20170405 10:18:49.914" starttime="20170405 10:18:49.914"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates/status</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.024" starttime="20170405 10:18:49.914"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.024" starttime="20170405 10:18:50.024"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170405 10:18:50.024" level="INFO">${resBody} = [{"UserId":691,"FirstName":"Jeremy","LastName":"Kennedy","Ref":"Jkennedy","TypeId":0,"UserStatusId":0,"CandidateStatusId":1024,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null...</msg>
<status status="PASS" endtime="20170405 10:18:50.024" starttime="20170405 10:18:50.024"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT status_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} AND user_id = ${SQL_GetCandidateId1} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidate1Status_After}</var>
</assign>
<msg timestamp="20170405 10:18:50.024" level="INFO">${SQL_GetCandidate1Status_After} = 1024</msg>
<status status="PASS" endtime="20170405 10:18:50.024" starttime="20170405 10:18:50.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidate1Status_After}</arg>
<arg>${SQL_GetCandidate1Status_After}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.024" level="INFO">${SQL_GetCandidate1Status_After} = 1024</msg>
<status status="PASS" endtime="20170405 10:18:50.024" starttime="20170405 10:18:50.024"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'== '${SQL_GetCandidateId1Status}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.024" level="INFO">Set test message to:
The 1024 matches with 1024</msg>
<status status="PASS" endtime="20170405 10:18:50.024" starttime="20170405 10:18:50.024"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:50.024" starttime="20170405 10:18:50.024"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:50.024" starttime="20170405 10:18:50.024"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'&lt;&gt; '${SQL_GetCandidateId1Status}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_GetCandidate1Status_After} did not match ${SQL_GetCandidateId1Status}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.039" starttime="20170405 10:18:50.024"></status>
</kw>
<kw name="Close" library="SQLlibrary">
<status status="PASS" endtime="20170405 10:18:50.039" starttime="20170405 10:18:50.039"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:50.039" starttime="20170405 10:18:49.852"></status>
</kw>
<tags>
<tag>PUT</tag>
<tag>testrailid=24475</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:50.039" critical="yes" starttime="20170405 10:18:49.633">The 1024 matches with 1024</status>
</test>
<test id="s1-s1-t57" name="DELETE-API_TPC_Remove0Users">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.071" starttime="20170405 10:18:50.039"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:50.102" level="INFO">${SQL_GET_USERID} = 58</msg>
<status status="PASS" endtime="20170405 10:18:50.102" starttime="20170405 10:18:50.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.102" level="INFO">58</msg>
<status status="PASS" endtime="20170405 10:18:50.102" starttime="20170405 10:18:50.102"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:50.102" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:50.102" starttime="20170405 10:18:50.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.102" level="INFO">${SQL_GET_USERID} = 58</msg>
<status status="PASS" endtime="20170405 10:18:50.102" starttime="20170405 10:18:50.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.102" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:50.102" starttime="20170405 10:18:50.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.102" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:50.102" starttime="20170405 10:18:50.102"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:50.102" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:50.102" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:50.102" starttime="20170405 10:18:50.102"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.102" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:50.102" starttime="20170405 10:18:50.102"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.102" level="INFO">Set request header "X-USERID" to "58"</msg>
<status status="PASS" endtime="20170405 10:18:50.102" starttime="20170405 10:18:50.102"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.102" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:50.102" starttime="20170405 10:18:50.102"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:50.102" starttime="20170405 10:18:50.039"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:50.102" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:50.102" starttime="20170405 10:18:50.102"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.118" starttime="20170405 10:18:50.118"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:50.118" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170405 10:18:50.118" starttime="20170405 10:18:50.118"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:50.118" level="INFO">${body} = {   "UserId": 58,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": ...</msg>
<status status="PASS" endtime="20170405 10:18:50.118" starttime="20170405 10:18:50.118"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:50.118" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:50.133" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 58,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_58",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:50.133" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:50.133" starttime="20170405 10:18:50.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.133" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:50.133" starttime="20170405 10:18:50.133"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170405 10:18:50.133" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:50.133" starttime="20170405 10:18:50.133"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:50.133" starttime="20170405 10:18:50.102"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_0User" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remove_0User:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.164" starttime="20170405 10:18:50.133"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:50.180" level="INFO">${SQL_TalentPoolId} = 627</msg>
<status status="PASS" endtime="20170405 10:18:50.180" starttime="20170405 10:18:50.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.180" level="INFO">${SQL_TalentPoolId} = 627</msg>
<status status="PASS" endtime="20170405 10:18:50.180" starttime="20170405 10:18:50.180"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:50.180" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa052-auto-smp-api | x-csod-user-id=058 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20170405 10:18:50.180" starttime="20170405 10:18:50.180"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:50.180" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:50.180" starttime="20170405 10:18:50.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{}]</arg>
</arguments>
<msg timestamp="20170405 10:18:50.180" level="INFO">${body} = [{}]</msg>
<status status="PASS" endtime="20170405 10:18:50.180" starttime="20170405 10:18:50.180"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:50.196" level="INFO">${SQL_CandidateCountBefore} = 10</msg>
<status status="PASS" endtime="20170405 10:18:50.196" starttime="20170405 10:18:50.180"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:50.196" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:50.305" level="INFO">Delete Request using : alias=http, uri=/talentpools/627/candidates, data=[{}],                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa052-auto-smp-api', u'x-csod-user-id': u'058', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:50.305" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:50.305" starttime="20170405 10:18:50.196"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:50.305" level="INFO">${SQL_CandidateCountAfter} = 10</msg>
<status status="PASS" endtime="20170405 10:18:50.305" starttime="20170405 10:18:50.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.305" level="INFO">${SQL_CandidateCountAfter} = 10</msg>
<status status="PASS" endtime="20170405 10:18:50.305" starttime="20170405 10:18:50.305"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20170405 10:18:50.305" level="INFO">${SQL_NUM} = 10</msg>
<status status="PASS" endtime="20170405 10:18:50.321" starttime="20170405 10:18:50.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.321" level="INFO">10</msg>
<status status="PASS" endtime="20170405 10:18:50.321" starttime="20170405 10:18:50.321"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.321" level="INFO">Set test message to:
The 10 matches with 10</msg>
<status status="PASS" endtime="20170405 10:18:50.321" starttime="20170405 10:18:50.321"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:50.321" starttime="20170405 10:18:50.321"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:50.321" starttime="20170405 10:18:50.321"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.321" starttime="20170405 10:18:50.321"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:50.321" starttime="20170405 10:18:50.133"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Connect</arg>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.321" starttime="20170405 10:18:50.321"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${SQL_TalentPoolId}=</arg>
<arg>Execute Raw</arg>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.321" starttime="20170405 10:18:50.321"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Suite Variable</arg>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.321" starttime="20170405 10:18:50.321"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${SQL_UserToRemove1}=</arg>
<arg>Execute Raw</arg>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.321" starttime="20170405 10:18:50.321"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Suite Variable</arg>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.321" starttime="20170405 10:18:50.321"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>&amp;{headers}=</arg>
<arg>Create Dictionary</arg>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.321" starttime="20170405 10:18:50.321"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>http://laxqarexmt.office.cyberu.com/talentpool-api</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.321" starttime="20170405 10:18:50.321"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Suite Variable</arg>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.321" starttime="20170405 10:18:50.321"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}=</arg>
<arg>Execute Raw</arg>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.321" starttime="20170405 10:18:50.321"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${resp}=</arg>
<arg>RequestsLibrary.Delete Request</arg>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.321" starttime="20170405 10:18:50.321"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}=</arg>
<arg>Execute Raw</arg>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.321" starttime="20170405 10:18:50.321"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Suite Variable</arg>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.336" starttime="20170405 10:18:50.321"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${SQL_NUM}=</arg>
<arg>Evaluate</arg>
<arg>${SQL_CandidateCountBefore}-1</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.336" starttime="20170405 10:18:50.336"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Log</arg>
<arg>${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.336" starttime="20170405 10:18:50.336"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.336" starttime="20170405 10:18:50.336"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.338" starttime="20170405 10:18:50.338"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Log</arg>
<arg>END TEST</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.338" starttime="20170405 10:18:50.338"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_0Users

*Description:*
Verify success when removing 0 users

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>NEGATIVE</tag>
<tag>testrailid=24459</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:50.338" critical="yes" starttime="20170405 10:18:50.039">The 10 matches with 10</status>
</test>
<test id="s1-s1-t58" name="DELETE-API_TPC_Remove1Users">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.362" starttime="20170405 10:18:50.342"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:50.395" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:50.395" starttime="20170405 10:18:50.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.395" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:50.395" starttime="20170405 10:18:50.395"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:50.395" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:50.395" starttime="20170405 10:18:50.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.395" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:50.395" starttime="20170405 10:18:50.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.411" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:50.411" starttime="20170405 10:18:50.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.411" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:50.411" starttime="20170405 10:18:50.411"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:50.411" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:50.411" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:50.411" starttime="20170405 10:18:50.411"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.411" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:50.411" starttime="20170405 10:18:50.411"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.411" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:50.411" starttime="20170405 10:18:50.411"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.411" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:50.411" starttime="20170405 10:18:50.411"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:50.411" starttime="20170405 10:18:50.338"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:50.411" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:50.411" starttime="20170405 10:18:50.411"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.411" starttime="20170405 10:18:50.411"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:50.411" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170405 10:18:50.411" starttime="20170405 10:18:50.411"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:50.411" level="INFO">${body} = {   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3"...</msg>
<status status="PASS" endtime="20170405 10:18:50.411" starttime="20170405 10:18:50.411"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:50.411" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:50.426" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:50.426" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:50.426" starttime="20170405 10:18:50.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.426" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:50.426" starttime="20170405 10:18:50.426"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170405 10:18:50.426" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:50.426" starttime="20170405 10:18:50.426"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:50.426" starttime="20170405 10:18:50.411"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_1User" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remove_1User:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.458" starttime="20170405 10:18:50.426"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:50.489" level="INFO">${SQL_TalentPoolId} = 5858</msg>
<status status="PASS" endtime="20170405 10:18:50.489" starttime="20170405 10:18:50.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.489" level="INFO">${SQL_TalentPoolId} = 5858</msg>
<status status="PASS" endtime="20170405 10:18:50.489" starttime="20170405 10:18:50.489"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20170405 10:18:50.505" level="INFO">${SQL_UserToRemove1} = 9</msg>
<status status="PASS" endtime="20170405 10:18:50.505" starttime="20170405 10:18:50.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.505" level="INFO">${SQL_UserToRemove1} = 9</msg>
<status status="PASS" endtime="20170405 10:18:50.505" starttime="20170405 10:18:50.505"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:50.505" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa052-auto-smp-api | x-csod-user-id=01336 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20170405 10:18:50.505" starttime="20170405 10:18:50.505"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:50.505" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:50.505" starttime="20170405 10:18:50.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:50.505" level="INFO">${body} = [{"UserId": 9}]</msg>
<status status="PASS" endtime="20170405 10:18:50.505" starttime="20170405 10:18:50.505"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:50.505" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20170405 10:18:50.505" starttime="20170405 10:18:50.505"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:50.520" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:50.645" level="INFO">Delete Request using : alias=http, uri=/talentpools/5858/candidates, data=[{"UserId": 9}],                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa052-auto-smp-api', u'x-csod-user-id': u'01336', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:50.645" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:50.645" starttime="20170405 10:18:50.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.645" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:50.645" starttime="20170405 10:18:50.645"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170405 10:18:50.645" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:50.645" starttime="20170405 10:18:50.645"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:50.645" level="INFO">${SQL_CandidateCountAfter} = 0</msg>
<status status="PASS" endtime="20170405 10:18:50.645" starttime="20170405 10:18:50.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.661" level="INFO">${SQL_CandidateCountAfter} = 0</msg>
<status status="PASS" endtime="20170405 10:18:50.661" starttime="20170405 10:18:50.645"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}-1</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20170405 10:18:50.661" level="INFO">${SQL_NUM} = 0</msg>
<status status="PASS" endtime="20170405 10:18:50.661" starttime="20170405 10:18:50.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.661" level="INFO">0</msg>
<status status="PASS" endtime="20170405 10:18:50.661" starttime="20170405 10:18:50.661"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.661" level="INFO">Set test message to:
The 0 matches with 0</msg>
<status status="PASS" endtime="20170405 10:18:50.661" starttime="20170405 10:18:50.661"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:50.661" starttime="20170405 10:18:50.661"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:50.661" starttime="20170405 10:18:50.661"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.661" starttime="20170405 10:18:50.661"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:50.661" starttime="20170405 10:18:50.426"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_1Users

*Description:*
Verify success when removing 1 user

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24460</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:50.661" critical="yes" starttime="20170405 10:18:50.338">The 0 matches with 0</status>
</test>
<test id="s1-s1-t59" name="DELETE-API_TPC_Remove_Access_DNE">
<kw name="REST_NOAUTH_NonExistentUser" library="SMP_Keywords">
<doc>*REST_NOAUTH_NonExistentUser:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.692" starttime="20170405 10:18:50.676"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:50.708" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20170405 10:18:50.708" starttime="20170405 10:18:50.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.708" level="INFO">2347</msg>
<status status="PASS" endtime="20170405 10:18:50.708" starttime="20170405 10:18:50.708"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT 1</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:50.708" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:50.708" starttime="20170405 10:18:50.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.708" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20170405 10:18:50.708" starttime="20170405 10:18:50.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.708" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:50.708" starttime="20170405 10:18:50.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.708" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:50.708" starttime="20170405 10:18:50.708"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:50.708" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:50.708" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:50.708" starttime="20170405 10:18:50.708"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.708" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:50.708" starttime="20170405 10:18:50.708"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.708" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20170405 10:18:50.708" starttime="20170405 10:18:50.708"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.723" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:50.723" starttime="20170405 10:18:50.723"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:50.723" starttime="20170405 10:18:50.676"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:50.723" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:50.723" starttime="20170405 10:18:50.723"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.723" starttime="20170405 10:18:50.723"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:50.723" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170405 10:18:50.723" starttime="20170405 10:18:50.723"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:50.723" level="INFO">${body} = {   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3"...</msg>
<status status="PASS" endtime="20170405 10:18:50.723" starttime="20170405 10:18:50.723"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:50.723" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:50.739" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_2347",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:50.739" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:50.739" starttime="20170405 10:18:50.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.739" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:50.739" starttime="20170405 10:18:50.739"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170405 10:18:50.739" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:50.739" starttime="20170405 10:18:50.739"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:50.739" starttime="20170405 10:18:50.723"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_Access_DNE" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remove_Access_DNE:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.770" starttime="20170405 10:18:50.739"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:50.770" level="INFO">${SQL_TalentPoolId} = 6168</msg>
<status status="PASS" endtime="20170405 10:18:50.770" starttime="20170405 10:18:50.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.786" level="INFO">${SQL_TalentPoolId} = 6168</msg>
<status status="PASS" endtime="20170405 10:18:50.786" starttime="20170405 10:18:50.770"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_user.user_id FROM ou_user LEFT JOIN users ON ou_user.user_id = users.user_id WHERE users.user_id &gt; 0 AND ou_user.ou_id = ${SQL_TalentPoolId} AND users.user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND users.status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20170405 10:18:50.786" level="INFO">${SQL_UserToRemove1} = 28</msg>
<status status="PASS" endtime="20170405 10:18:50.786" starttime="20170405 10:18:50.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.801" level="INFO">${SQL_UserToRemove1} = 28</msg>
<status status="PASS" endtime="20170405 10:18:50.801" starttime="20170405 10:18:50.786"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:50.802" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa052-auto-smp-api | x-csod-user-id=02347 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20170405 10:18:50.802" starttime="20170405 10:18:50.802"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:50.802" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:50.802" starttime="20170405 10:18:50.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:50.806" level="INFO">${body} = [{"UserId": 28}]</msg>
<status status="PASS" endtime="20170405 10:18:50.806" starttime="20170405 10:18:50.802"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:50.807" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20170405 10:18:50.807" starttime="20170405 10:18:50.807"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:50.807" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:50.838" level="INFO">Delete Request using : alias=http, uri=/talentpools/6168/candidates, data=[{"UserId": 28}],                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa052-auto-smp-api', u'x-csod-user-id': u'02347', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:50.838" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:50.838" starttime="20170405 10:18:50.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.838" level="INFO">&lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:50.838" starttime="20170405 10:18:50.838"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>401</arg>
</arguments>
<msg timestamp="20170405 10:18:50.838" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:50.842" starttime="20170405 10:18:50.838"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:50.842" level="INFO">${SQL_CandidateCountAfter} = 2</msg>
<status status="PASS" endtime="20170405 10:18:50.842" starttime="20170405 10:18:50.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.842" level="INFO">${SQL_CandidateCountAfter} = 2</msg>
<status status="PASS" endtime="20170405 10:18:50.842" starttime="20170405 10:18:50.842"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20170405 10:18:50.847" level="INFO">${SQL_NUM} = 2</msg>
<status status="PASS" endtime="20170405 10:18:50.847" starttime="20170405 10:18:50.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.847" level="INFO">2</msg>
<status status="PASS" endtime="20170405 10:18:50.847" starttime="20170405 10:18:50.847"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.847" level="INFO">Set test message to:
The 2 matches with 2</msg>
<status status="PASS" endtime="20170405 10:18:50.847" starttime="20170405 10:18:50.847"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:50.847" starttime="20170405 10:18:50.847"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:50.847" starttime="20170405 10:18:50.847"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.847" starttime="20170405 10:18:50.847"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:50.847" starttime="20170405 10:18:50.739"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_Access_DNE

*Description:*
Verify failure when acting user does not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>NEGATIVE</tag>
<tag>testrailid=24461</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:50.847" critical="yes" starttime="20170405 10:18:50.676">The 2 matches with 2</status>
</test>
<test id="s1-s1-t60" name="DELETE-API_TPC_Remove_Acc_NOT_TP_Owner">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.894" starttime="20170405 10:18:50.862"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:50.938" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170405 10:18:50.938" starttime="20170405 10:18:50.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.938" level="INFO">415</msg>
<status status="PASS" endtime="20170405 10:18:50.938" starttime="20170405 10:18:50.938"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:50.938" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:50.938" starttime="20170405 10:18:50.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.938" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170405 10:18:50.938" starttime="20170405 10:18:50.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.938" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:50.938" starttime="20170405 10:18:50.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.938" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:50.938" starttime="20170405 10:18:50.938"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:50.938" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:50.938" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:50.938" starttime="20170405 10:18:50.938"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.938" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:50.938" starttime="20170405 10:18:50.938"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.953" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170405 10:18:50.953" starttime="20170405 10:18:50.938"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.953" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:50.953" starttime="20170405 10:18:50.953"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:50.953" starttime="20170405 10:18:50.847"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:50.953" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:50.953" starttime="20170405 10:18:50.953"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:50.953" starttime="20170405 10:18:50.953"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:50.953" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170405 10:18:50.953" starttime="20170405 10:18:50.953"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:50.953" level="INFO">${body} = {   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3":...</msg>
<status status="PASS" endtime="20170405 10:18:50.953" starttime="20170405 10:18:50.953"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:50.953" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:50.969" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:50.969" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:50.969" starttime="20170405 10:18:50.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:50.969" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:50.969" starttime="20170405 10:18:50.969"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170405 10:18:50.969" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:50.969" starttime="20170405 10:18:50.969"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:50.969" starttime="20170405 10:18:50.953"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_Not_TP_Owner" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remove_1User:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:51.031" starttime="20170405 10:18:50.969"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id &lt;&gt; ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:51.047" level="INFO">${SQL_TalentPoolId} = 3189</msg>
<status status="PASS" endtime="20170405 10:18:51.047" starttime="20170405 10:18:51.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.047" level="INFO">${SQL_TalentPoolId} = 3189</msg>
<status status="PASS" endtime="20170405 10:18:51.047" starttime="20170405 10:18:51.047"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_user.user_id FROM ou_user LEFT JOIN users ON ou_user.user_id = users.user_id WHERE users.user_id &gt; 0 AND ou_user.ou_id = ${SQL_TalentPoolId} AND users.user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND users.status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20170405 10:18:51.063" level="INFO">${SQL_UserToRemove1} = 32</msg>
<status status="PASS" endtime="20170405 10:18:51.063" starttime="20170405 10:18:51.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.063" level="INFO">${SQL_UserToRemove1} = 32</msg>
<status status="PASS" endtime="20170405 10:18:51.063" starttime="20170405 10:18:51.063"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:51.063" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa052-auto-smp-api | x-csod-user-id=0415 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20170405 10:18:51.063" starttime="20170405 10:18:51.063"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:51.063" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:51.063" starttime="20170405 10:18:51.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:51.063" level="INFO">${body} = [{"UserId": 32}]</msg>
<status status="PASS" endtime="20170405 10:18:51.063" starttime="20170405 10:18:51.063"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:51.063" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20170405 10:18:51.063" starttime="20170405 10:18:51.063"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:51.063" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:51.110" level="INFO">Delete Request using : alias=http, uri=/talentpools/3189/candidates, data=[{"UserId": 32}],                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa052-auto-smp-api', u'x-csod-user-id': u'0415', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:51.110" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:51.110" starttime="20170405 10:18:51.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.110" level="INFO">&lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:51.110" starttime="20170405 10:18:51.110"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>401</arg>
</arguments>
<msg timestamp="20170405 10:18:51.110" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:51.110" starttime="20170405 10:18:51.110"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:51.125" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20170405 10:18:51.125" starttime="20170405 10:18:51.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.125" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20170405 10:18:51.125" starttime="20170405 10:18:51.125"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20170405 10:18:51.125" level="INFO">${SQL_NUM} = 1</msg>
<status status="PASS" endtime="20170405 10:18:51.125" starttime="20170405 10:18:51.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.125" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:51.125" starttime="20170405 10:18:51.125"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.141" level="INFO">Set test message to:
The 1 matches with 1</msg>
<status status="PASS" endtime="20170405 10:18:51.141" starttime="20170405 10:18:51.141"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:51.141" starttime="20170405 10:18:51.141"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:51.141" starttime="20170405 10:18:51.125"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:51.141" starttime="20170405 10:18:51.141"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:51.141" starttime="20170405 10:18:50.969"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_Acc_NotTPOwner

*Description:*
Verify failure when acting user is not the talent pool owner

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24462</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:51.141" critical="yes" starttime="20170405 10:18:50.847">The 1 matches with 1</status>
</test>
<test id="s1-s1-t61" name="DELETE-API_TPC_Remove_AlreadyRemoved_All">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:51.156" starttime="20170405 10:18:51.141"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:51.188" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170405 10:18:51.188" starttime="20170405 10:18:51.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.188" level="INFO">514</msg>
<status status="PASS" endtime="20170405 10:18:51.188" starttime="20170405 10:18:51.188"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:51.188" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:51.188" starttime="20170405 10:18:51.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.188" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170405 10:18:51.188" starttime="20170405 10:18:51.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.188" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:51.188" starttime="20170405 10:18:51.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.188" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:51.188" starttime="20170405 10:18:51.188"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:51.188" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:51.188" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:51.188" starttime="20170405 10:18:51.188"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.203" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:51.203" starttime="20170405 10:18:51.188"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.203" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20170405 10:18:51.203" starttime="20170405 10:18:51.203"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.203" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:51.203" starttime="20170405 10:18:51.203"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:51.203" starttime="20170405 10:18:51.141"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:51.203" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:51.203" starttime="20170405 10:18:51.203"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:51.203" starttime="20170405 10:18:51.203"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:51.203" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170405 10:18:51.203" starttime="20170405 10:18:51.203"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:51.203" level="INFO">${body} = {   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3":...</msg>
<status status="PASS" endtime="20170405 10:18:51.203" starttime="20170405 10:18:51.203"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:51.203" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:51.219" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:51.219" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:51.219" starttime="20170405 10:18:51.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.219" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:51.219" starttime="20170405 10:18:51.219"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170405 10:18:51.219" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:51.219" starttime="20170405 10:18:51.219"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:51.219" starttime="20170405 10:18:51.203"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_AlreadyRemoved_All" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_AlreadyRemoved_All:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:51.235" starttime="20170405 10:18:51.219"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:51.250" level="INFO">${SQL_TalentPoolId} = 10432</msg>
<status status="PASS" endtime="20170405 10:18:51.250" starttime="20170405 10:18:51.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.250" level="INFO">${SQL_TalentPoolId} = 10432</msg>
<status status="PASS" endtime="20170405 10:18:51.266" starttime="20170405 10:18:51.250"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20170405 10:18:51.266" level="INFO">${SQL_UserToRemove1} = 723</msg>
<status status="PASS" endtime="20170405 10:18:51.266" starttime="20170405 10:18:51.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.266" level="INFO">${SQL_UserToRemove1} = 723</msg>
<status status="PASS" endtime="20170405 10:18:51.266" starttime="20170405 10:18:51.266"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 AND user_id &lt;&gt; ${SQL_UserToRemove1} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove2}</var>
</assign>
<msg timestamp="20170405 10:18:51.281" level="INFO">${SQL_UserToRemove2} = 804</msg>
<status status="PASS" endtime="20170405 10:18:51.281" starttime="20170405 10:18:51.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove2}</arg>
<arg>${SQL_UserToRemove2}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.297" level="INFO">${SQL_UserToRemove2} = 804</msg>
<status status="PASS" endtime="20170405 10:18:51.297" starttime="20170405 10:18:51.281"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:51.297" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa052-auto-smp-api | x-csod-user-id=0514 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20170405 10:18:51.297" starttime="20170405 10:18:51.297"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:51.297" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:51.297" starttime="20170405 10:18:51.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}},{"UserId": ${SQL_UserToRemove2}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:51.297" level="INFO">${body} = [{"UserId": 723},{"UserId": 804}]</msg>
<status status="PASS" endtime="20170405 10:18:51.297" starttime="20170405 10:18:51.297"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:51.297" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20170405 10:18:51.297" starttime="20170405 10:18:51.297"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:51.297" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:51.833" level="INFO">Delete Request using : alias=http, uri=/talentpools/10432/candidates, data=[{"UserId": 723},{"UserId": 804}],                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa052-auto-smp-api', u'x-csod-user-id': u'0514', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:51.833" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:51.833" starttime="20170405 10:18:51.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.833" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:51.833" starttime="20170405 10:18:51.833"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170405 10:18:51.833" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:51.833" starttime="20170405 10:18:51.833"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:51.833" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20170405 10:18:51.833" starttime="20170405 10:18:51.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.833" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20170405 10:18:51.833" starttime="20170405 10:18:51.833"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20170405 10:18:51.833" level="INFO">${SQL_NUM} = 1</msg>
<status status="PASS" endtime="20170405 10:18:51.833" starttime="20170405 10:18:51.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.833" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:51.833" starttime="20170405 10:18:51.833"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.849" level="INFO">Set test message to:
The 1 matches with 1</msg>
<status status="PASS" endtime="20170405 10:18:51.849" starttime="20170405 10:18:51.849"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:51.849" starttime="20170405 10:18:51.849"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:51.849" starttime="20170405 10:18:51.833"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:51.849" starttime="20170405 10:18:51.849"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:51.849" starttime="20170405 10:18:51.219"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_AlreadyRemoved_All

*Description:*
Verify success when multiple removed users are already removed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24463</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:51.849" critical="yes" starttime="20170405 10:18:51.141">The 1 matches with 1</status>
</test>
<test id="s1-s1-t62" name="DELETE-API_TPC_Remove_AlreadyRemoved_Single">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:51.864" starttime="20170405 10:18:51.849"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:51.864" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170405 10:18:51.864" starttime="20170405 10:18:51.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.864" level="INFO">48</msg>
<status status="PASS" endtime="20170405 10:18:51.864" starttime="20170405 10:18:51.864"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:51.864" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:51.864" starttime="20170405 10:18:51.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.864" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170405 10:18:51.864" starttime="20170405 10:18:51.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.880" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:51.880" starttime="20170405 10:18:51.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.880" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:51.880" starttime="20170405 10:18:51.880"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:51.880" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:51.880" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:51.880" starttime="20170405 10:18:51.880"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.880" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:51.880" starttime="20170405 10:18:51.880"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.880" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170405 10:18:51.880" starttime="20170405 10:18:51.880"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.880" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:51.880" starttime="20170405 10:18:51.880"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:51.880" starttime="20170405 10:18:51.849"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:51.880" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:51.880" starttime="20170405 10:18:51.880"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:51.880" starttime="20170405 10:18:51.880"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:51.880" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170405 10:18:51.880" starttime="20170405 10:18:51.880"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:51.880" level="INFO">${body} = {   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": ...</msg>
<status status="PASS" endtime="20170405 10:18:51.880" starttime="20170405 10:18:51.880"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:51.896" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:51.896" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:51.896" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:51.896" starttime="20170405 10:18:51.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.896" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:51.896" starttime="20170405 10:18:51.896"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170405 10:18:51.896" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:51.896" starttime="20170405 10:18:51.896"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:51.896" starttime="20170405 10:18:51.880"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_AlreadyRemoved_Single" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_AlreadyRemoved_Single:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:51.911" starttime="20170405 10:18:51.911"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:51.927" level="INFO">${SQL_TalentPoolId} = 10752</msg>
<status status="PASS" endtime="20170405 10:18:51.927" starttime="20170405 10:18:51.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.927" level="INFO">${SQL_TalentPoolId} = 10752</msg>
<status status="PASS" endtime="20170405 10:18:51.927" starttime="20170405 10:18:51.927"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20170405 10:18:51.943" level="INFO">${SQL_UserToRemove1} = 646</msg>
<status status="PASS" endtime="20170405 10:18:51.943" starttime="20170405 10:18:51.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20170405 10:18:51.943" level="INFO">${SQL_UserToRemove1} = 646</msg>
<status status="PASS" endtime="20170405 10:18:51.943" starttime="20170405 10:18:51.943"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:51.943" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa052-auto-smp-api | x-csod-user-id=048 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20170405 10:18:51.943" starttime="20170405 10:18:51.943"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:51.943" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:51.943" starttime="20170405 10:18:51.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:51.943" level="INFO">${body} = [{"UserId": 646}]</msg>
<status status="PASS" endtime="20170405 10:18:51.943" starttime="20170405 10:18:51.943"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:51.943" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20170405 10:18:51.943" starttime="20170405 10:18:51.943"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:51.958" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:52.036" level="INFO">Delete Request using : alias=http, uri=/talentpools/10752/candidates, data=[{"UserId": 646}],                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa052-auto-smp-api', u'x-csod-user-id': u'048', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:52.036" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:52.036" starttime="20170405 10:18:51.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.052" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:52.052" starttime="20170405 10:18:52.036"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170405 10:18:52.052" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:52.052" starttime="20170405 10:18:52.052"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:52.052" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20170405 10:18:52.052" starttime="20170405 10:18:52.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.052" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20170405 10:18:52.052" starttime="20170405 10:18:52.052"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20170405 10:18:52.068" level="INFO">${SQL_NUM} = 1</msg>
<status status="PASS" endtime="20170405 10:18:52.068" starttime="20170405 10:18:52.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.068" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:52.068" starttime="20170405 10:18:52.068"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.068" level="INFO">Set test message to:
The 1 matches with 1</msg>
<status status="PASS" endtime="20170405 10:18:52.068" starttime="20170405 10:18:52.068"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:52.068" starttime="20170405 10:18:52.068"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:52.068" starttime="20170405 10:18:52.068"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:52.068" starttime="20170405 10:18:52.068"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:52.068" starttime="20170405 10:18:51.911"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_AlreadyRemoved_Single

*Description:*
Verify success when single removed user is already removed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24464</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:52.068" critical="yes" starttime="20170405 10:18:51.849">The 1 matches with 1</status>
</test>
<test id="s1-s1-t63" name="DELETE-API_TPC_Remove_AlreadyRemoved_SubSet">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:52.083" starttime="20170405 10:18:52.068"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:52.099" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170405 10:18:52.099" starttime="20170405 10:18:52.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.099" level="INFO">1338</msg>
<status status="PASS" endtime="20170405 10:18:52.099" starttime="20170405 10:18:52.099"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:52.099" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:52.099" starttime="20170405 10:18:52.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.099" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170405 10:18:52.099" starttime="20170405 10:18:52.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.099" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:52.099" starttime="20170405 10:18:52.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.099" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:52.099" starttime="20170405 10:18:52.099"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:52.099" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:52.099" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:52.099" starttime="20170405 10:18:52.099"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.099" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:52.099" starttime="20170405 10:18:52.099"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.099" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20170405 10:18:52.099" starttime="20170405 10:18:52.099"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.099" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:52.099" starttime="20170405 10:18:52.099"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:52.099" starttime="20170405 10:18:52.068"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:52.114" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:52.114" starttime="20170405 10:18:52.114"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:52.114" starttime="20170405 10:18:52.114"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:52.114" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170405 10:18:52.114" starttime="20170405 10:18:52.114"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:52.114" level="INFO">${body} = {   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3"...</msg>
<status status="PASS" endtime="20170405 10:18:52.114" starttime="20170405 10:18:52.114"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:52.114" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:52.130" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:52.130" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:52.130" starttime="20170405 10:18:52.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.130" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:52.130" starttime="20170405 10:18:52.130"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170405 10:18:52.130" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:52.130" starttime="20170405 10:18:52.130"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:52.130" starttime="20170405 10:18:52.114"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_AlreadyRemoved_SubSet" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_AlreadyRemoved_SubSet:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:52.223" starttime="20170405 10:18:52.130"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:52.251" level="INFO">${SQL_TalentPoolId} = 2202</msg>
<status status="PASS" endtime="20170405 10:18:52.251" starttime="20170405 10:18:52.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.251" level="INFO">${SQL_TalentPoolId} = 2202</msg>
<status status="PASS" endtime="20170405 10:18:52.251" starttime="20170405 10:18:52.251"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20170405 10:18:52.267" level="INFO">${SQL_UserToRemove1} = 568</msg>
<status status="PASS" endtime="20170405 10:18:52.267" starttime="20170405 10:18:52.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.267" level="INFO">${SQL_UserToRemove1} = 568</msg>
<status status="PASS" endtime="20170405 10:18:52.267" starttime="20170405 10:18:52.267"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove2}</var>
</assign>
<msg timestamp="20170405 10:18:52.283" level="INFO">${SQL_UserToRemove2} = 828</msg>
<status status="PASS" endtime="20170405 10:18:52.283" starttime="20170405 10:18:52.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove2}</arg>
<arg>${SQL_UserToRemove2}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.296" level="INFO">${SQL_UserToRemove2} = 828</msg>
<status status="PASS" endtime="20170405 10:18:52.296" starttime="20170405 10:18:52.283"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:52.296" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa052-auto-smp-api | x-csod-user-id=01338 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20170405 10:18:52.296" starttime="20170405 10:18:52.296"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:52.300" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:52.300" starttime="20170405 10:18:52.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}},{"UserId": ${SQL_UserToRemove2}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:52.302" level="INFO">${body} = [{"UserId": 568},{"UserId": 828}]</msg>
<status status="PASS" endtime="20170405 10:18:52.302" starttime="20170405 10:18:52.300"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:52.302" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20170405 10:18:52.302" starttime="20170405 10:18:52.302"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:52.302" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:52.448" level="INFO">Delete Request using : alias=http, uri=/talentpools/2202/candidates, data=[{"UserId": 568},{"UserId": 828}],                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa052-auto-smp-api', u'x-csod-user-id': u'01338', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:52.448" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:52.448" starttime="20170405 10:18:52.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.448" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:52.448" starttime="20170405 10:18:52.448"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170405 10:18:52.448" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:52.448" starttime="20170405 10:18:52.448"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:52.453" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20170405 10:18:52.453" starttime="20170405 10:18:52.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.453" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20170405 10:18:52.453" starttime="20170405 10:18:52.453"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}-1</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20170405 10:18:52.453" level="INFO">${SQL_NUM} = 1</msg>
<status status="PASS" endtime="20170405 10:18:52.453" starttime="20170405 10:18:52.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.453" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:52.453" starttime="20170405 10:18:52.453"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.453" level="INFO">Set test message to:
The 1 matches with 1</msg>
<status status="PASS" endtime="20170405 10:18:52.453" starttime="20170405 10:18:52.453"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:52.453" starttime="20170405 10:18:52.453"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:52.453" starttime="20170405 10:18:52.453"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:52.469" starttime="20170405 10:18:52.453"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:52.469" starttime="20170405 10:18:52.130"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_AlreadyRemoved_SubSet

*Description:*
Verify success when subset of removed users are already removed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24465</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:52.469" critical="yes" starttime="20170405 10:18:52.068">The 1 matches with 1</status>
</test>
<test id="s1-s1-t64" name="DELETE-APIi_TPC_Remove_BaseCase_InputVsDatabase">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:52.578" starttime="20170405 10:18:52.469"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:52.594" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20170405 10:18:52.594" starttime="20170405 10:18:52.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.594" level="INFO">55</msg>
<status status="PASS" endtime="20170405 10:18:52.594" starttime="20170405 10:18:52.594"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:52.657" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:52.657" starttime="20170405 10:18:52.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.657" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20170405 10:18:52.657" starttime="20170405 10:18:52.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.657" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:52.657" starttime="20170405 10:18:52.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.657" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:52.657" starttime="20170405 10:18:52.657"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:52.657" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:52.657" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:52.657" starttime="20170405 10:18:52.657"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.657" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:52.657" starttime="20170405 10:18:52.657"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.657" level="INFO">Set request header "X-USERID" to "55"</msg>
<status status="PASS" endtime="20170405 10:18:52.657" starttime="20170405 10:18:52.657"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.657" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:52.657" starttime="20170405 10:18:52.657"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:52.657" starttime="20170405 10:18:52.469"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:52.657" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:52.657" starttime="20170405 10:18:52.657"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:52.657" starttime="20170405 10:18:52.657"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:52.657" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170405 10:18:52.657" starttime="20170405 10:18:52.657"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:52.672" level="INFO">${body} = {   "UserId": 55,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": ...</msg>
<status status="PASS" endtime="20170405 10:18:52.672" starttime="20170405 10:18:52.657"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:52.672" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:52.681" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 55,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_55",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:52.681" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:52.681" starttime="20170405 10:18:52.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.681" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:52.681" starttime="20170405 10:18:52.681"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170405 10:18:52.681" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:52.681" starttime="20170405 10:18:52.681"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:52.681" starttime="20170405 10:18:52.657"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_BaseCase_InputVsDatabase" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Api_Remove_BaseCase_InputVsDatabase:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:52.719" starttime="20170405 10:18:52.681"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:52.734" level="INFO">${SQL_TalentPoolId} = 702</msg>
<status status="PASS" endtime="20170405 10:18:52.734" starttime="20170405 10:18:52.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.734" level="INFO">${SQL_TalentPoolId} = 702</msg>
<status status="PASS" endtime="20170405 10:18:52.734" starttime="20170405 10:18:52.734"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_user.user_id FROM ou_user LEFT JOIN users ON ou_user.user_id = users.user_id WHERE users.user_id &gt; 0 AND ou_user.ou_id = ${SQL_TalentPoolId} AND users.user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND users.status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20170405 10:18:52.740" level="INFO">${SQL_UserToRemove1} = 606</msg>
<status status="PASS" endtime="20170405 10:18:52.740" starttime="20170405 10:18:52.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.740" level="INFO">${SQL_UserToRemove1} = 606</msg>
<status status="PASS" endtime="20170405 10:18:52.740" starttime="20170405 10:18:52.740"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:52.740" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa052-auto-smp-api | x-csod-user-id=055 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20170405 10:18:52.740" starttime="20170405 10:18:52.740"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:52.740" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:52.740" starttime="20170405 10:18:52.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:52.756" level="INFO">${body} = [{"UserId": 606}]</msg>
<status status="PASS" endtime="20170405 10:18:52.756" starttime="20170405 10:18:52.756"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:52.756" level="INFO">${SQL_CandidateCountBefore} = 43</msg>
<status status="PASS" endtime="20170405 10:18:52.756" starttime="20170405 10:18:52.756"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:52.756" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:52.881" level="INFO">Delete Request using : alias=http, uri=/talentpools/702/candidates, data=[{"UserId": 606}],                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa052-auto-smp-api', u'x-csod-user-id': u'055', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:52.881" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:52.881" starttime="20170405 10:18:52.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.896" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:52.896" starttime="20170405 10:18:52.881"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170405 10:18:52.896" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:52.896" starttime="20170405 10:18:52.896"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:52.896" level="INFO">${SQL_CandidateCountAfter} = 42</msg>
<status status="PASS" endtime="20170405 10:18:52.896" starttime="20170405 10:18:52.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.896" level="INFO">${SQL_CandidateCountAfter} = 42</msg>
<status status="PASS" endtime="20170405 10:18:52.896" starttime="20170405 10:18:52.896"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}-1</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20170405 10:18:52.896" level="INFO">${SQL_NUM} = 42</msg>
<status status="PASS" endtime="20170405 10:18:52.896" starttime="20170405 10:18:52.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.896" level="INFO">42</msg>
<status status="PASS" endtime="20170405 10:18:52.896" starttime="20170405 10:18:52.896"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:52.896" level="INFO">Set test message to:
The 42 matches with 42</msg>
<status status="PASS" endtime="20170405 10:18:52.896" starttime="20170405 10:18:52.896"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:52.896" starttime="20170405 10:18:52.896"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:52.896" starttime="20170405 10:18:52.896"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:52.912" starttime="20170405 10:18:52.912"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:52.912" starttime="20170405 10:18:52.681"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_AlreadyRemoved_SubSet

*Description:*
Verify successful input user ends up in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24466</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:52.912" critical="yes" starttime="20170405 10:18:52.469">The 42 matches with 42</status>
</test>
<test id="s1-s1-t65" name="DELETE-API_TPC_Remove_BaseCase_InputVsOutput">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:53.159" starttime="20170405 10:18:52.912"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:53.159" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170405 10:18:53.159" starttime="20170405 10:18:53.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.159" level="INFO">48</msg>
<status status="PASS" endtime="20170405 10:18:53.159" starttime="20170405 10:18:53.159"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:53.175" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:53.175" starttime="20170405 10:18:53.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.175" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170405 10:18:53.175" starttime="20170405 10:18:53.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.175" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:53.175" starttime="20170405 10:18:53.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.175" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:53.175" starttime="20170405 10:18:53.175"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:53.175" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:53.175" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:53.175" starttime="20170405 10:18:53.175"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.175" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:53.175" starttime="20170405 10:18:53.175"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.175" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170405 10:18:53.175" starttime="20170405 10:18:53.175"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.175" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:53.175" starttime="20170405 10:18:53.175"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:53.175" starttime="20170405 10:18:52.912"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:53.175" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:53.175" starttime="20170405 10:18:53.175"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:53.175" starttime="20170405 10:18:53.175"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:53.175" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170405 10:18:53.175" starttime="20170405 10:18:53.175"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:53.190" level="INFO">${body} = {   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": ...</msg>
<status status="PASS" endtime="20170405 10:18:53.190" starttime="20170405 10:18:53.175"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:53.193" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:53.197" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:53.197" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:53.197" starttime="20170405 10:18:53.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.197" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:53.197" starttime="20170405 10:18:53.197"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170405 10:18:53.197" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:53.197" starttime="20170405 10:18:53.197"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:53.197" starttime="20170405 10:18:53.175"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_BaseCase_InputVsOutput" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remove_BaseCase_InputVsOutput:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:53.213" starttime="20170405 10:18:53.197"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:53.228" level="INFO">${SQL_TalentPoolId} = 10752</msg>
<status status="PASS" endtime="20170405 10:18:53.228" starttime="20170405 10:18:53.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.228" level="INFO">${SQL_TalentPoolId} = 10752</msg>
<status status="PASS" endtime="20170405 10:18:53.228" starttime="20170405 10:18:53.228"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_user.user_id FROM ou_user LEFT JOIN users ON ou_user.user_id = users.user_id WHERE users.user_id &gt; 0 AND ou_user.ou_id = ${SQL_TalentPoolId} AND users.user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND users.status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20170405 10:18:53.275" level="INFO">${SQL_UserToRemove1} = 756</msg>
<status status="PASS" endtime="20170405 10:18:53.275" starttime="20170405 10:18:53.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.275" level="INFO">${SQL_UserToRemove1} = 756</msg>
<status status="PASS" endtime="20170405 10:18:53.275" starttime="20170405 10:18:53.275"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:53.275" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa052-auto-smp-api | x-csod-user-id=048 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20170405 10:18:53.275" starttime="20170405 10:18:53.275"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:53.275" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:53.275" starttime="20170405 10:18:53.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:53.275" level="INFO">${body} = [{"UserId": 756}]</msg>
<status status="PASS" endtime="20170405 10:18:53.275" starttime="20170405 10:18:53.275"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:53.275" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20170405 10:18:53.275" starttime="20170405 10:18:53.275"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:53.275" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:53.385" level="INFO">Delete Request using : alias=http, uri=/talentpools/10752/candidates, data=[{"UserId": 756}],                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa052-auto-smp-api', u'x-csod-user-id': u'048', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:53.385" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:53.385" starttime="20170405 10:18:53.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.385" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:53.385" starttime="20170405 10:18:53.385"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170405 10:18:53.385" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:53.385" starttime="20170405 10:18:53.385"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:53.385" level="INFO">${SQL_CandidateCountAfter} = 0</msg>
<status status="PASS" endtime="20170405 10:18:53.385" starttime="20170405 10:18:53.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.385" level="INFO">${SQL_CandidateCountAfter} = 0</msg>
<status status="PASS" endtime="20170405 10:18:53.385" starttime="20170405 10:18:53.385"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}-1</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20170405 10:18:53.385" level="INFO">${SQL_NUM} = 0</msg>
<status status="PASS" endtime="20170405 10:18:53.385" starttime="20170405 10:18:53.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.385" level="INFO">0</msg>
<status status="PASS" endtime="20170405 10:18:53.385" starttime="20170405 10:18:53.385"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.400" level="INFO">Set test message to:
The 0 matches with 0</msg>
<status status="PASS" endtime="20170405 10:18:53.400" starttime="20170405 10:18:53.400"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:53.400" starttime="20170405 10:18:53.400"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:53.400" starttime="20170405 10:18:53.385"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:53.400" starttime="20170405 10:18:53.400"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:53.400" starttime="20170405 10:18:53.197"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_AlreadyRemoved_Single

*Description:*
Verify success when single removed user is already removed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>JSONVFY</tag>
<tag>testrailid=24467</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:53.400" critical="yes" starttime="20170405 10:18:52.912">The 0 matches with 0</status>
</test>
<test id="s1-s1-t66" name="DELETE-API_TPC_Remove_DNEUser_All">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:53.478" starttime="20170405 10:18:53.457"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:53.490" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:53.490" starttime="20170405 10:18:53.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.490" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:53.490" starttime="20170405 10:18:53.490"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:53.494" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:53.494" starttime="20170405 10:18:53.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.494" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:53.494" starttime="20170405 10:18:53.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.494" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:53.494" starttime="20170405 10:18:53.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.494" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:53.494" starttime="20170405 10:18:53.494"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:53.494" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:53.494" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:53.494" starttime="20170405 10:18:53.494"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.494" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:53.494" starttime="20170405 10:18:53.494"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.494" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:53.494" starttime="20170405 10:18:53.494"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.494" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:53.494" starttime="20170405 10:18:53.494"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:53.494" starttime="20170405 10:18:53.453"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:53.494" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:53.494" starttime="20170405 10:18:53.494"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:53.494" starttime="20170405 10:18:53.494"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:53.494" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170405 10:18:53.494" starttime="20170405 10:18:53.494"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:53.510" level="INFO">${body} = {   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3"...</msg>
<status status="PASS" endtime="20170405 10:18:53.510" starttime="20170405 10:18:53.494"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:53.510" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:53.525" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:53.525" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:53.525" starttime="20170405 10:18:53.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.525" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:53.525" starttime="20170405 10:18:53.525"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170405 10:18:53.529" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:53.529" starttime="20170405 10:18:53.525"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:53.529" starttime="20170405 10:18:53.494"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_DNEUser_All" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remove_DNEUser_All:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:53.566" starttime="20170405 10:18:53.537"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:53.599" level="INFO">${SQL_TalentPoolId} = 735</msg>
<status status="PASS" endtime="20170405 10:18:53.599" starttime="20170405 10:18:53.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.599" level="INFO">${SQL_TalentPoolId} = 735</msg>
<status status="PASS" endtime="20170405 10:18:53.599" starttime="20170405 10:18:53.599"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20170405 10:18:53.603" level="INFO">${SQL_UserToRemove1} = 2347</msg>
<status status="PASS" endtime="20170405 10:18:53.603" starttime="20170405 10:18:53.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.607" level="INFO">${SQL_UserToRemove1} = 2347</msg>
<status status="PASS" endtime="20170405 10:18:53.607" starttime="20170405 10:18:53.607"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+2000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove2}</var>
</assign>
<msg timestamp="20170405 10:18:53.612" level="INFO">${SQL_UserToRemove2} = 3347</msg>
<status status="PASS" endtime="20170405 10:18:53.612" starttime="20170405 10:18:53.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove2}</arg>
<arg>${SQL_UserToRemove2}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.612" level="INFO">${SQL_UserToRemove2} = 3347</msg>
<status status="PASS" endtime="20170405 10:18:53.612" starttime="20170405 10:18:53.612"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:53.612" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa052-auto-smp-api | x-csod-user-id=01336 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20170405 10:18:53.612" starttime="20170405 10:18:53.612"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:53.612" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:53.612" starttime="20170405 10:18:53.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1},{"UserId": ${SQL_UserToRemove2}}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:53.612" level="INFO">${body} = [{"UserId": 2347,{"UserId": 3347}}]</msg>
<status status="PASS" endtime="20170405 10:18:53.612" starttime="20170405 10:18:53.612"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:53.612" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20170405 10:18:53.612" starttime="20170405 10:18:53.612"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:53.612" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:53.659" level="INFO">Delete Request using : alias=http, uri=/talentpools/735/candidates, data="[{\"UserId\": 2347,{\"UserId\": 3347}}]",                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa052-auto-smp-api', u'x-csod-user-id': u'01336', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:53.659" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:53.659" starttime="20170405 10:18:53.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.659" level="INFO">&lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:53.659" starttime="20170405 10:18:53.659"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>500</arg>
</arguments>
<msg timestamp="20170405 10:18:53.659" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:53.659" starttime="20170405 10:18:53.659"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:53.659" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20170405 10:18:53.659" starttime="20170405 10:18:53.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.659" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20170405 10:18:53.659" starttime="20170405 10:18:53.659"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20170405 10:18:53.659" level="INFO">${SQL_NUM} = 1</msg>
<status status="PASS" endtime="20170405 10:18:53.659" starttime="20170405 10:18:53.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.674" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:53.674" starttime="20170405 10:18:53.674"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.674" level="INFO">Set test message to:
The 1 matches with 1</msg>
<status status="PASS" endtime="20170405 10:18:53.674" starttime="20170405 10:18:53.674"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:53.674" starttime="20170405 10:18:53.674"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:53.674" starttime="20170405 10:18:53.674"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:53.674" starttime="20170405 10:18:53.674"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:53.674" starttime="20170405 10:18:53.537"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_DNEUser_All

*Description:*
Verify failure when multiple removed users do not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24468</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:53.674" critical="yes" starttime="20170405 10:18:53.453">The 1 matches with 1</status>
</test>
<test id="s1-s1-t67" name="DELETE-API_TPC_Remove_DNEUser_Single">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:53.721" starttime="20170405 10:18:53.674"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:53.721" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170405 10:18:53.721" starttime="20170405 10:18:53.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.721" level="INFO">514</msg>
<status status="PASS" endtime="20170405 10:18:53.721" starttime="20170405 10:18:53.721"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:53.721" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:53.721" starttime="20170405 10:18:53.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.721" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170405 10:18:53.721" starttime="20170405 10:18:53.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.721" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:53.721" starttime="20170405 10:18:53.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.721" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:53.721" starttime="20170405 10:18:53.721"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:53.737" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:53.737" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:53.737" starttime="20170405 10:18:53.721"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.737" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:53.737" starttime="20170405 10:18:53.737"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.737" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20170405 10:18:53.737" starttime="20170405 10:18:53.737"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.737" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:53.737" starttime="20170405 10:18:53.737"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:53.737" starttime="20170405 10:18:53.674"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:53.737" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:53.737" starttime="20170405 10:18:53.737"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:53.737" starttime="20170405 10:18:53.737"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:53.737" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170405 10:18:53.737" starttime="20170405 10:18:53.737"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:53.737" level="INFO">${body} = {   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3":...</msg>
<status status="PASS" endtime="20170405 10:18:53.737" starttime="20170405 10:18:53.737"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:53.737" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:53.752" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:53.752" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:53.752" starttime="20170405 10:18:53.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.752" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:53.752" starttime="20170405 10:18:53.752"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170405 10:18:53.752" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:53.752" starttime="20170405 10:18:53.752"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:53.752" starttime="20170405 10:18:53.737"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_DNEUser_Single" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remvoe_DNEUser_Single:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:53.784" starttime="20170405 10:18:53.752"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:53.815" level="INFO">${SQL_TalentPoolId} = 3217</msg>
<status status="PASS" endtime="20170405 10:18:53.815" starttime="20170405 10:18:53.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.815" level="INFO">${SQL_TalentPoolId} = 3217</msg>
<status status="PASS" endtime="20170405 10:18:53.815" starttime="20170405 10:18:53.815"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20170405 10:18:53.815" level="INFO">${SQL_UserToRemove1} = 2347</msg>
<status status="PASS" endtime="20170405 10:18:53.815" starttime="20170405 10:18:53.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.815" level="INFO">${SQL_UserToRemove1} = 2347</msg>
<status status="PASS" endtime="20170405 10:18:53.815" starttime="20170405 10:18:53.815"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:53.815" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa052-auto-smp-api | x-csod-user-id=0514 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20170405 10:18:53.815" starttime="20170405 10:18:53.815"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:53.815" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:53.815" starttime="20170405 10:18:53.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>{"UserId": ${SQL_UserToRemove1}}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.815" level="INFO">${body} = {"UserId": 2347}</msg>
<status status="PASS" endtime="20170405 10:18:53.815" starttime="20170405 10:18:53.815"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:53.815" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20170405 10:18:53.815" starttime="20170405 10:18:53.815"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:53.815" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:53.846" level="INFO">Delete Request using : alias=http, uri=/talentpools/3217/candidates, data={"UserId": 2347},                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa052-auto-smp-api', u'x-csod-user-id': u'0514', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:53.846" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:53.846" starttime="20170405 10:18:53.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.846" level="INFO">&lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:53.846" starttime="20170405 10:18:53.846"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>500</arg>
</arguments>
<msg timestamp="20170405 10:18:53.846" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:53.846" starttime="20170405 10:18:53.846"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:53.862" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20170405 10:18:53.862" starttime="20170405 10:18:53.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.862" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20170405 10:18:53.862" starttime="20170405 10:18:53.862"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20170405 10:18:53.862" level="INFO">${SQL_NUM} = 1</msg>
<status status="PASS" endtime="20170405 10:18:53.862" starttime="20170405 10:18:53.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.862" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:53.862" starttime="20170405 10:18:53.862"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.862" level="INFO">Set test message to:
The 1 matches with 1</msg>
<status status="PASS" endtime="20170405 10:18:53.862" starttime="20170405 10:18:53.862"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:53.862" starttime="20170405 10:18:53.862"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:53.877" starttime="20170405 10:18:53.862"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:53.877" starttime="20170405 10:18:53.877"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:53.877" starttime="20170405 10:18:53.752"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_DNEUser_Single

*Description:*
Verify failure when single removed user does not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24469</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:53.877" critical="yes" starttime="20170405 10:18:53.674">The 1 matches with 1</status>
</test>
<test id="s1-s1-t68" name="DELETE-API_TPC_Remove_DNEUser_SubSet">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:53.893" starttime="20170405 10:18:53.877"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:53.909" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:53.909" starttime="20170405 10:18:53.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.909" level="INFO">1336</msg>
<status status="PASS" endtime="20170405 10:18:53.909" starttime="20170405 10:18:53.909"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:53.909" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:53.909" starttime="20170405 10:18:53.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.909" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170405 10:18:53.909" starttime="20170405 10:18:53.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.909" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:53.909" starttime="20170405 10:18:53.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.909" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:53.909" starttime="20170405 10:18:53.909"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:53.909" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:53.909" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:53.909" starttime="20170405 10:18:53.909"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.909" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:53.909" starttime="20170405 10:18:53.909"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.909" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170405 10:18:53.909" starttime="20170405 10:18:53.909"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.924" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:53.924" starttime="20170405 10:18:53.909"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:53.924" starttime="20170405 10:18:53.877"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:53.924" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:53.924" starttime="20170405 10:18:53.924"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:53.924" starttime="20170405 10:18:53.924"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:53.924" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170405 10:18:53.924" starttime="20170405 10:18:53.924"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:53.924" level="INFO">${body} = {   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3"...</msg>
<status status="PASS" endtime="20170405 10:18:53.924" starttime="20170405 10:18:53.924"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:53.924" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:53.940" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:53.940" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:53.940" starttime="20170405 10:18:53.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.940" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:53.940" starttime="20170405 10:18:53.940"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170405 10:18:53.940" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:53.940" starttime="20170405 10:18:53.940"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:53.940" starttime="20170405 10:18:53.924"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_DNEUser_SubSet" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remove_DNEUser_SubSet:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:53.956" starttime="20170405 10:18:53.956"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:53.987" level="INFO">${SQL_TalentPoolId} = 6811</msg>
<status status="PASS" endtime="20170405 10:18:53.987" starttime="20170405 10:18:53.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.987" level="INFO">${SQL_TalentPoolId} = 6811</msg>
<status status="PASS" endtime="20170405 10:18:53.987" starttime="20170405 10:18:53.987"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20170405 10:18:53.987" level="INFO">${SQL_UserToRemove1} = 2347</msg>
<status status="PASS" endtime="20170405 10:18:53.987" starttime="20170405 10:18:53.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20170405 10:18:53.987" level="INFO">${SQL_UserToRemove1} = 2347</msg>
<status status="PASS" endtime="20170405 10:18:53.987" starttime="20170405 10:18:53.987"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove2}</var>
</assign>
<msg timestamp="20170405 10:18:54.002" level="INFO">${SQL_UserToRemove2} = 773</msg>
<status status="PASS" endtime="20170405 10:18:54.002" starttime="20170405 10:18:53.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove2}</arg>
<arg>${SQL_UserToRemove2}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.002" level="INFO">${SQL_UserToRemove2} = 773</msg>
<status status="PASS" endtime="20170405 10:18:54.002" starttime="20170405 10:18:54.002"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:54.002" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa052-auto-smp-api | x-csod-user-id=01336 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20170405 10:18:54.002" starttime="20170405 10:18:54.002"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:54.002" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:54.002" starttime="20170405 10:18:54.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>{"UserId": ${SQL_UserToRemove1}},{"UserId": ${SQL_UserToRemove2}}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.002" level="INFO">${body} = {"UserId": 2347},{"UserId": 773}</msg>
<status status="PASS" endtime="20170405 10:18:54.002" starttime="20170405 10:18:54.002"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:54.002" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20170405 10:18:54.002" starttime="20170405 10:18:54.002"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:54.018" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:54.034" level="INFO">Delete Request using : alias=http, uri=/talentpools/6811/candidates, data="{\"UserId\": 2347},{\"UserId\": 773}",                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa052-auto-smp-api', u'x-csod-user-id': u'01336', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:54.034" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.034" starttime="20170405 10:18:54.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.034" level="INFO">&lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.034" starttime="20170405 10:18:54.034"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>500</arg>
</arguments>
<msg timestamp="20170405 10:18:54.034" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.034" starttime="20170405 10:18:54.034"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:54.034" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20170405 10:18:54.034" starttime="20170405 10:18:54.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.034" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20170405 10:18:54.034" starttime="20170405 10:18:54.034"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20170405 10:18:54.049" level="INFO">${SQL_NUM} = 1</msg>
<status status="PASS" endtime="20170405 10:18:54.049" starttime="20170405 10:18:54.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.049" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:54.049" starttime="20170405 10:18:54.049"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.049" level="INFO">Set test message to:
The 1 matches with 1</msg>
<status status="PASS" endtime="20170405 10:18:54.049" starttime="20170405 10:18:54.049"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:54.049" starttime="20170405 10:18:54.049"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:54.049" starttime="20170405 10:18:54.049"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:54.065" starttime="20170405 10:18:54.049"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:54.065" starttime="20170405 10:18:53.940"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_DNEUser_SubSet

*Description:*
Verify failure when subset of removed users do not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24470</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:54.065" critical="yes" starttime="20170405 10:18:53.877">The 1 matches with 1</status>
</test>
<test id="s1-s1-t69" name="DELETE-API_TP_Delete_Access_DoesNotExist">
<kw name="REST_NOAUTH_NonExistentUser" library="SMP_Keywords">
<doc>*REST_NOAUTH_NonExistentUser:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:54.081" starttime="20170405 10:18:54.065"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:54.081" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20170405 10:18:54.081" starttime="20170405 10:18:54.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.081" level="INFO">2347</msg>
<status status="PASS" endtime="20170405 10:18:54.081" starttime="20170405 10:18:54.081"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT 1</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:54.081" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:54.081" starttime="20170405 10:18:54.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.081" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20170405 10:18:54.081" starttime="20170405 10:18:54.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.081" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:54.081" starttime="20170405 10:18:54.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.081" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:54.081" starttime="20170405 10:18:54.081"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:54.081" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:54.081" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:54.081" starttime="20170405 10:18:54.081"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.081" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:54.081" starttime="20170405 10:18:54.081"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.081" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20170405 10:18:54.081" starttime="20170405 10:18:54.081"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.081" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:54.081" starttime="20170405 10:18:54.081"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:54.081" starttime="20170405 10:18:54.065"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:54.096" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:54.096" starttime="20170405 10:18:54.081"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:54.096" starttime="20170405 10:18:54.096"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:54.096" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170405 10:18:54.096" starttime="20170405 10:18:54.096"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:54.096" level="INFO">${body} = {   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3"...</msg>
<status status="PASS" endtime="20170405 10:18:54.096" starttime="20170405 10:18:54.096"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:54.096" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:54.112" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_2347",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:54.112" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.112" starttime="20170405 10:18:54.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.112" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.112" starttime="20170405 10:18:54.112"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170405 10:18:54.112" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.112" starttime="20170405 10:18:54.112"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:54.112" starttime="20170405 10:18:54.081"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Delete_Access_DoesNotExist" library="SMP_Keywords">
<doc>*DELETE_Api_TP_Delete_Access_DoesNotExist:*</doc>
<arguments>
<arg>401</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:54.190" starttime="20170405 10:18:54.112"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:54.190" level="INFO">${SQL_TalentPoolId} = 10739</msg>
<status status="PASS" endtime="20170405 10:18:54.190" starttime="20170405 10:18:54.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.190" level="INFO">${SQL_TalentPoolId} = 10739</msg>
<status status="PASS" endtime="20170405 10:18:54.190" starttime="20170405 10:18:54.190"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:54.190" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa052-auto-smp-api | x-csod-user-id=02347 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20170405 10:18:54.190" starttime="20170405 10:18:54.190"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:54.190" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:54.190" starttime="20170405 10:18:54.190"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT(*) FROM ou WHERE ou.type_id = 131072</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:54.206" level="INFO">${SQL_CandidateCountBefore} = 7982</msg>
<status status="PASS" endtime="20170405 10:18:54.206" starttime="20170405 10:18:54.190"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:54.206" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:54.221" level="INFO">Delete Request using : alias=http, uri=/talentpools/10739, data={   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_2347",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa052-auto-smp-api', u'x-csod-user-id': u'02347', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:54.221" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.221" starttime="20170405 10:18:54.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.237" level="INFO">&lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.237" starttime="20170405 10:18:54.221"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${RESPONSE_POST}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.237" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.237" starttime="20170405 10:18:54.237"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT(*) FROM ou WHERE ou.type_id = 131072</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:54.237" level="INFO">${SQL_CandidateCountAfter} = 7982</msg>
<status status="PASS" endtime="20170405 10:18:54.237" starttime="20170405 10:18:54.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.237" level="INFO">${SQL_CandidateCountAfter} = 7982</msg>
<status status="PASS" endtime="20170405 10:18:54.237" starttime="20170405 10:18:54.237"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20170405 10:18:54.237" level="INFO">${SQL_NUM} = 7982</msg>
<status status="PASS" endtime="20170405 10:18:54.237" starttime="20170405 10:18:54.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.237" level="INFO">7982</msg>
<status status="PASS" endtime="20170405 10:18:54.237" starttime="20170405 10:18:54.237"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.252" level="INFO">Set test message to:
The 7982 matches with 7982</msg>
<status status="PASS" endtime="20170405 10:18:54.252" starttime="20170405 10:18:54.252"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:54.252" starttime="20170405 10:18:54.237"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:54.252" starttime="20170405 10:18:54.237"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:54.252" starttime="20170405 10:18:54.252"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:54.252" starttime="20170405 10:18:54.112"></status>
</kw>
<doc>*Name:*
Api_TP_Delete_Access_DoesNotExist

*Description:*
Access: Verify error when user id is not in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24471</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:54.252" critical="yes" starttime="20170405 10:18:54.065">The 7982 matches with 7982</status>
</test>
<test id="s1-s1-t70" name="DELETE-API_TP_Delete_Access_NotOwner">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:54.268" starttime="20170405 10:18:54.252"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:54.299" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170405 10:18:54.299" starttime="20170405 10:18:54.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.299" level="INFO">514</msg>
<status status="PASS" endtime="20170405 10:18:54.299" starttime="20170405 10:18:54.299"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:54.299" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:54.299" starttime="20170405 10:18:54.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.299" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170405 10:18:54.299" starttime="20170405 10:18:54.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.299" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:54.299" starttime="20170405 10:18:54.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.299" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:54.299" starttime="20170405 10:18:54.299"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:54.299" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:54.299" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:54.299" starttime="20170405 10:18:54.299"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.299" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:54.299" starttime="20170405 10:18:54.299"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.299" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20170405 10:18:54.299" starttime="20170405 10:18:54.299"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.299" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:54.299" starttime="20170405 10:18:54.299"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:54.299" starttime="20170405 10:18:54.252"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:54.315" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:54.331" starttime="20170405 10:18:54.315"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:54.331" starttime="20170405 10:18:54.331"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:54.331" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170405 10:18:54.331" starttime="20170405 10:18:54.331"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:54.338" level="INFO">${body} = {   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3":...</msg>
<status status="PASS" endtime="20170405 10:18:54.338" starttime="20170405 10:18:54.331"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:54.338" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:54.349" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:54.349" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.349" starttime="20170405 10:18:54.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.349" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.349" starttime="20170405 10:18:54.349"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170405 10:18:54.349" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.349" starttime="20170405 10:18:54.349"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:54.349" starttime="20170405 10:18:54.299"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Delete_Access_NotOwner" library="SMP_Keywords">
<doc>*DELETE_Api_TP_Delete_Access_NotOwner:*</doc>
<arguments>
<arg>401</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:54.365" starttime="20170405 10:18:54.349"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE owner_id &lt;&gt; ${SQL_GET_USERID} AND type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:54.382" level="INFO">${SQL_TalentPoolId} = 7102</msg>
<status status="PASS" endtime="20170405 10:18:54.382" starttime="20170405 10:18:54.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.384" level="INFO">${SQL_TalentPoolId} = 7102</msg>
<status status="PASS" endtime="20170405 10:18:54.384" starttime="20170405 10:18:54.382"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:54.384" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa052-auto-smp-api | x-csod-user-id=0514 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20170405 10:18:54.384" starttime="20170405 10:18:54.384"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:54.384" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:54.384" starttime="20170405 10:18:54.384"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT(*) FROM ou WHERE ou.type_id = 131072</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:54.384" level="INFO">${SQL_CandidateCountBefore} = 7982</msg>
<status status="PASS" endtime="20170405 10:18:54.384" starttime="20170405 10:18:54.384"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:54.384" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:54.416" level="INFO">Delete Request using : alias=http, uri=/talentpools/7102, data={   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa052-auto-smp-api', u'x-csod-user-id': u'0514', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:54.416" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.416" starttime="20170405 10:18:54.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.431" level="INFO">&lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.431" starttime="20170405 10:18:54.416"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${RESPONSE_POST}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.431" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.431" starttime="20170405 10:18:54.431"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT(*) FROM ou WHERE ou.type_id = 131072</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:54.431" level="INFO">${SQL_CandidateCountAfter} = 7982</msg>
<status status="PASS" endtime="20170405 10:18:54.431" starttime="20170405 10:18:54.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.431" level="INFO">${SQL_CandidateCountAfter} = 7982</msg>
<status status="PASS" endtime="20170405 10:18:54.431" starttime="20170405 10:18:54.431"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20170405 10:18:54.431" level="INFO">${SQL_NUM} = 7982</msg>
<status status="PASS" endtime="20170405 10:18:54.431" starttime="20170405 10:18:54.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.431" level="INFO">7982</msg>
<status status="PASS" endtime="20170405 10:18:54.431" starttime="20170405 10:18:54.431"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.431" level="INFO">Set test message to:
The 7982 matches with 7982</msg>
<status status="PASS" endtime="20170405 10:18:54.431" starttime="20170405 10:18:54.431"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:54.431" starttime="20170405 10:18:54.431"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:54.431" starttime="20170405 10:18:54.431"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:54.447" starttime="20170405 10:18:54.431"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:54.447" starttime="20170405 10:18:54.349"></status>
</kw>
<doc>*Name:*
Api_TP_Delete_Access_NotOwner

*Description:*
Access: Verify error when user id is not for talent pool owner

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24472</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:54.447" critical="yes" starttime="20170405 10:18:54.252">The 7982 matches with 7982</status>
</test>
<test id="s1-s1-t71" name="DELETE-API_TP_Del_Input_TPId_DoesNotExist">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:54.466" starttime="20170405 10:18:54.447"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:54.486" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170405 10:18:54.486" starttime="20170405 10:18:54.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.486" level="INFO">415</msg>
<status status="PASS" endtime="20170405 10:18:54.486" starttime="20170405 10:18:54.486"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:54.490" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:54.490" starttime="20170405 10:18:54.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.490" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170405 10:18:54.490" starttime="20170405 10:18:54.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.490" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:54.490" starttime="20170405 10:18:54.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.490" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:54.490" starttime="20170405 10:18:54.490"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:54.494" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:54.494" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:54.494" starttime="20170405 10:18:54.490"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.494" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:54.494" starttime="20170405 10:18:54.494"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.494" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170405 10:18:54.494" starttime="20170405 10:18:54.494"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.494" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:54.494" starttime="20170405 10:18:54.494"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:54.494" starttime="20170405 10:18:54.447"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:54.498" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:54.498" starttime="20170405 10:18:54.498"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:54.498" starttime="20170405 10:18:54.498"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:54.498" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170405 10:18:54.498" starttime="20170405 10:18:54.498"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:54.502" level="INFO">${body} = {   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3":...</msg>
<status status="PASS" endtime="20170405 10:18:54.502" starttime="20170405 10:18:54.498"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:54.506" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:54.506" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:54.506" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.506" starttime="20170405 10:18:54.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.506" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.506" starttime="20170405 10:18:54.506"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170405 10:18:54.506" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.506" starttime="20170405 10:18:54.506"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:54.506" starttime="20170405 10:18:54.494"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Delete_Input_TPId_DoesNotExist" library="SMP_Keywords">
<doc>*DELETE_Api_TP_Delete_Access_NotOwner:*</doc>
<arguments>
<arg>404</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:54.537" starttime="20170405 10:18:54.521"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(ou_id)+1000 FROM ou</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:54.537" level="INFO">${SQL_TalentPoolId} = 13909</msg>
<status status="PASS" endtime="20170405 10:18:54.537" starttime="20170405 10:18:54.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.537" level="INFO">${SQL_TalentPoolId} = 13909</msg>
<status status="PASS" endtime="20170405 10:18:54.537" starttime="20170405 10:18:54.537"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:54.537" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa052-auto-smp-api | x-csod-user-id=0415 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20170405 10:18:54.537" starttime="20170405 10:18:54.537"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:54.537" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:54.537" starttime="20170405 10:18:54.537"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT(*) FROM ou WHERE ou.type_id = 131072</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170405 10:18:54.553" level="INFO">${SQL_CandidateCountBefore} = 7982</msg>
<status status="PASS" endtime="20170405 10:18:54.553" starttime="20170405 10:18:54.537"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:54.553" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:54.568" level="INFO">Delete Request using : alias=http, uri=/talentpools/13909, data={   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa052-auto-smp-api', u'x-csod-user-id': u'0415', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:54.568" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.568" starttime="20170405 10:18:54.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.568" level="INFO">&lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.568" starttime="20170405 10:18:54.568"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${RESPONSE_POST}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.584" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.584" starttime="20170405 10:18:54.568"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT(*) FROM ou WHERE ou.type_id = 131072</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20170405 10:18:54.584" level="INFO">${SQL_CandidateCountAfter} = 7982</msg>
<status status="PASS" endtime="20170405 10:18:54.584" starttime="20170405 10:18:54.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.584" level="INFO">${SQL_CandidateCountAfter} = 7982</msg>
<status status="PASS" endtime="20170405 10:18:54.584" starttime="20170405 10:18:54.584"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20170405 10:18:54.584" level="INFO">${SQL_NUM} = 7982</msg>
<status status="PASS" endtime="20170405 10:18:54.584" starttime="20170405 10:18:54.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.584" level="INFO">7982</msg>
<status status="PASS" endtime="20170405 10:18:54.584" starttime="20170405 10:18:54.584"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.600" level="INFO">Set test message to:
The 7982 matches with 7982</msg>
<status status="PASS" endtime="20170405 10:18:54.600" starttime="20170405 10:18:54.600"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:54.600" starttime="20170405 10:18:54.584"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:54.600" starttime="20170405 10:18:54.584"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:54.600" starttime="20170405 10:18:54.600"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:54.600" starttime="20170405 10:18:54.521"></status>
</kw>
<doc>*Name:*
Api_TP_Del_Input_TPId_DoesNotExist

*Description:*
Input: Verify error when talent pool id is not in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24473</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:54.600" critical="yes" starttime="20170405 10:18:54.447">The 7982 matches with 7982</status>
</test>
<test id="s1-s1-t72" name="DELETE-API_TPC_Remove_BaseCase_InputVsOutput_Value">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared_With_Candidates" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:54.615" starttime="20170405 10:18:54.600"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072 AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1)) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user WHERE ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1))) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:54.771" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170405 10:18:54.771" starttime="20170405 10:18:54.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.771" level="INFO">1338</msg>
<status status="PASS" endtime="20170405 10:18:54.771" starttime="20170405 10:18:54.771"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:54.771" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:54.771" starttime="20170405 10:18:54.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.771" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170405 10:18:54.771" starttime="20170405 10:18:54.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.787" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:54.787" starttime="20170405 10:18:54.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.787" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:54.787" starttime="20170405 10:18:54.787"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:54.787" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:54.787" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:54.787" starttime="20170405 10:18:54.787"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.787" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:54.787" starttime="20170405 10:18:54.787"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.787" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20170405 10:18:54.787" starttime="20170405 10:18:54.787"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.787" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:54.787" starttime="20170405 10:18:54.787"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:54.787" starttime="20170405 10:18:54.600"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:54.787" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:54.787" starttime="20170405 10:18:54.787"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:54.787" starttime="20170405 10:18:54.787"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:54.787" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170405 10:18:54.787" starttime="20170405 10:18:54.787"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:54.787" level="INFO">${body} = {   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3"...</msg>
<status status="PASS" endtime="20170405 10:18:54.787" starttime="20170405 10:18:54.787"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:54.787" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:54.803" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:54.803" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.803" starttime="20170405 10:18:54.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.803" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.803" starttime="20170405 10:18:54.803"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170405 10:18:54.803" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.803" starttime="20170405 10:18:54.803"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:54.803" starttime="20170405 10:18:54.787"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_2" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:54.818" starttime="20170405 10:18:54.803"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170405 10:18:54.834" level="INFO">${SQL_TalentPoolId} = 2416</msg>
<status status="PASS" endtime="20170405 10:18:54.834" starttime="20170405 10:18:54.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.834" level="INFO">${SQL_TalentPoolId} = 2416</msg>
<status status="PASS" endtime="20170405 10:18:54.834" starttime="20170405 10:18:54.834"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_user.user_id FROM ou_user LEFT JOIN users ON ou_user.user_id = users.user_id WHERE users.user_id &gt; 0 AND ou_user.ou_id = ${SQL_TalentPoolId} AND users.user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND users.status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20170405 10:18:54.850" level="INFO">${SQL_UserToRemove1} = 584</msg>
<status status="PASS" endtime="20170405 10:18:54.850" starttime="20170405 10:18:54.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.850" level="INFO">${SQL_UserToRemove1} = 584</msg>
<status status="PASS" endtime="20170405 10:18:54.850" starttime="20170405 10:18:54.850"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170405 10:18:54.865" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa052-auto-smp-api | x-csod-user-id=01338 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20170405 10:18:54.865" starttime="20170405 10:18:54.850"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:54.865" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:54.865" starttime="20170405 10:18:54.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{\"UserId\": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20170405 10:18:54.865" level="INFO">${body} = [{"UserId": 584}]</msg>
<status status="PASS" endtime="20170405 10:18:54.865" starttime="20170405 10:18:54.865"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:54.865" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170405 10:18:54.881" level="INFO">Delete Request using : alias=http, uri=/talentpools/2416/candidates, data=[{"UserId": 584}],                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa052-auto-smp-api', u'x-csod-user-id': u'01338', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:54.881" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.881" starttime="20170405 10:18:54.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.881" level="INFO">&lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:54.881" starttime="20170405 10:18:54.881"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${RESPONSE_POST}</arg>
</arguments>
<msg timestamp="20170405 10:18:54.881" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170405 10:18:54.896" level="FAIL">401 != 200</msg>
<status status="FAIL" endtime="20170405 10:18:54.896" starttime="20170405 10:18:54.881"></status>
</kw>
<status status="FAIL" endtime="20170405 10:18:54.896" starttime="20170405 10:18:54.803"></status>
</kw>
<doc>*Name:*
API_TPC_Add_BC_InputVsOutput_Value

*Description:*
Verify successful input user ends up in output

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24474</tag>
</tags>
<status status="FAIL" endtime="20170405 10:18:54.896" critical="yes" starttime="20170405 10:18:54.600">401 != 200</status>
</test>
<doc>*INSTRUCTIONS: To Run this dynamically add the following line to the Run tab arguments text box area.*



*To Use with TestRail use the following:*

*Patch*
-d TestResults -v RNOAUTH_HOST:QA01 --listener TestRailListener:2386
-d TestResults -v RNOAUTH_HOST:QA01 -v api_global_parameter_profile:qa01  --listener TestRailListener:2386

*Release*
-d TestResults -v RNOAUTH_HOST:QA052 --listener TestRailListener:479
-d TestResults -v RNOAUTH_HOST:QA052_RL -v api_global_parameter_profile:qa052  --listener TestRailListener:479

*Next Release*
-d TestResults -v RNOAUTH_HOST:QA03 --listener TestRailListener:479</doc>
<status status="FAIL" endtime="20170405 10:18:54.896" starttime="20170405 10:18:32.636"></status>
</suite>
<suite source="C:\Users\gfung\.jenkins\workspace\SMP-API-Talent_Pool_QA052\COMP\TestSuites\SMP-Test.robot" id="s1-s2" name="SMP-Test">
<test id="s1-s2-t1" name="Delete Request With URL Params">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20170405 10:18:54.943" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20170405 10:18:54.943" starttime="20170405 10:18:54.943"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>key=value</arg>
<arg>key2=value2</arg>
</arguments>
<assign>
<var>&amp;{params}</var>
</assign>
<msg timestamp="20170405 10:18:54.943" level="INFO">&amp;{params} = { key=value | key2=value2 }</msg>
<status status="PASS" endtime="20170405 10:18:54.943" starttime="20170405 10:18:54.943"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>httpbin</arg>
<arg>/delete</arg>
<arg>${params}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:54.959" level="INFO">Starting new HTTP connection (1): httpbin.org</msg>
<msg timestamp="20170405 10:18:55.079" level="INFO">Delete Request using : alias=httpbin, uri=/delete, data=key2=value2&amp;key=value,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:55.079" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:55.079" starttime="20170405 10:18:54.943"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170405 10:18:55.079" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:55.079" starttime="20170405 10:18:55.079"></status>
</kw>
<tags>
<tag>delete</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:55.079" critical="yes" starttime="20170405 10:18:54.943"></status>
</test>
<test id="s1-s2-t2" name="Delete Request With No Data">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:55.116" starttime="20170405 10:18:55.095"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170405 10:18:55.132" level="INFO">${SQL_GET_USERID} = 58</msg>
<status status="PASS" endtime="20170405 10:18:55.132" starttime="20170405 10:18:55.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:55.132" level="INFO">58</msg>
<status status="PASS" endtime="20170405 10:18:55.132" starttime="20170405 10:18:55.132"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170405 10:18:55.132" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:55.132" starttime="20170405 10:18:55.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:55.132" level="INFO">${SQL_GET_USERID} = 58</msg>
<status status="PASS" endtime="20170405 10:18:55.132" starttime="20170405 10:18:55.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:55.132" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170405 10:18:55.132" starttime="20170405 10:18:55.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:55.132" level="INFO">1</msg>
<status status="PASS" endtime="20170405 10:18:55.132" starttime="20170405 10:18:55.132"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170405 10:18:55.132" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170405 10:18:55.132" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170405 10:18:55.132" starttime="20170405 10:18:55.132"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170405 10:18:55.132" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170405 10:18:55.132" starttime="20170405 10:18:55.132"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170405 10:18:55.132" level="INFO">Set request header "X-USERID" to "58"</msg>
<status status="PASS" endtime="20170405 10:18:55.132" starttime="20170405 10:18:55.132"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170405 10:18:55.132" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170405 10:18:55.132" starttime="20170405 10:18:55.132"></status>
</kw>
<status status="PASS" endtime="20170405 10:18:55.132" starttime="20170405 10:18:55.095"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>REST_AuthToken</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:55.132" starttime="20170405 10:18:55.132"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Request Header</arg>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:55.148" starttime="20170405 10:18:55.148"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>http://cornerstone-auth-api/v1</arg>
</arguments>
<msg timestamp="20170405 10:18:55.148" level="INFO">Creating Session using : alias=http, url=http://cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20170405 10:18:55.148" starttime="20170405 10:18:55.148"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{dataheader}</var>
</assign>
<msg timestamp="20170405 10:18:55.148" level="INFO">&amp;{dataheader} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170405 10:18:55.148" starttime="20170405 10:18:55.148"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>body={ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<assign>
<var>&amp;{headersauth}</var>
</assign>
<msg timestamp="20170405 10:18:55.148" level="INFO">&amp;{headersauth} = { body={   "UserId": 58,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_I...</msg>
<status status="PASS" endtime="20170405 10:18:55.148" starttime="20170405 10:18:55.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${headersauth}</arg>
</arguments>
<msg timestamp="20170405 10:18:55.148" level="INFO">{u'body': u'{   "UserId": 58,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_58",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }'}</msg>
<status status="PASS" endtime="20170405 10:18:55.148" starttime="20170405 10:18:55.148"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/put</arg>
<arg>data=${dataheader}</arg>
<arg>headers=${headersauth}</arg>
</arguments>
<assign>
<var>${respheader}</var>
</assign>
<msg timestamp="20170405 10:18:55.148" level="INFO">Starting new HTTP connection (1): cornerstone-auth-api</msg>
<msg timestamp="20170405 10:18:56.005" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None)) after connection broken by 'NewConnectionError('&lt;requests.packages.urllib3.connection.HTTPConnection object at 0x03B94CB0&gt;: Failed to establish a new connection: [Errno 11001] getaddrinfo failed',)': /v1/put</msg>
<msg timestamp="20170405 10:18:56.005" level="INFO">Starting new HTTP connection (2): cornerstone-auth-api</msg>
<msg timestamp="20170405 10:18:57.044" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None)) after connection broken by 'NewConnectionError('&lt;requests.packages.urllib3.connection.HTTPConnection object at 0x0377F190&gt;: Failed to establish a new connection: [Errno 11001] getaddrinfo failed',)': /v1/put</msg>
<msg timestamp="20170405 10:18:57.044" level="INFO">Starting new HTTP connection (3): cornerstone-auth-api</msg>
<msg timestamp="20170405 10:18:58.285" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None)) after connection broken by 'NewConnectionError('&lt;requests.packages.urllib3.connection.HTTPConnection object at 0x03B50B90&gt;: Failed to establish a new connection: [Errno 11001] getaddrinfo failed',)': /v1/put</msg>
<msg timestamp="20170405 10:18:58.285" level="INFO">Starting new HTTP connection (4): cornerstone-auth-api</msg>
<msg timestamp="20170405 10:18:59.119" level="FAIL">ConnectionError: HTTPConnectionPool(host='cornerstone-auth-api', port=80): Max retries exceeded with url: /v1/put (Caused by NewConnectionError('&lt;requests.packages.urllib3.connection.HTTPConnection object at 0x0378EAB0&gt;: Failed to establish a new connection: [Errno 11001] getaddrinfo failed',))</msg>
<status status="FAIL" endtime="20170405 10:18:59.119" starttime="20170405 10:18:55.148"></status>
</kw>
<tags>
<tag>delete</tag>
</tags>
<status status="FAIL" endtime="20170405 10:18:59.119" critical="yes" starttime="20170405 10:18:55.079">ConnectionError: HTTPConnectionPool(host='cornerstone-auth-api', port=80): Max retries exceeded with url: /v1/put (Caused by NewConnectionError('&lt;requests.packages.urllib3.connection.HTTPConnection object at 0x0378EAB0&gt;: Failed to establish a new connection: [Errno 11001] getaddrinfo failed',))</status>
</test>
<test id="s1-s2-t3" name="Delete Request With Data">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:59.119" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:59.119" starttime="20170405 10:18:59.119"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>name=bulkan</arg>
<arg>surname=evcimen</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20170405 10:18:59.119" level="INFO">&amp;{data} = { name=bulkan | surname=evcimen }</msg>
<status status="PASS" endtime="20170405 10:18:59.119" starttime="20170405 10:18:59.119"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>httpbin</arg>
<arg>/delete</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:59.119" level="INFO">Starting new HTTP connection (1): httpbin.org</msg>
<msg timestamp="20170405 10:18:59.276" level="INFO">Delete Request using : alias=httpbin, uri=/delete, data=surname=evcimen&amp;name=bulkan,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20170405 10:18:59.276" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170405 10:18:59.276" starttime="20170405 10:18:59.119"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170405 10:18:59.276" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:18:59.276" starttime="20170405 10:18:59.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<msg timestamp="20170405 10:18:59.276" level="INFO">{
  "args": {}, 
  "data": "surname=evcimen&amp;name=bulkan", 
  "files": {}, 
  "form": {}, 
  "headers": {
    "Accept": "*/*", 
    "Accept-Encoding": "gzip, deflate", 
    "Connection": "close", 
    "Content-Length": "27", 
    "Host": "httpbin.org", 
    "User-Agent": "python-requests/2.11.1"
  }, 
  "json": null, 
  "origin": "208.185.229.41", 
  "url": "http://httpbin.org/delete"
}
</msg>
<status status="PASS" endtime="20170405 10:18:59.276" starttime="20170405 10:18:59.276"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Dictionary Should Contain Value</arg>
<arg>${resp.json()['data']}</arg>
<arg>bulkan</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:59.276" starttime="20170405 10:18:59.276"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Dictionary Should Contain Value</arg>
<arg>${resp.json()['data']}</arg>
<arg>evcimen</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:59.276" starttime="20170405 10:18:59.276"></status>
</kw>
<tags>
<tag>delete</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:59.276" critical="yes" starttime="20170405 10:18:59.119"></status>
</test>
<test id="s1-s2-t4" name="Put Requests">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://cornerstone-auth-api/v1</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170405 10:18:59.276" level="INFO">Creating Session using : alias=httpbin, url=http://cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170405 10:18:59.276" starttime="20170405 10:18:59.276"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${data}</arg>
<arg>{ \ \ \"UserId\": 1336, \ \ \"CorpName\": \"QA052-AUTO-SMP_API\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"QA052-AUTO-SMP-API_1336\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170405 10:18:59.276" level="INFO">${data} = {   "UserId": 1336,   "CorpName": "QA052-AUTO-SMP_API",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3"...</msg>
<status status="PASS" endtime="20170405 10:18:59.276" starttime="20170405 10:18:59.276"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${resp}=</arg>
<arg>Put Request</arg>
<arg>httpbin</arg>
<arg>/put</arg>
<arg>data=${data}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:59.276" starttime="20170405 10:18:59.276"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>&amp;{data}=</arg>
<arg>Create Dictionary</arg>
<arg>body={ \ \ \"UserId\": 1336, \ \ \"CorpName\": \"QA052-AUTO-SMP_API\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"QA052-AUTO-SMP-API_1336\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:59.276" starttime="20170405 10:18:59.276"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Log</arg>
<arg>${data}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:59.276" starttime="20170405 10:18:59.276"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>&amp;{headers}=</arg>
<arg>Create Dictionary</arg>
<arg>Content-Type=application/json</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:59.276" starttime="20170405 10:18:59.276"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${resp}=</arg>
<arg>Put Request</arg>
<arg>httpbin</arg>
<arg>http://cornerstone-auth-api/v1</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:59.291" starttime="20170405 10:18:59.276"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Dictionary Should Contain Value</arg>
<arg>${resp.json()['form']}</arg>
<arg>bulkan</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:59.291" starttime="20170405 10:18:59.291"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Dictionary Should Contain Value</arg>
<arg>${resp.json()['form']}</arg>
<arg>evcimen</arg>
</arguments>
<status status="PASS" endtime="20170405 10:18:59.291" starttime="20170405 10:18:59.291"></status>
</kw>
<tags>
<tag>put</tag>
</tags>
<status status="PASS" endtime="20170405 10:18:59.291" critical="yes" starttime="20170405 10:18:59.276"></status>
</test>
<test id="s1-s2-t5" name="Put Request With No Dictionary">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>httpbin</arg>
<arg>http://httpbin.org</arg>
</arguments>
<msg timestamp="20170405 10:18:59.291" level="INFO">Creating Session using : alias=httpbin, url=http://httpbin.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20170405 10:18:59.291" starttime="20170405 10:18:59.291"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${data}</arg>
<arg>some content</arg>
</arguments>
<msg timestamp="20170405 10:18:59.291" level="INFO">${data} = some content</msg>
<status status="PASS" endtime="20170405 10:18:59.291" starttime="20170405 10:18:59.291"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>httpbin</arg>
<arg>/put</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170405 10:18:59.291" level="INFO">Starting new HTTP connection (1): httpbin.org</msg>
<msg timestamp="20170405 10:19:00.537" level="INFO">Put Request using : alias=httpbin, uri=/put, data=some content,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20170405 10:19:00.537" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170405 10:19:00.537" starttime="20170405 10:18:59.291"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170405 10:19:00.537" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170405 10:19:00.537" starttime="20170405 10:19:00.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp.text}</arg>
<arg>${data}</arg>
</arguments>
<status status="PASS" endtime="20170405 10:19:00.537" starttime="20170405 10:19:00.537"></status>
</kw>
<tags>
<tag>put</tag>
</tags>
<status status="PASS" endtime="20170405 10:19:00.537" critical="yes" starttime="20170405 10:18:59.291"></status>
</test>
<status status="FAIL" endtime="20170405 10:19:00.537" starttime="20170405 10:18:54.912"></status>
</suite>
<status status="FAIL" endtime="20170405 10:19:00.537" starttime="20170405 10:18:32.620"></status>
</suite>
<statistics>
<total>
<stat fail="3" pass="74">Critical Tests</stat>
<stat fail="3" pass="74">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="6">ASCII</stat>
<stat fail="2" pass="17">DELETE</stat>
<stat fail="0" pass="16">GET</stat>
<stat fail="0" pass="1">JSONVFY</stat>
<stat fail="0" pass="2">NEGATIVE</stat>
<stat fail="0" pass="5">NEGATIVETEST</stat>
<stat fail="1" pass="30">POST</stat>
<stat fail="0" pass="11">PUT</stat>
<stat fail="0" pass="1">testrailid=24403</stat>
<stat fail="0" pass="1">testrailid=24404</stat>
<stat fail="0" pass="1">testrailid=24405</stat>
<stat fail="0" pass="1">testrailid=24406</stat>
<stat fail="0" pass="1">testrailid=24407</stat>
<stat fail="0" pass="1">testrailid=24408</stat>
<stat fail="0" pass="1">testrailid=24409</stat>
<stat fail="0" pass="1">testrailid=24410</stat>
<stat fail="0" pass="1">testrailid=24411</stat>
<stat fail="0" pass="1">testrailid=24412</stat>
<stat fail="0" pass="1">testrailid=24413</stat>
<stat fail="0" pass="1">testrailid=24414</stat>
<stat fail="0" pass="1">testrailid=24415</stat>
<stat fail="0" pass="1">testrailid=24417</stat>
<stat fail="0" pass="1">testrailid=24418</stat>
<stat fail="0" pass="1">testrailid=24419</stat>
<stat fail="0" pass="1">testrailid=24420</stat>
<stat fail="0" pass="1">testrailid=24421</stat>
<stat fail="0" pass="1">testrailid=24422</stat>
<stat fail="0" pass="1">testrailid=24423</stat>
<stat fail="0" pass="1">testrailid=24424</stat>
<stat fail="0" pass="1">testrailid=24425</stat>
<stat fail="0" pass="1">testrailid=24426</stat>
<stat fail="0" pass="1">testrailid=24427</stat>
<stat fail="0" pass="1">testrailid=24428</stat>
<stat fail="0" pass="1">testrailid=24429</stat>
<stat fail="0" pass="1">testrailid=24430</stat>
<stat fail="0" pass="1">testrailid=24431</stat>
<stat fail="0" pass="1">testrailid=24432</stat>
<stat fail="0" pass="1">testrailid=24433</stat>
<stat fail="0" pass="1">testrailid=24434</stat>
<stat fail="0" pass="1">testrailid=24435</stat>
<stat fail="0" pass="1">testrailid=24436</stat>
<stat fail="0" pass="1">testrailid=24437</stat>
<stat fail="0" pass="1">testrailid=24438</stat>
<stat fail="0" pass="1">testrailid=24439</stat>
<stat fail="0" pass="1">testrailid=24440</stat>
<stat fail="0" pass="1">testrailid=24441</stat>
<stat fail="0" pass="1">testrailid=24442</stat>
<stat fail="0" pass="1">testrailid=24443</stat>
<stat fail="0" pass="1">testrailid=24444</stat>
<stat fail="1" pass="0">testrailid=24445</stat>
<stat fail="0" pass="1">testrailid=24446</stat>
<stat fail="0" pass="1">testrailid=24447</stat>
<stat fail="0" pass="1">testrailid=24448</stat>
<stat fail="0" pass="1">testrailid=24449</stat>
<stat fail="0" pass="1">testrailid=24450</stat>
<stat fail="0" pass="1">testrailid=24451</stat>
<stat fail="0" pass="1">testrailid=24452</stat>
<stat fail="0" pass="1">testrailid=24453</stat>
<stat fail="0" pass="1">testrailid=24454</stat>
<stat fail="0" pass="1">testrailid=24455</stat>
<stat fail="0" pass="1">testrailid=24456</stat>
<stat fail="0" pass="1">testrailid=24457</stat>
<stat fail="0" pass="1">testrailid=24458</stat>
<stat fail="0" pass="1">testrailid=24459</stat>
<stat fail="0" pass="1">testrailid=24460</stat>
<stat fail="0" pass="1">testrailid=24461</stat>
<stat fail="0" pass="1">testrailid=24462</stat>
<stat fail="0" pass="1">testrailid=24463</stat>
<stat fail="0" pass="1">testrailid=24464</stat>
<stat fail="0" pass="1">testrailid=24465</stat>
<stat fail="0" pass="1">testrailid=24466</stat>
<stat fail="0" pass="1">testrailid=24467</stat>
<stat fail="0" pass="1">testrailid=24468</stat>
<stat fail="0" pass="1">testrailid=24469</stat>
<stat fail="0" pass="1">testrailid=24470</stat>
<stat fail="0" pass="1">testrailid=24471</stat>
<stat fail="0" pass="1">testrailid=24472</stat>
<stat fail="0" pass="1">testrailid=24473</stat>
<stat fail="1" pass="0">testrailid=24474</stat>
<stat fail="0" pass="1">testrailid=24475</stat>
</tag>
<suite>
<stat fail="3" id="s1" name="TestSuites" pass="74">TestSuites</stat>
<stat fail="2" id="s1-s1" name="SMP-API-Talent Pool" pass="70">TestSuites.SMP-API-Talent Pool</stat>
<stat fail="1" id="s1-s2" name="SMP-Test" pass="4">TestSuites.SMP-Test</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20170405 10:18:56.005" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None)) after connection broken by 'NewConnectionError('&lt;requests.packages.urllib3.connection.HTTPConnection object at 0x03B94CB0&gt;: Failed to establish a new connection: [Errno 11001] getaddrinfo failed',)': /v1/put</msg>
<msg timestamp="20170405 10:18:57.044" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None)) after connection broken by 'NewConnectionError('&lt;requests.packages.urllib3.connection.HTTPConnection object at 0x0377F190&gt;: Failed to establish a new connection: [Errno 11001] getaddrinfo failed',)': /v1/put</msg>
<msg timestamp="20170405 10:18:58.285" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None)) after connection broken by 'NewConnectionError('&lt;requests.packages.urllib3.connection.HTTPConnection object at 0x03B50B90&gt;: Failed to establish a new connection: [Errno 11001] getaddrinfo failed',)': /v1/put</msg>
</errors>
</robot>
