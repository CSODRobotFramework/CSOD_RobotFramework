<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20161122 00:09:14.891" generator="Robot 3.0 (Python 2.7.12 on win32)">
<suite source="C:\Users\gfung\.jenkins\workspace\SMP-API-Talent_Pool\COMP\TestSuites" id="s1" name="TestSuites">
<suite source="C:\Users\gfung\.jenkins\workspace\SMP-API-Talent_Pool\COMP\TestSuites\SMP-API-Talent_Pool.robot" id="s1-s1" name="SMP-API-Talent Pool">
<test id="s1-s1-t1" name="POST-API_Talent_Pool_Create_Succ_Return_Name">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:16.874" starttime="20161122 00:09:16.677"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:16.893" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:16.894" starttime="20161122 00:09:16.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:16.895" level="INFO">1336</msg>
<status status="PASS" endtime="20161122 00:09:16.895" starttime="20161122 00:09:16.894"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:16.905" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:16.905" starttime="20161122 00:09:16.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:16.906" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:16.906" starttime="20161122 00:09:16.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:16.907" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:16.907" starttime="20161122 00:09:16.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:16.908" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:16.908" starttime="20161122 00:09:16.908"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:16.909" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:16.909" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:16.909" starttime="20161122 00:09:16.908"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:16.910" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:16.910" starttime="20161122 00:09:16.909"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:16.910" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:16.910" starttime="20161122 00:09:16.910"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:16.911" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:16.911" starttime="20161122 00:09:16.911"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:16.911" starttime="20161122 00:09:16.676"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:16.913" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:16.913" starttime="20161122 00:09:16.912"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:16.916" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:16.917" starttime="20161122 00:09:16.913"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:16.959" starttime="20161122 00:09:16.917"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:16.960" starttime="20161122 00:09:16.960"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:16.961" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:16.961" starttime="20161122 00:09:16.960"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:16.961" starttime="20161122 00:09:16.961"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:16.962" starttime="20161122 00:09:16.912"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>InnocentName</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:16.969" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:16.969" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:16.969" starttime="20161122 00:09:16.968"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:16.969" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:16.970" starttime="20161122 00:09:16.969"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:16.970" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:16.970" starttime="20161122 00:09:16.970"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:16.971" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:16.971" starttime="20161122 00:09:16.971"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:16.972" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:16.972" starttime="20161122 00:09:16.971"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161122 00:09:16.973" level="INFO">Request body set to "{ "Title":"InnocentName"}".</msg>
<status status="PASS" endtime="20161122 00:09:16.973" starttime="20161122 00:09:16.972"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:17.552" starttime="20161122 00:09:16.973"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:17.554" starttime="20161122 00:09:17.553"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:17.554" level="INFO">${resBody} = {"TalentpoolId":5928,"Title":"InnocentName","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-22T08:09:17.273","ModifierId":...</msg>
<status status="PASS" endtime="20161122 00:09:17.555" starttime="20161122 00:09:17.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:17.555" level="INFO">{"TalentpoolId":5928,"Title":"InnocentName","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-22T08:09:17.273","ModifierId":1,"ModifiedDate":"2016-11-22T08:09:17.273","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:17.556" starttime="20161122 00:09:17.555"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:17.557" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'InnocentName', u'TalentpoolId': 5928, u'ModifiedDate': u'2016-11-22T08:09:17.273', u'CreatedDate': u'2016-11-22T08:09:17.273', u'Owner': {u'LastName': u'TalentPoolAuto...</msg>
<status status="PASS" endtime="20161122 00:09:17.557" starttime="20161122 00:09:17.556"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:17.558" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'InnocentName', u'CreatedDate': u'2016-11-22T08:09:17.273', u'ModifiedDate': u'2016-11-22T08:09:17.273', u'TalentpoolId': 5928, u'Owner': {u'LastName': u'TalentPoolAuto...</msg>
<status status="PASS" endtime="20161122 00:09:17.558" starttime="20161122 00:09:17.557"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:17.559" level="INFO">${keyValue} = InnocentName</msg>
<status status="PASS" endtime="20161122 00:09:17.559" starttime="20161122 00:09:17.559"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:17.560" starttime="20161122 00:09:16.968"></status>
</kw>
<doc>*Name:*
API_Talent_Pool_Create_Success_Return_Name.

*Description:*
verify new talent pool returns correct name

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:17.560" critical="yes" starttime="20161122 00:09:16.670"></status>
</test>
<test id="s1-s1-t2" name="POST-API_Talent_Pool_Success_NewEntryExist">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:17.698" starttime="20161122 00:09:17.564"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:17.734" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161122 00:09:17.734" starttime="20161122 00:09:17.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:17.736" level="INFO">48</msg>
<status status="PASS" endtime="20161122 00:09:17.736" starttime="20161122 00:09:17.734"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:17.751" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:17.751" starttime="20161122 00:09:17.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:17.752" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161122 00:09:17.752" starttime="20161122 00:09:17.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:17.753" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:17.753" starttime="20161122 00:09:17.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:17.754" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:17.754" starttime="20161122 00:09:17.753"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:17.754" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:17.755" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:17.755" starttime="20161122 00:09:17.754"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:17.755" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:17.755" starttime="20161122 00:09:17.755"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:17.756" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161122 00:09:17.756" starttime="20161122 00:09:17.756"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:17.757" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:17.757" starttime="20161122 00:09:17.756"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:17.757" starttime="20161122 00:09:17.564"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:17.759" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:17.759" starttime="20161122 00:09:17.758"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:17.762" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:17.762" starttime="20161122 00:09:17.759"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:17.805" starttime="20161122 00:09:17.762"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:17.806" starttime="20161122 00:09:17.806"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:17.807" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:17.807" starttime="20161122 00:09:17.806"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:17.807" starttime="20161122 00:09:17.807"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:17.807" starttime="20161122 00:09:17.758"></status>
</kw>
<kw name="POST_TalentPool_Create_Random_Title" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Title</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:17.856" starttime="20161122 00:09:17.814"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT CONVERT(varchar(255), NEWID())</arg>
</arguments>
<assign>
<var>${SQL_RandomName}</var>
</assign>
<msg timestamp="20161122 00:09:17.857" level="INFO">${SQL_RandomName} = BA6F5810-3D2A-45B7-8201-87B0FB689D57</msg>
<status status="PASS" endtime="20161122 00:09:17.857" starttime="20161122 00:09:17.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_RandomName}</arg>
</arguments>
<msg timestamp="20161122 00:09:17.858" level="INFO">${SQL_RandomName} = BA6F5810-3D2A-45B7-8201-87B0FB689D57</msg>
<status status="PASS" endtime="20161122 00:09:17.858" starttime="20161122 00:09:17.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_RandomName}</arg>
</arguments>
<msg timestamp="20161122 00:09:17.859" level="INFO">BA6F5810-3D2A-45B7-8201-87B0FB689D57</msg>
<status status="PASS" endtime="20161122 00:09:17.859" starttime="20161122 00:09:17.858"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:17.859" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:17.860" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:17.860" starttime="20161122 00:09:17.859"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:17.861" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:17.861" starttime="20161122 00:09:17.860"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:17.862" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161122 00:09:17.862" starttime="20161122 00:09:17.861"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:17.862" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:17.862" starttime="20161122 00:09:17.862"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:17.863" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:17.863" starttime="20161122 00:09:17.863"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SQL_RandomName}\"}</arg>
</arguments>
<msg timestamp="20161122 00:09:17.864" level="INFO">Request body set to "{ "Title":"BA6F5810-3D2A-45B7-8201-87B0FB689D57"}".</msg>
<status status="PASS" endtime="20161122 00:09:17.864" starttime="20161122 00:09:17.863"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:18.050" starttime="20161122 00:09:17.864"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:18.050" starttime="20161122 00:09:18.050"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 title FROM ou WHERE ou.type_id = 131072 AND title = '${SQL_RandomName}'</arg>
</arguments>
<assign>
<var>${SQL_GetTalentPoolIdByName}</var>
</assign>
<msg timestamp="20161122 00:09:18.078" level="INFO">${SQL_GetTalentPoolIdByName} = BA6F5810-3D2A-45B7-8201-87B0FB689D57</msg>
<status status="PASS" endtime="20161122 00:09:18.078" starttime="20161122 00:09:18.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GetTalentPoolIdByName}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.079" level="INFO">BA6F5810-3D2A-45B7-8201-87B0FB689D57</msg>
<status status="PASS" endtime="20161122 00:09:18.079" starttime="20161122 00:09:18.079"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${SQL_GetTalentPoolIdByName}==${SQL_RandomName}"</arg>
<arg>Set Test Message</arg>
<arg>Passed Random Name was matched with Database entry.</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>Passed Random Name was matched with Database entry.</arg>
</arguments>
<msg timestamp="20161122 00:09:18.082" level="INFO">Set test message to:
Passed Random Name was matched with Database entry.</msg>
<status status="PASS" endtime="20161122 00:09:18.083" starttime="20161122 00:09:18.082"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:18.083" starttime="20161122 00:09:18.080"></status>
</kw>
<kw name="Close" library="SQLlibrary">
<status status="PASS" endtime="20161122 00:09:18.098" starttime="20161122 00:09:18.083"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:18.099" starttime="20161122 00:09:17.813"></status>
</kw>
<doc>*Name:*
API_Talent_Pool_Success_NewEntryExist.

*Description:*
verify new talent pool in data base

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:18.099" critical="yes" starttime="20161122 00:09:17.561">Passed Random Name was matched with Database entry.</status>
</test>
<test id="s1-s1-t3" name="POST-API_TPC_Length_0">
<kw name="REST_NOAUTH_Shared_TalentPools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:18.109" starttime="20161122 00:09:18.102"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 talent_pool_shared_user.user_id FROM talent_pool_shared_user JOIN users ON talent_pool_shared_user.user_id = users.user_id WHERE users.culture_lang_id IS NOT NULL GROUP BY talent_pool_shared_user.user_id ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:18.116" level="INFO">${SQL_GET_USERID} = 46</msg>
<status status="PASS" endtime="20161122 00:09:18.116" starttime="20161122 00:09:18.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.116" level="INFO">46</msg>
<status status="PASS" endtime="20161122 00:09:18.116" starttime="20161122 00:09:18.116"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:18.119" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:18.119" starttime="20161122 00:09:18.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.120" level="INFO">${SQL_GET_USERID} = 46</msg>
<status status="PASS" endtime="20161122 00:09:18.120" starttime="20161122 00:09:18.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.121" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:18.121" starttime="20161122 00:09:18.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.122" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:18.122" starttime="20161122 00:09:18.121"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:18.122" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:18.122" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:18.123" starttime="20161122 00:09:18.122"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.123" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:18.124" starttime="20161122 00:09:18.123"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.124" level="INFO">Set request header "X-USERID" to "46"</msg>
<status status="PASS" endtime="20161122 00:09:18.124" starttime="20161122 00:09:18.124"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.125" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:18.125" starttime="20161122 00:09:18.125"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:18.125" starttime="20161122 00:09:18.101"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:18.127" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:18.127" starttime="20161122 00:09:18.127"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:18.131" level="INFO">Request body set to "{   "UserId": 46,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_46",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:18.131" starttime="20161122 00:09:18.128"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:18.187" starttime="20161122 00:09:18.131"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:18.188" starttime="20161122 00:09:18.188"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:18.189" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:18.189" starttime="20161122 00:09:18.188"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:18.189" starttime="20161122 00:09:18.189"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:18.189" starttime="20161122 00:09:18.126"></status>
</kw>
<kw name="POST_TalentPool_Create_Empty_String" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${EMPTY}</arg>
<arg>Title</arg>
<arg>400</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:18.197" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:18.197" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:18.197" starttime="20161122 00:09:18.196"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.198" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:18.198" starttime="20161122 00:09:18.197"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.198" level="INFO">Set request header "X-USERID" to "46"</msg>
<status status="PASS" endtime="20161122 00:09:18.198" starttime="20161122 00:09:18.198"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.199" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:18.199" starttime="20161122 00:09:18.199"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:18.200" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20161122 00:09:18.200" starttime="20161122 00:09:18.200"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161122 00:09:18.200" starttime="20161122 00:09:18.200"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"${KEY_NAME_JSON}\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.201" level="INFO">Request body set to "{ "Title":""}".</msg>
<status status="PASS" endtime="20161122 00:09:18.201" starttime="20161122 00:09:18.201"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:18.306" starttime="20161122 00:09:18.202"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:18.307" starttime="20161122 00:09:18.306"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:18.308" level="INFO">${resBody} = {"Message":"Title cannot be empty."}</msg>
<status status="PASS" endtime="20161122 00:09:18.308" starttime="20161122 00:09:18.307"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20161122 00:09:18.308" level="INFO">Set test message to:
The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20161122 00:09:18.308" starttime="20161122 00:09:18.308"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:18.309" starttime="20161122 00:09:18.196"></status>
</kw>
<doc>*Name:*
Api_TPC_Length_0.

*Description:*
verify failure when title length is 0

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:18.309" critical="yes" starttime="20161122 00:09:18.100">The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-t4" name="POST-API_TPC_Length_1">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:18.496" starttime="20161122 00:09:18.311"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:18.541" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161122 00:09:18.541" starttime="20161122 00:09:18.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.542" level="INFO">1338</msg>
<status status="PASS" endtime="20161122 00:09:18.542" starttime="20161122 00:09:18.542"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:18.555" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:18.555" starttime="20161122 00:09:18.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.556" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161122 00:09:18.556" starttime="20161122 00:09:18.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.557" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:18.557" starttime="20161122 00:09:18.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.557" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:18.557" starttime="20161122 00:09:18.557"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:18.558" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:18.558" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:18.558" starttime="20161122 00:09:18.558"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.559" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:18.559" starttime="20161122 00:09:18.558"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.560" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161122 00:09:18.560" starttime="20161122 00:09:18.559"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.560" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:18.560" starttime="20161122 00:09:18.560"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:18.561" starttime="20161122 00:09:18.311"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:18.563" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:18.563" starttime="20161122 00:09:18.562"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:18.568" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:18.568" starttime="20161122 00:09:18.563"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:18.598" starttime="20161122 00:09:18.569"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:18.598" starttime="20161122 00:09:18.598"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:18.599" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:18.599" starttime="20161122 00:09:18.599"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:18.600" starttime="20161122 00:09:18.599"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:18.600" starttime="20161122 00:09:18.561"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>1</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:18.607" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:18.607" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:18.607" starttime="20161122 00:09:18.606"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.608" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:18.608" starttime="20161122 00:09:18.607"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.608" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161122 00:09:18.609" starttime="20161122 00:09:18.608"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.609" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:18.609" starttime="20161122 00:09:18.609"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:18.610" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:18.610" starttime="20161122 00:09:18.610"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.611" level="INFO">Request body set to "{ "Title":"1"}".</msg>
<status status="PASS" endtime="20161122 00:09:18.611" starttime="20161122 00:09:18.610"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:18.995" starttime="20161122 00:09:18.611"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:18.996" starttime="20161122 00:09:18.996"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:18.997" level="INFO">${resBody} = {"TalentpoolId":5930,"Title":"1","Owner":{"UserId":1338,"FirstName":"smaus","LastName":"smaus"},"CreatedDate":"2016-11-22T08:09:18.82","ModifierId":1,"ModifiedDate":"2016-11-22T08:09:18.82","IsShared"...</msg>
<status status="PASS" endtime="20161122 00:09:18.997" starttime="20161122 00:09:18.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:18.998" level="INFO">{"TalentpoolId":5930,"Title":"1","Owner":{"UserId":1338,"FirstName":"smaus","LastName":"smaus"},"CreatedDate":"2016-11-22T08:09:18.82","ModifierId":1,"ModifiedDate":"2016-11-22T08:09:18.82","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:18.998" starttime="20161122 00:09:18.998"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:18.999" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'1', u'TalentpoolId': 5930, u'ModifiedDate': u'2016-11-22T08:09:18.82', u'CreatedDate': u'2016-11-22T08:09:18.82', u'Owner': {u'LastName': u'smaus', u'UserId': 1338, u'...</msg>
<status status="PASS" endtime="20161122 00:09:18.999" starttime="20161122 00:09:18.998"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:19.000" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'1', u'CreatedDate': u'2016-11-22T08:09:18.82', u'ModifiedDate': u'2016-11-22T08:09:18.82', u'TalentpoolId': 5930, u'Owner': {u'LastName': u'smaus', u'UserId': 1338, u'...</msg>
<status status="PASS" endtime="20161122 00:09:19.000" starttime="20161122 00:09:18.999"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:19.001" level="INFO">${keyValue} = 1</msg>
<status status="PASS" endtime="20161122 00:09:19.001" starttime="20161122 00:09:19.000"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:19.001" starttime="20161122 00:09:18.606"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Length_1

*Description:*
verify success when title length is 1

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:19.001" critical="yes" starttime="20161122 00:09:18.309"></status>
</test>
<test id="s1-s1-t5" name="POST-API_TPC_Length_50">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.040" starttime="20161122 00:09:19.004"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:19.065" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161122 00:09:19.065" starttime="20161122 00:09:19.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.066" level="INFO">1338</msg>
<status status="PASS" endtime="20161122 00:09:19.066" starttime="20161122 00:09:19.065"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:19.074" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:19.074" starttime="20161122 00:09:19.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.075" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161122 00:09:19.075" starttime="20161122 00:09:19.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.076" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:19.076" starttime="20161122 00:09:19.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.077" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:19.077" starttime="20161122 00:09:19.076"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:19.078" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:19.078" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:19.078" starttime="20161122 00:09:19.077"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.078" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:19.079" starttime="20161122 00:09:19.078"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.079" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161122 00:09:19.080" starttime="20161122 00:09:19.079"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.080" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:19.080" starttime="20161122 00:09:19.080"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:19.080" starttime="20161122 00:09:19.003"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:19.082" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:19.082" starttime="20161122 00:09:19.082"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:19.085" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:19.085" starttime="20161122 00:09:19.082"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.125" starttime="20161122 00:09:19.086"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.126" starttime="20161122 00:09:19.126"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:19.127" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:19.127" starttime="20161122 00:09:19.126"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.127" starttime="20161122 00:09:19.127"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:19.127" starttime="20161122 00:09:19.081"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>12345678901234567890123456789012345678901234567890</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:19.135" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:19.135" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:19.135" starttime="20161122 00:09:19.134"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.136" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:19.136" starttime="20161122 00:09:19.135"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.136" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161122 00:09:19.136" starttime="20161122 00:09:19.136"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.137" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:19.137" starttime="20161122 00:09:19.137"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:19.138" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:19.138" starttime="20161122 00:09:19.137"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.139" level="INFO">Request body set to "{ "Title":"12345678901234567890123456789012345678901234567890"}".</msg>
<status status="PASS" endtime="20161122 00:09:19.139" starttime="20161122 00:09:19.138"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.240" starttime="20161122 00:09:19.139"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.241" starttime="20161122 00:09:19.240"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:19.241" level="INFO">${resBody} = {"TalentpoolId":5931,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":1338,"FirstName":"smaus","LastName":"smaus"},"CreatedDate":"2016-11-22T08:09:19.29","ModifierId":1,"...</msg>
<status status="PASS" endtime="20161122 00:09:19.241" starttime="20161122 00:09:19.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.242" level="INFO">{"TalentpoolId":5931,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":1338,"FirstName":"smaus","LastName":"smaus"},"CreatedDate":"2016-11-22T08:09:19.29","ModifierId":1,"ModifiedDate":"2016-11-22T08:09:19.29","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:19.242" starttime="20161122 00:09:19.242"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:19.243" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'TalentpoolId': 5931, u'ModifiedDate': u'2016-11-22T08:09:19.29', u'CreatedDate': u'2016-11-22T08:09:19.29', u'Ow...</msg>
<status status="PASS" endtime="20161122 00:09:19.243" starttime="20161122 00:09:19.242"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:19.244" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'CreatedDate': u'2016-11-22T08:09:19.29', u'ModifiedDate': u'2016-11-22T08:09:19.29', u'TalentpoolId': 5931, u'Ow...</msg>
<status status="PASS" endtime="20161122 00:09:19.244" starttime="20161122 00:09:19.243"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:19.245" level="INFO">${keyValue} = 12345678901234567890123456789012345678901234567890</msg>
<status status="PASS" endtime="20161122 00:09:19.245" starttime="20161122 00:09:19.244"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:19.245" starttime="20161122 00:09:19.133"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Length_50

*Description:*
verify success when title length is 50

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:19.245" critical="yes" starttime="20161122 00:09:19.002"></status>
</test>
<test id="s1-s1-t6" name="POST-API_TPC_Length_51">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.320" starttime="20161122 00:09:19.248"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:19.360" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161122 00:09:19.361" starttime="20161122 00:09:19.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.361" level="INFO">1338</msg>
<status status="PASS" endtime="20161122 00:09:19.361" starttime="20161122 00:09:19.361"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:19.393" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:19.393" starttime="20161122 00:09:19.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.394" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161122 00:09:19.395" starttime="20161122 00:09:19.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.395" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:19.396" starttime="20161122 00:09:19.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.396" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:19.396" starttime="20161122 00:09:19.396"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:19.397" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:19.397" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:19.397" starttime="20161122 00:09:19.396"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.398" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:19.398" starttime="20161122 00:09:19.397"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.399" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161122 00:09:19.399" starttime="20161122 00:09:19.398"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.400" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:19.401" starttime="20161122 00:09:19.399"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:19.401" starttime="20161122 00:09:19.247"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:19.402" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:19.402" starttime="20161122 00:09:19.402"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:19.406" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:19.406" starttime="20161122 00:09:19.402"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.425" starttime="20161122 00:09:19.406"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.426" starttime="20161122 00:09:19.426"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:19.427" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:19.427" starttime="20161122 00:09:19.426"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.427" starttime="20161122 00:09:19.427"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:19.427" starttime="20161122 00:09:19.401"></status>
</kw>
<kw name="POST_TalentPool_Create_Over_Max_Count" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>123456789012345678901234567890123456789012345678901</arg>
<arg>Title</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:19.435" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:19.435" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:19.435" starttime="20161122 00:09:19.435"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.436" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:19.436" starttime="20161122 00:09:19.435"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.437" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161122 00:09:19.437" starttime="20161122 00:09:19.436"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.437" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:19.438" starttime="20161122 00:09:19.437"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:19.438" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:19.438" starttime="20161122 00:09:19.438"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161122 00:09:19.439" starttime="20161122 00:09:19.438"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.439" level="INFO">Request body set to "{ "Title":"123456789012345678901234567890123456789012345678901"}".</msg>
<status status="PASS" endtime="20161122 00:09:19.439" starttime="20161122 00:09:19.439"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.489" starttime="20161122 00:09:19.440"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:19.490" level="INFO">${resBody} = {"Message":"Maximum length for title is 50 characters."}</msg>
<status status="PASS" endtime="20161122 00:09:19.490" starttime="20161122 00:09:19.490"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20161122 00:09:19.491" level="INFO">Set test message to:
The {"Message":"Maximum length for title is 50 characters."} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20161122 00:09:19.491" starttime="20161122 00:09:19.490"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:19.492" starttime="20161122 00:09:19.434"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Length_51

*Description:*
verify failure when title length is 51

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:19.492" critical="yes" starttime="20161122 00:09:19.246">The {"Message":"Maximum length for title is 50 characters."} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-t7" name="POST-API_TPC_Trim_Space">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.531" starttime="20161122 00:09:19.495"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:19.550" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:19.550" starttime="20161122 00:09:19.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.551" level="INFO">1336</msg>
<status status="PASS" endtime="20161122 00:09:19.551" starttime="20161122 00:09:19.551"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:19.555" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:19.555" starttime="20161122 00:09:19.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.556" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:19.556" starttime="20161122 00:09:19.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.557" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:19.558" starttime="20161122 00:09:19.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.558" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:19.558" starttime="20161122 00:09:19.558"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:19.559" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:19.559" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:19.559" starttime="20161122 00:09:19.559"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.560" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:19.560" starttime="20161122 00:09:19.560"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.561" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:19.561" starttime="20161122 00:09:19.560"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.561" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:19.562" starttime="20161122 00:09:19.561"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:19.562" starttime="20161122 00:09:19.494"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:19.563" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:19.563" starttime="20161122 00:09:19.563"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:19.567" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:19.567" starttime="20161122 00:09:19.564"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.584" starttime="20161122 00:09:19.567"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.585" starttime="20161122 00:09:19.585"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:19.585" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:19.586" starttime="20161122 00:09:19.585"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.586" starttime="20161122 00:09:19.586"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:19.586" starttime="20161122 00:09:19.562"></status>
</kw>
<kw name="POST_TalentPool_Create_Empty_String" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${SPACE * 3}</arg>
<arg>Title</arg>
<arg>400</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:19.594" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:19.594" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:19.594" starttime="20161122 00:09:19.593"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.595" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:19.595" starttime="20161122 00:09:19.594"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.595" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:19.595" starttime="20161122 00:09:19.595"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.596" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:19.596" starttime="20161122 00:09:19.596"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:19.597" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20161122 00:09:19.597" starttime="20161122 00:09:19.596"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161122 00:09:19.597" starttime="20161122 00:09:19.597"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"${KEY_NAME_JSON}\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.598" level="INFO">Request body set to "{ "Title":"   "}".</msg>
<status status="PASS" endtime="20161122 00:09:19.598" starttime="20161122 00:09:19.598"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.638" starttime="20161122 00:09:19.599"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.639" starttime="20161122 00:09:19.638"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:19.639" level="INFO">${resBody} = {"Message":"Title cannot be empty."}</msg>
<status status="PASS" endtime="20161122 00:09:19.639" starttime="20161122 00:09:19.639"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20161122 00:09:19.640" level="INFO">Set test message to:
The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20161122 00:09:19.640" starttime="20161122 00:09:19.640"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:19.640" starttime="20161122 00:09:19.592"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Space

*Description:*
verify trimming with only space

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:19.640" critical="yes" starttime="20161122 00:09:19.493">The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-t8" name="POST-API_TPC_Trim_TabSpace">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.688" starttime="20161122 00:09:19.644"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:19.721" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:19.721" starttime="20161122 00:09:19.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.722" level="INFO">1336</msg>
<status status="PASS" endtime="20161122 00:09:19.722" starttime="20161122 00:09:19.722"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:19.739" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:19.739" starttime="20161122 00:09:19.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.740" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:19.741" starttime="20161122 00:09:19.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.742" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:19.742" starttime="20161122 00:09:19.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.742" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:19.742" starttime="20161122 00:09:19.742"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:19.743" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:19.743" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:19.743" starttime="20161122 00:09:19.743"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.744" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:19.744" starttime="20161122 00:09:19.743"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.745" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:19.745" starttime="20161122 00:09:19.744"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.746" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:19.746" starttime="20161122 00:09:19.745"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:19.746" starttime="20161122 00:09:19.643"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:19.747" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:19.748" starttime="20161122 00:09:19.747"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:19.751" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:19.751" starttime="20161122 00:09:19.748"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.772" starttime="20161122 00:09:19.752"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.773" starttime="20161122 00:09:19.773"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:19.774" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:19.774" starttime="20161122 00:09:19.773"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.774" starttime="20161122 00:09:19.774"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:19.774" starttime="20161122 00:09:19.746"></status>
</kw>
<kw name="POST_TalentPool_Create_Empty_String" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${EMPTY}</arg>
<arg>Title</arg>
<arg>400</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:19.782" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:19.782" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:19.782" starttime="20161122 00:09:19.781"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.783" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:19.783" starttime="20161122 00:09:19.782"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.784" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:19.784" starttime="20161122 00:09:19.783"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.785" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:19.785" starttime="20161122 00:09:19.784"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:19.785" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20161122 00:09:19.785" starttime="20161122 00:09:19.785"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161122 00:09:19.786" starttime="20161122 00:09:19.786"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"${KEY_NAME_JSON}\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.787" level="INFO">Request body set to "{ "Title":""}".</msg>
<status status="PASS" endtime="20161122 00:09:19.787" starttime="20161122 00:09:19.786"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.828" starttime="20161122 00:09:19.787"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.829" starttime="20161122 00:09:19.828"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:19.829" level="INFO">${resBody} = {"Message":"Title cannot be empty."}</msg>
<status status="PASS" endtime="20161122 00:09:19.830" starttime="20161122 00:09:19.829"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20161122 00:09:19.831" level="INFO">Set test message to:
The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20161122 00:09:19.831" starttime="20161122 00:09:19.830"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:19.831" starttime="20161122 00:09:19.781"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_TabSpace

*Description:*
verify trimming with only tab-space

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:19.831" critical="yes" starttime="20161122 00:09:19.641">The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-t9" name="POST-API_TPC_Trim_Leading">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.873" starttime="20161122 00:09:19.834"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:19.886" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161122 00:09:19.886" starttime="20161122 00:09:19.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.887" level="INFO">48</msg>
<status status="PASS" endtime="20161122 00:09:19.887" starttime="20161122 00:09:19.886"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:19.890" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:19.891" starttime="20161122 00:09:19.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.891" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161122 00:09:19.892" starttime="20161122 00:09:19.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.893" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:19.893" starttime="20161122 00:09:19.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.893" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:19.893" starttime="20161122 00:09:19.893"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:19.894" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:19.894" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:19.894" starttime="20161122 00:09:19.894"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.895" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:19.895" starttime="20161122 00:09:19.895"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.896" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161122 00:09:19.896" starttime="20161122 00:09:19.895"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.896" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:19.897" starttime="20161122 00:09:19.896"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:19.897" starttime="20161122 00:09:19.834"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:19.898" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:19.898" starttime="20161122 00:09:19.898"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:19.901" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:19.901" starttime="20161122 00:09:19.898"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.920" starttime="20161122 00:09:19.902"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.921" starttime="20161122 00:09:19.920"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:19.922" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:19.922" starttime="20161122 00:09:19.921"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:19.922" starttime="20161122 00:09:19.922"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:19.922" starttime="20161122 00:09:19.897"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${SPACE * 2}Leading</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:19.930" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:19.930" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:19.930" starttime="20161122 00:09:19.930"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.931" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:19.931" starttime="20161122 00:09:19.931"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.932" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161122 00:09:19.932" starttime="20161122 00:09:19.932"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.933" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:19.933" starttime="20161122 00:09:19.932"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:19.933" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:19.933" starttime="20161122 00:09:19.933"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161122 00:09:19.934" level="INFO">Request body set to "{ "Title":"  Leading"}".</msg>
<status status="PASS" endtime="20161122 00:09:19.934" starttime="20161122 00:09:19.934"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:20.037" starttime="20161122 00:09:19.935"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:20.037" starttime="20161122 00:09:20.037"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:20.038" level="INFO">${resBody} = {"TalentpoolId":5932,"Title":"Leading","Owner":{"UserId":48,"FirstName":"Jeffrey","LastName":"Trattner"},"CreatedDate":"2016-11-22T08:09:20.07","ModifierId":1,"ModifiedDate":"2016-11-22T08:09:20.07","...</msg>
<status status="PASS" endtime="20161122 00:09:20.038" starttime="20161122 00:09:20.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.039" level="INFO">{"TalentpoolId":5932,"Title":"Leading","Owner":{"UserId":48,"FirstName":"Jeffrey","LastName":"Trattner"},"CreatedDate":"2016-11-22T08:09:20.07","ModifierId":1,"ModifiedDate":"2016-11-22T08:09:20.07","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:20.039" starttime="20161122 00:09:20.038"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:20.039" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'Leading', u'TalentpoolId': 5932, u'ModifiedDate': u'2016-11-22T08:09:20.07', u'CreatedDate': u'2016-11-22T08:09:20.07', u'Owner': {u'LastName': u'Trattner', u'UserId':...</msg>
<status status="PASS" endtime="20161122 00:09:20.040" starttime="20161122 00:09:20.039"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:20.040" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'Leading', u'CreatedDate': u'2016-11-22T08:09:20.07', u'ModifiedDate': u'2016-11-22T08:09:20.07', u'TalentpoolId': 5932, u'Owner': {u'LastName': u'Trattner', u'UserId':...</msg>
<status status="PASS" endtime="20161122 00:09:20.040" starttime="20161122 00:09:20.040"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:20.041" level="INFO">${keyValue} = Leading</msg>
<status status="PASS" endtime="20161122 00:09:20.041" starttime="20161122 00:09:20.041"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:20.041" starttime="20161122 00:09:19.929"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Leading

*Description:*
verify trimming leading spaces

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:20.042" critical="yes" starttime="20161122 00:09:19.832"></status>
</test>
<test id="s1-s1-t10" name="POST-API_TPC_Trim_Trailing">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:20.113" starttime="20161122 00:09:20.044"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:20.142" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161122 00:09:20.142" starttime="20161122 00:09:20.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.143" level="INFO">1338</msg>
<status status="PASS" endtime="20161122 00:09:20.143" starttime="20161122 00:09:20.142"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:20.160" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:20.160" starttime="20161122 00:09:20.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.161" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20161122 00:09:20.161" starttime="20161122 00:09:20.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.162" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:20.162" starttime="20161122 00:09:20.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.163" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:20.163" starttime="20161122 00:09:20.162"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:20.164" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:20.164" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:20.164" starttime="20161122 00:09:20.163"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.165" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:20.165" starttime="20161122 00:09:20.165"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.166" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161122 00:09:20.166" starttime="20161122 00:09:20.165"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.167" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:20.167" starttime="20161122 00:09:20.166"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:20.167" starttime="20161122 00:09:20.044"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:20.168" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:20.169" starttime="20161122 00:09:20.168"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:20.172" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:20.172" starttime="20161122 00:09:20.169"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:20.191" starttime="20161122 00:09:20.173"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:20.191" starttime="20161122 00:09:20.191"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:20.192" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:20.192" starttime="20161122 00:09:20.192"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:20.192" starttime="20161122 00:09:20.192"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:20.193" starttime="20161122 00:09:20.168"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Trailing${SPACE * 2}</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:20.200" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:20.200" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:20.200" starttime="20161122 00:09:20.200"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.201" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:20.201" starttime="20161122 00:09:20.201"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.202" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20161122 00:09:20.202" starttime="20161122 00:09:20.201"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.203" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:20.203" starttime="20161122 00:09:20.202"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:20.203" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:20.203" starttime="20161122 00:09:20.203"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.204" level="INFO">Request body set to "{ "Title":"Trailing  "}".</msg>
<status status="PASS" endtime="20161122 00:09:20.204" starttime="20161122 00:09:20.204"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:20.283" starttime="20161122 00:09:20.205"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:20.283" starttime="20161122 00:09:20.283"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:20.284" level="INFO">${resBody} = {"TalentpoolId":5933,"Title":"Trailing","Owner":{"UserId":1338,"FirstName":"smaus","LastName":"smaus"},"CreatedDate":"2016-11-22T08:09:20.35","ModifierId":1,"ModifiedDate":"2016-11-22T08:09:20.35","Is...</msg>
<status status="PASS" endtime="20161122 00:09:20.284" starttime="20161122 00:09:20.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.285" level="INFO">{"TalentpoolId":5933,"Title":"Trailing","Owner":{"UserId":1338,"FirstName":"smaus","LastName":"smaus"},"CreatedDate":"2016-11-22T08:09:20.35","ModifierId":1,"ModifiedDate":"2016-11-22T08:09:20.35","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:20.285" starttime="20161122 00:09:20.284"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:20.285" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'Trailing', u'TalentpoolId': 5933, u'ModifiedDate': u'2016-11-22T08:09:20.35', u'CreatedDate': u'2016-11-22T08:09:20.35', u'Owner': {u'LastName': u'smaus', u'UserId': 1...</msg>
<status status="PASS" endtime="20161122 00:09:20.286" starttime="20161122 00:09:20.285"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:20.286" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'Trailing', u'CreatedDate': u'2016-11-22T08:09:20.35', u'ModifiedDate': u'2016-11-22T08:09:20.35', u'TalentpoolId': 5933, u'Owner': {u'LastName': u'smaus', u'UserId': 1...</msg>
<status status="PASS" endtime="20161122 00:09:20.286" starttime="20161122 00:09:20.286"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:20.287" level="INFO">${keyValue} = Trailing</msg>
<status status="PASS" endtime="20161122 00:09:20.287" starttime="20161122 00:09:20.287"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:20.287" starttime="20161122 00:09:20.199"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Trailing

*Description:*
verify trimming trailing spaces

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:20.288" critical="yes" starttime="20161122 00:09:20.042"></status>
</test>
<test id="s1-s1-t11" name="POST-API_TPC_Trim_Middle">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:20.326" starttime="20161122 00:09:20.290"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:20.367" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:20.367" starttime="20161122 00:09:20.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.368" level="INFO">1336</msg>
<status status="PASS" endtime="20161122 00:09:20.368" starttime="20161122 00:09:20.368"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:20.382" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:20.382" starttime="20161122 00:09:20.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.383" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:20.383" starttime="20161122 00:09:20.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.384" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:20.384" starttime="20161122 00:09:20.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.385" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:20.385" starttime="20161122 00:09:20.385"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:20.386" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:20.386" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:20.386" starttime="20161122 00:09:20.386"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.387" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:20.387" starttime="20161122 00:09:20.386"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.388" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:20.388" starttime="20161122 00:09:20.387"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.388" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:20.389" starttime="20161122 00:09:20.388"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:20.389" starttime="20161122 00:09:20.290"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:20.390" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:20.390" starttime="20161122 00:09:20.390"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:20.394" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:20.394" starttime="20161122 00:09:20.391"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:20.412" starttime="20161122 00:09:20.394"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:20.412" starttime="20161122 00:09:20.412"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:20.413" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:20.413" starttime="20161122 00:09:20.413"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:20.413" starttime="20161122 00:09:20.413"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:20.414" starttime="20161122 00:09:20.389"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>space between</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:20.421" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:20.421" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:20.421" starttime="20161122 00:09:20.420"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.422" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:20.422" starttime="20161122 00:09:20.422"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.423" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:20.423" starttime="20161122 00:09:20.422"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.424" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:20.424" starttime="20161122 00:09:20.423"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:20.424" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:20.424" starttime="20161122 00:09:20.424"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.425" level="INFO">Request body set to "{ "Title":"space between"}".</msg>
<status status="PASS" endtime="20161122 00:09:20.425" starttime="20161122 00:09:20.425"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:20.513" starttime="20161122 00:09:20.426"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:20.514" starttime="20161122 00:09:20.514"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:20.515" level="INFO">${resBody} = {"TalentpoolId":5934,"Title":"space between","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-22T08:09:20.57","ModifierId":...</msg>
<status status="PASS" endtime="20161122 00:09:20.515" starttime="20161122 00:09:20.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.515" level="INFO">{"TalentpoolId":5934,"Title":"space between","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-22T08:09:20.57","ModifierId":1,"ModifiedDate":"2016-11-22T08:09:20.57","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:20.516" starttime="20161122 00:09:20.515"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:20.516" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'space between', u'TalentpoolId': 5934, u'ModifiedDate': u'2016-11-22T08:09:20.57', u'CreatedDate': u'2016-11-22T08:09:20.57', u'Owner': {u'LastName': u'TalentPoolAutom...</msg>
<status status="PASS" endtime="20161122 00:09:20.516" starttime="20161122 00:09:20.516"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:20.517" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'space between', u'CreatedDate': u'2016-11-22T08:09:20.57', u'ModifiedDate': u'2016-11-22T08:09:20.57', u'TalentpoolId': 5934, u'Owner': {u'LastName': u'TalentPoolAutom...</msg>
<status status="PASS" endtime="20161122 00:09:20.517" starttime="20161122 00:09:20.517"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:20.518" level="INFO">${keyValue} = space between</msg>
<status status="PASS" endtime="20161122 00:09:20.518" starttime="20161122 00:09:20.518"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:20.518" starttime="20161122 00:09:20.420"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Middle

*Description:*
verify no trimming middle spaces

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:20.519" critical="yes" starttime="20161122 00:09:20.288"></status>
</test>
<test id="s1-s1-t12" name="POST-API_TPC_Trim_SpaceAnd50">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:20.588" starttime="20161122 00:09:20.521"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:20.629" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161122 00:09:20.630" starttime="20161122 00:09:20.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.630" level="INFO">415</msg>
<status status="PASS" endtime="20161122 00:09:20.630" starttime="20161122 00:09:20.630"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:20.643" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:20.643" starttime="20161122 00:09:20.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.644" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161122 00:09:20.644" starttime="20161122 00:09:20.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.645" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:20.645" starttime="20161122 00:09:20.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.646" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:20.646" starttime="20161122 00:09:20.645"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:20.646" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:20.646" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:20.647" starttime="20161122 00:09:20.646"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.647" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:20.647" starttime="20161122 00:09:20.647"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.648" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161122 00:09:20.648" starttime="20161122 00:09:20.647"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.649" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:20.649" starttime="20161122 00:09:20.648"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:20.649" starttime="20161122 00:09:20.521"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:20.650" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:20.651" starttime="20161122 00:09:20.650"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:20.654" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:20.654" starttime="20161122 00:09:20.651"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:20.672" starttime="20161122 00:09:20.654"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:20.673" starttime="20161122 00:09:20.673"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:20.674" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:20.674" starttime="20161122 00:09:20.673"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:20.674" starttime="20161122 00:09:20.674"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:20.674" starttime="20161122 00:09:20.650"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>12345678901234567890123456789012345678901234567890${SPACE}</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:20.682" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:20.682" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:20.682" starttime="20161122 00:09:20.682"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.683" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:20.683" starttime="20161122 00:09:20.683"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.684" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161122 00:09:20.684" starttime="20161122 00:09:20.683"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.684" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:20.685" starttime="20161122 00:09:20.684"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:20.685" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:20.685" starttime="20161122 00:09:20.685"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161122 00:09:20.686" level="INFO">Request body set to "{ "Title":"12345678901234567890123456789012345678901234567890 "}".</msg>
<status status="PASS" endtime="20161122 00:09:20.686" starttime="20161122 00:09:20.685"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:21.072" starttime="20161122 00:09:20.686"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:21.073" starttime="20161122 00:09:21.072"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:21.073" level="INFO">${resBody} = {"TalentpoolId":5935,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-22T08:09:20.9","ModifierId":1...</msg>
<status status="PASS" endtime="20161122 00:09:21.073" starttime="20161122 00:09:21.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.074" level="INFO">{"TalentpoolId":5935,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-22T08:09:20.9","ModifierId":1,"ModifiedDate":"2016-11-22T08:09:20.9","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:21.074" starttime="20161122 00:09:21.074"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:21.075" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'TalentpoolId': 5935, u'ModifiedDate': u'2016-11-22T08:09:20.9', u'CreatedDate': u'2016-11-22T08:09:20.9', u'Owne...</msg>
<status status="PASS" endtime="20161122 00:09:21.075" starttime="20161122 00:09:21.074"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:21.076" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'CreatedDate': u'2016-11-22T08:09:20.9', u'ModifiedDate': u'2016-11-22T08:09:20.9', u'TalentpoolId': 5935, u'Owne...</msg>
<status status="PASS" endtime="20161122 00:09:21.076" starttime="20161122 00:09:21.075"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:21.077" level="INFO">${keyValue} = 12345678901234567890123456789012345678901234567890</msg>
<status status="PASS" endtime="20161122 00:09:21.077" starttime="20161122 00:09:21.076"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:21.077" starttime="20161122 00:09:20.681"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_SpaceAnd50

*Description:*
verify trimming happens before submissions attempt

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:21.077" critical="yes" starttime="20161122 00:09:20.519"></status>
</test>
<test id="s1-s1-t13" name="POST-API_TPC_Security_Script">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:21.293" starttime="20161122 00:09:21.080"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:21.344" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:21.344" starttime="20161122 00:09:21.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.345" level="INFO">1336</msg>
<status status="PASS" endtime="20161122 00:09:21.345" starttime="20161122 00:09:21.344"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:21.354" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:21.354" starttime="20161122 00:09:21.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.355" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:21.355" starttime="20161122 00:09:21.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.356" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:21.356" starttime="20161122 00:09:21.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.357" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:21.357" starttime="20161122 00:09:21.357"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:21.358" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:21.358" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:21.358" starttime="20161122 00:09:21.357"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.359" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:21.359" starttime="20161122 00:09:21.358"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.360" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:21.360" starttime="20161122 00:09:21.359"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.361" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:21.361" starttime="20161122 00:09:21.360"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:21.361" starttime="20161122 00:09:21.080"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:21.362" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:21.362" starttime="20161122 00:09:21.362"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:21.366" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:21.366" starttime="20161122 00:09:21.363"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:21.384" starttime="20161122 00:09:21.366"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:21.385" starttime="20161122 00:09:21.385"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:21.386" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:21.386" starttime="20161122 00:09:21.385"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:21.386" starttime="20161122 00:09:21.386"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:21.386" starttime="20161122 00:09:21.361"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>&lt;script&gt;alert(123)&lt;/script&gt;</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:21.394" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:21.394" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:21.394" starttime="20161122 00:09:21.393"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.394" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:21.395" starttime="20161122 00:09:21.394"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.395" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:21.395" starttime="20161122 00:09:21.395"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.396" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:21.396" starttime="20161122 00:09:21.396"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:21.397" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:21.397" starttime="20161122 00:09:21.397"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.398" level="INFO">Request body set to "{ "Title":"&lt;script&gt;alert(123)&lt;/script&gt;"}".</msg>
<status status="PASS" endtime="20161122 00:09:21.398" starttime="20161122 00:09:21.397"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:21.454" starttime="20161122 00:09:21.398"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:21.455" starttime="20161122 00:09:21.455"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:21.456" level="INFO">${resBody} = {"TalentpoolId":5936,"Title":"&lt;script&gt;alert(123)&lt;/script&gt;","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-22T08:09:21.54"...</msg>
<status status="PASS" endtime="20161122 00:09:21.456" starttime="20161122 00:09:21.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.456" level="INFO">{"TalentpoolId":5936,"Title":"&lt;script&gt;alert(123)&lt;/script&gt;","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-22T08:09:21.54","ModifierId":1,"ModifiedDate":"2016-11-22T08:09:21.54","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:21.456" starttime="20161122 00:09:21.456"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:21.457" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;script&gt;alert(123)&lt;/script&gt;', u'TalentpoolId': 5936, u'ModifiedDate': u'2016-11-22T08:09:21.54', u'CreatedDate': u'2016-11-22T08:09:21.54', u'Owner': {u'LastName': u'T...</msg>
<status status="PASS" endtime="20161122 00:09:21.458" starttime="20161122 00:09:21.457"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:21.458" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;script&gt;alert(123)&lt;/script&gt;', u'CreatedDate': u'2016-11-22T08:09:21.54', u'ModifiedDate': u'2016-11-22T08:09:21.54', u'TalentpoolId': 5936, u'Owner': {u'LastName': u'T...</msg>
<status status="PASS" endtime="20161122 00:09:21.458" starttime="20161122 00:09:21.458"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:21.459" level="INFO">${keyValue} = &lt;script&gt;alert(123)&lt;/script&gt;</msg>
<status status="PASS" endtime="20161122 00:09:21.459" starttime="20161122 00:09:21.459"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:21.459" starttime="20161122 00:09:21.392"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Security_Script

*Description:*
verify script injection is allowed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:21.459" critical="yes" starttime="20161122 00:09:21.078"></status>
</test>
<test id="s1-s1-t14" name="POST-API_TPC_Security_SQL">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:21.504" starttime="20161122 00:09:21.462"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:21.534" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161122 00:09:21.534" starttime="20161122 00:09:21.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.535" level="INFO">48</msg>
<status status="PASS" endtime="20161122 00:09:21.535" starttime="20161122 00:09:21.535"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:21.539" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:21.540" starttime="20161122 00:09:21.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.541" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161122 00:09:21.541" starttime="20161122 00:09:21.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.542" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:21.542" starttime="20161122 00:09:21.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.542" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:21.542" starttime="20161122 00:09:21.542"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:21.543" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:21.543" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:21.543" starttime="20161122 00:09:21.543"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.544" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:21.544" starttime="20161122 00:09:21.543"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.545" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161122 00:09:21.545" starttime="20161122 00:09:21.544"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.545" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:21.545" starttime="20161122 00:09:21.545"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:21.546" starttime="20161122 00:09:21.462"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:21.547" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:21.547" starttime="20161122 00:09:21.547"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:21.551" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:21.551" starttime="20161122 00:09:21.547"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:21.571" starttime="20161122 00:09:21.551"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:21.571" starttime="20161122 00:09:21.571"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:21.572" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:21.572" starttime="20161122 00:09:21.572"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:21.572" starttime="20161122 00:09:21.572"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:21.573" starttime="20161122 00:09:21.546"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>SELECT * FROM Users</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:21.580" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:21.580" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:21.580" starttime="20161122 00:09:21.580"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.581" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:21.582" starttime="20161122 00:09:21.581"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.582" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161122 00:09:21.582" starttime="20161122 00:09:21.582"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.583" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:21.583" starttime="20161122 00:09:21.583"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:21.584" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:21.584" starttime="20161122 00:09:21.583"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.585" level="INFO">Request body set to "{ "Title":"SELECT * FROM Users"}".</msg>
<status status="PASS" endtime="20161122 00:09:21.585" starttime="20161122 00:09:21.584"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:21.719" starttime="20161122 00:09:21.585"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:21.720" starttime="20161122 00:09:21.719"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:21.721" level="INFO">${resBody} = {"TalentpoolId":5937,"Title":"SELECT * FROM Users","Owner":{"UserId":48,"FirstName":"Jeffrey","LastName":"Trattner"},"CreatedDate":"2016-11-22T08:09:21.757","ModifierId":1,"ModifiedDate":"2016-11-22T0...</msg>
<status status="PASS" endtime="20161122 00:09:21.721" starttime="20161122 00:09:21.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.722" level="INFO">{"TalentpoolId":5937,"Title":"SELECT * FROM Users","Owner":{"UserId":48,"FirstName":"Jeffrey","LastName":"Trattner"},"CreatedDate":"2016-11-22T08:09:21.757","ModifierId":1,"ModifiedDate":"2016-11-22T08:09:21.757","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:21.722" starttime="20161122 00:09:21.722"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:21.724" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'SELECT * FROM Users', u'TalentpoolId': 5937, u'ModifiedDate': u'2016-11-22T08:09:21.757', u'CreatedDate': u'2016-11-22T08:09:21.757', u'Owner': {u'LastName': u'Trattne...</msg>
<status status="PASS" endtime="20161122 00:09:21.724" starttime="20161122 00:09:21.723"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:21.725" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'SELECT * FROM Users', u'CreatedDate': u'2016-11-22T08:09:21.757', u'ModifiedDate': u'2016-11-22T08:09:21.757', u'TalentpoolId': 5937, u'Owner': {u'LastName': u'Trattne...</msg>
<status status="PASS" endtime="20161122 00:09:21.725" starttime="20161122 00:09:21.724"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:21.726" level="INFO">${keyValue} = SELECT * FROM Users</msg>
<status status="PASS" endtime="20161122 00:09:21.727" starttime="20161122 00:09:21.725"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:21.727" starttime="20161122 00:09:21.579"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Security_SQL

*Description:*
verify sql injection fails

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:21.727" critical="yes" starttime="20161122 00:09:21.460"></status>
</test>
<test id="s1-s1-t15" name="POST-API_TPC_Characters_Extended3">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:21.802" starttime="20161122 00:09:21.731"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:21.850" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161122 00:09:21.851" starttime="20161122 00:09:21.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.851" level="INFO">514</msg>
<status status="PASS" endtime="20161122 00:09:21.851" starttime="20161122 00:09:21.851"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:21.861" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:21.861" starttime="20161122 00:09:21.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.862" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161122 00:09:21.862" starttime="20161122 00:09:21.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.863" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:21.863" starttime="20161122 00:09:21.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.864" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:21.864" starttime="20161122 00:09:21.863"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:21.865" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:21.865" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:21.865" starttime="20161122 00:09:21.865"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.866" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:21.866" starttime="20161122 00:09:21.866"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.867" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161122 00:09:21.867" starttime="20161122 00:09:21.866"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.868" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:21.868" starttime="20161122 00:09:21.867"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:21.868" starttime="20161122 00:09:21.731"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:21.869" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:21.869" starttime="20161122 00:09:21.869"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:21.873" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:21.873" starttime="20161122 00:09:21.870"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:21.894" starttime="20161122 00:09:21.873"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:21.895" starttime="20161122 00:09:21.895"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:21.896" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:21.896" starttime="20161122 00:09:21.895"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:21.897" starttime="20161122 00:09:21.896"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:21.897" starttime="20161122 00:09:21.869"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>\ º¿¬¬½¼¡«»¦¦¦¦¦¦¦++¦¦++++++--+-+¦¦++--¦-+----++++++</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:21.909" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:21.909" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:21.910" starttime="20161122 00:09:21.909"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.910" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:21.910" starttime="20161122 00:09:21.910"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.911" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161122 00:09:21.911" starttime="20161122 00:09:21.911"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.912" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:21.912" starttime="20161122 00:09:21.911"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:21.913" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:21.913" starttime="20161122 00:09:21.912"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.913" level="INFO">Request body set to "{ "Title":" º¿¬¬½¼¡«»¦¦¦¦¦¦¦++¦¦++++++--+-+¦¦++--¦-+----++++++"}".</msg>
<status status="PASS" endtime="20161122 00:09:21.913" starttime="20161122 00:09:21.913"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:21.976" starttime="20161122 00:09:21.914"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:21.977" starttime="20161122 00:09:21.977"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:21.978" level="INFO">${resBody} = {"TalentpoolId":5938,"Title":"\xc2\xba\xc2\xbf\xc2\xac\xc2\xac\xc2\xbd\xc2\xbc\xc2\xa1\xc2\xab\xc2\xbb\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6++\xc2\xa6\xc2\xa6++++++--+-+\xc2\xa6\xc2\...</msg>
<status status="PASS" endtime="20161122 00:09:21.978" starttime="20161122 00:09:21.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:21.979" level="INFO">{"TalentpoolId":5938,"Title":"\xc2\xba\xc2\xbf\xc2\xac\xc2\xac\xc2\xbd\xc2\xbc\xc2\xa1\xc2\xab\xc2\xbb\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6++\xc2\xa6\xc2\xa6++++++--+-+\xc2\xa6\xc2\xa6++--\xc2\xa6-+----++++++","Owner":{"UserId":514,"FirstName":"Juan","LastName":"Valle"},"CreatedDate":"2016-11-22T08:09:22.053","ModifierId":1,"ModifiedDate":"2016-11-22T08:09:22.053","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:21.979" starttime="20161122 00:09:21.978"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:21.980" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\xba\xbf\xac\xac\xbd\xbc\xa1\xab\xbb\xa6\xa6\xa6\xa6\xa6\xa6\xa6++\xa6\xa6++++++--+-+\xa6\xa6++--\xa6-+----++++++', u'TalentpoolId': 5938, u'ModifiedDate': u'2016-11-2...</msg>
<status status="PASS" endtime="20161122 00:09:21.980" starttime="20161122 00:09:21.980"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:21.981" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\xba\xbf\xac\xac\xbd\xbc\xa1\xab\xbb\xa6\xa6\xa6\xa6\xa6\xa6\xa6++\xa6\xa6++++++--+-+\xa6\xa6++--\xa6-+----++++++', u'CreatedDate': u'2016-11-22T08:09:22.053', u'Modif...</msg>
<status status="PASS" endtime="20161122 00:09:21.981" starttime="20161122 00:09:21.981"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:21.982" level="INFO">${keyValue} = º¿¬¬½¼¡«»¦¦¦¦¦¦¦++¦¦++++++--+-+¦¦++--¦-+----++++++</msg>
<status status="PASS" endtime="20161122 00:09:21.982" starttime="20161122 00:09:21.981"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:21.982" starttime="20161122 00:09:21.907"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended3

*Description:*
verify ASCII characters 3

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:21.982" critical="yes" starttime="20161122 00:09:21.728"></status>
</test>
<test id="s1-s1-t16" name="POST-API_TPC_Characters_Extended4">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:22.022" starttime="20161122 00:09:21.986"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:22.080" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:22.080" starttime="20161122 00:09:22.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.081" level="INFO">1336</msg>
<status status="PASS" endtime="20161122 00:09:22.081" starttime="20161122 00:09:22.080"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:22.084" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:22.084" starttime="20161122 00:09:22.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.085" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:22.085" starttime="20161122 00:09:22.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.086" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:22.086" starttime="20161122 00:09:22.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.087" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:22.087" starttime="20161122 00:09:22.086"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:22.087" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:22.088" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:22.088" starttime="20161122 00:09:22.087"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.089" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:22.089" starttime="20161122 00:09:22.088"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.089" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:22.089" starttime="20161122 00:09:22.089"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.090" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:22.090" starttime="20161122 00:09:22.090"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:22.090" starttime="20161122 00:09:21.985"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:22.092" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:22.092" starttime="20161122 00:09:22.091"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:22.095" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:22.095" starttime="20161122 00:09:22.092"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:22.117" starttime="20161122 00:09:22.095"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:22.117" starttime="20161122 00:09:22.117"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:22.118" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:22.118" starttime="20161122 00:09:22.118"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:22.118" starttime="20161122 00:09:22.118"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:22.119" starttime="20161122 00:09:22.091"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:22.126" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:22.126" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:22.126" starttime="20161122 00:09:22.125"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.127" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:22.127" starttime="20161122 00:09:22.126"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.127" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:22.128" starttime="20161122 00:09:22.127"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.128" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:22.128" starttime="20161122 00:09:22.128"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:22.129" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:22.129" starttime="20161122 00:09:22.129"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.130" level="INFO">Request body set to "{ "Title":"++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ"}".</msg>
<status status="PASS" endtime="20161122 00:09:22.130" starttime="20161122 00:09:22.129"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:22.223" starttime="20161122 00:09:22.130"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:22.224" starttime="20161122 00:09:22.223"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:22.225" level="INFO">${resBody} = {"TalentpoolId":5939,"Title":"++\xc2\xa6_\xc2\xa6\xc2\xa6\xc2\xafa\xc3\x9fGpSs\xc2\xb5tFTOd8fen=\xc2\xb1==()\xc3\xb7\xcb\x9c\xc2\xb0\xe2\x80\xa2\xc2\xb7vn\xc2\xb2\xc2\xa6\xe2\x82\xac\xe2\x80\x9e\xe2\x...</msg>
<status status="PASS" endtime="20161122 00:09:22.225" starttime="20161122 00:09:22.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.226" level="INFO">{"TalentpoolId":5939,"Title":"++\xc2\xa6_\xc2\xa6\xc2\xa6\xc2\xafa\xc3\x9fGpSs\xc2\xb5tFTOd8fen=\xc2\xb1==()\xc3\xb7\xcb\x9c\xc2\xb0\xe2\x80\xa2\xc2\xb7vn\xc2\xb2\xc2\xa6\xe2\x82\xac\xe2\x80\x9e\xe2\x80\xa6\xe2\x80\xa0\xe2\x80\xa1\xcb\x86\xe2\x80\xb0\xc5\xa0\xe2\x80\xb9\xc5\x92\xc5\xbd","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-22T08:09:22.29","ModifierId":1,"ModifiedDate":"2016-11-22T08:09:22.29","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:22.226" starttime="20161122 00:09:22.225"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:22.227" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'++\xa6_\xa6\xa6\xafa\xdfGpSs\xb5tFTOd8fen=\xb1==()\xf7\u02dc\xb0\u2022\xb7vn\xb2\xa6\u20ac\u201e\u2026\u2020\u2021\u02c6\u2030\u0160\u2039\u0152\u017d', u'TalentpoolId...</msg>
<status status="PASS" endtime="20161122 00:09:22.227" starttime="20161122 00:09:22.226"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:22.228" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'++\xa6_\xa6\xa6\xafa\xdfGpSs\xb5tFTOd8fen=\xb1==()\xf7\u02dc\xb0\u2022\xb7vn\xb2\xa6\u20ac\u201e\u2026\u2020\u2021\u02c6\u2030\u0160\u2039\u0152\u017d', u'CreatedDate'...</msg>
<status status="PASS" endtime="20161122 00:09:22.228" starttime="20161122 00:09:22.227"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:22.230" level="INFO">${keyValue} = ++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ</msg>
<status status="PASS" endtime="20161122 00:09:22.230" starttime="20161122 00:09:22.229"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:22.230" starttime="20161122 00:09:22.125"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended4

*Description:*
verify ASCII characters 4

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:22.230" critical="yes" starttime="20161122 00:09:21.983"></status>
</test>
<test id="s1-s1-t17" name="POST-API_TPC_Characters_Extended5">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:22.286" starttime="20161122 00:09:22.235"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:22.313" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161122 00:09:22.314" starttime="20161122 00:09:22.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.314" level="INFO">514</msg>
<status status="PASS" endtime="20161122 00:09:22.315" starttime="20161122 00:09:22.314"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:22.327" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:22.327" starttime="20161122 00:09:22.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.328" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20161122 00:09:22.328" starttime="20161122 00:09:22.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.329" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:22.329" starttime="20161122 00:09:22.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.330" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:22.330" starttime="20161122 00:09:22.329"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:22.331" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:22.331" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:22.331" starttime="20161122 00:09:22.330"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.331" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:22.332" starttime="20161122 00:09:22.331"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.332" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161122 00:09:22.332" starttime="20161122 00:09:22.332"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.333" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:22.333" starttime="20161122 00:09:22.333"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:22.333" starttime="20161122 00:09:22.234"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:22.335" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:22.335" starttime="20161122 00:09:22.334"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:22.338" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:22.338" starttime="20161122 00:09:22.335"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:22.358" starttime="20161122 00:09:22.338"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:22.358" starttime="20161122 00:09:22.358"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:22.359" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:22.359" starttime="20161122 00:09:22.358"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:22.359" starttime="20161122 00:09:22.359"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:22.360" starttime="20161122 00:09:22.334"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:22.367" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:22.367" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:22.367" starttime="20161122 00:09:22.367"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.368" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:22.368" starttime="20161122 00:09:22.368"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.369" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20161122 00:09:22.369" starttime="20161122 00:09:22.368"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.370" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:22.370" starttime="20161122 00:09:22.369"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:22.370" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:22.371" starttime="20161122 00:09:22.370"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.372" level="INFO">Request body set to "{ "Title":"‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ"}".</msg>
<status status="PASS" endtime="20161122 00:09:22.372" starttime="20161122 00:09:22.371"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:22.445" starttime="20161122 00:09:22.373"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:22.446" starttime="20161122 00:09:22.445"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:22.447" level="INFO">${resBody} = {"TalentpoolId":5940,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\x...</msg>
<status status="PASS" endtime="20161122 00:09:22.447" starttime="20161122 00:09:22.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.448" level="INFO">{"TalentpoolId":5940,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\xc2\xae\xc2\xaf\xc2\xb3\xc2\xb4\xc2\xb8U\xc2\xbe\xc3\x80\xc3\x81\xc3\x82\xc3\x83\xc3\x84\xc3\x85\xc3\x88\xc3\x89\xc3\x8a\xc3\x8b\xc3\x8c\xc3\x8d\xc3\x8e\xc3\x8f\xc3\x90\xc3\x92\xc3\x93\xc3\x94\xc3\x95\xc3\x96\xc3\x97\xc3\x98\xc3\x99\xc3\x9a\xc3\x9b\xc3\x9c","Owner":{"UserId":514,"FirstName":"Juan","LastName":"Valle"},"CreatedDate":"2016-11-22T08:09:22.507","ModifierId":1,"ModifiedDate":"2016-11-22T08:09:22.507","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:22.448" starttime="20161122 00:09:22.447"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:22.449" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20161122 00:09:22.449" starttime="20161122 00:09:22.448"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:22.450" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20161122 00:09:22.450" starttime="20161122 00:09:22.449"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:22.451" level="INFO">${keyValue} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20161122 00:09:22.451" starttime="20161122 00:09:22.450"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:22.451" starttime="20161122 00:09:22.366"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended5

*Description:*
verify ASCII characters 5

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:22.451" critical="yes" starttime="20161122 00:09:22.231"></status>
</test>
<test id="s1-s1-t18" name="POST-API_TPC_Characters_Extended6">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:22.517" starttime="20161122 00:09:22.454"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:22.595" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161122 00:09:22.595" starttime="20161122 00:09:22.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.596" level="INFO">48</msg>
<status status="PASS" endtime="20161122 00:09:22.596" starttime="20161122 00:09:22.595"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:22.604" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:22.604" starttime="20161122 00:09:22.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.605" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161122 00:09:22.605" starttime="20161122 00:09:22.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.606" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:22.606" starttime="20161122 00:09:22.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.607" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:22.607" starttime="20161122 00:09:22.607"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:22.608" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:22.608" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:22.608" starttime="20161122 00:09:22.607"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.608" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:22.609" starttime="20161122 00:09:22.608"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.609" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161122 00:09:22.609" starttime="20161122 00:09:22.609"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.610" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:22.610" starttime="20161122 00:09:22.610"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:22.610" starttime="20161122 00:09:22.453"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:22.612" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:22.612" starttime="20161122 00:09:22.612"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:22.616" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:22.616" starttime="20161122 00:09:22.613"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:22.635" starttime="20161122 00:09:22.616"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:22.636" starttime="20161122 00:09:22.636"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:22.637" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:22.637" starttime="20161122 00:09:22.636"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:22.637" starttime="20161122 00:09:22.637"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:22.638" starttime="20161122 00:09:22.611"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>ÝÞãðýþ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:22.645" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:22.645" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:22.645" starttime="20161122 00:09:22.644"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.646" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:22.646" starttime="20161122 00:09:22.645"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.646" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161122 00:09:22.647" starttime="20161122 00:09:22.646"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.647" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:22.648" starttime="20161122 00:09:22.647"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:22.648" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:22.648" starttime="20161122 00:09:22.648"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.649" level="INFO">Request body set to "{ "Title":"ÝÞãðýþ"}".</msg>
<status status="PASS" endtime="20161122 00:09:22.649" starttime="20161122 00:09:22.649"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:22.727" starttime="20161122 00:09:22.649"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:22.728" starttime="20161122 00:09:22.727"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:22.729" level="INFO">${resBody} = {"TalentpoolId":5941,"Title":"\xc3\x9d\xc3\x9e\xc3\xa3\xc3\xb0\xc3\xbd\xc3\xbe","Owner":{"UserId":48,"FirstName":"Jeffrey","LastName":"Trattner"},"CreatedDate":"2016-11-22T08:09:22.79","ModifierId":1,...</msg>
<status status="PASS" endtime="20161122 00:09:22.729" starttime="20161122 00:09:22.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:22.730" level="INFO">{"TalentpoolId":5941,"Title":"\xc3\x9d\xc3\x9e\xc3\xa3\xc3\xb0\xc3\xbd\xc3\xbe","Owner":{"UserId":48,"FirstName":"Jeffrey","LastName":"Trattner"},"CreatedDate":"2016-11-22T08:09:22.79","ModifierId":1,"ModifiedDate":"2016-11-22T08:09:22.79","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:22.730" starttime="20161122 00:09:22.729"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:22.731" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\xdd\xde\xe3\xf0\xfd\xfe', u'TalentpoolId': 5941, u'ModifiedDate': u'2016-11-22T08:09:22.79', u'CreatedDate': u'2016-11-22T08:09:22.79', u'Owner': {u'LastName': u'Trat...</msg>
<status status="PASS" endtime="20161122 00:09:22.731" starttime="20161122 00:09:22.730"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:22.731" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\xdd\xde\xe3\xf0\xfd\xfe', u'CreatedDate': u'2016-11-22T08:09:22.79', u'ModifiedDate': u'2016-11-22T08:09:22.79', u'TalentpoolId': 5941, u'Owner': {u'LastName': u'Trat...</msg>
<status status="PASS" endtime="20161122 00:09:22.731" starttime="20161122 00:09:22.731"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:22.732" level="INFO">${keyValue} = ÝÞãðýþ</msg>
<status status="PASS" endtime="20161122 00:09:22.732" starttime="20161122 00:09:22.732"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:22.732" starttime="20161122 00:09:22.644"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended6

*Description:*
verify ASCII characters 6

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:22.733" critical="yes" starttime="20161122 00:09:22.452"></status>
</test>
<test id="s1-s1-t19" name="POST-API_TPC_Foreign_Russian">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:23.020" starttime="20161122 00:09:22.735"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:23.128" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161122 00:09:23.128" starttime="20161122 00:09:23.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.129" level="INFO">415</msg>
<status status="PASS" endtime="20161122 00:09:23.129" starttime="20161122 00:09:23.128"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:23.149" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:23.149" starttime="20161122 00:09:23.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.150" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161122 00:09:23.150" starttime="20161122 00:09:23.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.151" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:23.151" starttime="20161122 00:09:23.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.152" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:23.152" starttime="20161122 00:09:23.151"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:23.152" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:23.153" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:23.153" starttime="20161122 00:09:23.152"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.154" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:23.154" starttime="20161122 00:09:23.153"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.154" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161122 00:09:23.155" starttime="20161122 00:09:23.154"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.155" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:23.155" starttime="20161122 00:09:23.155"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:23.155" starttime="20161122 00:09:22.735"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:23.157" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:23.157" starttime="20161122 00:09:23.156"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:23.160" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:23.160" starttime="20161122 00:09:23.157"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:23.178" starttime="20161122 00:09:23.161"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:23.178" starttime="20161122 00:09:23.178"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:23.179" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:23.179" starttime="20161122 00:09:23.179"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:23.180" starttime="20161122 00:09:23.179"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:23.180" starttime="20161122 00:09:23.156"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>ёъяшертыуиопющэасдфгчйкльжзхцвбнмЁЪЯШЕРТЫУИОПЮЩЭЖЬ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:23.187" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:23.187" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:23.187" starttime="20161122 00:09:23.186"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.188" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:23.188" starttime="20161122 00:09:23.187"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.189" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161122 00:09:23.189" starttime="20161122 00:09:23.188"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.189" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:23.189" starttime="20161122 00:09:23.189"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:23.190" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:23.190" starttime="20161122 00:09:23.190"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.191" level="INFO">Request body set to "{ "Title":"ёъяшертыуиопющэасдфгчйкльжзхцвбнмЁЪЯШЕРТЫУИОПЮЩЭЖЬ"}".</msg>
<status status="PASS" endtime="20161122 00:09:23.191" starttime="20161122 00:09:23.190"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:23.398" starttime="20161122 00:09:23.191"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:23.399" starttime="20161122 00:09:23.398"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:23.400" level="INFO">${resBody} = {"TalentpoolId":5942,"Title":"\xd1\x91\xd1\x8a\xd1\x8f\xd1\x88\xd0\xb5\xd1\x80\xd1\x82\xd1\x8b\xd1\x83\xd0\xb8\xd0\xbe\xd0\xbf\xd1\x8e\xd1\x89\xd1\x8d\xd0\xb0\xd1\x81\xd0\xb4\xd1\x84\xd0\xb3\xd1\x87\x...</msg>
<status status="PASS" endtime="20161122 00:09:23.400" starttime="20161122 00:09:23.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.401" level="INFO">{"TalentpoolId":5942,"Title":"\xd1\x91\xd1\x8a\xd1\x8f\xd1\x88\xd0\xb5\xd1\x80\xd1\x82\xd1\x8b\xd1\x83\xd0\xb8\xd0\xbe\xd0\xbf\xd1\x8e\xd1\x89\xd1\x8d\xd0\xb0\xd1\x81\xd0\xb4\xd1\x84\xd0\xb3\xd1\x87\xd0\xb9\xd0\xba\xd0\xbb\xd1\x8c\xd0\xb6\xd0\xb7\xd1\x85\xd1\x86\xd0\xb2\xd0\xb1\xd0\xbd\xd0\xbc\xd0\x81\xd0\xaa\xd0\xaf\xd0\xa8\xd0\x95\xd0\xa0\xd0\xa2\xd0\xab\xd0\xa3\xd0\x98\xd0\x9e\xd0\x9f\xd0\xae\xd0\xa9\xd0\xad\xd0\x96\xd0\xac","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-22T08:09:23.383","ModifierId":1,"ModifiedDate":"2016-11-22T08:09:23.383","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:23.401" starttime="20161122 00:09:23.400"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:23.402" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u0451\u044a\u044f\u0448\u0435\u0440\u0442\u044b\u0443\u0438\u043e\u043f\u044e\u0449\u044d\u0430\u0441\u0434\u0444\u0433\u0447\u0439\u043a\u043b\u044c\u0436\u0437\u044...</msg>
<status status="PASS" endtime="20161122 00:09:23.402" starttime="20161122 00:09:23.401"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:23.403" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u0451\u044a\u044f\u0448\u0435\u0440\u0442\u044b\u0443\u0438\u043e\u043f\u044e\u0449\u044d\u0430\u0441\u0434\u0444\u0433\u0447\u0439\u043a\u043b\u044c\u0436\u0437\u044...</msg>
<status status="PASS" endtime="20161122 00:09:23.403" starttime="20161122 00:09:23.402"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:23.404" level="INFO">${keyValue} = ёъяшертыуиопющэасдфгчйкльжзхцвбнмЁЪЯШЕРТЫУИОПЮЩЭЖЬ</msg>
<status status="PASS" endtime="20161122 00:09:23.404" starttime="20161122 00:09:23.403"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:23.404" starttime="20161122 00:09:23.186"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Foreign_Russian

*Description:*
verify russian alphabet

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:23.404" critical="yes" starttime="20161122 00:09:22.733"></status>
</test>
<test id="s1-s1-t20" name="POST-API_TPC_Foreign_Arabic">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:23.470" starttime="20161122 00:09:23.409"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:23.483" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161122 00:09:23.483" starttime="20161122 00:09:23.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.484" level="INFO">415</msg>
<status status="PASS" endtime="20161122 00:09:23.485" starttime="20161122 00:09:23.484"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:23.492" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:23.492" starttime="20161122 00:09:23.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.493" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161122 00:09:23.493" starttime="20161122 00:09:23.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.494" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:23.494" starttime="20161122 00:09:23.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.495" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:23.495" starttime="20161122 00:09:23.495"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:23.496" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:23.496" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:23.496" starttime="20161122 00:09:23.495"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.497" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:23.497" starttime="20161122 00:09:23.496"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.497" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161122 00:09:23.497" starttime="20161122 00:09:23.497"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.497" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:23.497" starttime="20161122 00:09:23.497"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:23.499" starttime="20161122 00:09:23.408"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:23.500" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:23.500" starttime="20161122 00:09:23.499"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:23.503" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:23.504" starttime="20161122 00:09:23.500"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:23.526" starttime="20161122 00:09:23.504"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:23.526" starttime="20161122 00:09:23.526"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:23.527" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:23.527" starttime="20161122 00:09:23.527"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:23.527" starttime="20161122 00:09:23.527"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:23.527" starttime="20161122 00:09:23.499"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>غظضذخثتشرقصفعسنملكيطحزوهدجباشغظذخثتسرقضفعصنملكيطحز</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:23.535" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:23.535" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:23.535" starttime="20161122 00:09:23.534"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.536" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:23.536" starttime="20161122 00:09:23.535"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.536" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161122 00:09:23.536" starttime="20161122 00:09:23.536"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.537" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:23.537" starttime="20161122 00:09:23.537"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:23.538" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:23.538" starttime="20161122 00:09:23.538"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.539" level="INFO">Request body set to "{ "Title":"غظضذخثتشرقصفعسنملكيطحزوهدجباشغظذخثتسرقضفعصنملكيطحز"}".</msg>
<status status="PASS" endtime="20161122 00:09:23.539" starttime="20161122 00:09:23.538"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:23.714" starttime="20161122 00:09:23.540"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:23.715" starttime="20161122 00:09:23.715"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:23.716" level="INFO">${resBody} = {"TalentpoolId":5943,"Title":"\xd8\xba\xd8\xb8\xd8\xb6\xd8\xb0\xd8\xae\xd8\xab\xd8\xaa\xd8\xb4\xd8\xb1\xd9\x82\xd8\xb5\xd9\x81\xd8\xb9\xd8\xb3\xd9\x86\xd9\x85\xd9\x84\xd9\x83\xd9\x8a\xd8\xb7\xd8\xad\x...</msg>
<status status="PASS" endtime="20161122 00:09:23.716" starttime="20161122 00:09:23.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.717" level="INFO">{"TalentpoolId":5943,"Title":"\xd8\xba\xd8\xb8\xd8\xb6\xd8\xb0\xd8\xae\xd8\xab\xd8\xaa\xd8\xb4\xd8\xb1\xd9\x82\xd8\xb5\xd9\x81\xd8\xb9\xd8\xb3\xd9\x86\xd9\x85\xd9\x84\xd9\x83\xd9\x8a\xd8\xb7\xd8\xad\xd8\xb2\xd9\x88\xd9\x87\xd8\xaf\xd8\xac\xd8\xa8\xd8\xa7\xd8\xb4\xd8\xba\xd8\xb8\xd8\xb0\xd8\xae\xd8\xab\xd8\xaa\xd8\xb3\xd8\xb1\xd9\x82\xd8\xb6\xd9\x81\xd8\xb9\xd8\xb5\xd9\x86\xd9\x85\xd9\x84\xd9\x83\xd9\x8a\xd8\xb7\xd8\xad\xd8\xb2","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-11-22T08:09:23.727","ModifierId":1,"ModifiedDate":"2016-11-22T08:09:23.727","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:23.717" starttime="20161122 00:09:23.717"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:23.718" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u063a\u0638\u0636\u0630\u062e\u062b\u062a\u0634\u0631\u0642\u0635\u0641\u0639\u0633\u0646\u0645\u0644\u0643\u064a\u0637\u062d\u0632\u0648\u0647\u062f\u062c\u0628\u062...</msg>
<status status="PASS" endtime="20161122 00:09:23.718" starttime="20161122 00:09:23.718"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:23.719" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u063a\u0638\u0636\u0630\u062e\u062b\u062a\u0634\u0631\u0642\u0635\u0641\u0639\u0633\u0646\u0645\u0644\u0643\u064a\u0637\u062d\u0632\u0648\u0647\u062f\u062c\u0628\u062...</msg>
<status status="PASS" endtime="20161122 00:09:23.719" starttime="20161122 00:09:23.719"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:23.720" level="INFO">${keyValue} = غظضذخثتشرقصفعسنملكيطحزوهدجباشغظذخثتسرقضفعصنملكيطحز</msg>
<status status="PASS" endtime="20161122 00:09:23.720" starttime="20161122 00:09:23.719"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:23.720" starttime="20161122 00:09:23.534"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Foreign_Arabic

*Description:*
verify arabic alphabet

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:23.720" critical="yes" starttime="20161122 00:09:23.405"></status>
</test>
<test id="s1-s1-t21" name="POST-API_TPC_Access_Does_Not_Exist">
<kw name="REST_NOAUTH_NonExistentUser" library="SMP_Keywords">
<doc>*REST_NOAUTH_NonExistentUser:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:23.811" starttime="20161122 00:09:23.723"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:23.825" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20161122 00:09:23.825" starttime="20161122 00:09:23.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.826" level="INFO">2347</msg>
<status status="PASS" endtime="20161122 00:09:23.826" starttime="20161122 00:09:23.826"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT 1</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:23.845" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:23.845" starttime="20161122 00:09:23.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.846" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20161122 00:09:23.846" starttime="20161122 00:09:23.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.848" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:23.848" starttime="20161122 00:09:23.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.848" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:23.848" starttime="20161122 00:09:23.848"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:23.849" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:23.849" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:23.849" starttime="20161122 00:09:23.849"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.850" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:23.850" starttime="20161122 00:09:23.850"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.851" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20161122 00:09:23.851" starttime="20161122 00:09:23.850"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.852" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:23.852" starttime="20161122 00:09:23.851"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:23.852" starttime="20161122 00:09:23.722"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:23.854" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:23.854" starttime="20161122 00:09:23.853"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:23.857" level="INFO">Request body set to "{   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_2347",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:23.857" starttime="20161122 00:09:23.854"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:23.893" starttime="20161122 00:09:23.858"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:23.893" starttime="20161122 00:09:23.893"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:23.894" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:23.894" starttime="20161122 00:09:23.893"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:23.895" starttime="20161122 00:09:23.894"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:23.895" starttime="20161122 00:09:23.853"></status>
</kw>
<kw name="POST_TalentPool_Create_Empty_String" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>InnocentName</arg>
<arg>Title</arg>
<arg>500</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:23.902" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:23.902" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:23.902" starttime="20161122 00:09:23.902"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.903" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:23.903" starttime="20161122 00:09:23.903"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.904" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20161122 00:09:23.904" starttime="20161122 00:09:23.903"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.904" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:23.905" starttime="20161122 00:09:23.904"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:23.905" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20161122 00:09:23.905" starttime="20161122 00:09:23.905"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161122 00:09:23.906" starttime="20161122 00:09:23.905"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"${KEY_NAME_JSON}\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20161122 00:09:23.907" level="INFO">Request body set to "{ "Title":"InnocentName"}".</msg>
<status status="PASS" endtime="20161122 00:09:23.907" starttime="20161122 00:09:23.906"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:23.999" starttime="20161122 00:09:23.907"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:23.999" starttime="20161122 00:09:23.999"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:24.000" level="INFO">${resBody} = {"Message":"An error has occurred.","ExceptionMessage":"The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_ou_owner_id_user\". The conflict occurred in database \"ces_qa052-auto-smp-...</msg>
<status status="PASS" endtime="20161122 00:09:24.000" starttime="20161122 00:09:24.000"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20161122 00:09:24.001" level="INFO">Set test message to:
The {"Message":"An error has occurred.","ExceptionMessage":"The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_ou_owner_id_user\". The conflict occurred in database \"ces_qa052-auto-smp-API\", table \"dbo.users\", column 'user_id'.\r\nCannot insert the value NULL into column 'ou_id', table 'ces_qa052-auto-smp-API.dbo.ou_tree'; column does not allow nulls. INSERT fails.\r\nCannot insert the value NULL into column 'child_id', table 'ces_qa052-auto-smp-API.dbo.ou_speed'; column does not allow nulls. INSERT fails.\r\nCannot insert the value NULL into column 'ou_id', table 'ces_qa052-auto-smp-API.dbo.ou_audit'; column does not allow nulls. INSERT fails.\r\nThe statement has been terminated.\r\nThe statement has been terminated.\r\nThe statement has been terminated.\r\nThe statement has been terminated.","ExceptionType":"System.Data.SqlClient.SqlException","StackTrace":"   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean&amp; dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task&amp; task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task&amp; task, Boolean asyncWrite)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext,TResult](TTarget target, Func`3 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)\r\n   at System.Data.Entity.Infrastructure.Interception.DbCommandDispatcher.Reader(DbCommand command, DbCommandInterceptionContext interceptionContext)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryInternal[TElement](String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.&lt;&gt;c__DisplayClass65`1.&lt;ExecuteStoreQueryReliably&gt;b__64()\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteInTransaction[T](Func`1 func, IDbExecutionStrategy executionStrategy, Boolean startLocalTransaction, Boolean releaseConnectionOnSuccess)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.&lt;&gt;c__DisplayClass65`1.&lt;ExecuteStoreQueryReliably&gt;b__63()\r\n   at System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute[TResult](Func`1 operation)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryReliably[TElement](String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQuery[TElement](String commandText, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Internal.InternalContext.&lt;&gt;c__DisplayClass14`1.&lt;ExecuteSqlQuery&gt;b__13()\r\n   at System.Data.Entity.Internal.LazyEnumerator`1.MoveNext()\r\n   at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source)\r\n   at Cornerstone.Smp.TalentPool.Data.TalentPoolRepository.AddTalentPool(OuEntity entity) in C:\\TeamCity\\buildAgent\\work\\ad1d4b4f19fc2a49\\src\\TalentPool.Data\\TalentPoolRepository.cs:line 80\r\n   at Cornerstone.Smp.TalentPool.Core.Services.TalentPoolService.CreateTalentPool(TalentPoolRequestModel model) in C:\\TeamCity\\buildAgent\\work\\ad1d4b4f19fc2a49\\src\\TalentPool.Core\\Services\\Impl\\TalentPoolService.cs:line 141\r\n   at Cornerstone.Smp.TalentPool.Api.TalentPoolController.CreateTalentPool(TalentPoolRequestModel request) in C:\\TeamCity\\buildAgent\\work\\ad1d4b4f19fc2a49\\src\\TalentPool.Api\\Controllers\\TalentPoolController.cs:line 73\r\n   at lambda_method(Closure , Object , Object[] )\r\n   at System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.&lt;&gt;c__DisplayClass10.&lt;GetExecutor&gt;b__9(Object instance, Object[] methodParameters)\r\n   at System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(HttpControllerContext controllerContext, IDictionary`2 arguments, CancellationToken cancellationToken)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Controllers.ApiControllerActionInvoker.&lt;InvokeActionAsyncCore&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Controllers.ActionFilterResult.&lt;ExecuteAsync&gt;d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Filters.AuthorizationFilterAttribute.&lt;ExecuteAuthorizationFilterAsyncCore&gt;d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Controllers.ExceptionFilterResult.&lt;ExecuteAsync&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Web.Http.Controllers.ExceptionFilterResult.&lt;ExecuteAsync&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Dispatcher.HttpControllerDispatcher.&lt;SendAsync&gt;d__1.MoveNext()"} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20161122 00:09:24.001" starttime="20161122 00:09:24.000"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:24.002" starttime="20161122 00:09:23.901"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Access_DNE

*Description:*
verify failure when user does not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:24.002" critical="yes" starttime="20161122 00:09:23.721">The {"Message":"An error has occurred.","ExceptionMessage":"The INSERT statement conflicted with the FOREIGN KEY constraint \"FK_ou_owner_id_user\". The conflict occurred in database \"ces_qa052-auto-smp-API\", table \"dbo.users\", column 'user_id'.\r\nCannot insert the value NULL into column 'ou_id', table 'ces_qa052-auto-smp-API.dbo.ou_tree'; column does not allow nulls. INSERT fails.\r\nCannot insert the value NULL into column 'child_id', table 'ces_qa052-auto-smp-API.dbo.ou_speed'; column does not allow nulls. INSERT fails.\r\nCannot insert the value NULL into column 'ou_id', table 'ces_qa052-auto-smp-API.dbo.ou_audit'; column does not allow nulls. INSERT fails.\r\nThe statement has been terminated.\r\nThe statement has been terminated.\r\nThe statement has been terminated.\r\nThe statement has been terminated.","ExceptionType":"System.Data.SqlClient.SqlException","StackTrace":"   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean&amp; dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task&amp; task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task&amp; task, Boolean asyncWrite)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext,TResult](TTarget target, Func`3 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)\r\n   at System.Data.Entity.Infrastructure.Interception.DbCommandDispatcher.Reader(DbCommand command, DbCommandInterceptionContext interceptionContext)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryInternal[TElement](String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.&lt;&gt;c__DisplayClass65`1.&lt;ExecuteStoreQueryReliably&gt;b__64()\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteInTransaction[T](Func`1 func, IDbExecutionStrategy executionStrategy, Boolean startLocalTransaction, Boolean releaseConnectionOnSuccess)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.&lt;&gt;c__DisplayClass65`1.&lt;ExecuteStoreQueryReliably&gt;b__63()\r\n   at System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute[TResult](Func`1 operation)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQueryReliably[TElement](String commandText, String entitySetName, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteStoreQuery[TElement](String commandText, ExecutionOptions executionOptions, Object[] parameters)\r\n   at System.Data.Entity.Internal.InternalContext.&lt;&gt;c__DisplayClass14`1.&lt;ExecuteSqlQuery&gt;b__13()\r\n   at System.Data.Entity.Internal.LazyEnumerator`1.MoveNext()\r\n   at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source)\r\n   at Cornerstone.Smp.TalentPool.Data.TalentPoolRepository.AddTalentPool(OuEntity entity) in C:\\TeamCity\\buildAgent\\work\\ad1d4b4f19fc2a49\\src\\TalentPool.Data\\TalentPoolRepository.cs:line 80\r\n   at Cornerstone.Smp.TalentPool.Core.Services.TalentPoolService.CreateTalentPool(TalentPoolRequestModel model) in C:\\TeamCity\\buildAgent\\work\\ad1d4b4f19fc2a49\\src\\TalentPool.Core\\Services\\Impl\\TalentPoolService.cs:line 141\r\n   at Cornerstone.Smp.TalentPool.Api.TalentPoolController.CreateTalentPool(TalentPoolRequestModel request) in C:\\TeamCity\\buildAgent\\work\\ad1d4b4f19fc2a49\\src\\TalentPool.Api\\Controllers\\TalentPoolController.cs:line 73\r\n   at lambda_method(Closure , Object , Object[] )\r\n   at System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.&lt;&gt;c__DisplayClass10.&lt;GetExecutor&gt;b__9(Object instance, Object[] methodParameters)\r\n   at System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(HttpControllerContext controllerContext, IDictionary`2 arguments, CancellationToken cancellationToken)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Controllers.ApiControllerActionInvoker.&lt;InvokeActionAsyncCore&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Controllers.ActionFilterResult.&lt;ExecuteAsync&gt;d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Filters.AuthorizationFilterAttribute.&lt;ExecuteAuthorizationFilterAsyncCore&gt;d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Controllers.ExceptionFilterResult.&lt;ExecuteAsync&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Web.Http.Controllers.ExceptionFilterResult.&lt;ExecuteAsync&gt;d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at System.Web.Http.Dispatcher.HttpControllerDispatcher.&lt;SendAsync&gt;d__1.MoveNext()"} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-t22" name="GET-API_TPC_GET_Return_ID_Expected">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:24.044" starttime="20161122 00:09:24.005"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:24.067" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161122 00:09:24.067" starttime="20161122 00:09:24.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.068" level="INFO">415</msg>
<status status="PASS" endtime="20161122 00:09:24.069" starttime="20161122 00:09:24.068"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:24.078" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:24.078" starttime="20161122 00:09:24.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.079" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161122 00:09:24.079" starttime="20161122 00:09:24.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.080" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:24.080" starttime="20161122 00:09:24.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.081" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:24.081" starttime="20161122 00:09:24.081"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:24.082" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:24.082" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:24.082" starttime="20161122 00:09:24.081"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.083" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:24.083" starttime="20161122 00:09:24.082"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.084" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161122 00:09:24.084" starttime="20161122 00:09:24.083"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.085" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:24.085" starttime="20161122 00:09:24.084"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:24.085" starttime="20161122 00:09:24.004"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:24.086" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:24.086" starttime="20161122 00:09:24.086"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:24.090" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:24.091" starttime="20161122 00:09:24.087"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:24.110" starttime="20161122 00:09:24.091"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:24.111" starttime="20161122 00:09:24.110"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:24.111" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:24.111" starttime="20161122 00:09:24.111"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:24.112" starttime="20161122 00:09:24.111"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:24.112" starttime="20161122 00:09:24.085"></status>
</kw>
<kw name="GET_TalentPool" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>TalentpoolId</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:24.202" starttime="20161122 00:09:24.116"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161122 00:09:24.218" level="INFO">${SQL_TalentPoolIdToGet} = 4822</msg>
<status status="PASS" endtime="20161122 00:09:24.218" starttime="20161122 00:09:24.203"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:24.219" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:24.219" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:24.219" starttime="20161122 00:09:24.219"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.220" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:24.220" starttime="20161122 00:09:24.219"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.221" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161122 00:09:24.221" starttime="20161122 00:09:24.220"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.221" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:24.222" starttime="20161122 00:09:24.221"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:24.222" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:24.222" starttime="20161122 00:09:24.222"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:24.322" starttime="20161122 00:09:24.222"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:24.323" starttime="20161122 00:09:24.322"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:24.324" level="INFO">${resBody} = {"TalentpoolId":4822,"Title":"\xd8\xba\xd8\xb8\xd8\xb6\xd8\xb0\xd8\xae\xd8\xab\xd8\xaa\xd8\xb4\xd8\xb1\xd9\x82\xd8\xb5\xd9\x81\xd8\xb9\xd8\xb3\xd9\x86\xd9\x85\xd9\x84\xd9\x83\xd9\x8a\xd8\xb7\xd8\xad\x...</msg>
<status status="PASS" endtime="20161122 00:09:24.324" starttime="20161122 00:09:24.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.325" level="INFO">{"TalentpoolId":4822,"Title":"\xd8\xba\xd8\xb8\xd8\xb6\xd8\xb0\xd8\xae\xd8\xab\xd8\xaa\xd8\xb4\xd8\xb1\xd9\x82\xd8\xb5\xd9\x81\xd8\xb9\xd8\xb3\xd9\x86\xd9\x85\xd9\x84\xd9\x83\xd9\x8a\xd8\xb7\xd8\xad\xd8\xb2\xd9\x88\xd9\x87\xd8\xaf\xd8\xac\xd8\xa8\xd8\xa7\xd8\xb4\xd8\xba\xd8\xb8\xd8\xb0\xd8\xae\xd8\xab\xd8\xaa\xd8\xb3\xd8\xb1\xd9\x82\xd8\xb6\xd9\x81\xd8\xb9\xd8\xb5\xd9\x86\xd9\x85\xd9\x84\xd9\x83\xd9\x8a\xd8\xb7\xd8\xad\xd8\xb2","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-10-26T12:45:56.857","ModifierId":1,"ModifiedDate":"2016-10-26T12:45:56.857","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:24.326" starttime="20161122 00:09:24.325"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:24.327" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u063a\u0638\u0636\u0630\u062e\u062b\u062a\u0634\u0631\u0642\u0635\u0641\u0639\u0633\u0646\u0645\u0644\u0643\u064a\u0637\u062d\u0632\u0648\u0647\u062f\u062c\u0628\u062...</msg>
<status status="PASS" endtime="20161122 00:09:24.327" starttime="20161122 00:09:24.326"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:24.327" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u063a\u0638\u0636\u0630\u062e\u062b\u062a\u0634\u0631\u0642\u0635\u0641\u0639\u0633\u0646\u0645\u0644\u0643\u064a\u0637\u062d\u0632\u0648\u0647\u062f\u062c\u0628\u062...</msg>
<status status="PASS" endtime="20161122 00:09:24.328" starttime="20161122 00:09:24.327"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:24.328" level="INFO">${keyValue} = 4822</msg>
<status status="PASS" endtime="20161122 00:09:24.329" starttime="20161122 00:09:24.328"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:24.329" starttime="20161122 00:09:24.116"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_ID_Expected

*Description:*
verify the id passed is matching the id returned

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:24.329" critical="yes" starttime="20161122 00:09:24.003"></status>
</test>
<test id="s1-s1-t23" name="GET-API_TPC_GET_Return_Title_Happy">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:24.429" starttime="20161122 00:09:24.332"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:24.484" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161122 00:09:24.484" starttime="20161122 00:09:24.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.485" level="INFO">415</msg>
<status status="PASS" endtime="20161122 00:09:24.485" starttime="20161122 00:09:24.484"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:24.509" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:24.509" starttime="20161122 00:09:24.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.511" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20161122 00:09:24.511" starttime="20161122 00:09:24.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.512" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:24.513" starttime="20161122 00:09:24.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.514" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:24.514" starttime="20161122 00:09:24.513"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:24.515" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:24.515" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:24.515" starttime="20161122 00:09:24.514"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.516" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:24.516" starttime="20161122 00:09:24.516"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.518" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161122 00:09:24.518" starttime="20161122 00:09:24.517"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.519" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:24.519" starttime="20161122 00:09:24.518"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:24.519" starttime="20161122 00:09:24.331"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:24.522" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:24.522" starttime="20161122 00:09:24.521"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:24.528" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:24.528" starttime="20161122 00:09:24.522"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:24.547" starttime="20161122 00:09:24.528"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:24.548" starttime="20161122 00:09:24.548"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:24.549" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:24.549" starttime="20161122 00:09:24.548"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:24.549" starttime="20161122 00:09:24.549"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:24.549" starttime="20161122 00:09:24.520"></status>
</kw>
<kw name="GET_TalentPool_Title_Happy" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:24.746" starttime="20161122 00:09:24.554"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%InnocentName%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161122 00:09:24.808" level="INFO">${SQL_TalentPoolIdToGet} = 2840</msg>
<status status="PASS" endtime="20161122 00:09:24.808" starttime="20161122 00:09:24.746"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:24.809" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:24.809" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:24.809" starttime="20161122 00:09:24.809"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.810" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:24.810" starttime="20161122 00:09:24.810"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.811" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20161122 00:09:24.811" starttime="20161122 00:09:24.811"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.812" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:24.812" starttime="20161122 00:09:24.811"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:24.812" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:24.813" starttime="20161122 00:09:24.812"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:24.870" starttime="20161122 00:09:24.813"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:24.871" starttime="20161122 00:09:24.870"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:24.872" level="INFO">${resBody} = {"TalentpoolId":2840,"Title":"InnocentName","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-09-27T12:44:59.89","ModifierId":1,"ModifiedDate":"2016-09-27T12:44:59....</msg>
<status status="PASS" endtime="20161122 00:09:24.872" starttime="20161122 00:09:24.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.872" level="INFO">{"TalentpoolId":2840,"Title":"InnocentName","Owner":{"UserId":415,"FirstName":"Barry","LastName":"Kaplowitz"},"CreatedDate":"2016-09-27T12:44:59.89","ModifierId":1,"ModifiedDate":"2016-09-27T12:44:59.89","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:24.873" starttime="20161122 00:09:24.872"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:24.873" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'InnocentName', u'TalentpoolId': 2840, u'ModifiedDate': u'2016-09-27T12:44:59.89', u'CreatedDate': u'2016-09-27T12:44:59.89', u'Owner': {u'LastName': u'Kaplowitz', u'Us...</msg>
<status status="PASS" endtime="20161122 00:09:24.873" starttime="20161122 00:09:24.873"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:24.874" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'InnocentName', u'CreatedDate': u'2016-09-27T12:44:59.89', u'ModifiedDate': u'2016-09-27T12:44:59.89', u'TalentpoolId': 2840, u'Owner': {u'LastName': u'Kaplowitz', u'Us...</msg>
<status status="PASS" endtime="20161122 00:09:24.874" starttime="20161122 00:09:24.874"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:24.875" level="INFO">${keyValue} = InnocentName</msg>
<status status="PASS" endtime="20161122 00:09:24.875" starttime="20161122 00:09:24.875"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:24.875" starttime="20161122 00:09:24.553"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Happy

*Description:*
verify a random name matches

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:24.876" critical="yes" starttime="20161122 00:09:24.330"></status>
</test>
<test id="s1-s1-t24" name="GET-API_TPC_GET_Return_Title_Length_1">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:24.952" starttime="20161122 00:09:24.878"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:24.982" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:24.982" starttime="20161122 00:09:24.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.982" level="INFO">1336</msg>
<status status="PASS" endtime="20161122 00:09:24.982" starttime="20161122 00:09:24.982"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:24.992" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:24.992" starttime="20161122 00:09:24.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.993" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:24.993" starttime="20161122 00:09:24.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.994" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:24.994" starttime="20161122 00:09:24.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.995" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:24.995" starttime="20161122 00:09:24.994"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:24.995" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:24.996" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:24.996" starttime="20161122 00:09:24.995"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.996" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:24.996" starttime="20161122 00:09:24.996"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.997" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:24.997" starttime="20161122 00:09:24.997"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:24.998" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:24.998" starttime="20161122 00:09:24.997"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:24.998" starttime="20161122 00:09:24.878"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:24.999" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:25.000" starttime="20161122 00:09:24.999"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:25.004" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:25.004" starttime="20161122 00:09:25.000"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:25.024" starttime="20161122 00:09:25.004"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:25.025" starttime="20161122 00:09:25.025"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:25.026" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:25.026" starttime="20161122 00:09:25.025"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:25.026" starttime="20161122 00:09:25.026"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:25.026" starttime="20161122 00:09:24.999"></status>
</kw>
<kw name="GET_TalentPool_Title_Length_1" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:25.124" starttime="20161122 00:09:25.030"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND LEN(title)=1 ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161122 00:09:25.185" level="INFO">${SQL_TalentPoolIdToGet} = 2276</msg>
<status status="PASS" endtime="20161122 00:09:25.185" starttime="20161122 00:09:25.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.187" level="INFO">${SQL_TalentPoolIdToGet} = 2276</msg>
<status status="PASS" endtime="20161122 00:09:25.187" starttime="20161122 00:09:25.185"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161122 00:09:25.205" level="INFO">${SQL_TalentPoolTitleById} = 1</msg>
<status status="PASS" endtime="20161122 00:09:25.205" starttime="20161122 00:09:25.187"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:25.207" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:25.207" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:25.207" starttime="20161122 00:09:25.206"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.207" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:25.208" starttime="20161122 00:09:25.207"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.208" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:25.208" starttime="20161122 00:09:25.208"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.209" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:25.209" starttime="20161122 00:09:25.209"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:25.210" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:25.210" starttime="20161122 00:09:25.210"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:25.279" starttime="20161122 00:09:25.211"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:25.280" starttime="20161122 00:09:25.280"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:25.281" level="INFO">${resBody} = {"TalentpoolId":2276,"Title":"1","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-08-09T16:52:04.047","ModifierId":1,"Modified...</msg>
<status status="PASS" endtime="20161122 00:09:25.281" starttime="20161122 00:09:25.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.281" level="INFO">{"TalentpoolId":2276,"Title":"1","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-08-09T16:52:04.047","ModifierId":1,"ModifiedDate":"2016-08-09T16:52:04.047","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:25.282" starttime="20161122 00:09:25.281"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:25.283" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'1', u'TalentpoolId': 2276, u'ModifiedDate': u'2016-08-09T16:52:04.047', u'CreatedDate': u'2016-08-09T16:52:04.047', u'Owner': {u'LastName': u'TalentPoolAutomationUser1...</msg>
<status status="PASS" endtime="20161122 00:09:25.283" starttime="20161122 00:09:25.282"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:25.283" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'1', u'CreatedDate': u'2016-08-09T16:52:04.047', u'ModifiedDate': u'2016-08-09T16:52:04.047', u'TalentpoolId': 2276, u'Owner': {u'LastName': u'TalentPoolAutomationUser1...</msg>
<status status="PASS" endtime="20161122 00:09:25.283" starttime="20161122 00:09:25.283"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:25.284" level="INFO">${keyValue} = 1</msg>
<status status="PASS" endtime="20161122 00:09:25.284" starttime="20161122 00:09:25.284"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:25.285" starttime="20161122 00:09:25.030"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Length_1

*Description:*
verify success when title length is 1

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:25.285" critical="yes" starttime="20161122 00:09:24.876"></status>
</test>
<test id="s1-s1-t25" name="GET-API_TPC_GET_Return_Title_Length_50">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:25.368" starttime="20161122 00:09:25.287"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:25.383" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:25.383" starttime="20161122 00:09:25.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.384" level="INFO">1336</msg>
<status status="PASS" endtime="20161122 00:09:25.384" starttime="20161122 00:09:25.384"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:25.388" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:25.388" starttime="20161122 00:09:25.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.390" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:25.390" starttime="20161122 00:09:25.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.391" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:25.391" starttime="20161122 00:09:25.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.392" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:25.392" starttime="20161122 00:09:25.391"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:25.393" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:25.393" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:25.393" starttime="20161122 00:09:25.392"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.394" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:25.394" starttime="20161122 00:09:25.393"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.395" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:25.395" starttime="20161122 00:09:25.394"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.396" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:25.396" starttime="20161122 00:09:25.395"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:25.396" starttime="20161122 00:09:25.287"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:25.398" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:25.398" starttime="20161122 00:09:25.397"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:25.402" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:25.402" starttime="20161122 00:09:25.398"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:25.420" starttime="20161122 00:09:25.402"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:25.420" starttime="20161122 00:09:25.420"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:25.421" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:25.421" starttime="20161122 00:09:25.421"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:25.422" starttime="20161122 00:09:25.421"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:25.422" starttime="20161122 00:09:25.397"></status>
</kw>
<kw name="GET_TalentPool_Title_Length_50" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:25.546" starttime="20161122 00:09:25.427"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND LEN(title)=50 ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161122 00:09:25.571" level="INFO">${SQL_TalentPoolIdToGet} = 5921</msg>
<status status="PASS" endtime="20161122 00:09:25.571" starttime="20161122 00:09:25.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.572" level="INFO">${SQL_TalentPoolIdToGet} = 5921</msg>
<status status="PASS" endtime="20161122 00:09:25.572" starttime="20161122 00:09:25.571"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161122 00:09:25.575" level="INFO">${SQL_TalentPoolTitleById} = º¿¬¬½¼¡«»¦¦¦¦¦¦¦++¦¦++++++--+-+¦¦++--¦-+----++++++</msg>
<status status="PASS" endtime="20161122 00:09:25.575" starttime="20161122 00:09:25.572"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:25.576" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:25.576" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:25.576" starttime="20161122 00:09:25.575"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.577" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:25.577" starttime="20161122 00:09:25.576"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.577" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:25.578" starttime="20161122 00:09:25.577"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.579" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:25.579" starttime="20161122 00:09:25.578"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:25.579" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:25.579" starttime="20161122 00:09:25.579"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:25.623" starttime="20161122 00:09:25.580"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:25.624" starttime="20161122 00:09:25.624"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:25.625" level="INFO">${resBody} = {"TalentpoolId":5921,"Title":"\xc2\xba\xc2\xbf\xc2\xac\xc2\xac\xc2\xbd\xc2\xbc\xc2\xa1\xc2\xab\xc2\xbb\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6++\xc2\xa6\xc2\xa6++++++--+-+\xc2\xa6\xc2\...</msg>
<status status="PASS" endtime="20161122 00:09:25.625" starttime="20161122 00:09:25.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.627" level="INFO">{"TalentpoolId":5921,"Title":"\xc2\xba\xc2\xbf\xc2\xac\xc2\xac\xc2\xbd\xc2\xbc\xc2\xa1\xc2\xab\xc2\xbb\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6++\xc2\xa6\xc2\xa6++++++--+-+\xc2\xa6\xc2\xa6++--\xc2\xa6-+----++++++","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-22T08:00:19.54","ModifierId":1,"ModifiedDate":"2016-11-22T08:00:19.54","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:25.627" starttime="20161122 00:09:25.625"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:25.627" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\xba\xbf\xac\xac\xbd\xbc\xa1\xab\xbb\xa6\xa6\xa6\xa6\xa6\xa6\xa6++\xa6\xa6++++++--+-+\xa6\xa6++--\xa6-+----++++++', u'TalentpoolId': 5921, u'ModifiedDate': u'2016-11-2...</msg>
<status status="PASS" endtime="20161122 00:09:25.627" starttime="20161122 00:09:25.627"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:25.628" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\xba\xbf\xac\xac\xbd\xbc\xa1\xab\xbb\xa6\xa6\xa6\xa6\xa6\xa6\xa6++\xa6\xa6++++++--+-+\xa6\xa6++--\xa6-+----++++++', u'CreatedDate': u'2016-11-22T08:00:19.54', u'Modifi...</msg>
<status status="PASS" endtime="20161122 00:09:25.628" starttime="20161122 00:09:25.628"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:25.629" level="INFO">${keyValue} = º¿¬¬½¼¡«»¦¦¦¦¦¦¦++¦¦++++++--+-+¦¦++--¦-+----++++++</msg>
<status status="PASS" endtime="20161122 00:09:25.629" starttime="20161122 00:09:25.628"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:25.629" starttime="20161122 00:09:25.426"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Length_50

*Description:*
verify success when title length is 50

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:25.629" critical="yes" starttime="20161122 00:09:25.286"></status>
</test>
<test id="s1-s1-t26" name="GET-API_TPC_GET_Return_Title_SQL">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:25.696" starttime="20161122 00:09:25.632"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:25.737" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:25.737" starttime="20161122 00:09:25.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.737" level="INFO">1336</msg>
<status status="PASS" endtime="20161122 00:09:25.738" starttime="20161122 00:09:25.737"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:25.742" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:25.742" starttime="20161122 00:09:25.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.743" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:25.743" starttime="20161122 00:09:25.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.744" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:25.744" starttime="20161122 00:09:25.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.745" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:25.745" starttime="20161122 00:09:25.744"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:25.746" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:25.746" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:25.746" starttime="20161122 00:09:25.745"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.746" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:25.747" starttime="20161122 00:09:25.746"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.747" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:25.747" starttime="20161122 00:09:25.747"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.748" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:25.748" starttime="20161122 00:09:25.748"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:25.749" starttime="20161122 00:09:25.632"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:25.751" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:25.751" starttime="20161122 00:09:25.751"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:25.755" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:25.755" starttime="20161122 00:09:25.752"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:25.773" starttime="20161122 00:09:25.755"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:25.774" starttime="20161122 00:09:25.774"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:25.775" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:25.775" starttime="20161122 00:09:25.774"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:25.775" starttime="20161122 00:09:25.775"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:25.775" starttime="20161122 00:09:25.750"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Securit_SQL" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:25.850" starttime="20161122 00:09:25.780"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%SELECT * FROM Users%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161122 00:09:25.878" level="INFO">${SQL_TalentPoolIdToGet} = 2474</msg>
<status status="PASS" endtime="20161122 00:09:25.878" starttime="20161122 00:09:25.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.879" level="INFO">${SQL_TalentPoolIdToGet} = 2474</msg>
<status status="PASS" endtime="20161122 00:09:25.879" starttime="20161122 00:09:25.878"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161122 00:09:25.891" level="INFO">${SQL_TalentPoolTitleById} = SELECT * FROM Users</msg>
<status status="PASS" endtime="20161122 00:09:25.891" starttime="20161122 00:09:25.880"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:25.892" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:25.892" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:25.892" starttime="20161122 00:09:25.891"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.893" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:25.893" starttime="20161122 00:09:25.893"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.894" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:25.894" starttime="20161122 00:09:25.894"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.895" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:25.895" starttime="20161122 00:09:25.895"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:25.896" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:25.896" starttime="20161122 00:09:25.895"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:25.944" starttime="20161122 00:09:25.896"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:25.945" starttime="20161122 00:09:25.945"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:25.946" level="INFO">${resBody} = {"TalentpoolId":2474,"Title":"SELECT * FROM Users","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-09-13T17:46:32.517","Modif...</msg>
<status status="PASS" endtime="20161122 00:09:25.946" starttime="20161122 00:09:25.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:25.947" level="INFO">{"TalentpoolId":2474,"Title":"SELECT * FROM Users","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-09-13T17:46:32.517","ModifierId":1,"ModifiedDate":"2016-09-13T17:46:32.517","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:25.947" starttime="20161122 00:09:25.946"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:25.947" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'SELECT * FROM Users', u'TalentpoolId': 2474, u'ModifiedDate': u'2016-09-13T17:46:32.517', u'CreatedDate': u'2016-09-13T17:46:32.517', u'Owner': {u'LastName': u'TalentP...</msg>
<status status="PASS" endtime="20161122 00:09:25.947" starttime="20161122 00:09:25.947"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:25.948" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'SELECT * FROM Users', u'CreatedDate': u'2016-09-13T17:46:32.517', u'ModifiedDate': u'2016-09-13T17:46:32.517', u'TalentpoolId': 2474, u'Owner': {u'LastName': u'TalentP...</msg>
<status status="PASS" endtime="20161122 00:09:25.948" starttime="20161122 00:09:25.948"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:25.949" level="INFO">${keyValue} = SELECT * FROM Users</msg>
<status status="PASS" endtime="20161122 00:09:25.949" starttime="20161122 00:09:25.949"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:25.949" starttime="20161122 00:09:25.779"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_SQL

*Description:*
verify sql injection fails

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:25.950" critical="yes" starttime="20161122 00:09:25.630"></status>
</test>
<test id="s1-s1-t27" name="GET-API_TPC_GET_Return_Title_Security_Script">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.028" starttime="20161122 00:09:25.952"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:26.064" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:26.064" starttime="20161122 00:09:26.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.065" level="INFO">1336</msg>
<status status="PASS" endtime="20161122 00:09:26.065" starttime="20161122 00:09:26.064"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:26.077" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:26.078" starttime="20161122 00:09:26.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.078" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:26.079" starttime="20161122 00:09:26.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.080" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:26.080" starttime="20161122 00:09:26.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.080" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:26.080" starttime="20161122 00:09:26.080"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:26.081" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:26.081" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:26.081" starttime="20161122 00:09:26.081"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.082" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:26.082" starttime="20161122 00:09:26.082"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.083" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:26.083" starttime="20161122 00:09:26.082"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.083" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:26.084" starttime="20161122 00:09:26.083"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:26.084" starttime="20161122 00:09:25.952"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:26.085" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:26.085" starttime="20161122 00:09:26.085"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:26.088" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:26.089" starttime="20161122 00:09:26.085"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.107" starttime="20161122 00:09:26.089"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.108" starttime="20161122 00:09:26.107"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:26.108" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:26.108" starttime="20161122 00:09:26.108"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.109" starttime="20161122 00:09:26.109"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:26.109" starttime="20161122 00:09:26.084"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Securit_Script" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.145" starttime="20161122 00:09:26.114"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%＜script＞alert(123)＜/script＞%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161122 00:09:26.163" level="INFO">${SQL_TalentPoolIdToGet} = 651</msg>
<status status="PASS" endtime="20161122 00:09:26.163" starttime="20161122 00:09:26.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.165" level="INFO">${SQL_TalentPoolIdToGet} = 651</msg>
<status status="PASS" endtime="20161122 00:09:26.165" starttime="20161122 00:09:26.164"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161122 00:09:26.168" level="INFO">${SQL_TalentPoolTitleById} = ＜script＞alert(123)＜/script＞</msg>
<status status="PASS" endtime="20161122 00:09:26.168" starttime="20161122 00:09:26.165"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:26.169" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:26.169" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:26.169" starttime="20161122 00:09:26.169"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.170" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:26.170" starttime="20161122 00:09:26.170"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.171" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:26.171" starttime="20161122 00:09:26.170"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.172" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:26.172" starttime="20161122 00:09:26.171"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:26.172" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:26.173" starttime="20161122 00:09:26.172"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.216" starttime="20161122 00:09:26.173"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.217" starttime="20161122 00:09:26.216"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:26.218" level="INFO">${resBody} = {"TalentpoolId":651,"Title":"\xef\xbc\x9cscript\xef\xbc\x9ealert(123)\xef\xbc\x9c/script\xef\xbc\x9e","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUse...</msg>
<status status="PASS" endtime="20161122 00:09:26.218" starttime="20161122 00:09:26.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.219" level="INFO">{"TalentpoolId":651,"Title":"\xef\xbc\x9cscript\xef\xbc\x9ealert(123)\xef\xbc\x9c/script\xef\xbc\x9e","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-03-01T19:44:49.23","ModifierId":1,"ModifiedDate":"2016-03-01T19:44:49.23","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:26.219" starttime="20161122 00:09:26.218"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:26.220" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\uff1cscript\uff1ealert(123)\uff1c/script\uff1e', u'TalentpoolId': 651, u'ModifiedDate': u'2016-03-01T19:44:49.23', u'CreatedDate': u'2016-03-01T19:44:49.23', u'Owner'...</msg>
<status status="PASS" endtime="20161122 00:09:26.220" starttime="20161122 00:09:26.219"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:26.220" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\uff1cscript\uff1ealert(123)\uff1c/script\uff1e', u'CreatedDate': u'2016-03-01T19:44:49.23', u'ModifiedDate': u'2016-03-01T19:44:49.23', u'TalentpoolId': 651, u'Owner'...</msg>
<status status="PASS" endtime="20161122 00:09:26.220" starttime="20161122 00:09:26.220"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:26.221" level="INFO">${keyValue} = ＜script＞alert(123)＜/script＞</msg>
<status status="PASS" endtime="20161122 00:09:26.221" starttime="20161122 00:09:26.221"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:26.222" starttime="20161122 00:09:26.114"></status>
</kw>
<doc>*Name:*
TP_Get_Ret_Title_sec_script

*Description:*
verify script injection is allowed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:26.222" critical="yes" starttime="20161122 00:09:25.950"></status>
</test>
<test id="s1-s1-t28" name="GET-API_TPC_GET_Return_Title_Extended1">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.266" starttime="20161122 00:09:26.225"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:26.284" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:26.284" starttime="20161122 00:09:26.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.285" level="INFO">1336</msg>
<status status="PASS" endtime="20161122 00:09:26.285" starttime="20161122 00:09:26.284"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:26.287" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:26.287" starttime="20161122 00:09:26.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.288" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:26.288" starttime="20161122 00:09:26.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.289" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:26.289" starttime="20161122 00:09:26.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.290" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:26.290" starttime="20161122 00:09:26.290"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:26.291" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:26.291" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:26.291" starttime="20161122 00:09:26.290"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.292" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:26.292" starttime="20161122 00:09:26.292"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.293" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:26.294" starttime="20161122 00:09:26.292"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.294" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:26.295" starttime="20161122 00:09:26.294"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:26.295" starttime="20161122 00:09:26.224"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:26.296" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:26.296" starttime="20161122 00:09:26.296"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:26.300" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:26.300" starttime="20161122 00:09:26.297"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.318" starttime="20161122 00:09:26.300"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.319" starttime="20161122 00:09:26.319"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:26.319" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:26.320" starttime="20161122 00:09:26.319"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.320" starttime="20161122 00:09:26.320"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:26.321" starttime="20161122 00:09:26.295"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended1" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.384" starttime="20161122 00:09:26.325"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%☺%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161122 00:09:26.402" level="INFO">${SQL_TalentPoolIdToGet} = 590</msg>
<status status="PASS" endtime="20161122 00:09:26.402" starttime="20161122 00:09:26.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.403" level="INFO">${SQL_TalentPoolIdToGet} = 590</msg>
<status status="PASS" endtime="20161122 00:09:26.403" starttime="20161122 00:09:26.402"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161122 00:09:26.408" level="INFO">${SQL_TalentPoolTitleById} = =&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíó</msg>
<status status="PASS" endtime="20161122 00:09:26.408" starttime="20161122 00:09:26.403"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:26.409" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:26.409" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:26.409" starttime="20161122 00:09:26.408"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.410" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:26.410" starttime="20161122 00:09:26.409"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.410" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:26.411" starttime="20161122 00:09:26.410"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.411" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:26.411" starttime="20161122 00:09:26.411"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:26.412" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:26.412" starttime="20161122 00:09:26.412"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.458" starttime="20161122 00:09:26.412"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.459" starttime="20161122 00:09:26.458"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:26.460" level="INFO">${resBody} = {"TalentpoolId":590,"Title":"=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\x84\xc3\x85\xc3\x89\xc3\xa6...</msg>
<status status="PASS" endtime="20161122 00:09:26.460" starttime="20161122 00:09:26.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.461" level="INFO">{"TalentpoolId":590,"Title":"=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\x84\xc3\x85\xc3\x89\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb6\xc3\xb2\xc3\xbb\xc3\xb9\xc3\xbf\xc3\x96\xc3\x9c\xc2\xa2\xc2\xa3\xc2\xa5\xe2\x82\xa7\xc6\x92\xc3\xa1\xc3\xad\xc3\xb3","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-02-24T06:07:53.383","ModifierId":1,"ModifiedDate":"2016-02-24T06:07:53.383","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:26.461" starttime="20161122 00:09:26.460"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:26.462" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xc4\xc5\xc9\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xd6\xdc\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3',...</msg>
<status status="PASS" endtime="20161122 00:09:26.462" starttime="20161122 00:09:26.461"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:26.463" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xc4\xc5\xc9\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xd6\xdc\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3',...</msg>
<status status="PASS" endtime="20161122 00:09:26.463" starttime="20161122 00:09:26.462"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:26.464" level="INFO">${keyValue} = =&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíó</msg>
<status status="PASS" endtime="20161122 00:09:26.464" starttime="20161122 00:09:26.463"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:26.464" starttime="20161122 00:09:26.325"></status>
</kw>
<doc>*Name:*
API_TPC_Extended1

*Description:*
verify ASCII characters 1

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:26.464" critical="yes" starttime="20161122 00:09:26.223"></status>
</test>
<test id="s1-s1-t29" name="GET-API_TPC_GET_Return_Title_Extended2">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.518" starttime="20161122 00:09:26.467"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:26.567" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:26.567" starttime="20161122 00:09:26.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.567" level="INFO">1336</msg>
<status status="PASS" endtime="20161122 00:09:26.567" starttime="20161122 00:09:26.567"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:26.571" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:26.571" starttime="20161122 00:09:26.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.572" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:26.572" starttime="20161122 00:09:26.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.573" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:26.574" starttime="20161122 00:09:26.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.574" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:26.574" starttime="20161122 00:09:26.574"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:26.575" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:26.575" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:26.575" starttime="20161122 00:09:26.575"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.576" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:26.576" starttime="20161122 00:09:26.575"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.577" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:26.577" starttime="20161122 00:09:26.576"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.577" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:26.578" starttime="20161122 00:09:26.577"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:26.578" starttime="20161122 00:09:26.466"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:26.579" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:26.579" starttime="20161122 00:09:26.579"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:26.583" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:26.583" starttime="20161122 00:09:26.579"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.601" starttime="20161122 00:09:26.583"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.602" starttime="20161122 00:09:26.601"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:26.602" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:26.602" starttime="20161122 00:09:26.602"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.603" starttime="20161122 00:09:26.603"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:26.603" starttime="20161122 00:09:26.578"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended2" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.673" starttime="20161122 00:09:26.607"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%=%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161122 00:09:26.706" level="INFO">${SQL_TalentPoolIdToGet} = 2890</msg>
<status status="PASS" endtime="20161122 00:09:26.706" starttime="20161122 00:09:26.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.707" level="INFO">${SQL_TalentPoolIdToGet} = 2890</msg>
<status status="PASS" endtime="20161122 00:09:26.708" starttime="20161122 00:09:26.707"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161122 00:09:26.719" level="INFO">${SQL_TalentPoolTitleById} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20161122 00:09:26.719" starttime="20161122 00:09:26.708"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:26.720" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:26.720" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:26.720" starttime="20161122 00:09:26.720"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.721" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:26.721" starttime="20161122 00:09:26.721"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.722" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:26.722" starttime="20161122 00:09:26.722"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.723" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:26.723" starttime="20161122 00:09:26.722"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:26.723" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:26.723" starttime="20161122 00:09:26.723"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.805" starttime="20161122 00:09:26.724"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.806" starttime="20161122 00:09:26.806"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:26.808" level="INFO">${resBody} = {"TalentpoolId":2890,"Title":"&lt;=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\x...</msg>
<status status="PASS" endtime="20161122 00:09:26.808" starttime="20161122 00:09:26.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.809" level="INFO">{"TalentpoolId":2890,"Title":"&lt;=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb6\xc3\xb2\xc3\xbb\xc3\xb9\xc3\xbf\xc2\xa2\xc2\xa3\xc2\xa5\xe2\x82\xa7\xc6\x92\xc3\xa1\xc3\xad\xc3\xb3\xc3\xba\xc3\xb1\xc3\x91\xc2\xaa","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-09-29T12:44:29.713","ModifierId":1,"ModifiedDate":"2016-09-29T12:44:29.713","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:26.809" starttime="20161122 00:09:26.808"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:26.810" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'...</msg>
<status status="PASS" endtime="20161122 00:09:26.810" starttime="20161122 00:09:26.809"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:26.811" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'...</msg>
<status status="PASS" endtime="20161122 00:09:26.811" starttime="20161122 00:09:26.810"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:26.812" level="INFO">${keyValue} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20161122 00:09:26.812" starttime="20161122 00:09:26.811"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:26.812" starttime="20161122 00:09:26.607"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended2

*Description:*
verify ASCII characters 2

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:26.812" critical="yes" starttime="20161122 00:09:26.465"></status>
</test>
<test id="s1-s1-t30" name="GET-API_TPC_GET_Return_Title_Extended3">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.918" starttime="20161122 00:09:26.815"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:26.936" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:26.936" starttime="20161122 00:09:26.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.936" level="INFO">1336</msg>
<status status="PASS" endtime="20161122 00:09:26.937" starttime="20161122 00:09:26.936"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:26.941" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:26.942" starttime="20161122 00:09:26.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.942" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:26.943" starttime="20161122 00:09:26.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.944" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:26.944" starttime="20161122 00:09:26.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.944" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:26.944" starttime="20161122 00:09:26.944"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:26.945" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:26.945" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:26.945" starttime="20161122 00:09:26.945"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.946" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:26.946" starttime="20161122 00:09:26.945"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.947" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:26.947" starttime="20161122 00:09:26.946"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:26.947" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:26.947" starttime="20161122 00:09:26.947"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:26.948" starttime="20161122 00:09:26.814"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:26.949" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:26.949" starttime="20161122 00:09:26.949"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:26.953" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:26.953" starttime="20161122 00:09:26.949"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.972" starttime="20161122 00:09:26.953"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.973" starttime="20161122 00:09:26.972"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:26.973" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:26.973" starttime="20161122 00:09:26.973"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:26.974" starttime="20161122 00:09:26.974"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:26.974" starttime="20161122 00:09:26.948"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended3" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:27.025" starttime="20161122 00:09:26.978"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%ú%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161122 00:09:27.043" level="INFO">${SQL_TalentPoolIdToGet} = 892</msg>
<status status="PASS" endtime="20161122 00:09:27.043" starttime="20161122 00:09:27.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.044" level="INFO">${SQL_TalentPoolIdToGet} = 892</msg>
<status status="PASS" endtime="20161122 00:09:27.044" starttime="20161122 00:09:27.043"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161122 00:09:27.056" level="INFO">${SQL_TalentPoolTitleById} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20161122 00:09:27.056" starttime="20161122 00:09:27.045"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:27.057" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:27.057" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:27.057" starttime="20161122 00:09:27.057"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.058" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:27.058" starttime="20161122 00:09:27.058"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.059" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:27.059" starttime="20161122 00:09:27.058"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.060" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:27.060" starttime="20161122 00:09:27.059"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:27.060" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:27.060" starttime="20161122 00:09:27.060"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:27.142" starttime="20161122 00:09:27.061"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:27.143" starttime="20161122 00:09:27.142"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:27.144" level="INFO">${resBody} = {"TalentpoolId":892,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\xc...</msg>
<status status="PASS" endtime="20161122 00:09:27.144" starttime="20161122 00:09:27.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.145" level="INFO">{"TalentpoolId":892,"Title":"\xe2\x80\x98\xe2\x80\x99\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x93\xe2\x80\x94\xcb\x9c\xe2\x84\xa2\xc5\xa1\xe2\x80\xba\xc5\x93\xc5\xbe\xc5\xb8\xc2\xa4\xc2\xa6\xc2\xa8\xc2\xa9\xc2\xae\xc2\xaf\xc2\xb3\xc2\xb4\xc2\xb8U\xc2\xbe\xc3\x80\xc3\x81\xc3\x82\xc3\x83\xc3\x84\xc3\x85\xc3\x88\xc3\x89\xc3\x8a\xc3\x8b\xc3\x8c\xc3\x8d\xc3\x8e\xc3\x8f\xc3\x90\xc3\x92\xc3\x93\xc3\x94\xc3\x95\xc3\x96\xc3\x97\xc3\x98\xc3\x99\xc3\x9a\xc3\x9b\xc3\x9c","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-03-09T20:15:16.143","ModifierId":1,"ModifiedDate":"2016-03-09T20:15:16.143","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:27.145" starttime="20161122 00:09:27.144"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:27.146" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20161122 00:09:27.146" starttime="20161122 00:09:27.146"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:27.147" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u2018\u2019\u201c\u201d\u2013\u2014\u02dc\u2122\u0161\u203a\u0153\u017e\u0178\xa4\xa6\xa8\xa9\xae\xaf\xb3\xb4\xb8U\xbe\xc0\xc1\xc2\xc3\xc4\xc5\xc8\xc9\xca\xcb\xcc\xcd...</msg>
<status status="PASS" endtime="20161122 00:09:27.147" starttime="20161122 00:09:27.147"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:27.148" level="INFO">${keyValue} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20161122 00:09:27.148" starttime="20161122 00:09:27.147"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:27.148" starttime="20161122 00:09:26.978"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended3

*Description:*
verify ASCII characters 3

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:27.148" critical="yes" starttime="20161122 00:09:26.813"></status>
</test>
<test id="s1-s1-t31" name="GET-API_TPC_GET_Return_Title_Extended5">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:27.177" starttime="20161122 00:09:27.151"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:27.189" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:27.190" starttime="20161122 00:09:27.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.190" level="INFO">1336</msg>
<status status="PASS" endtime="20161122 00:09:27.190" starttime="20161122 00:09:27.190"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:27.193" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:27.193" starttime="20161122 00:09:27.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.194" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:27.194" starttime="20161122 00:09:27.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.195" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:27.195" starttime="20161122 00:09:27.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.196" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:27.196" starttime="20161122 00:09:27.195"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:27.196" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:27.196" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:27.197" starttime="20161122 00:09:27.196"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.198" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:27.198" starttime="20161122 00:09:27.197"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.198" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:27.198" starttime="20161122 00:09:27.198"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.199" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:27.199" starttime="20161122 00:09:27.199"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:27.199" starttime="20161122 00:09:27.150"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:27.201" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:27.201" starttime="20161122 00:09:27.200"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:27.204" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:27.204" starttime="20161122 00:09:27.201"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:27.225" starttime="20161122 00:09:27.205"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:27.225" starttime="20161122 00:09:27.225"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:27.226" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:27.226" starttime="20161122 00:09:27.226"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:27.227" starttime="20161122 00:09:27.226"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:27.227" starttime="20161122 00:09:27.200"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended5" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:27.303" starttime="20161122 00:09:27.231"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND title LIKE '%Š%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161122 00:09:27.334" level="INFO">${SQL_TalentPoolIdToGet} = 911</msg>
<status status="PASS" endtime="20161122 00:09:27.335" starttime="20161122 00:09:27.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.336" level="INFO">${SQL_TalentPoolIdToGet} = 911</msg>
<status status="PASS" endtime="20161122 00:09:27.336" starttime="20161122 00:09:27.335"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20161122 00:09:27.352" level="INFO">${SQL_TalentPoolTitleById} = ┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°•·√ⁿ²■€„…†‡ˆ‰Š‹ŒŽ</msg>
<status status="PASS" endtime="20161122 00:09:27.352" starttime="20161122 00:09:27.336"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:27.353" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:27.353" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:27.353" starttime="20161122 00:09:27.353"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.354" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:27.354" starttime="20161122 00:09:27.354"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.355" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:27.355" starttime="20161122 00:09:27.354"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.355" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:27.356" starttime="20161122 00:09:27.355"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:27.356" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:27.356" starttime="20161122 00:09:27.356"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:27.467" starttime="20161122 00:09:27.357"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:27.468" starttime="20161122 00:09:27.468"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:27.469" level="INFO">${resBody} = {"TalentpoolId":911,"Title":"\xe2\x94\x98\xe2\x94\x8c\xe2\x96\x88\xe2\x96\x84\xe2\x96\x8c\xe2\x96\x90\xe2\x96\x80\xce\xb1\xc3\x9f\xce\x93\xcf\x80\xce\xa3\xcf\x83\xc2\xb5\xcf\x84\xce\xa6\xce\x98\xce\xa...</msg>
<status status="PASS" endtime="20161122 00:09:27.470" starttime="20161122 00:09:27.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.471" level="INFO">{"TalentpoolId":911,"Title":"\xe2\x94\x98\xe2\x94\x8c\xe2\x96\x88\xe2\x96\x84\xe2\x96\x8c\xe2\x96\x90\xe2\x96\x80\xce\xb1\xc3\x9f\xce\x93\xcf\x80\xce\xa3\xcf\x83\xc2\xb5\xcf\x84\xce\xa6\xce\x98\xce\xa9\xce\xb4\xe2\x88\x9e\xcf\x86\xce\xb5\xe2\x88\xa9\xe2\x89\xa1\xc2\xb1\xe2\x89\xa5\xe2\x89\xa4\xe2\x8c\xa0\xe2\x8c\xa1\xc3\xb7\xe2\x89\x88\xc2\xb0\xe2\x80\xa2\xc2\xb7\xe2\x88\x9a\xe2\x81\xbf\xc2\xb2\xe2\x96\xa0\xe2\x82\xac\xe2\x80\x9e\xe2\x80\xa6\xe2\x80\xa0\xe2\x80\xa1\xcb\x86\xe2\x80\xb0\xc5\xa0\xe2\x80\xb9\xc5\x92\xc5\xbd","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-03-17T21:05:18.8","ModifierId":1,"ModifiedDate":"2016-03-17T21:05:18.8","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:27.471" starttime="20161122 00:09:27.470"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:27.472" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\u2518\u250c\u2588\u2584\u258c\u2590\u2580\u03b1\xdf\u0393\u03c0\u03a3\u03c3\xb5\u03c4\u03a6\u0398\u03a9\u03b4\u221e\u03c6\u03b5\u2229\u2261\xb1\u2265\u2264\u2320\u232...</msg>
<status status="PASS" endtime="20161122 00:09:27.472" starttime="20161122 00:09:27.471"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:27.473" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\u2518\u250c\u2588\u2584\u258c\u2590\u2580\u03b1\xdf\u0393\u03c0\u03a3\u03c3\xb5\u03c4\u03a6\u0398\u03a9\u03b4\u221e\u03c6\u03b5\u2229\u2261\xb1\u2265\u2264\u2320\u232...</msg>
<status status="PASS" endtime="20161122 00:09:27.473" starttime="20161122 00:09:27.472"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:27.474" level="INFO">${keyValue} = ┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°•·√ⁿ²■€„…†‡ˆ‰Š‹ŒŽ</msg>
<status status="PASS" endtime="20161122 00:09:27.474" starttime="20161122 00:09:27.473"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:27.474" starttime="20161122 00:09:27.230"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended5

*Description:*
verify ASCII characters 5

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:27.474" critical="yes" starttime="20161122 00:09:27.149"></status>
</test>
<test id="s1-s1-t32" name="GET-API_TPC_GET_Return_Title_Extended6">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:27.585" starttime="20161122 00:09:27.477"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:27.624" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:27.624" starttime="20161122 00:09:27.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.625" level="INFO">1336</msg>
<status status="PASS" endtime="20161122 00:09:27.625" starttime="20161122 00:09:27.625"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:27.632" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:27.632" starttime="20161122 00:09:27.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.633" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:27.633" starttime="20161122 00:09:27.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.634" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:27.634" starttime="20161122 00:09:27.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.634" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:27.634" starttime="20161122 00:09:27.634"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:27.635" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:27.635" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:27.635" starttime="20161122 00:09:27.635"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.636" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:27.636" starttime="20161122 00:09:27.636"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.637" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:27.637" starttime="20161122 00:09:27.636"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.637" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:27.638" starttime="20161122 00:09:27.637"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:27.638" starttime="20161122 00:09:27.477"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:27.639" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:27.639" starttime="20161122 00:09:27.639"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:27.643" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:27.643" starttime="20161122 00:09:27.639"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:27.660" starttime="20161122 00:09:27.643"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:27.660" starttime="20161122 00:09:27.660"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:27.661" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:27.661" starttime="20161122 00:09:27.660"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:27.661" starttime="20161122 00:09:27.661"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:27.661" starttime="20161122 00:09:27.638"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended6" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:27.885" starttime="20161122 00:09:27.666"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%Ø%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161122 00:09:27.913" level="INFO">${SQL_TalentPoolIdToGet} = 613</msg>
<status status="PASS" endtime="20161122 00:09:27.913" starttime="20161122 00:09:27.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.914" level="INFO">${SQL_TalentPoolIdToGet} = 613</msg>
<status status="PASS" endtime="20161122 00:09:27.914" starttime="20161122 00:09:27.913"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById1}</var>
</assign>
<msg timestamp="20161122 00:09:27.925" level="INFO">${SQL_TalentPoolTitleById1} = ØÙÚÛÜÝÞãðýþ</msg>
<status status="PASS" endtime="20161122 00:09:27.925" starttime="20161122 00:09:27.914"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:27.926" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:27.926" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:27.926" starttime="20161122 00:09:27.925"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.927" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:27.927" starttime="20161122 00:09:27.926"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.928" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:27.928" starttime="20161122 00:09:27.927"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.928" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:27.928" starttime="20161122 00:09:27.928"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:27.929" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:27.929" starttime="20161122 00:09:27.929"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:27.986" starttime="20161122 00:09:27.929"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:27.987" starttime="20161122 00:09:27.987"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:27.988" level="INFO">${resBody} = {"TalentpoolId":613,"Title":"\xc3\x98\xc3\x99\xc3\x9a\xc3\x9b\xc3\x9c\xc3\x9d\xc3\x9e\xc3\xa3\xc3\xb0\xc3\xbd\xc3\xbe","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"Talent...</msg>
<status status="PASS" endtime="20161122 00:09:27.988" starttime="20161122 00:09:27.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:27.989" level="INFO">{"TalentpoolId":613,"Title":"\xc3\x98\xc3\x99\xc3\x9a\xc3\x9b\xc3\x9c\xc3\x9d\xc3\x9e\xc3\xa3\xc3\xb0\xc3\xbd\xc3\xbe","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-02-25T20:18:28.203","ModifierId":1,"ModifiedDate":"2016-02-25T20:18:28.203","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:27.990" starttime="20161122 00:09:27.989"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:27.990" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\xd8\xd9\xda\xdb\xdc\xdd\xde\xe3\xf0\xfd\xfe', u'TalentpoolId': 613, u'ModifiedDate': u'2016-02-25T20:18:28.203', u'CreatedDate': u'2016-02-25T20:18:28.203', u'Owner':...</msg>
<status status="PASS" endtime="20161122 00:09:27.990" starttime="20161122 00:09:27.990"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:27.991" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\xd8\xd9\xda\xdb\xdc\xdd\xde\xe3\xf0\xfd\xfe', u'CreatedDate': u'2016-02-25T20:18:28.203', u'ModifiedDate': u'2016-02-25T20:18:28.203', u'TalentpoolId': 613, u'Owner':...</msg>
<status status="PASS" endtime="20161122 00:09:27.991" starttime="20161122 00:09:27.991"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:27.992" level="INFO">${keyValue} = ØÙÚÛÜÝÞãðýþ</msg>
<status status="PASS" endtime="20161122 00:09:27.992" starttime="20161122 00:09:27.991"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:27.992" starttime="20161122 00:09:27.665"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended6

*Description:*
verify ASCII characters 6

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:27.992" critical="yes" starttime="20161122 00:09:27.475"></status>
</test>
<test id="s1-s1-t33" name="GET-API_TPC_GET_Return_Title_Char_Foreign_Russian">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.012" starttime="20161122 00:09:27.995"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:28.034" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:28.035" starttime="20161122 00:09:28.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.036" level="INFO">1336</msg>
<status status="PASS" endtime="20161122 00:09:28.036" starttime="20161122 00:09:28.035"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:28.039" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:28.039" starttime="20161122 00:09:28.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.041" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:28.041" starttime="20161122 00:09:28.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.042" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:28.042" starttime="20161122 00:09:28.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.043" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:28.043" starttime="20161122 00:09:28.043"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:28.044" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:28.044" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:28.044" starttime="20161122 00:09:28.043"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.045" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:28.045" starttime="20161122 00:09:28.044"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.045" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:28.045" starttime="20161122 00:09:28.045"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.046" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:28.046" starttime="20161122 00:09:28.046"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:28.047" starttime="20161122 00:09:27.995"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:28.048" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:28.048" starttime="20161122 00:09:28.048"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:28.052" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:28.052" starttime="20161122 00:09:28.048"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.071" starttime="20161122 00:09:28.052"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.071" starttime="20161122 00:09:28.071"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:28.072" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:28.072" starttime="20161122 00:09:28.071"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.072" starttime="20161122 00:09:28.072"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:28.072" starttime="20161122 00:09:28.047"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Foreign_Russian" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.148" starttime="20161122 00:09:28.077"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%ё%' \ ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161122 00:09:28.176" level="INFO">${SQL_TalentPoolIdToGet} = 3193</msg>
<status status="PASS" endtime="20161122 00:09:28.176" starttime="20161122 00:09:28.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.177" level="INFO">${SQL_TalentPoolIdToGet} = 3193</msg>
<status status="PASS" endtime="20161122 00:09:28.177" starttime="20161122 00:09:28.176"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById1}</var>
</assign>
<msg timestamp="20161122 00:09:28.181" level="INFO">${SQL_TalentPoolTitleById1} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20161122 00:09:28.181" starttime="20161122 00:09:28.178"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:28.183" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:28.183" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:28.183" starttime="20161122 00:09:28.182"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.184" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:28.184" starttime="20161122 00:09:28.183"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.185" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:28.186" starttime="20161122 00:09:28.185"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.187" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:28.187" starttime="20161122 00:09:28.186"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:28.187" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:28.187" starttime="20161122 00:09:28.187"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.290" starttime="20161122 00:09:28.188"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.291" starttime="20161122 00:09:28.290"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:28.292" level="INFO">${resBody} = {"TalentpoolId":3193,"Title":"&lt;=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\x...</msg>
<status status="PASS" endtime="20161122 00:09:28.292" starttime="20161122 00:09:28.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.293" level="INFO">{"TalentpoolId":3193,"Title":"&lt;=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb6\xc3\xb2\xc3\xbb\xc3\xb9\xc3\xbf\xc2\xa2\xc2\xa3\xc2\xa5\xe2\x82\xa7\xc6\x92\xc3\xa1\xc3\xad\xc3\xb3\xc3\xba\xc3\xb1\xc3\x91\xc2\xaa","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-10-11T04:30:37.03","ModifierId":1,"ModifiedDate":"2016-10-11T04:30:37.03","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:28.293" starttime="20161122 00:09:28.292"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:28.294" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'...</msg>
<status status="PASS" endtime="20161122 00:09:28.294" starttime="20161122 00:09:28.293"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:28.295" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'...</msg>
<status status="PASS" endtime="20161122 00:09:28.295" starttime="20161122 00:09:28.294"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:28.296" level="INFO">${keyValue} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20161122 00:09:28.296" starttime="20161122 00:09:28.295"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:28.296" starttime="20161122 00:09:28.076"></status>
</kw>
<doc>*Name:*
API_TP_Get_Return_Title_Char_Foreign_Russian

*Description:*
verify russian alphabet

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:28.296" critical="yes" starttime="20161122 00:09:27.993"></status>
</test>
<test id="s1-s1-t34" name="GET-API_TPC_GET_Return_Title_Char_Foreign_Arabic">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.320" starttime="20161122 00:09:28.299"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:28.339" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:28.339" starttime="20161122 00:09:28.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.340" level="INFO">1336</msg>
<status status="PASS" endtime="20161122 00:09:28.340" starttime="20161122 00:09:28.340"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:28.347" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:28.347" starttime="20161122 00:09:28.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.349" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:28.349" starttime="20161122 00:09:28.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.350" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:28.350" starttime="20161122 00:09:28.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.351" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:28.351" starttime="20161122 00:09:28.350"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:28.351" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:28.352" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:28.352" starttime="20161122 00:09:28.351"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.353" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:28.353" starttime="20161122 00:09:28.352"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.353" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:28.353" starttime="20161122 00:09:28.353"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.354" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:28.354" starttime="20161122 00:09:28.354"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:28.354" starttime="20161122 00:09:28.299"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:28.356" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:28.356" starttime="20161122 00:09:28.355"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:28.359" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:28.359" starttime="20161122 00:09:28.356"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.379" starttime="20161122 00:09:28.360"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.379" starttime="20161122 00:09:28.379"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:28.380" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:28.380" starttime="20161122 00:09:28.380"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.380" starttime="20161122 00:09:28.380"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:28.381" starttime="20161122 00:09:28.355"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Foreign_Arabic" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.487" starttime="20161122 00:09:28.385"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%ز%' \ ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161122 00:09:28.521" level="INFO">${SQL_TalentPoolIdToGet} = 5157</msg>
<status status="PASS" endtime="20161122 00:09:28.521" starttime="20161122 00:09:28.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.523" level="INFO">${SQL_TalentPoolIdToGet} = 5157</msg>
<status status="PASS" endtime="20161122 00:09:28.523" starttime="20161122 00:09:28.522"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById1}</var>
</assign>
<msg timestamp="20161122 00:09:28.543" level="INFO">${SQL_TalentPoolTitleById1} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20161122 00:09:28.543" starttime="20161122 00:09:28.523"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:28.544" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:28.544" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:28.544" starttime="20161122 00:09:28.543"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.545" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:28.545" starttime="20161122 00:09:28.544"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.546" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:28.546" starttime="20161122 00:09:28.545"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.546" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:28.547" starttime="20161122 00:09:28.546"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:28.547" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:28.547" starttime="20161122 00:09:28.547"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.670" starttime="20161122 00:09:28.547"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.670" starttime="20161122 00:09:28.670"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:28.671" level="INFO">${resBody} = {"TalentpoolId":5157,"Title":"&lt;=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\x...</msg>
<status status="PASS" endtime="20161122 00:09:28.672" starttime="20161122 00:09:28.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.673" level="INFO">{"TalentpoolId":5157,"Title":"&lt;=&gt;?@[\\]^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb6\xc3\xb2\xc3\xbb\xc3\xb9\xc3\xbf\xc2\xa2\xc2\xa3\xc2\xa5\xe2\x82\xa7\xc6\x92\xc3\xa1\xc3\xad\xc3\xb3\xc3\xba\xc3\xb1\xc3\x91\xc2\xaa","Owner":{"UserId":1336,"FirstName":"TalentPoolAutomationUser1","LastName":"TalentPoolAutomationUser1"},"CreatedDate":"2016-11-01T14:53:55.233","ModifierId":1,"ModifiedDate":"2016-11-01T14:53:55.233","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20161122 00:09:28.673" starttime="20161122 00:09:28.672"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20161122 00:09:28.674" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'...</msg>
<status status="PASS" endtime="20161122 00:09:28.674" starttime="20161122 00:09:28.673"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20161122 00:09:28.674" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@[\\]^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'...</msg>
<status status="PASS" endtime="20161122 00:09:28.674" starttime="20161122 00:09:28.674"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20161122 00:09:28.675" level="INFO">${keyValue} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20161122 00:09:28.675" starttime="20161122 00:09:28.675"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:28.676" starttime="20161122 00:09:28.385"></status>
</kw>
<doc>*Name:*
API_TP_Get_Return_Title_Char_Foreign_Arabic

*Description:*
verify arabic alphabet

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:28.676" critical="yes" starttime="20161122 00:09:28.297"></status>
</test>
<test id="s1-s1-t35" name="GET-API_TPC_GET_Input_TP_Does_Not_Exist">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.733" starttime="20161122 00:09:28.680"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:28.768" level="INFO">${SQL_GET_USERID} = 58</msg>
<status status="PASS" endtime="20161122 00:09:28.769" starttime="20161122 00:09:28.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.770" level="INFO">58</msg>
<status status="PASS" endtime="20161122 00:09:28.770" starttime="20161122 00:09:28.769"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:28.774" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:28.774" starttime="20161122 00:09:28.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.775" level="INFO">${SQL_GET_USERID} = 58</msg>
<status status="PASS" endtime="20161122 00:09:28.775" starttime="20161122 00:09:28.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.776" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:28.776" starttime="20161122 00:09:28.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.777" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:28.777" starttime="20161122 00:09:28.777"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:28.778" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:28.778" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:28.778" starttime="20161122 00:09:28.777"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.779" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:28.779" starttime="20161122 00:09:28.778"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.779" level="INFO">Set request header "X-USERID" to "58"</msg>
<status status="PASS" endtime="20161122 00:09:28.780" starttime="20161122 00:09:28.779"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.780" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:28.780" starttime="20161122 00:09:28.780"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:28.780" starttime="20161122 00:09:28.679"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:28.782" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:28.782" starttime="20161122 00:09:28.782"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:28.785" level="INFO">Request body set to "{   "UserId": 58,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_58",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:28.786" starttime="20161122 00:09:28.782"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.808" starttime="20161122 00:09:28.786"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.809" starttime="20161122 00:09:28.809"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:28.810" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:28.810" starttime="20161122 00:09:28.809"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.810" starttime="20161122 00:09:28.810"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:28.810" starttime="20161122 00:09:28.781"></status>
</kw>
<kw name="GET_TalentPool_Does_Not_Exist" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>404</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.868" starttime="20161122 00:09:28.815"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id+1000 FROM ou WHERE ou.type_id = 131072 ORDER BY ou_id DESC</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161122 00:09:28.878" level="INFO">${SQL_TalentPoolIdToGet} = 6943</msg>
<status status="PASS" endtime="20161122 00:09:28.879" starttime="20161122 00:09:28.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.880" level="INFO">${SQL_TalentPoolIdToGet} = 6943</msg>
<status status="PASS" endtime="20161122 00:09:28.881" starttime="20161122 00:09:28.879"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:28.881" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:28.881" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:28.882" starttime="20161122 00:09:28.881"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.882" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:28.882" starttime="20161122 00:09:28.882"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.883" level="INFO">Set request header "X-USERID" to "58"</msg>
<status status="PASS" endtime="20161122 00:09:28.883" starttime="20161122 00:09:28.883"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.884" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:28.884" starttime="20161122 00:09:28.883"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:28.884" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:28.884" starttime="20161122 00:09:28.884"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161122 00:09:28.885" starttime="20161122 00:09:28.885"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.945" starttime="20161122 00:09:28.885"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.946" starttime="20161122 00:09:28.946"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:28.947" level="INFO">${resBody} = {"Message":"Talent pool not found."}</msg>
<status status="PASS" endtime="20161122 00:09:28.947" starttime="20161122 00:09:28.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:28.948" level="INFO">{"Message":"Talent pool not found."}</msg>
<status status="PASS" endtime="20161122 00:09:28.948" starttime="20161122 00:09:28.947"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:28.948" starttime="20161122 00:09:28.814"></status>
</kw>
<doc>*Name:*
API_TP_Get_Input_TP_DNE

*Description:*
verify failure when talent pool id provided does not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:28.948" critical="yes" starttime="20161122 00:09:28.677"></status>
</test>
<test id="s1-s1-t36" name="GET-API_TPC_GET_Input_User_Does_Not_Exist">
<kw name="REST_NOAUTH_NonExistentUser" library="SMP_Keywords">
<doc>*REST_NOAUTH_NonExistentUser:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:28.997" starttime="20161122 00:09:28.951"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:29.011" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20161122 00:09:29.011" starttime="20161122 00:09:28.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.012" level="INFO">2347</msg>
<status status="PASS" endtime="20161122 00:09:29.012" starttime="20161122 00:09:29.011"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT 1</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:29.014" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:29.014" starttime="20161122 00:09:29.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.015" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20161122 00:09:29.016" starttime="20161122 00:09:29.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.018" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:29.018" starttime="20161122 00:09:29.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.019" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:29.019" starttime="20161122 00:09:29.018"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:29.019" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:29.020" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:29.020" starttime="20161122 00:09:29.019"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.020" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:29.020" starttime="20161122 00:09:29.020"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.021" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20161122 00:09:29.021" starttime="20161122 00:09:29.021"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.022" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:29.022" starttime="20161122 00:09:29.021"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:29.022" starttime="20161122 00:09:28.950"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:29.023" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:29.023" starttime="20161122 00:09:29.023"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:29.027" level="INFO">Request body set to "{   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_2347",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:29.027" starttime="20161122 00:09:29.024"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:29.047" starttime="20161122 00:09:29.027"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:29.049" starttime="20161122 00:09:29.048"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:29.049" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:29.049" starttime="20161122 00:09:29.049"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:29.050" starttime="20161122 00:09:29.050"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:29.050" starttime="20161122 00:09:29.023"></status>
</kw>
<kw name="GET_User_Does_Not_Exist" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>401</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:29.109" starttime="20161122 00:09:29.054"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161122 00:09:29.119" level="INFO">${SQL_TalentPoolIdToGet} = 5147</msg>
<status status="PASS" endtime="20161122 00:09:29.119" starttime="20161122 00:09:29.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.121" level="INFO">${SQL_TalentPoolIdToGet} = 5147</msg>
<status status="PASS" endtime="20161122 00:09:29.121" starttime="20161122 00:09:29.120"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:29.121" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:29.121" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:29.122" starttime="20161122 00:09:29.121"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.122" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:29.122" starttime="20161122 00:09:29.122"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.123" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20161122 00:09:29.123" starttime="20161122 00:09:29.123"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.124" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:29.124" starttime="20161122 00:09:29.123"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:29.125" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:29.125" starttime="20161122 00:09:29.124"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161122 00:09:29.125" starttime="20161122 00:09:29.125"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:29.173" starttime="20161122 00:09:29.125"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:29.174" starttime="20161122 00:09:29.174"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:29.175" level="INFO">${resBody} = {"Message":"You don't have access to the talentpool."}</msg>
<status status="PASS" endtime="20161122 00:09:29.175" starttime="20161122 00:09:29.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.176" level="INFO">{"Message":"You don't have access to the talentpool."}</msg>
<status status="PASS" endtime="20161122 00:09:29.176" starttime="20161122 00:09:29.175"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:29.176" starttime="20161122 00:09:29.054"></status>
</kw>
<doc>*Name:*
API_TP_Get_Input_User_DNE

*Description:*
verify failure when user provided does not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:29.176" critical="yes" starttime="20161122 00:09:28.949"></status>
</test>
<test id="s1-s1-t37" name="GET-API_TPC_GET_Input_User_Did_Not_Create">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:29.217" starttime="20161122 00:09:29.179"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:29.237" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:29.237" starttime="20161122 00:09:29.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.237" level="INFO">1336</msg>
<status status="PASS" endtime="20161122 00:09:29.238" starttime="20161122 00:09:29.237"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:29.243" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:29.243" starttime="20161122 00:09:29.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.244" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:29.244" starttime="20161122 00:09:29.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.245" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:29.245" starttime="20161122 00:09:29.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.245" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:29.245" starttime="20161122 00:09:29.245"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:29.246" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:29.246" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:29.246" starttime="20161122 00:09:29.246"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.247" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:29.247" starttime="20161122 00:09:29.247"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.248" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:29.248" starttime="20161122 00:09:29.247"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.248" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:29.249" starttime="20161122 00:09:29.248"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:29.249" starttime="20161122 00:09:29.179"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:29.250" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:29.250" starttime="20161122 00:09:29.250"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:29.254" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:29.254" starttime="20161122 00:09:29.251"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:29.289" starttime="20161122 00:09:29.254"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:29.289" starttime="20161122 00:09:29.289"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:29.290" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:29.290" starttime="20161122 00:09:29.290"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:29.290" starttime="20161122 00:09:29.290"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:29.291" starttime="20161122 00:09:29.249"></status>
</kw>
<kw name="GET_User_Did_Not_Create" library="SMP_Keywords">
<doc>*GET_User_Did_Not_Create:*</doc>
<arguments>
<arg>Title</arg>
<arg>401</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:29.334" starttime="20161122 00:09:29.295"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id&lt;&gt; ${SQL_GET_USERID} ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20161122 00:09:29.356" level="INFO">${SQL_TalentPoolIdToGet} = 5807</msg>
<status status="PASS" endtime="20161122 00:09:29.356" starttime="20161122 00:09:29.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.357" level="INFO">${SQL_TalentPoolIdToGet} = 5807</msg>
<status status="PASS" endtime="20161122 00:09:29.357" starttime="20161122 00:09:29.356"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:29.358" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:29.358" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:29.359" starttime="20161122 00:09:29.358"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.359" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:29.359" starttime="20161122 00:09:29.359"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.360" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:29.360" starttime="20161122 00:09:29.360"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.361" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:29.361" starttime="20161122 00:09:29.360"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:29.362" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:29.362" starttime="20161122 00:09:29.361"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20161122 00:09:29.363" starttime="20161122 00:09:29.362"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:29.440" starttime="20161122 00:09:29.363"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:29.441" starttime="20161122 00:09:29.441"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:29.442" level="INFO">${resBody} = {"Message":"You don't have access to the talentpool."}</msg>
<status status="PASS" endtime="20161122 00:09:29.442" starttime="20161122 00:09:29.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.442" level="INFO">{"Message":"You don't have access to the talentpool."}</msg>
<status status="PASS" endtime="20161122 00:09:29.443" starttime="20161122 00:09:29.442"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:29.443" starttime="20161122 00:09:29.294"></status>
</kw>
<doc>*Name:*
API_TP_Get_Input_User_DidNotCreate

*Description:*
verify failure when user provided did not create the talent pool

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:29.443" critical="yes" starttime="20161122 00:09:29.177"></status>
</test>
<test id="s1-s1-t38" name="POST-API_TPC_Add_Security_Script">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:29.553" starttime="20161122 00:09:29.446"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:29.615" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161122 00:09:29.615" starttime="20161122 00:09:29.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.616" level="INFO">48</msg>
<status status="PASS" endtime="20161122 00:09:29.616" starttime="20161122 00:09:29.615"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:29.620" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:29.620" starttime="20161122 00:09:29.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.621" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20161122 00:09:29.621" starttime="20161122 00:09:29.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.622" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:29.622" starttime="20161122 00:09:29.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.623" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:29.623" starttime="20161122 00:09:29.622"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:29.623" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:29.623" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:29.623" starttime="20161122 00:09:29.623"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.624" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:29.624" starttime="20161122 00:09:29.624"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.625" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161122 00:09:29.625" starttime="20161122 00:09:29.624"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.626" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:29.626" starttime="20161122 00:09:29.625"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:29.626" starttime="20161122 00:09:29.445"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:29.627" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:29.627" starttime="20161122 00:09:29.627"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:29.633" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:29.633" starttime="20161122 00:09:29.628"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:29.681" starttime="20161122 00:09:29.633"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:29.682" starttime="20161122 00:09:29.681"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:29.682" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:29.682" starttime="20161122 00:09:29.682"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:29.683" starttime="20161122 00:09:29.682"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:29.683" starttime="20161122 00:09:29.627"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Add" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:29.782" starttime="20161122 00:09:29.687"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161122 00:09:29.798" level="INFO">${SQL_TalentPoolId} = 5154</msg>
<status status="PASS" endtime="20161122 00:09:29.798" starttime="20161122 00:09:29.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.799" level="INFO">${SQL_TalentPoolId} = 5154</msg>
<status status="PASS" endtime="20161122 00:09:29.799" starttime="20161122 00:09:29.798"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND name_first LIKE '%&lt;script&gt;alert(123)&lt;/script&gt;%' AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20161122 00:09:29.878" level="INFO">${SQL_UserToAdd1} = 1342</msg>
<status status="PASS" endtime="20161122 00:09:29.878" starttime="20161122 00:09:29.799"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:29.879" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:29.879" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:29.879" starttime="20161122 00:09:29.878"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.880" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:29.880" starttime="20161122 00:09:29.880"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.881" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20161122 00:09:29.881" starttime="20161122 00:09:29.881"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:29.882" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:29.882" starttime="20161122 00:09:29.882"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:29.883" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:29.883" starttime="20161122 00:09:29.882"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{ \"UserId\": ${SQL_UserToAdd1}, \"Status\": 128 }]</arg>
</arguments>
<msg timestamp="20161122 00:09:29.883" level="INFO">Request body set to "[{ "UserId": 1342, "Status": 128 }]".</msg>
<status status="PASS" endtime="20161122 00:09:29.884" starttime="20161122 00:09:29.883"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161122 00:09:29.898" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20161122 00:09:29.899" starttime="20161122 00:09:29.884"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:30.749" starttime="20161122 00:09:29.899"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:30.750" starttime="20161122 00:09:30.750"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:30.751" level="INFO">${resBody} = [{"UserId":1342,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":nu...</msg>
<status status="PASS" endtime="20161122 00:09:30.751" starttime="20161122 00:09:30.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:30.752" level="INFO">[{"UserId":1342,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":2}]</msg>
<status status="PASS" endtime="20161122 00:09:30.752" starttime="20161122 00:09:30.752"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20161122 00:09:30.767" level="INFO">${SQL_CandidatesCountAfter} = 0</msg>
<status status="PASS" endtime="20161122 00:09:30.767" starttime="20161122 00:09:30.752"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${SQL_CandidateCountBefore} == ${SQL_CandidatesCountAfter}"</arg>
<arg>Set Test Message</arg>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161122 00:09:30.773" level="INFO">Set test message to:
The 0 matches with 0</msg>
<status status="PASS" endtime="20161122 00:09:30.773" starttime="20161122 00:09:30.772"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:30.773" starttime="20161122 00:09:30.767"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:30.773" starttime="20161122 00:09:29.686"></status>
</kw>
<doc>*Name:*
API_TPC_Security_Script

*Description:*
verify script injection is allowed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:30.773" critical="yes" starttime="20161122 00:09:29.444">The 0 matches with 0</status>
</test>
<test id="s1-s1-t39" name="POST-API_TPC_Add_Already_Added_Subset">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:30.941" starttime="20161122 00:09:30.776"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:31.004" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:31.004" starttime="20161122 00:09:30.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:31.005" level="INFO">1336</msg>
<status status="PASS" endtime="20161122 00:09:31.005" starttime="20161122 00:09:31.005"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:31.014" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:31.015" starttime="20161122 00:09:31.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:31.016" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:31.016" starttime="20161122 00:09:31.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:31.017" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:31.017" starttime="20161122 00:09:31.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:31.018" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:31.018" starttime="20161122 00:09:31.018"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:31.019" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:31.019" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:31.019" starttime="20161122 00:09:31.018"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:31.020" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:31.020" starttime="20161122 00:09:31.019"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:31.021" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:31.021" starttime="20161122 00:09:31.020"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:31.021" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:31.022" starttime="20161122 00:09:31.021"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:31.022" starttime="20161122 00:09:30.776"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:31.023" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:31.023" starttime="20161122 00:09:31.023"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:31.027" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:31.027" starttime="20161122 00:09:31.024"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:31.054" starttime="20161122 00:09:31.027"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:31.055" starttime="20161122 00:09:31.055"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:31.056" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:31.056" starttime="20161122 00:09:31.055"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:31.056" starttime="20161122 00:09:31.056"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:31.056" starttime="20161122 00:09:31.022"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Add_SubSet" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:31.126" starttime="20161122 00:09:31.061"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161122 00:09:31.190" level="INFO">${SQL_TalentPoolId} = 563</msg>
<status status="PASS" endtime="20161122 00:09:31.191" starttime="20161122 00:09:31.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161122 00:09:31.192" level="INFO">${SQL_TalentPoolId} = 563</msg>
<status status="PASS" endtime="20161122 00:09:31.192" starttime="20161122 00:09:31.191"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20161122 00:09:31.244" level="INFO">${SQL_UserToAdd1} = 18</msg>
<status status="PASS" endtime="20161122 00:09:31.244" starttime="20161122 00:09:31.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20161122 00:09:31.245" level="INFO">${SQL_UserToAdd1} = 18</msg>
<status status="PASS" endtime="20161122 00:09:31.245" starttime="20161122 00:09:31.244"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id &lt;&gt; ${SQL_UserToAdd1} AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd2}</var>
</assign>
<msg timestamp="20161122 00:09:31.301" level="INFO">${SQL_UserToAdd2} = 571</msg>
<status status="PASS" endtime="20161122 00:09:31.301" starttime="20161122 00:09:31.245"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:31.302" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:31.302" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:31.302" starttime="20161122 00:09:31.301"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:31.302" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:31.303" starttime="20161122 00:09:31.302"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:31.303" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:31.303" starttime="20161122 00:09:31.303"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:31.304" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:31.304" starttime="20161122 00:09:31.304"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:31.305" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:31.305" starttime="20161122 00:09:31.304"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{\"UserId\": ${SQL_UserToAdd1}},{\"UserId\": ${SQL_UserToAdd2}}]</arg>
</arguments>
<msg timestamp="20161122 00:09:31.305" level="INFO">Request body set to "[{"UserId": 18},{"UserId": 571}]".</msg>
<status status="PASS" endtime="20161122 00:09:31.306" starttime="20161122 00:09:31.305"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161122 00:09:31.313" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20161122 00:09:31.313" starttime="20161122 00:09:31.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20161122 00:09:31.314" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20161122 00:09:31.314" starttime="20161122 00:09:31.313"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:31.943" starttime="20161122 00:09:31.315"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:31.944" starttime="20161122 00:09:31.944"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:31.945" level="INFO">${resBody} = [{"UserId":18,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null...</msg>
<status status="PASS" endtime="20161122 00:09:31.945" starttime="20161122 00:09:31.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:31.946" level="INFO">[{"UserId":18,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":1},{"UserId":571,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":0}]</msg>
<status status="PASS" endtime="20161122 00:09:31.946" starttime="20161122 00:09:31.945"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20161122 00:09:31.960" level="INFO">${SQL_CandidatesCountAfter} = 3</msg>
<status status="PASS" endtime="20161122 00:09:31.960" starttime="20161122 00:09:31.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161122 00:09:31.961" level="INFO">${SQL_CandidatesCountAfter} = 3</msg>
<status status="PASS" endtime="20161122 00:09:31.961" starttime="20161122 00:09:31.961"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${SQL_CandidateCountBefore} == ${SQL_CandidatesCountAfter}"</arg>
<arg>Set Test Message</arg>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161122 00:09:31.965" level="INFO">Set test message to:
The 2 matches with 3</msg>
<status status="PASS" endtime="20161122 00:09:31.965" starttime="20161122 00:09:31.965"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:31.965" starttime="20161122 00:09:31.962"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:31.966" starttime="20161122 00:09:31.060"></status>
</kw>
<doc>*Name:*
API_TPC_Add_Already_Added_Subset

*Description:*
Verify success when subset of added users are already added

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:31.966" critical="yes" starttime="20161122 00:09:30.774">The 2 matches with 3</status>
</test>
<test id="s1-s1-t40" name="POST-API_TPC_Add_Already_Added_Single">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:31.984" starttime="20161122 00:09:31.968"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20161122 00:09:31.998" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:31.998" starttime="20161122 00:09:31.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:31.999" level="INFO">1336</msg>
<status status="PASS" endtime="20161122 00:09:31.999" starttime="20161122 00:09:31.998"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20161122 00:09:32.003" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:32.003" starttime="20161122 00:09:31.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:32.004" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20161122 00:09:32.004" starttime="20161122 00:09:32.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:32.005" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20161122 00:09:32.005" starttime="20161122 00:09:32.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:32.006" level="INFO">1</msg>
<status status="PASS" endtime="20161122 00:09:32.006" starttime="20161122 00:09:32.005"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:32.006" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:32.006" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:32.007" starttime="20161122 00:09:32.006"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:32.007" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:32.007" starttime="20161122 00:09:32.007"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:32.008" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:32.008" starttime="20161122 00:09:32.008"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:32.009" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:32.009" starttime="20161122 00:09:32.008"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:32.009" starttime="20161122 00:09:31.968"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:32.011" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:32.011" starttime="20161122 00:09:32.010"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20161122 00:09:32.014" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20161122 00:09:32.014" starttime="20161122 00:09:32.011"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:32.037" starttime="20161122 00:09:32.014"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:32.038" starttime="20161122 00:09:32.037"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:32.038" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20161122 00:09:32.038" starttime="20161122 00:09:32.038"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:32.039" starttime="20161122 00:09:32.039"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:32.039" starttime="20161122 00:09:32.010"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Already_Added_Single" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:32.067" starttime="20161122 00:09:32.044"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20161122 00:09:32.092" level="INFO">${SQL_TalentPoolId} = 2021</msg>
<status status="PASS" endtime="20161122 00:09:32.092" starttime="20161122 00:09:32.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20161122 00:09:32.093" level="INFO">${SQL_TalentPoolId} = 2021</msg>
<status status="PASS" endtime="20161122 00:09:32.094" starttime="20161122 00:09:32.093"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20161122 00:09:32.119" level="INFO">${SQL_UserToAdd1} = 836</msg>
<status status="PASS" endtime="20161122 00:09:32.119" starttime="20161122 00:09:32.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20161122 00:09:32.120" level="INFO">${SQL_UserToAdd1} = 836</msg>
<status status="PASS" endtime="20161122 00:09:32.120" starttime="20161122 00:09:32.119"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20161122 00:09:32.121" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20161122 00:09:32.121" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20161122 00:09:32.121" starttime="20161122 00:09:32.120"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20161122 00:09:32.122" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20161122 00:09:32.122" starttime="20161122 00:09:32.121"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20161122 00:09:32.122" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20161122 00:09:32.122" starttime="20161122 00:09:32.122"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20161122 00:09:32.124" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20161122 00:09:32.124" starttime="20161122 00:09:32.123"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20161122 00:09:32.125" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20161122 00:09:32.125" starttime="20161122 00:09:32.124"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{\"UserId\": ${SQL_UserToAdd1}}]</arg>
</arguments>
<msg timestamp="20161122 00:09:32.125" level="INFO">Request body set to "[{"UserId": 836}]".</msg>
<status status="PASS" endtime="20161122 00:09:32.126" starttime="20161122 00:09:32.125"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20161122 00:09:32.155" level="INFO">${SQL_CandidateCountBefore} = 4</msg>
<status status="PASS" endtime="20161122 00:09:32.155" starttime="20161122 00:09:32.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20161122 00:09:32.156" level="INFO">${SQL_CandidateCountBefore} = 4</msg>
<status status="PASS" endtime="20161122 00:09:32.156" starttime="20161122 00:09:32.155"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:32.519" starttime="20161122 00:09:32.156"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20161122 00:09:32.520" starttime="20161122 00:09:32.520"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20161122 00:09:32.521" level="INFO">${resBody} = [{"UserId":836,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":nul...</msg>
<status status="PASS" endtime="20161122 00:09:32.521" starttime="20161122 00:09:32.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20161122 00:09:32.522" level="INFO">[{"UserId":836,"FirstName":null,"LastName":null,"Ref":null,"TypeId":0,"UserStatusId":0,"CandidateStatusId":0,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":1}]</msg>
<status status="PASS" endtime="20161122 00:09:32.522" starttime="20161122 00:09:32.521"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20161122 00:09:32.528" level="INFO">${SQL_CandidatesCountAfter} = 4</msg>
<status status="PASS" endtime="20161122 00:09:32.528" starttime="20161122 00:09:32.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161122 00:09:32.530" level="INFO">${SQL_CandidatesCountAfter} = 4</msg>
<status status="PASS" endtime="20161122 00:09:32.530" starttime="20161122 00:09:32.529"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${SQL_CandidateCountBefore} == ${SQL_CandidatesCountAfter}"</arg>
<arg>Set Test Message</arg>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${SQL_CandidateCountBefore} matches with ${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20161122 00:09:32.535" level="INFO">Set test message to:
The 4 matches with 4</msg>
<status status="PASS" endtime="20161122 00:09:32.535" starttime="20161122 00:09:32.534"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:32.535" starttime="20161122 00:09:32.530"></status>
</kw>
<status status="PASS" endtime="20161122 00:09:32.535" starttime="20161122 00:09:32.043"></status>
</kw>
<doc>*Name:*
API_TPC_Add_AlreadyAdded_Single

*Description:*
Verify success when single added user is already added

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
</tags>
<status status="PASS" endtime="20161122 00:09:32.535" critical="yes" starttime="20161122 00:09:31.966">The 4 matches with 4</status>
</test>
<status status="PASS" endtime="20161122 00:09:32.538" starttime="20161122 00:09:14.987"></status>
</suite>
<status status="PASS" endtime="20161122 00:09:32.555" starttime="20161122 00:09:14.894"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="40">Critical Tests</stat>
<stat fail="0" pass="40">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="6">ASCII</stat>
<stat fail="0" pass="5">NEGATIVETEST</stat>
<stat fail="0" pass="40">POST</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="TestSuites" pass="40">TestSuites</stat>
<stat fail="0" id="s1-s1" name="SMP-API-Talent Pool" pass="40">TestSuites.SMP-API-Talent Pool</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20161122 00:09:16.658" level="ERROR">Error in file 'C:\Users\gfung\.jenkins\workspace\SMP-API-Talent_Pool\COMP\Resources\SMP_PROJECTS\GlobalSMP\GlobalConfigSMP.robot': Setting variable '${HTTP_CONTEXT_CSOD_AUTH}' failed: Variable '${HTTP_CONTEXT_CSOD_AUTH_QA052}' not found. Did you mean:
    ${HTTP_CONTEXT_CSOD_AUTH_QA052_RL}
    ${HTTP_CONTEXT_CSOD_AUTH}</msg>
<msg timestamp="20161122 00:09:16.663" level="ERROR">Error in file 'C:\Users\gfung\.jenkins\workspace\SMP-API-Talent_Pool\COMP\Resources\SMP_PROJECTS\GlobalSMP\GlobalConfigSMP.robot': Setting variable '${HTTP_CONTEXT_NORMAL}' failed: Variable '${HTTP_CONTEXT_NORMAL_QA052}' not found. Did you mean:
    ${HTTP_CONTEXT_NORMAL_QA052_RL}
    ${HTTP_CONTEXT_NORMAL}</msg>
</errors>
</robot>
