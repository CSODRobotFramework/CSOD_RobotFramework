<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170331 10:33:26.438" generator="Robot 3.0 (Python 2.7.12 on win32)">
<suite source="C:\Users\gfung\.jenkins\workspace\SMP-API-Talent_Pool\TestSuites\SMP-API-Talent_Pool.robot" id="s1" name="SMP-API-Talent Pool">
<test id="s1-t1" name="POST-API_Talent_Pool_Create_Succ_Return_Name">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.026" starttime="20170331 10:33:26.995"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:27.042" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170331 10:33:27.042" starttime="20170331 10:33:27.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.042" level="INFO">415</msg>
<status status="PASS" endtime="20170331 10:33:27.042" starttime="20170331 10:33:27.042"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:27.042" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:27.042" starttime="20170331 10:33:27.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.042" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170331 10:33:27.042" starttime="20170331 10:33:27.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.042" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:27.042" starttime="20170331 10:33:27.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.042" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:27.042" starttime="20170331 10:33:27.042"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:27.042" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:27.042" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:27.042" starttime="20170331 10:33:27.042"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.042" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:27.042" starttime="20170331 10:33:27.042"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.042" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170331 10:33:27.042" starttime="20170331 10:33:27.042"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.042" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:27.042" starttime="20170331 10:33:27.042"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:27.042" starttime="20170331 10:33:26.995"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:27.042" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:27.042" starttime="20170331 10:33:27.042"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:27.057" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:27.057" starttime="20170331 10:33:27.042"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.057" starttime="20170331 10:33:27.057"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.057" starttime="20170331 10:33:27.057"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:27.057" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:27.057" starttime="20170331 10:33:27.057"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.073" starttime="20170331 10:33:27.057"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:27.073" starttime="20170331 10:33:27.042"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>InnocentName</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:27.073" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:27.073" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:27.073" starttime="20170331 10:33:27.073"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.073" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:27.073" starttime="20170331 10:33:27.073"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.073" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170331 10:33:27.073" starttime="20170331 10:33:27.073"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.073" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:27.073" starttime="20170331 10:33:27.073"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:27.088" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:27.088" starttime="20170331 10:33:27.073"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.088" level="INFO">Request body set to "{ "Title":"InnocentName"}".</msg>
<status status="PASS" endtime="20170331 10:33:27.088" starttime="20170331 10:33:27.088"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<msg timestamp="20170331 10:33:27.120" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:27.120" starttime="20170331 10:33:27.088"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:27.120" starttime="20170331 10:33:27.073"></status>
</kw>
<doc>*Name:*
API_Talent_Pool_Create_Success_Return_Name.

*Description:*
verify new talent pool returns correct name

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>testrailid=24402</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:27.120" critical="yes" starttime="20170331 10:33:26.979">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t2" name="POST-API_Talent_Pool_Success_NewEntryExist">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.151" starttime="20170331 10:33:27.120"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:27.151" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170331 10:33:27.151" starttime="20170331 10:33:27.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.151" level="INFO">514</msg>
<status status="PASS" endtime="20170331 10:33:27.151" starttime="20170331 10:33:27.151"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:27.151" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:27.151" starttime="20170331 10:33:27.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.151" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170331 10:33:27.151" starttime="20170331 10:33:27.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.167" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:27.167" starttime="20170331 10:33:27.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.167" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:27.167" starttime="20170331 10:33:27.167"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:27.167" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:27.167" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:27.167" starttime="20170331 10:33:27.167"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.167" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:27.167" starttime="20170331 10:33:27.167"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.167" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20170331 10:33:27.167" starttime="20170331 10:33:27.167"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.167" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:27.167" starttime="20170331 10:33:27.167"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:27.167" starttime="20170331 10:33:27.120"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:27.167" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:27.167" starttime="20170331 10:33:27.167"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:27.167" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:27.167" starttime="20170331 10:33:27.167"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.182" starttime="20170331 10:33:27.167"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.182" starttime="20170331 10:33:27.182"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:27.182" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:27.182" starttime="20170331 10:33:27.182"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.182" starttime="20170331 10:33:27.182"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:27.182" starttime="20170331 10:33:27.167"></status>
</kw>
<kw name="POST_TalentPool_Create_Random_Title" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Title</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.198" starttime="20170331 10:33:27.182"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT CONVERT(varchar(255), NEWID())</arg>
</arguments>
<assign>
<var>${SQL_RandomName}</var>
</assign>
<msg timestamp="20170331 10:33:27.198" level="INFO">${SQL_RandomName} = 19D70D08-9C04-4CB2-A6C3-DE79073AEBFF</msg>
<status status="PASS" endtime="20170331 10:33:27.198" starttime="20170331 10:33:27.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_RandomName}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.198" level="INFO">${SQL_RandomName} = 19D70D08-9C04-4CB2-A6C3-DE79073AEBFF</msg>
<status status="PASS" endtime="20170331 10:33:27.198" starttime="20170331 10:33:27.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_RandomName}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.213" level="INFO">19D70D08-9C04-4CB2-A6C3-DE79073AEBFF</msg>
<status status="PASS" endtime="20170331 10:33:27.213" starttime="20170331 10:33:27.198"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:27.213" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:27.213" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:27.213" starttime="20170331 10:33:27.213"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.213" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:27.213" starttime="20170331 10:33:27.213"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.213" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20170331 10:33:27.213" starttime="20170331 10:33:27.213"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.213" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:27.213" starttime="20170331 10:33:27.213"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:27.213" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:27.213" starttime="20170331 10:33:27.213"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SQL_RandomName}\"}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.213" level="INFO">Request body set to "{ "Title":"19D70D08-9C04-4CB2-A6C3-DE79073AEBFF"}".</msg>
<status status="PASS" endtime="20170331 10:33:27.213" starttime="20170331 10:33:27.213"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<msg timestamp="20170331 10:33:27.245" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:27.245" starttime="20170331 10:33:27.213"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:27.245" starttime="20170331 10:33:27.182"></status>
</kw>
<doc>*Name:*
API_Talent_Pool_Success_NewEntryExist.

*Description:*
verify new talent pool in data base

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24403</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:27.245" critical="yes" starttime="20170331 10:33:27.120">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t3" name="POST-API_TPC_Length_0">
<kw name="REST_NOAUTH_Shared_TalentPools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.260" starttime="20170331 10:33:27.260"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 talent_pool_shared_user.user_id FROM talent_pool_shared_user JOIN users ON talent_pool_shared_user.user_id = users.user_id WHERE users.culture_lang_id IS NOT NULL GROUP BY talent_pool_shared_user.user_id ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:27.276" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170331 10:33:27.276" starttime="20170331 10:33:27.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.276" level="INFO">48</msg>
<status status="PASS" endtime="20170331 10:33:27.276" starttime="20170331 10:33:27.276"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:27.276" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:27.276" starttime="20170331 10:33:27.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.276" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170331 10:33:27.276" starttime="20170331 10:33:27.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.276" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:27.276" starttime="20170331 10:33:27.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.276" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:27.276" starttime="20170331 10:33:27.276"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:27.276" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:27.276" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:27.276" starttime="20170331 10:33:27.276"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.292" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:27.292" starttime="20170331 10:33:27.276"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.292" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170331 10:33:27.292" starttime="20170331 10:33:27.292"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.292" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:27.292" starttime="20170331 10:33:27.292"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:27.292" starttime="20170331 10:33:27.245"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:27.292" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:27.292" starttime="20170331 10:33:27.292"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:27.292" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:27.292" starttime="20170331 10:33:27.292"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.307" starttime="20170331 10:33:27.292"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.307" starttime="20170331 10:33:27.307"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:27.307" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:27.307" starttime="20170331 10:33:27.307"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.307" starttime="20170331 10:33:27.307"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:27.307" starttime="20170331 10:33:27.292"></status>
</kw>
<kw name="POST_TalentPool_Create_Empty_String" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${EMPTY}</arg>
<arg>Title</arg>
<arg>400</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:27.307" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:27.307" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:27.307" starttime="20170331 10:33:27.307"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.307" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:27.307" starttime="20170331 10:33:27.307"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.307" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170331 10:33:27.307" starttime="20170331 10:33:27.307"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.307" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:27.307" starttime="20170331 10:33:27.307"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:27.307" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20170331 10:33:27.307" starttime="20170331 10:33:27.307"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20170331 10:33:27.307" starttime="20170331 10:33:27.307"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"${KEY_NAME_JSON}\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.323" level="INFO">Request body set to "{ "Title":""}".</msg>
<status status="PASS" endtime="20170331 10:33:27.323" starttime="20170331 10:33:27.323"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.401" starttime="20170331 10:33:27.323"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.401" level="FAIL">"500 Internal Server Error" does not start with "400", but should have.</msg>
<status status="FAIL" endtime="20170331 10:33:27.401" starttime="20170331 10:33:27.401"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:27.401" starttime="20170331 10:33:27.307"></status>
</kw>
<doc>*Name:*
Api_TPC_Length_0.

*Description:*
verify failure when title length is 0

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
<tag>testrailid=24404</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:27.401" critical="yes" starttime="20170331 10:33:27.245">"500 Internal Server Error" does not start with "400", but should have.</status>
</test>
<test id="s1-t4" name="POST-API_TPC_Length_1">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.432" starttime="20170331 10:33:27.401"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:27.432" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170331 10:33:27.432" starttime="20170331 10:33:27.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.432" level="INFO">48</msg>
<status status="PASS" endtime="20170331 10:33:27.432" starttime="20170331 10:33:27.432"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:27.432" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:27.432" starttime="20170331 10:33:27.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.448" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170331 10:33:27.448" starttime="20170331 10:33:27.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.448" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:27.448" starttime="20170331 10:33:27.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.448" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:27.448" starttime="20170331 10:33:27.448"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:27.448" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:27.448" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:27.448" starttime="20170331 10:33:27.448"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.448" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:27.448" starttime="20170331 10:33:27.448"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.448" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170331 10:33:27.448" starttime="20170331 10:33:27.448"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.448" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:27.448" starttime="20170331 10:33:27.448"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:27.448" starttime="20170331 10:33:27.401"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:27.448" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:27.448" starttime="20170331 10:33:27.448"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:27.448" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:27.448" starttime="20170331 10:33:27.448"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.463" starttime="20170331 10:33:27.448"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.463" starttime="20170331 10:33:27.463"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:27.463" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:27.463" starttime="20170331 10:33:27.463"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.463" starttime="20170331 10:33:27.463"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:27.463" starttime="20170331 10:33:27.448"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>1</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:27.479" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:27.479" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:27.479" starttime="20170331 10:33:27.479"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.479" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:27.479" starttime="20170331 10:33:27.479"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.479" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170331 10:33:27.479" starttime="20170331 10:33:27.479"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.479" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:27.479" starttime="20170331 10:33:27.479"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:27.479" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:27.479" starttime="20170331 10:33:27.479"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.479" level="INFO">Request body set to "{ "Title":"1"}".</msg>
<status status="PASS" endtime="20170331 10:33:27.479" starttime="20170331 10:33:27.479"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<msg timestamp="20170331 10:33:27.510" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:27.510" starttime="20170331 10:33:27.479"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:27.510" starttime="20170331 10:33:27.479"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Length_1

*Description:*
verify success when title length is 1

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24405</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:27.510" critical="yes" starttime="20170331 10:33:27.401">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t5" name="POST-API_TPC_Length_50">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.526" starttime="20170331 10:33:27.510"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:27.542" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170331 10:33:27.542" starttime="20170331 10:33:27.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.542" level="INFO">48</msg>
<status status="PASS" endtime="20170331 10:33:27.542" starttime="20170331 10:33:27.542"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:27.542" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:27.542" starttime="20170331 10:33:27.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.542" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170331 10:33:27.542" starttime="20170331 10:33:27.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.542" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:27.542" starttime="20170331 10:33:27.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.542" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:27.542" starttime="20170331 10:33:27.542"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:27.542" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:27.542" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:27.542" starttime="20170331 10:33:27.542"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.542" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:27.542" starttime="20170331 10:33:27.542"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.542" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170331 10:33:27.542" starttime="20170331 10:33:27.542"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.542" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:27.542" starttime="20170331 10:33:27.542"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:27.542" starttime="20170331 10:33:27.510"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:27.542" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:27.542" starttime="20170331 10:33:27.542"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:27.557" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:27.557" starttime="20170331 10:33:27.542"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.557" starttime="20170331 10:33:27.557"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.557" starttime="20170331 10:33:27.557"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:27.557" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:27.557" starttime="20170331 10:33:27.557"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.557" starttime="20170331 10:33:27.557"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:27.557" starttime="20170331 10:33:27.542"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>12345678901234567890123456789012345678901234567890</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:27.573" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:27.573" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:27.573" starttime="20170331 10:33:27.573"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.573" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:27.573" starttime="20170331 10:33:27.573"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.588" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170331 10:33:27.588" starttime="20170331 10:33:27.573"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.588" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:27.588" starttime="20170331 10:33:27.588"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:27.588" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:27.588" starttime="20170331 10:33:27.588"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.588" level="INFO">Request body set to "{ "Title":"12345678901234567890123456789012345678901234567890"}".</msg>
<status status="PASS" endtime="20170331 10:33:27.588" starttime="20170331 10:33:27.588"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<msg timestamp="20170331 10:33:27.620" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:27.620" starttime="20170331 10:33:27.588"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:27.620" starttime="20170331 10:33:27.573"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Length_50

*Description:*
verify success when title length is 50

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24406</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:27.620" critical="yes" starttime="20170331 10:33:27.510">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t6" name="POST-API_TPC_Trim_Space">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.635" starttime="20170331 10:33:27.620"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:27.635" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170331 10:33:27.635" starttime="20170331 10:33:27.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.635" level="INFO">415</msg>
<status status="PASS" endtime="20170331 10:33:27.635" starttime="20170331 10:33:27.635"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:27.651" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:27.651" starttime="20170331 10:33:27.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.651" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170331 10:33:27.651" starttime="20170331 10:33:27.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.651" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:27.651" starttime="20170331 10:33:27.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.651" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:27.651" starttime="20170331 10:33:27.651"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:27.651" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:27.651" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:27.651" starttime="20170331 10:33:27.651"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.651" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:27.651" starttime="20170331 10:33:27.651"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.651" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170331 10:33:27.651" starttime="20170331 10:33:27.651"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.651" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:27.651" starttime="20170331 10:33:27.651"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:27.651" starttime="20170331 10:33:27.620"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:27.651" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:27.651" starttime="20170331 10:33:27.651"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:27.651" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:27.651" starttime="20170331 10:33:27.651"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.682" starttime="20170331 10:33:27.651"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.682" starttime="20170331 10:33:27.682"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:27.682" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:27.682" starttime="20170331 10:33:27.682"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.682" starttime="20170331 10:33:27.682"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:27.682" starttime="20170331 10:33:27.651"></status>
</kw>
<kw name="POST_TalentPool_Create_Empty_String" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${SPACE * 3}</arg>
<arg>Title</arg>
<arg>400</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:27.698" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:27.698" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:27.698" starttime="20170331 10:33:27.682"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.698" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:27.698" starttime="20170331 10:33:27.698"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.698" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170331 10:33:27.698" starttime="20170331 10:33:27.698"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.698" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:27.698" starttime="20170331 10:33:27.698"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:27.698" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20170331 10:33:27.698" starttime="20170331 10:33:27.698"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20170331 10:33:27.698" starttime="20170331 10:33:27.698"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"${KEY_NAME_JSON}\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.698" level="INFO">Request body set to "{ "Title":"   "}".</msg>
<status status="PASS" endtime="20170331 10:33:27.698" starttime="20170331 10:33:27.698"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.729" starttime="20170331 10:33:27.698"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.729" level="FAIL">"500 Internal Server Error" does not start with "400", but should have.</msg>
<status status="FAIL" endtime="20170331 10:33:27.729" starttime="20170331 10:33:27.729"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:27.729" starttime="20170331 10:33:27.682"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Space

*Description:*
verify trimming with only space

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
<tag>testrailid=24408</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:27.729" critical="yes" starttime="20170331 10:33:27.620">"500 Internal Server Error" does not start with "400", but should have.</status>
</test>
<test id="s1-t7" name="POST-API_TPC_Trim_TabSpace">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.745" starttime="20170331 10:33:27.729"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:27.745" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170331 10:33:27.745" starttime="20170331 10:33:27.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.745" level="INFO">415</msg>
<status status="PASS" endtime="20170331 10:33:27.745" starttime="20170331 10:33:27.745"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:27.760" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:27.760" starttime="20170331 10:33:27.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.760" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170331 10:33:27.760" starttime="20170331 10:33:27.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.760" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:27.760" starttime="20170331 10:33:27.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.760" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:27.760" starttime="20170331 10:33:27.760"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:27.760" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:27.760" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:27.760" starttime="20170331 10:33:27.760"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.760" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:27.760" starttime="20170331 10:33:27.760"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.760" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170331 10:33:27.760" starttime="20170331 10:33:27.760"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.760" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:27.760" starttime="20170331 10:33:27.760"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:27.760" starttime="20170331 10:33:27.729"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:27.760" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:27.760" starttime="20170331 10:33:27.760"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:27.776" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:27.776" starttime="20170331 10:33:27.760"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.776" starttime="20170331 10:33:27.776"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.776" starttime="20170331 10:33:27.776"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:27.776" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:27.776" starttime="20170331 10:33:27.776"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.776" starttime="20170331 10:33:27.776"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:27.776" starttime="20170331 10:33:27.760"></status>
</kw>
<kw name="POST_TalentPool_Create_Empty_String" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${EMPTY}</arg>
<arg>Title</arg>
<arg>400</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:27.792" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:27.792" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:27.792" starttime="20170331 10:33:27.792"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.792" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:27.792" starttime="20170331 10:33:27.792"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.792" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170331 10:33:27.792" starttime="20170331 10:33:27.792"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.792" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:27.792" starttime="20170331 10:33:27.792"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:27.792" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20170331 10:33:27.792" starttime="20170331 10:33:27.792"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20170331 10:33:27.792" starttime="20170331 10:33:27.792"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"${KEY_NAME_JSON}\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.792" level="INFO">Request body set to "{ "Title":""}".</msg>
<status status="PASS" endtime="20170331 10:33:27.792" starttime="20170331 10:33:27.792"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.823" starttime="20170331 10:33:27.792"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.838" level="FAIL">"500 Internal Server Error" does not start with "400", but should have.</msg>
<status status="FAIL" endtime="20170331 10:33:27.838" starttime="20170331 10:33:27.823"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:27.838" starttime="20170331 10:33:27.792"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_TabSpace

*Description:*
verify trimming with only tab-space

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
<tag>testrailid=24409</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:27.838" critical="yes" starttime="20170331 10:33:27.729">"500 Internal Server Error" does not start with "400", but should have.</status>
</test>
<test id="s1-t8" name="POST-API_TPC_Trim_Leading">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.854" starttime="20170331 10:33:27.838"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:27.854" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170331 10:33:27.854" starttime="20170331 10:33:27.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.854" level="INFO">514</msg>
<status status="PASS" endtime="20170331 10:33:27.854" starttime="20170331 10:33:27.854"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:27.854" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:27.854" starttime="20170331 10:33:27.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.854" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170331 10:33:27.854" starttime="20170331 10:33:27.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.870" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:27.870" starttime="20170331 10:33:27.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.870" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:27.870" starttime="20170331 10:33:27.870"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:27.870" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:27.870" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:27.870" starttime="20170331 10:33:27.870"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.870" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:27.870" starttime="20170331 10:33:27.870"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.870" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20170331 10:33:27.870" starttime="20170331 10:33:27.870"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.870" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:27.870" starttime="20170331 10:33:27.870"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:27.870" starttime="20170331 10:33:27.838"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:27.870" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:27.870" starttime="20170331 10:33:27.870"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:27.870" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:27.870" starttime="20170331 10:33:27.870"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.885" starttime="20170331 10:33:27.870"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.885" starttime="20170331 10:33:27.885"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:27.885" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:27.885" starttime="20170331 10:33:27.885"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.885" starttime="20170331 10:33:27.885"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:27.885" starttime="20170331 10:33:27.870"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${SPACE * 2}Leading</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:27.901" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:27.901" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:27.901" starttime="20170331 10:33:27.901"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.901" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:27.901" starttime="20170331 10:33:27.901"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.901" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20170331 10:33:27.901" starttime="20170331 10:33:27.901"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.901" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:27.901" starttime="20170331 10:33:27.901"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:27.901" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:27.901" starttime="20170331 10:33:27.901"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.901" level="INFO">Request body set to "{ "Title":"  Leading"}".</msg>
<status status="PASS" endtime="20170331 10:33:27.901" starttime="20170331 10:33:27.901"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<msg timestamp="20170331 10:33:27.932" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:27.932" starttime="20170331 10:33:27.901"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:27.932" starttime="20170331 10:33:27.901"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Leading

*Description:*
verify trimming leading spaces

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24410</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:27.932" critical="yes" starttime="20170331 10:33:27.838">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t9" name="POST-API_TPC_Trim_Trailing">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.948" starttime="20170331 10:33:27.932"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:27.963" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170331 10:33:27.963" starttime="20170331 10:33:27.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.963" level="INFO">1338</msg>
<status status="PASS" endtime="20170331 10:33:27.963" starttime="20170331 10:33:27.963"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:27.963" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:27.963" starttime="20170331 10:33:27.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.963" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170331 10:33:27.963" starttime="20170331 10:33:27.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.963" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:27.963" starttime="20170331 10:33:27.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.963" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:27.963" starttime="20170331 10:33:27.963"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:27.963" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:27.963" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:27.963" starttime="20170331 10:33:27.963"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.963" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:27.963" starttime="20170331 10:33:27.963"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.963" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20170331 10:33:27.963" starttime="20170331 10:33:27.963"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.963" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:27.963" starttime="20170331 10:33:27.963"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:27.963" starttime="20170331 10:33:27.932"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:27.963" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:27.963" starttime="20170331 10:33:27.963"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:27.963" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:27.963" starttime="20170331 10:33:27.963"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.979" starttime="20170331 10:33:27.963"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.979" starttime="20170331 10:33:27.979"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:27.979" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:27.979" starttime="20170331 10:33:27.979"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:27.979" starttime="20170331 10:33:27.979"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:27.979" starttime="20170331 10:33:27.963"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Trailing${SPACE * 2}</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:27.995" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:27.995" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:27.995" starttime="20170331 10:33:27.995"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.995" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:27.995" starttime="20170331 10:33:27.995"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.995" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20170331 10:33:27.995" starttime="20170331 10:33:27.995"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.995" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:27.995" starttime="20170331 10:33:27.995"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:27.995" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:27.995" starttime="20170331 10:33:27.995"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170331 10:33:27.995" level="INFO">Request body set to "{ "Title":"Trailing  "}".</msg>
<status status="PASS" endtime="20170331 10:33:27.995" starttime="20170331 10:33:27.995"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<msg timestamp="20170331 10:33:28.026" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:28.026" starttime="20170331 10:33:27.995"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:28.026" starttime="20170331 10:33:27.995"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Trailing

*Description:*
verify trimming trailing spaces

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24411</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:28.026" critical="yes" starttime="20170331 10:33:27.932">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t10" name="POST-API_TPC_Trim_Middle">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.057" starttime="20170331 10:33:28.026"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:28.057" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:28.057" starttime="20170331 10:33:28.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.057" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:28.057" starttime="20170331 10:33:28.057"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:28.057" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:28.057" starttime="20170331 10:33:28.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.057" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:28.057" starttime="20170331 10:33:28.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.057" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:28.057" starttime="20170331 10:33:28.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.057" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:28.057" starttime="20170331 10:33:28.057"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:28.057" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:28.057" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:28.057" starttime="20170331 10:33:28.057"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.057" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:28.057" starttime="20170331 10:33:28.057"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.073" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:28.073" starttime="20170331 10:33:28.057"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.073" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:28.073" starttime="20170331 10:33:28.073"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:28.073" starttime="20170331 10:33:28.026"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:28.073" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:28.073" starttime="20170331 10:33:28.073"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:28.073" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:28.073" starttime="20170331 10:33:28.073"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.073" starttime="20170331 10:33:28.073"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.073" starttime="20170331 10:33:28.073"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:28.088" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:28.088" starttime="20170331 10:33:28.073"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.088" starttime="20170331 10:33:28.088"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:28.088" starttime="20170331 10:33:28.073"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>space between</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:28.088" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:28.088" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:28.088" starttime="20170331 10:33:28.088"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.088" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:28.088" starttime="20170331 10:33:28.088"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.088" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:28.088" starttime="20170331 10:33:28.088"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.088" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:28.088" starttime="20170331 10:33:28.088"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:28.088" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:28.088" starttime="20170331 10:33:28.088"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.088" level="INFO">Request body set to "{ "Title":"space between"}".</msg>
<status status="PASS" endtime="20170331 10:33:28.088" starttime="20170331 10:33:28.088"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<msg timestamp="20170331 10:33:28.120" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:28.135" starttime="20170331 10:33:28.088"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:28.135" starttime="20170331 10:33:28.088"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Middle

*Description:*
verify no trimming middle spaces

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24412</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:28.135" critical="yes" starttime="20170331 10:33:28.026">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t11" name="POST-API_TPC_Trim_SpaceAnd50">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.151" starttime="20170331 10:33:28.135"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:28.151" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170331 10:33:28.151" starttime="20170331 10:33:28.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.151" level="INFO">48</msg>
<status status="PASS" endtime="20170331 10:33:28.151" starttime="20170331 10:33:28.151"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:28.151" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:28.151" starttime="20170331 10:33:28.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.151" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170331 10:33:28.151" starttime="20170331 10:33:28.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.151" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:28.151" starttime="20170331 10:33:28.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.151" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:28.151" starttime="20170331 10:33:28.151"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:28.151" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:28.151" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:28.151" starttime="20170331 10:33:28.151"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.151" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:28.151" starttime="20170331 10:33:28.151"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.151" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170331 10:33:28.151" starttime="20170331 10:33:28.151"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.151" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:28.151" starttime="20170331 10:33:28.151"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:28.151" starttime="20170331 10:33:28.135"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:28.167" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:28.167" starttime="20170331 10:33:28.151"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:28.167" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:28.167" starttime="20170331 10:33:28.167"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.167" starttime="20170331 10:33:28.167"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.167" starttime="20170331 10:33:28.167"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:28.167" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:28.167" starttime="20170331 10:33:28.167"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.182" starttime="20170331 10:33:28.167"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:28.182" starttime="20170331 10:33:28.151"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>12345678901234567890123456789012345678901234567890${SPACE}</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:28.182" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:28.182" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:28.182" starttime="20170331 10:33:28.182"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.182" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:28.182" starttime="20170331 10:33:28.182"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.182" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170331 10:33:28.182" starttime="20170331 10:33:28.182"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.182" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:28.182" starttime="20170331 10:33:28.182"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:28.182" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:28.182" starttime="20170331 10:33:28.182"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.182" level="INFO">Request body set to "{ "Title":"12345678901234567890123456789012345678901234567890 "}".</msg>
<status status="PASS" endtime="20170331 10:33:28.182" starttime="20170331 10:33:28.182"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<msg timestamp="20170331 10:33:28.229" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:28.229" starttime="20170331 10:33:28.182"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:28.229" starttime="20170331 10:33:28.182"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_SpaceAnd50

*Description:*
verify trimming happens before submissions attempt

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24413</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:28.229" critical="yes" starttime="20170331 10:33:28.135">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t12" name="POST-API_TPC_Security_Script">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.245" starttime="20170331 10:33:28.229"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:28.260" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170331 10:33:28.260" starttime="20170331 10:33:28.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.260" level="INFO">48</msg>
<status status="PASS" endtime="20170331 10:33:28.260" starttime="20170331 10:33:28.260"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:28.260" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:28.260" starttime="20170331 10:33:28.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.260" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170331 10:33:28.260" starttime="20170331 10:33:28.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.260" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:28.260" starttime="20170331 10:33:28.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.260" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:28.260" starttime="20170331 10:33:28.260"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:28.260" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:28.260" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:28.260" starttime="20170331 10:33:28.260"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.260" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:28.260" starttime="20170331 10:33:28.260"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.260" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170331 10:33:28.260" starttime="20170331 10:33:28.260"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.260" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:28.260" starttime="20170331 10:33:28.260"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:28.260" starttime="20170331 10:33:28.229"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:28.260" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:28.260" starttime="20170331 10:33:28.260"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:28.260" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:28.260" starttime="20170331 10:33:28.260"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.276" starttime="20170331 10:33:28.260"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.276" starttime="20170331 10:33:28.276"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:28.276" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:28.276" starttime="20170331 10:33:28.276"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.276" starttime="20170331 10:33:28.276"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:28.276" starttime="20170331 10:33:28.260"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>&lt;script&gt;alert(123)&lt;/script&gt;</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:28.292" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:28.292" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:28.292" starttime="20170331 10:33:28.292"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.292" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:28.292" starttime="20170331 10:33:28.292"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.292" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170331 10:33:28.292" starttime="20170331 10:33:28.292"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.292" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:28.292" starttime="20170331 10:33:28.292"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:28.292" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:28.292" starttime="20170331 10:33:28.292"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.292" level="INFO">Request body set to "{ "Title":"&lt;script&gt;alert(123)&lt;/script&gt;"}".</msg>
<status status="PASS" endtime="20170331 10:33:28.292" starttime="20170331 10:33:28.292"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<msg timestamp="20170331 10:33:28.323" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:28.323" starttime="20170331 10:33:28.292"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:28.323" starttime="20170331 10:33:28.292"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Security_Script

*Description:*
verify script injection is allowed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24414</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:28.323" critical="yes" starttime="20170331 10:33:28.229">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t13" name="POST-API_TPC_Security_SQL">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.338" starttime="20170331 10:33:28.323"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:28.338" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:28.338" starttime="20170331 10:33:28.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.354" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:28.354" starttime="20170331 10:33:28.354"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:28.354" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:28.354" starttime="20170331 10:33:28.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.354" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:28.354" starttime="20170331 10:33:28.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.354" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:28.354" starttime="20170331 10:33:28.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.354" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:28.354" starttime="20170331 10:33:28.354"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:28.354" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:28.354" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:28.354" starttime="20170331 10:33:28.354"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.354" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:28.354" starttime="20170331 10:33:28.354"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.354" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:28.354" starttime="20170331 10:33:28.354"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.354" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:28.354" starttime="20170331 10:33:28.354"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:28.354" starttime="20170331 10:33:28.323"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:28.354" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:28.354" starttime="20170331 10:33:28.354"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:28.354" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:28.354" starttime="20170331 10:33:28.354"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.370" starttime="20170331 10:33:28.370"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.370" starttime="20170331 10:33:28.370"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:28.370" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:28.370" starttime="20170331 10:33:28.370"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.370" starttime="20170331 10:33:28.370"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:28.370" starttime="20170331 10:33:28.354"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>SELECT * FROM Users</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:28.385" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:28.385" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:28.385" starttime="20170331 10:33:28.385"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.385" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:28.385" starttime="20170331 10:33:28.385"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.385" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:28.385" starttime="20170331 10:33:28.385"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.385" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:28.385" starttime="20170331 10:33:28.385"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:28.385" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:28.385" starttime="20170331 10:33:28.385"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.385" level="INFO">Request body set to "{ "Title":"SELECT * FROM Users"}".</msg>
<status status="PASS" endtime="20170331 10:33:28.385" starttime="20170331 10:33:28.385"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<msg timestamp="20170331 10:33:28.417" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:28.417" starttime="20170331 10:33:28.385"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:28.417" starttime="20170331 10:33:28.385"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Security_SQL

*Description:*
verify sql injection fails

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24415</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:28.417" critical="yes" starttime="20170331 10:33:28.323">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t14" name="POST-API_TPC_Characters_Extended2">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.432" starttime="20170331 10:33:28.417"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:28.448" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170331 10:33:28.448" starttime="20170331 10:33:28.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.448" level="INFO">1338</msg>
<status status="PASS" endtime="20170331 10:33:28.448" starttime="20170331 10:33:28.448"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:28.448" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:28.448" starttime="20170331 10:33:28.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.448" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170331 10:33:28.448" starttime="20170331 10:33:28.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.448" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:28.448" starttime="20170331 10:33:28.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.448" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:28.448" starttime="20170331 10:33:28.448"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:28.448" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:28.448" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:28.448" starttime="20170331 10:33:28.448"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.448" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:28.448" starttime="20170331 10:33:28.448"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.448" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20170331 10:33:28.448" starttime="20170331 10:33:28.448"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.448" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:28.448" starttime="20170331 10:33:28.448"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:28.448" starttime="20170331 10:33:28.417"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:28.448" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:28.448" starttime="20170331 10:33:28.448"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:28.463" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:28.463" starttime="20170331 10:33:28.448"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.463" starttime="20170331 10:33:28.463"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.463" starttime="20170331 10:33:28.463"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:28.463" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:28.463" starttime="20170331 10:33:28.463"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.463" starttime="20170331 10:33:28.463"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:28.463" starttime="20170331 10:33:28.448"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>&lt;=&gt;?@^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:28.479" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:28.479" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:28.479" starttime="20170331 10:33:28.479"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.479" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:28.479" starttime="20170331 10:33:28.479"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.479" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20170331 10:33:28.479" starttime="20170331 10:33:28.479"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.479" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:28.479" starttime="20170331 10:33:28.479"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:28.479" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:28.479" starttime="20170331 10:33:28.479"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.479" level="INFO">Request body set to "{ "Title":"&lt;=&gt;?@^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª"}".</msg>
<status status="PASS" endtime="20170331 10:33:28.479" starttime="20170331 10:33:28.479"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<msg timestamp="20170331 10:33:28.526" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:28.526" starttime="20170331 10:33:28.479"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:28.526" starttime="20170331 10:33:28.479"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended2

*Description:*
verify ASCII characters 2

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>testrailid=24416</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:28.526" critical="yes" starttime="20170331 10:33:28.417">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t15" name="POST-API_TPC_Characters_Extended3">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.542" starttime="20170331 10:33:28.526"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:28.557" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:28.557" starttime="20170331 10:33:28.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.557" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:28.557" starttime="20170331 10:33:28.557"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:28.557" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:28.557" starttime="20170331 10:33:28.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.557" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:28.557" starttime="20170331 10:33:28.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.557" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:28.557" starttime="20170331 10:33:28.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.557" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:28.557" starttime="20170331 10:33:28.557"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:28.557" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:28.557" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:28.557" starttime="20170331 10:33:28.557"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.557" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:28.573" starttime="20170331 10:33:28.557"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.573" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:28.573" starttime="20170331 10:33:28.573"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.573" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:28.573" starttime="20170331 10:33:28.573"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:28.573" starttime="20170331 10:33:28.526"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:28.573" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:28.573" starttime="20170331 10:33:28.573"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:28.573" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:28.573" starttime="20170331 10:33:28.573"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.588" starttime="20170331 10:33:28.573"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.588" starttime="20170331 10:33:28.588"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:28.588" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:28.588" starttime="20170331 10:33:28.588"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.588" starttime="20170331 10:33:28.588"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:28.588" starttime="20170331 10:33:28.573"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>\ º¿¬¬½¼¡«»¦¦¦¦¦¦¦++¦¦++++++--+-+¦¦++--¦-+----++++++</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:28.588" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:28.588" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:28.588" starttime="20170331 10:33:28.588"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.588" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:28.588" starttime="20170331 10:33:28.588"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.588" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:28.588" starttime="20170331 10:33:28.588"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.588" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:28.588" starttime="20170331 10:33:28.588"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:28.588" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:28.588" starttime="20170331 10:33:28.588"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.604" level="INFO">Request body set to "{ "Title":" º¿¬¬½¼¡«»¦¦¦¦¦¦¦++¦¦++++++--+-+¦¦++--¦-+----++++++"}".</msg>
<status status="PASS" endtime="20170331 10:33:28.604" starttime="20170331 10:33:28.588"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<msg timestamp="20170331 10:33:28.635" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:28.635" starttime="20170331 10:33:28.604"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:28.635" starttime="20170331 10:33:28.588"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended3

*Description:*
verify ASCII characters 3

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
<tag>testrailid=24417</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:28.635" critical="yes" starttime="20170331 10:33:28.526">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t16" name="POST-API_TPC_Characters_Extended4">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.667" starttime="20170331 10:33:28.635"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:28.682" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170331 10:33:28.682" starttime="20170331 10:33:28.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.682" level="INFO">415</msg>
<status status="PASS" endtime="20170331 10:33:28.682" starttime="20170331 10:33:28.682"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:28.682" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:28.682" starttime="20170331 10:33:28.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.682" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170331 10:33:28.682" starttime="20170331 10:33:28.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.698" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:28.698" starttime="20170331 10:33:28.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.698" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:28.698" starttime="20170331 10:33:28.698"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:28.698" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:28.698" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:28.698" starttime="20170331 10:33:28.698"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.698" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:28.698" starttime="20170331 10:33:28.698"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.698" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170331 10:33:28.698" starttime="20170331 10:33:28.698"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.698" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:28.698" starttime="20170331 10:33:28.698"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:28.698" starttime="20170331 10:33:28.635"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:28.698" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:28.698" starttime="20170331 10:33:28.698"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:28.713" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:28.713" starttime="20170331 10:33:28.698"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.729" starttime="20170331 10:33:28.713"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.729" starttime="20170331 10:33:28.729"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:28.729" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:28.729" starttime="20170331 10:33:28.729"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.729" starttime="20170331 10:33:28.729"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:28.729" starttime="20170331 10:33:28.698"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:28.745" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:28.745" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:28.745" starttime="20170331 10:33:28.745"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.745" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:28.745" starttime="20170331 10:33:28.745"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.745" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170331 10:33:28.745" starttime="20170331 10:33:28.745"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.745" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:28.745" starttime="20170331 10:33:28.745"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:28.745" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:28.745" starttime="20170331 10:33:28.745"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.745" level="INFO">Request body set to "{ "Title":"++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ"}".</msg>
<status status="PASS" endtime="20170331 10:33:28.745" starttime="20170331 10:33:28.745"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<msg timestamp="20170331 10:33:28.776" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:28.776" starttime="20170331 10:33:28.745"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:28.776" starttime="20170331 10:33:28.729"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended4

*Description:*
verify ASCII characters 4

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
<tag>testrailid=24418</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:28.776" critical="yes" starttime="20170331 10:33:28.635">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t17" name="POST-API_TPC_Characters_Extended5">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.807" starttime="20170331 10:33:28.776"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:28.807" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170331 10:33:28.807" starttime="20170331 10:33:28.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.807" level="INFO">48</msg>
<status status="PASS" endtime="20170331 10:33:28.807" starttime="20170331 10:33:28.807"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:28.807" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:28.807" starttime="20170331 10:33:28.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.807" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170331 10:33:28.807" starttime="20170331 10:33:28.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.807" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:28.807" starttime="20170331 10:33:28.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.807" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:28.807" starttime="20170331 10:33:28.807"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:28.807" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:28.807" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:28.807" starttime="20170331 10:33:28.807"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.807" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:28.807" starttime="20170331 10:33:28.807"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.807" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170331 10:33:28.807" starttime="20170331 10:33:28.807"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.807" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:28.807" starttime="20170331 10:33:28.807"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:28.807" starttime="20170331 10:33:28.776"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:28.823" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:28.823" starttime="20170331 10:33:28.823"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:28.823" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:28.823" starttime="20170331 10:33:28.823"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.838" starttime="20170331 10:33:28.823"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.838" starttime="20170331 10:33:28.838"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:28.838" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:28.838" starttime="20170331 10:33:28.838"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.838" starttime="20170331 10:33:28.838"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:28.838" starttime="20170331 10:33:28.823"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:28.838" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:28.838" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:28.838" starttime="20170331 10:33:28.838"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.838" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:28.838" starttime="20170331 10:33:28.838"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.838" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170331 10:33:28.838" starttime="20170331 10:33:28.838"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.838" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:28.838" starttime="20170331 10:33:28.838"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:28.838" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:28.838" starttime="20170331 10:33:28.838"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.838" level="INFO">Request body set to "{ "Title":"‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ"}".</msg>
<status status="PASS" endtime="20170331 10:33:28.838" starttime="20170331 10:33:28.838"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<msg timestamp="20170331 10:33:28.885" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:28.885" starttime="20170331 10:33:28.854"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:28.885" starttime="20170331 10:33:28.838"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended5

*Description:*
verify ASCII characters 5

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
<tag>testrailid=24419</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:28.885" critical="yes" starttime="20170331 10:33:28.776">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t18" name="POST-API_TPC_Characters_Extended6">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.932" starttime="20170331 10:33:28.885"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:28.932" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170331 10:33:28.932" starttime="20170331 10:33:28.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.932" level="INFO">514</msg>
<status status="PASS" endtime="20170331 10:33:28.932" starttime="20170331 10:33:28.932"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:28.932" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:28.932" starttime="20170331 10:33:28.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.948" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170331 10:33:28.948" starttime="20170331 10:33:28.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.948" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:28.948" starttime="20170331 10:33:28.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.948" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:28.948" starttime="20170331 10:33:28.948"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:28.948" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:28.948" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:28.948" starttime="20170331 10:33:28.948"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.948" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:28.948" starttime="20170331 10:33:28.948"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.948" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20170331 10:33:28.948" starttime="20170331 10:33:28.948"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.948" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:28.948" starttime="20170331 10:33:28.948"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:28.948" starttime="20170331 10:33:28.885"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:28.948" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:28.948" starttime="20170331 10:33:28.948"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:28.948" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:28.948" starttime="20170331 10:33:28.948"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.963" starttime="20170331 10:33:28.948"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.963" starttime="20170331 10:33:28.963"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:28.963" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:28.963" starttime="20170331 10:33:28.963"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:28.963" starttime="20170331 10:33:28.963"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:28.963" starttime="20170331 10:33:28.948"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>ÝÞãðýþ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:28.979" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:28.979" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:28.979" starttime="20170331 10:33:28.979"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.979" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:28.979" starttime="20170331 10:33:28.979"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.979" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20170331 10:33:28.979" starttime="20170331 10:33:28.979"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.979" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:28.979" starttime="20170331 10:33:28.979"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:28.979" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:28.979" starttime="20170331 10:33:28.979"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170331 10:33:28.979" level="INFO">Request body set to "{ "Title":"ÝÞãðýþ"}".</msg>
<status status="PASS" endtime="20170331 10:33:28.979" starttime="20170331 10:33:28.979"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<msg timestamp="20170331 10:33:29.010" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:29.010" starttime="20170331 10:33:28.979"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:29.010" starttime="20170331 10:33:28.979"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended6

*Description:*
verify ASCII characters 6

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
<tag>testrailid=24420</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:29.010" critical="yes" starttime="20170331 10:33:28.885">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t19" name="POST-API_TPC_Foreign_Russian">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.042" starttime="20170331 10:33:29.026"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:29.057" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170331 10:33:29.057" starttime="20170331 10:33:29.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.057" level="INFO">415</msg>
<status status="PASS" endtime="20170331 10:33:29.057" starttime="20170331 10:33:29.057"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:29.057" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:29.057" starttime="20170331 10:33:29.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.057" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170331 10:33:29.057" starttime="20170331 10:33:29.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.057" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:29.057" starttime="20170331 10:33:29.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.057" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:29.057" starttime="20170331 10:33:29.057"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:29.057" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:29.057" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:29.057" starttime="20170331 10:33:29.057"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.057" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:29.057" starttime="20170331 10:33:29.057"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.057" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170331 10:33:29.057" starttime="20170331 10:33:29.057"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.073" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:29.073" starttime="20170331 10:33:29.057"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:29.073" starttime="20170331 10:33:29.026"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:29.073" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:29.073" starttime="20170331 10:33:29.073"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:29.073" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:29.073" starttime="20170331 10:33:29.073"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.089" starttime="20170331 10:33:29.073"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.089" starttime="20170331 10:33:29.089"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:29.089" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:29.089" starttime="20170331 10:33:29.089"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.089" starttime="20170331 10:33:29.089"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:29.089" starttime="20170331 10:33:29.073"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>ёъяшертыуиопющэасдфгчйкльжзхцвбнмЁЪЯШЕРТЫУИОПЮЩЭЖЬ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:29.104" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:29.104" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:29.104" starttime="20170331 10:33:29.104"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.104" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:29.104" starttime="20170331 10:33:29.104"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.104" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170331 10:33:29.104" starttime="20170331 10:33:29.104"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.104" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:29.104" starttime="20170331 10:33:29.104"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:29.104" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:29.104" starttime="20170331 10:33:29.104"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.104" level="INFO">Request body set to "{ "Title":"ёъяшертыуиопющэасдфгчйкльжзхцвбнмЁЪЯШЕРТЫУИОПЮЩЭЖЬ"}".</msg>
<status status="PASS" endtime="20170331 10:33:29.104" starttime="20170331 10:33:29.104"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<msg timestamp="20170331 10:33:29.135" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:29.135" starttime="20170331 10:33:29.104"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:29.135" starttime="20170331 10:33:29.089"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Foreign_Russian

*Description:*
verify russian alphabet

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
<tag>testrailid=24421</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:29.135" critical="yes" starttime="20170331 10:33:29.026">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t20" name="POST-API_TPC_Foreign_Arabic">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.182" starttime="20170331 10:33:29.151"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:29.182" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:29.182" starttime="20170331 10:33:29.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.182" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:29.182" starttime="20170331 10:33:29.182"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:29.198" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:29.198" starttime="20170331 10:33:29.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.198" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:29.198" starttime="20170331 10:33:29.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.198" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:29.198" starttime="20170331 10:33:29.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.198" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:29.198" starttime="20170331 10:33:29.198"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:29.198" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:29.198" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:29.198" starttime="20170331 10:33:29.198"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.198" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:29.198" starttime="20170331 10:33:29.198"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.198" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:29.198" starttime="20170331 10:33:29.198"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.198" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:29.198" starttime="20170331 10:33:29.198"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:29.198" starttime="20170331 10:33:29.151"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:29.198" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:29.198" starttime="20170331 10:33:29.198"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:29.198" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:29.198" starttime="20170331 10:33:29.198"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.213" starttime="20170331 10:33:29.198"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.213" starttime="20170331 10:33:29.213"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:29.213" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:29.213" starttime="20170331 10:33:29.213"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.213" starttime="20170331 10:33:29.213"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:29.213" starttime="20170331 10:33:29.198"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>غظضذخثتشرقصفعسنملكيطحزوهدجباشغظذخثتسرقضفعصنملكيطحز</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:29.229" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:29.229" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:29.229" starttime="20170331 10:33:29.229"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.229" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:29.229" starttime="20170331 10:33:29.229"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.229" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:29.229" starttime="20170331 10:33:29.229"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.229" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:29.229" starttime="20170331 10:33:29.229"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:29.229" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:29.229" starttime="20170331 10:33:29.229"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.229" level="INFO">Request body set to "{ "Title":"غظضذخثتشرقصفعسنملكيطحزوهدجباشغظذخثتسرقضفعصنملكيطحز"}".</msg>
<status status="PASS" endtime="20170331 10:33:29.229" starttime="20170331 10:33:29.229"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<msg timestamp="20170331 10:33:29.260" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:29.260" starttime="20170331 10:33:29.229"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:29.260" starttime="20170331 10:33:29.229"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Foreign_Arabic

*Description:*
verify arabic alphabet

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
<tag>testrailid=24422</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:29.260" critical="yes" starttime="20170331 10:33:29.135">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t21" name="GET-API_TPC_GET_Return_ID_Expected">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.292" starttime="20170331 10:33:29.276"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:29.307" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170331 10:33:29.307" starttime="20170331 10:33:29.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.307" level="INFO">415</msg>
<status status="PASS" endtime="20170331 10:33:29.307" starttime="20170331 10:33:29.307"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:29.307" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:29.307" starttime="20170331 10:33:29.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.307" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170331 10:33:29.307" starttime="20170331 10:33:29.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.307" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:29.307" starttime="20170331 10:33:29.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.307" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:29.307" starttime="20170331 10:33:29.307"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:29.307" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:29.307" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:29.307" starttime="20170331 10:33:29.307"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.307" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:29.307" starttime="20170331 10:33:29.307"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.307" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170331 10:33:29.307" starttime="20170331 10:33:29.307"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.307" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:29.307" starttime="20170331 10:33:29.307"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:29.307" starttime="20170331 10:33:29.276"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:29.307" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:29.307" starttime="20170331 10:33:29.307"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:29.323" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:29.323" starttime="20170331 10:33:29.307"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.323" starttime="20170331 10:33:29.323"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.323" starttime="20170331 10:33:29.323"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:29.323" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:29.323" starttime="20170331 10:33:29.323"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.338" starttime="20170331 10:33:29.338"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:29.338" starttime="20170331 10:33:29.307"></status>
</kw>
<kw name="GET_TalentPool" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>TalentpoolId</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.370" starttime="20170331 10:33:29.338"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170331 10:33:29.370" level="INFO">${SQL_TalentPoolIdToGet} = 11344</msg>
<status status="PASS" endtime="20170331 10:33:29.370" starttime="20170331 10:33:29.370"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:29.370" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:29.370" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:29.370" starttime="20170331 10:33:29.370"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.370" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:29.370" starttime="20170331 10:33:29.370"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.385" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170331 10:33:29.385" starttime="20170331 10:33:29.385"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.385" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:29.385" starttime="20170331 10:33:29.385"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:29.385" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:29.385" starttime="20170331 10:33:29.385"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.417" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:29.417" starttime="20170331 10:33:29.385"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:29.417" starttime="20170331 10:33:29.338"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_ID_Expected

*Description:*
verify the id passed is matching the id returned

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24424</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:29.417" critical="yes" starttime="20170331 10:33:29.260">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t22" name="GET-API_TPC_GET_Return_Title_Happy">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.448" starttime="20170331 10:33:29.432"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:29.463" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170331 10:33:29.463" starttime="20170331 10:33:29.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.463" level="INFO">415</msg>
<status status="PASS" endtime="20170331 10:33:29.463" starttime="20170331 10:33:29.463"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:29.463" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:29.463" starttime="20170331 10:33:29.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.463" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170331 10:33:29.463" starttime="20170331 10:33:29.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.463" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:29.463" starttime="20170331 10:33:29.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.463" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:29.463" starttime="20170331 10:33:29.463"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:29.463" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:29.463" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:29.463" starttime="20170331 10:33:29.463"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.463" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:29.463" starttime="20170331 10:33:29.463"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.463" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170331 10:33:29.463" starttime="20170331 10:33:29.463"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.463" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:29.463" starttime="20170331 10:33:29.463"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:29.463" starttime="20170331 10:33:29.432"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:29.463" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:29.463" starttime="20170331 10:33:29.463"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:29.479" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:29.479" starttime="20170331 10:33:29.463"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.479" starttime="20170331 10:33:29.479"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.479" starttime="20170331 10:33:29.479"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:29.479" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:29.479" starttime="20170331 10:33:29.479"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.479" starttime="20170331 10:33:29.479"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:29.479" starttime="20170331 10:33:29.463"></status>
</kw>
<kw name="GET_TalentPool_Title_Happy" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.526" starttime="20170331 10:33:29.495"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%InnocentName%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170331 10:33:29.557" level="INFO">${SQL_TalentPoolIdToGet} = 9039</msg>
<status status="PASS" endtime="20170331 10:33:29.557" starttime="20170331 10:33:29.526"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:29.557" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:29.557" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:29.557" starttime="20170331 10:33:29.557"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.557" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:29.557" starttime="20170331 10:33:29.557"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.557" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170331 10:33:29.557" starttime="20170331 10:33:29.557"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.557" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:29.557" starttime="20170331 10:33:29.557"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:29.557" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:29.557" starttime="20170331 10:33:29.557"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.604" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:29.604" starttime="20170331 10:33:29.573"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:29.604" starttime="20170331 10:33:29.495"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Happy

*Description:*
verify a random name matches

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24425</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:29.604" critical="yes" starttime="20170331 10:33:29.417">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t23" name="GET-API_TPC_GET_Return_Title_Length_1">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.620" starttime="20170331 10:33:29.604"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:29.620" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:29.620" starttime="20170331 10:33:29.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.620" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:29.620" starttime="20170331 10:33:29.620"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:29.620" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:29.620" starttime="20170331 10:33:29.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.636" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:29.636" starttime="20170331 10:33:29.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.636" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:29.636" starttime="20170331 10:33:29.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.636" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:29.636" starttime="20170331 10:33:29.636"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:29.636" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:29.636" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:29.636" starttime="20170331 10:33:29.636"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.636" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:29.636" starttime="20170331 10:33:29.636"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.636" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:29.636" starttime="20170331 10:33:29.636"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.636" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:29.636" starttime="20170331 10:33:29.636"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:29.636" starttime="20170331 10:33:29.604"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:29.636" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:29.636" starttime="20170331 10:33:29.636"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:29.636" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:29.636" starttime="20170331 10:33:29.636"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.651" starttime="20170331 10:33:29.636"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.651" starttime="20170331 10:33:29.651"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:29.651" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:29.651" starttime="20170331 10:33:29.651"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.651" starttime="20170331 10:33:29.651"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:29.651" starttime="20170331 10:33:29.636"></status>
</kw>
<kw name="GET_TalentPool_Title_Length_1" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.682" starttime="20170331 10:33:29.651"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND LEN(title)=1 ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170331 10:33:29.713" level="INFO">${SQL_TalentPoolIdToGet} = 10583</msg>
<status status="PASS" endtime="20170331 10:33:29.713" starttime="20170331 10:33:29.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.713" level="INFO">${SQL_TalentPoolIdToGet} = 10583</msg>
<status status="PASS" endtime="20170331 10:33:29.713" starttime="20170331 10:33:29.713"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20170331 10:33:29.713" level="INFO">${SQL_TalentPoolTitleById} = 1</msg>
<status status="PASS" endtime="20170331 10:33:29.713" starttime="20170331 10:33:29.713"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:29.713" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:29.713" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:29.713" starttime="20170331 10:33:29.713"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.713" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:29.713" starttime="20170331 10:33:29.713"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.713" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:29.713" starttime="20170331 10:33:29.713"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.713" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:29.713" starttime="20170331 10:33:29.713"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:29.713" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:29.713" starttime="20170331 10:33:29.713"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.745" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:29.745" starttime="20170331 10:33:29.713"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:29.760" starttime="20170331 10:33:29.651"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Length_1

*Description:*
verify success when title length is 1

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24426</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:29.760" critical="yes" starttime="20170331 10:33:29.604">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t24" name="GET-API_TPC_GET_Return_Title_Length_50">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.777" starttime="20170331 10:33:29.760"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:29.807" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:29.807" starttime="20170331 10:33:29.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.807" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:29.807" starttime="20170331 10:33:29.807"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:29.807" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:29.807" starttime="20170331 10:33:29.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.807" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:29.807" starttime="20170331 10:33:29.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.807" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:29.807" starttime="20170331 10:33:29.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.807" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:29.807" starttime="20170331 10:33:29.807"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:29.807" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:29.807" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:29.807" starttime="20170331 10:33:29.807"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.807" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:29.807" starttime="20170331 10:33:29.807"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.807" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:29.807" starttime="20170331 10:33:29.807"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.823" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:29.823" starttime="20170331 10:33:29.807"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:29.823" starttime="20170331 10:33:29.760"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:29.823" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:29.823" starttime="20170331 10:33:29.823"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:29.823" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:29.823" starttime="20170331 10:33:29.823"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.838" starttime="20170331 10:33:29.823"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.838" starttime="20170331 10:33:29.838"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:29.838" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:29.838" starttime="20170331 10:33:29.838"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.838" starttime="20170331 10:33:29.838"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:29.838" starttime="20170331 10:33:29.823"></status>
</kw>
<kw name="GET_TalentPool_Title_Length_50" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.870" starttime="20170331 10:33:29.838"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND LEN(title)=50 ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170331 10:33:29.885" level="INFO">${SQL_TalentPoolIdToGet} = 2983</msg>
<status status="PASS" endtime="20170331 10:33:29.885" starttime="20170331 10:33:29.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.885" level="INFO">${SQL_TalentPoolIdToGet} = 2983</msg>
<status status="PASS" endtime="20170331 10:33:29.885" starttime="20170331 10:33:29.885"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20170331 10:33:29.901" level="INFO">${SQL_TalentPoolTitleById} = 12345678901234567890123456789012345678901234567890</msg>
<status status="PASS" endtime="20170331 10:33:29.901" starttime="20170331 10:33:29.885"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:29.901" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:29.901" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:29.901" starttime="20170331 10:33:29.901"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.901" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:29.901" starttime="20170331 10:33:29.901"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.901" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:29.901" starttime="20170331 10:33:29.901"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.901" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:29.901" starttime="20170331 10:33:29.901"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:29.901" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:29.901" starttime="20170331 10:33:29.901"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:29.938" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:29.938" starttime="20170331 10:33:29.901"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:29.938" starttime="20170331 10:33:29.838"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Length_50

*Description:*
verify success when title length is 50

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24427</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:29.938" critical="yes" starttime="20170331 10:33:29.760">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t25" name="GET-API_TPC_GET_Return_Title_SQL">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:29.969" starttime="20170331 10:33:29.938"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:30.000" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:30.000" starttime="20170331 10:33:29.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.000" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:30.000" starttime="20170331 10:33:30.000"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:30.000" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:30.000" starttime="20170331 10:33:30.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.000" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:30.000" starttime="20170331 10:33:30.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.000" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:30.000" starttime="20170331 10:33:30.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.000" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:30.000" starttime="20170331 10:33:30.000"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:30.000" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:30.000" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:30.000" starttime="20170331 10:33:30.000"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.000" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:30.000" starttime="20170331 10:33:30.000"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.000" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:30.000" starttime="20170331 10:33:30.000"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.000" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:30.000" starttime="20170331 10:33:30.000"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:30.000" starttime="20170331 10:33:29.938"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:30.000" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:30.000" starttime="20170331 10:33:30.000"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:30.016" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:30.016" starttime="20170331 10:33:30.000"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.016" starttime="20170331 10:33:30.016"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.016" starttime="20170331 10:33:30.016"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:30.016" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:30.016" starttime="20170331 10:33:30.016"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.016" starttime="20170331 10:33:30.016"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:30.016" starttime="20170331 10:33:30.000"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Securit_SQL" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.156" starttime="20170331 10:33:30.031"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%SELECT * FROM Users%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170331 10:33:30.188" level="INFO">${SQL_TalentPoolIdToGet} = 7241</msg>
<status status="PASS" endtime="20170331 10:33:30.188" starttime="20170331 10:33:30.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.188" level="INFO">${SQL_TalentPoolIdToGet} = 7241</msg>
<status status="PASS" endtime="20170331 10:33:30.188" starttime="20170331 10:33:30.188"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20170331 10:33:30.188" level="INFO">${SQL_TalentPoolTitleById} = SELECT * FROM Users</msg>
<status status="PASS" endtime="20170331 10:33:30.188" starttime="20170331 10:33:30.188"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:30.188" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:30.188" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:30.188" starttime="20170331 10:33:30.188"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.203" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:30.203" starttime="20170331 10:33:30.203"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.203" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:30.203" starttime="20170331 10:33:30.203"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.203" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:30.203" starttime="20170331 10:33:30.203"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:30.203" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:30.203" starttime="20170331 10:33:30.203"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.234" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:30.234" starttime="20170331 10:33:30.203"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:30.234" starttime="20170331 10:33:30.031"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_SQL

*Description:*
verify sql injection fails

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24428</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:30.234" critical="yes" starttime="20170331 10:33:29.938">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t26" name="GET-API_TPC_GET_Return_Title_Security_Script">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.266" starttime="20170331 10:33:30.234"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:30.266" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:30.266" starttime="20170331 10:33:30.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.266" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:30.266" starttime="20170331 10:33:30.266"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:30.281" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:30.281" starttime="20170331 10:33:30.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.281" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:30.281" starttime="20170331 10:33:30.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.281" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:30.281" starttime="20170331 10:33:30.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.281" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:30.281" starttime="20170331 10:33:30.281"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:30.281" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:30.281" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:30.281" starttime="20170331 10:33:30.281"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.281" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:30.281" starttime="20170331 10:33:30.281"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.281" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:30.281" starttime="20170331 10:33:30.281"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.281" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:30.281" starttime="20170331 10:33:30.281"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:30.281" starttime="20170331 10:33:30.234"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:30.281" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:30.281" starttime="20170331 10:33:30.281"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:30.281" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:30.281" starttime="20170331 10:33:30.281"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.297" starttime="20170331 10:33:30.281"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.297" starttime="20170331 10:33:30.297"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:30.297" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:30.297" starttime="20170331 10:33:30.297"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.297" starttime="20170331 10:33:30.297"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:30.297" starttime="20170331 10:33:30.281"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Securit_Script" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.375" starttime="20170331 10:33:30.297"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%＜script＞alert(123)＜/script＞%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170331 10:33:30.406" level="INFO">${SQL_TalentPoolIdToGet} = 6825</msg>
<status status="PASS" endtime="20170331 10:33:30.406" starttime="20170331 10:33:30.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.406" level="INFO">${SQL_TalentPoolIdToGet} = 6825</msg>
<status status="PASS" endtime="20170331 10:33:30.406" starttime="20170331 10:33:30.406"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20170331 10:33:30.406" level="INFO">${SQL_TalentPoolTitleById} = &lt;script&gt;alert(123)&lt;/script&gt;</msg>
<status status="PASS" endtime="20170331 10:33:30.406" starttime="20170331 10:33:30.406"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:30.406" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:30.406" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:30.406" starttime="20170331 10:33:30.406"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.406" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:30.406" starttime="20170331 10:33:30.406"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.406" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:30.406" starttime="20170331 10:33:30.406"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.406" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:30.406" starttime="20170331 10:33:30.406"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:30.406" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:30.406" starttime="20170331 10:33:30.406"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.453" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:30.453" starttime="20170331 10:33:30.422"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:30.453" starttime="20170331 10:33:30.297"></status>
</kw>
<doc>*Name:*
TP_Get_Ret_Title_sec_script

*Description:*
verify script injection is allowed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24429</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:30.453" critical="yes" starttime="20170331 10:33:30.234">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t27" name="GET-API_TPC_GET_Return_Title_Extended1">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.485" starttime="20170331 10:33:30.453"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:30.485" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:30.485" starttime="20170331 10:33:30.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.485" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:30.485" starttime="20170331 10:33:30.485"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:30.485" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:30.485" starttime="20170331 10:33:30.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.485" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:30.485" starttime="20170331 10:33:30.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.485" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:30.485" starttime="20170331 10:33:30.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.485" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:30.485" starttime="20170331 10:33:30.485"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:30.485" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:30.485" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:30.485" starttime="20170331 10:33:30.485"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.500" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:30.500" starttime="20170331 10:33:30.485"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.500" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:30.500" starttime="20170331 10:33:30.500"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.500" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:30.500" starttime="20170331 10:33:30.500"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:30.500" starttime="20170331 10:33:30.453"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:30.500" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:30.500" starttime="20170331 10:33:30.500"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:30.500" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:30.500" starttime="20170331 10:33:30.500"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.516" starttime="20170331 10:33:30.500"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.516" starttime="20170331 10:33:30.516"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:30.516" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:30.516" starttime="20170331 10:33:30.516"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.516" starttime="20170331 10:33:30.516"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:30.516" starttime="20170331 10:33:30.500"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended1" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.563" starttime="20170331 10:33:30.516"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%☺%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170331 10:33:30.609" level="INFO">${SQL_TalentPoolIdToGet} = 11770</msg>
<status status="PASS" endtime="20170331 10:33:30.609" starttime="20170331 10:33:30.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.609" level="INFO">${SQL_TalentPoolIdToGet} = 11770</msg>
<status status="PASS" endtime="20170331 10:33:30.609" starttime="20170331 10:33:30.609"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20170331 10:33:30.625" level="INFO">${SQL_TalentPoolTitleById} = &lt;=&gt;?@^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20170331 10:33:30.625" starttime="20170331 10:33:30.609"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:30.625" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:30.625" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:30.625" starttime="20170331 10:33:30.625"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.625" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:30.625" starttime="20170331 10:33:30.625"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.625" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:30.625" starttime="20170331 10:33:30.625"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.625" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:30.625" starttime="20170331 10:33:30.625"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:30.625" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20170331 10:33:30.625" starttime="20170331 10:33:30.625"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.656" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:30.656" starttime="20170331 10:33:30.625"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:30.656" starttime="20170331 10:33:30.516"></status>
</kw>
<doc>*Name:*
API_TPC_Extended1

*Description:*
verify ASCII characters 1

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24430</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:30.656" critical="yes" starttime="20170331 10:33:30.453">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t28" name="GET-API_TPC_GET_Return_Title_Extended2">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.688" starttime="20170331 10:33:30.656"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:30.688" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:30.688" starttime="20170331 10:33:30.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.688" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:30.688" starttime="20170331 10:33:30.688"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:30.703" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:30.703" starttime="20170331 10:33:30.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.703" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:30.703" starttime="20170331 10:33:30.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.703" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:30.703" starttime="20170331 10:33:30.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.703" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:30.703" starttime="20170331 10:33:30.703"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:30.703" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:30.703" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:30.703" starttime="20170331 10:33:30.703"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.703" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:30.703" starttime="20170331 10:33:30.703"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.703" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:30.703" starttime="20170331 10:33:30.703"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.703" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:30.703" starttime="20170331 10:33:30.703"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:30.703" starttime="20170331 10:33:30.656"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:30.703" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:30.703" starttime="20170331 10:33:30.703"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:30.703" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:30.703" starttime="20170331 10:33:30.703"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.719" starttime="20170331 10:33:30.703"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.719" starttime="20170331 10:33:30.719"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:30.719" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:30.719" starttime="20170331 10:33:30.719"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.719" starttime="20170331 10:33:30.719"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:30.719" starttime="20170331 10:33:30.703"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended2" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.766" starttime="20170331 10:33:30.734"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%=%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170331 10:33:30.797" level="INFO">${SQL_TalentPoolIdToGet} = 7162</msg>
<status status="PASS" endtime="20170331 10:33:30.797" starttime="20170331 10:33:30.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.797" level="INFO">${SQL_TalentPoolIdToGet} = 7162</msg>
<status status="PASS" endtime="20170331 10:33:30.797" starttime="20170331 10:33:30.797"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20170331 10:33:30.797" level="INFO">${SQL_TalentPoolTitleById} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20170331 10:33:30.797" starttime="20170331 10:33:30.797"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:30.797" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:30.797" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:30.813" starttime="20170331 10:33:30.797"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.813" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:30.813" starttime="20170331 10:33:30.813"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.813" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:30.813" starttime="20170331 10:33:30.813"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.813" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:30.813" starttime="20170331 10:33:30.813"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:30.813" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:30.813" starttime="20170331 10:33:30.813"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.844" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:30.844" starttime="20170331 10:33:30.813"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:30.844" starttime="20170331 10:33:30.734"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended2

*Description:*
verify ASCII characters 2

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24431</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:30.844" critical="yes" starttime="20170331 10:33:30.656">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t29" name="GET-API_TPC_GET_Return_Title_Extended3">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.875" starttime="20170331 10:33:30.844"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:30.875" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:30.875" starttime="20170331 10:33:30.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.875" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:30.875" starttime="20170331 10:33:30.875"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:30.875" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:30.875" starttime="20170331 10:33:30.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.875" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:30.875" starttime="20170331 10:33:30.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.875" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:30.875" starttime="20170331 10:33:30.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.875" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:30.875" starttime="20170331 10:33:30.875"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:30.875" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:30.875" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:30.875" starttime="20170331 10:33:30.875"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.875" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:30.875" starttime="20170331 10:33:30.875"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.875" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:30.875" starttime="20170331 10:33:30.875"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.875" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:30.875" starttime="20170331 10:33:30.875"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:30.875" starttime="20170331 10:33:30.844"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:30.891" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:30.891" starttime="20170331 10:33:30.891"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:30.891" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:30.891" starttime="20170331 10:33:30.891"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.891" starttime="20170331 10:33:30.891"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.891" starttime="20170331 10:33:30.891"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:30.891" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:30.891" starttime="20170331 10:33:30.891"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.891" starttime="20170331 10:33:30.891"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:30.891" starttime="20170331 10:33:30.875"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended3" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:30.938" starttime="20170331 10:33:30.906"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%ú%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170331 10:33:30.953" level="INFO">${SQL_TalentPoolIdToGet} = 5028</msg>
<status status="PASS" endtime="20170331 10:33:30.953" starttime="20170331 10:33:30.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.953" level="INFO">${SQL_TalentPoolIdToGet} = 5028</msg>
<status status="PASS" endtime="20170331 10:33:30.953" starttime="20170331 10:33:30.953"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20170331 10:33:30.953" level="INFO">${SQL_TalentPoolTitleById} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20170331 10:33:30.953" starttime="20170331 10:33:30.953"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:30.953" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:30.953" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:30.953" starttime="20170331 10:33:30.953"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.953" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:30.953" starttime="20170331 10:33:30.953"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.953" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:30.953" starttime="20170331 10:33:30.953"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.953" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:30.953" starttime="20170331 10:33:30.953"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:30.953" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:30.953" starttime="20170331 10:33:30.953"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:30.984" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:30.984" starttime="20170331 10:33:30.953"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:30.984" starttime="20170331 10:33:30.906"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended3

*Description:*
verify ASCII characters 3

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24432</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:30.984" critical="yes" starttime="20170331 10:33:30.844">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t30" name="GET-API_TPC_GET_Return_Title_Extended5">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.016" starttime="20170331 10:33:31.000"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:31.016" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:31.016" starttime="20170331 10:33:31.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.016" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:31.016" starttime="20170331 10:33:31.016"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:31.016" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:31.016" starttime="20170331 10:33:31.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.016" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:31.016" starttime="20170331 10:33:31.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.016" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:31.016" starttime="20170331 10:33:31.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.016" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:31.016" starttime="20170331 10:33:31.016"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:31.016" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:31.016" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:31.016" starttime="20170331 10:33:31.016"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.016" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:31.016" starttime="20170331 10:33:31.016"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.016" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:31.016" starttime="20170331 10:33:31.016"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.016" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:31.016" starttime="20170331 10:33:31.016"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:31.016" starttime="20170331 10:33:31.000"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:31.031" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:31.031" starttime="20170331 10:33:31.031"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:31.031" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:31.031" starttime="20170331 10:33:31.031"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.047" starttime="20170331 10:33:31.031"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.047" starttime="20170331 10:33:31.047"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:31.047" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:31.047" starttime="20170331 10:33:31.047"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.047" starttime="20170331 10:33:31.047"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:31.047" starttime="20170331 10:33:31.031"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended5" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.063" starttime="20170331 10:33:31.047"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND title LIKE '%Š%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170331 10:33:31.078" level="INFO">${SQL_TalentPoolIdToGet} = 12153</msg>
<status status="PASS" endtime="20170331 10:33:31.078" starttime="20170331 10:33:31.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.078" level="INFO">${SQL_TalentPoolIdToGet} = 12153</msg>
<status status="PASS" endtime="20170331 10:33:31.078" starttime="20170331 10:33:31.078"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20170331 10:33:31.094" level="INFO">${SQL_TalentPoolTitleById} = ++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ</msg>
<status status="PASS" endtime="20170331 10:33:31.094" starttime="20170331 10:33:31.078"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:31.094" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:31.094" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:31.094" starttime="20170331 10:33:31.094"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.094" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:31.094" starttime="20170331 10:33:31.094"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.094" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:31.094" starttime="20170331 10:33:31.094"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.094" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:31.094" starttime="20170331 10:33:31.094"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:31.094" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:31.094" starttime="20170331 10:33:31.094"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.125" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:31.125" starttime="20170331 10:33:31.094"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:31.125" starttime="20170331 10:33:31.047"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended5

*Description:*
verify ASCII characters 5

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24433</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:31.125" critical="yes" starttime="20170331 10:33:30.984">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t31" name="GET-API_TPC_GET_Return_Title_Extended6">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.156" starttime="20170331 10:33:31.125"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:31.156" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:31.156" starttime="20170331 10:33:31.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.156" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:31.156" starttime="20170331 10:33:31.156"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:31.156" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:31.156" starttime="20170331 10:33:31.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.156" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:31.156" starttime="20170331 10:33:31.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.156" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:31.156" starttime="20170331 10:33:31.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.156" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:31.156" starttime="20170331 10:33:31.156"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:31.156" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:31.156" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:31.156" starttime="20170331 10:33:31.156"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.156" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:31.156" starttime="20170331 10:33:31.156"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.156" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:31.156" starttime="20170331 10:33:31.156"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.156" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:31.156" starttime="20170331 10:33:31.156"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:31.156" starttime="20170331 10:33:31.125"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:31.156" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:31.156" starttime="20170331 10:33:31.156"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:31.172" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:31.172" starttime="20170331 10:33:31.156"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.172" starttime="20170331 10:33:31.172"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.172" starttime="20170331 10:33:31.172"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:31.172" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:31.172" starttime="20170331 10:33:31.172"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.172" starttime="20170331 10:33:31.172"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:31.188" starttime="20170331 10:33:31.156"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended6" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.203" starttime="20170331 10:33:31.188"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%Ø%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170331 10:33:31.235" level="INFO">${SQL_TalentPoolIdToGet} = 2953</msg>
<status status="PASS" endtime="20170331 10:33:31.235" starttime="20170331 10:33:31.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.235" level="INFO">${SQL_TalentPoolIdToGet} = 2953</msg>
<status status="PASS" endtime="20170331 10:33:31.235" starttime="20170331 10:33:31.235"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById1}</var>
</assign>
<msg timestamp="20170331 10:33:31.235" level="INFO">${SQL_TalentPoolTitleById1} = ‘’“”–—˜™š›œžŸ¤¦¨©®¯³´¸U¾ÀÁÂÃÄÅÈÉÊËÌÍÎÏÐÒÓÔÕÖ×ØÙÚÛÜ</msg>
<status status="PASS" endtime="20170331 10:33:31.235" starttime="20170331 10:33:31.235"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:31.235" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:31.235" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:31.235" starttime="20170331 10:33:31.235"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.235" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:31.235" starttime="20170331 10:33:31.235"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.235" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:31.235" starttime="20170331 10:33:31.235"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.235" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:31.235" starttime="20170331 10:33:31.235"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:31.235" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:31.235" starttime="20170331 10:33:31.235"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.281" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:31.281" starttime="20170331 10:33:31.235"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:31.281" starttime="20170331 10:33:31.188"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended6

*Description:*
verify ASCII characters 6

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24434</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:31.281" critical="yes" starttime="20170331 10:33:31.125">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t32" name="GET-API_TPC_GET_Return_Title_Char_Foreign_Russian">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.297" starttime="20170331 10:33:31.281"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:31.297" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:31.297" starttime="20170331 10:33:31.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.297" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:31.297" starttime="20170331 10:33:31.297"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:31.297" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:31.297" starttime="20170331 10:33:31.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.313" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:31.313" starttime="20170331 10:33:31.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.313" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:31.313" starttime="20170331 10:33:31.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.313" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:31.313" starttime="20170331 10:33:31.313"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:31.313" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:31.313" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:31.313" starttime="20170331 10:33:31.313"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.313" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:31.313" starttime="20170331 10:33:31.313"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.313" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:31.313" starttime="20170331 10:33:31.313"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.313" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:31.313" starttime="20170331 10:33:31.313"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:31.313" starttime="20170331 10:33:31.281"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:31.313" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:31.313" starttime="20170331 10:33:31.313"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:31.313" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:31.313" starttime="20170331 10:33:31.313"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.328" starttime="20170331 10:33:31.313"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.328" starttime="20170331 10:33:31.328"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:31.328" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:31.328" starttime="20170331 10:33:31.328"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.328" starttime="20170331 10:33:31.328"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:31.328" starttime="20170331 10:33:31.313"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Foreign_Russian" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.359" starttime="20170331 10:33:31.328"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%ё%' \ ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170331 10:33:31.391" level="INFO">${SQL_TalentPoolIdToGet} = 7936</msg>
<status status="PASS" endtime="20170331 10:33:31.391" starttime="20170331 10:33:31.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.391" level="INFO">${SQL_TalentPoolIdToGet} = 7936</msg>
<status status="PASS" endtime="20170331 10:33:31.391" starttime="20170331 10:33:31.391"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById1}</var>
</assign>
<msg timestamp="20170331 10:33:31.391" level="INFO">${SQL_TalentPoolTitleById1} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20170331 10:33:31.391" starttime="20170331 10:33:31.391"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:31.391" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:31.391" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:31.391" starttime="20170331 10:33:31.391"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.391" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:31.391" starttime="20170331 10:33:31.391"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.391" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:31.391" starttime="20170331 10:33:31.391"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.391" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:31.391" starttime="20170331 10:33:31.391"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:31.391" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:31.391" starttime="20170331 10:33:31.391"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.438" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:31.438" starttime="20170331 10:33:31.391"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:31.438" starttime="20170331 10:33:31.328"></status>
</kw>
<doc>*Name:*
API_TP_Get_Return_Title_Char_Foreign_Russian

*Description:*
verify russian alphabet

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24435</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:31.438" critical="yes" starttime="20170331 10:33:31.281">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t33" name="GET-API_TPC_GET_Return_Title_Char_Foreign_Arabic">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.453" starttime="20170331 10:33:31.438"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:31.453" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:31.453" starttime="20170331 10:33:31.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.453" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:31.453" starttime="20170331 10:33:31.453"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:31.453" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:31.453" starttime="20170331 10:33:31.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.469" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:31.469" starttime="20170331 10:33:31.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.469" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:31.469" starttime="20170331 10:33:31.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.469" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:31.469" starttime="20170331 10:33:31.469"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:31.469" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:31.469" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:31.469" starttime="20170331 10:33:31.469"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.469" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:31.469" starttime="20170331 10:33:31.469"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.469" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:31.469" starttime="20170331 10:33:31.469"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.469" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:31.469" starttime="20170331 10:33:31.469"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:31.469" starttime="20170331 10:33:31.438"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:31.469" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:31.469" starttime="20170331 10:33:31.469"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:31.469" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:31.469" starttime="20170331 10:33:31.469"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.484" starttime="20170331 10:33:31.469"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.484" starttime="20170331 10:33:31.484"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:31.484" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:31.484" starttime="20170331 10:33:31.484"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.484" starttime="20170331 10:33:31.484"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:31.484" starttime="20170331 10:33:31.469"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Foreign_Arabic" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.500" starttime="20170331 10:33:31.484"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%ز%' \ ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170331 10:33:31.516" level="INFO">${SQL_TalentPoolIdToGet} = 2850</msg>
<status status="PASS" endtime="20170331 10:33:31.516" starttime="20170331 10:33:31.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.516" level="INFO">${SQL_TalentPoolIdToGet} = 2850</msg>
<status status="PASS" endtime="20170331 10:33:31.516" starttime="20170331 10:33:31.516"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById1}</var>
</assign>
<msg timestamp="20170331 10:33:31.531" level="INFO">${SQL_TalentPoolTitleById1} = &lt;=&gt;?@[\]^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20170331 10:33:31.531" starttime="20170331 10:33:31.516"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:31.531" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:31.531" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:31.531" starttime="20170331 10:33:31.531"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.531" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:31.531" starttime="20170331 10:33:31.531"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.531" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:31.531" starttime="20170331 10:33:31.531"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.531" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:31.531" starttime="20170331 10:33:31.531"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:31.531" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:31.531" starttime="20170331 10:33:31.531"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.563" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:31.563" starttime="20170331 10:33:31.531"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:31.563" starttime="20170331 10:33:31.484"></status>
</kw>
<doc>*Name:*
API_TP_Get_Return_Title_Char_Foreign_Arabic

*Description:*
verify arabic alphabet

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24436</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:31.563" critical="yes" starttime="20170331 10:33:31.438">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t34" name="GET-API_TPC_GET_Input_TP_Does_Not_Exist">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.578" starttime="20170331 10:33:31.563"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:31.594" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170331 10:33:31.594" starttime="20170331 10:33:31.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.594" level="INFO">514</msg>
<status status="PASS" endtime="20170331 10:33:31.594" starttime="20170331 10:33:31.594"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:31.594" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:31.594" starttime="20170331 10:33:31.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.609" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170331 10:33:31.609" starttime="20170331 10:33:31.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.609" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:31.609" starttime="20170331 10:33:31.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.609" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:31.609" starttime="20170331 10:33:31.609"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:31.609" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:31.609" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:31.609" starttime="20170331 10:33:31.609"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.609" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:31.609" starttime="20170331 10:33:31.609"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.609" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20170331 10:33:31.609" starttime="20170331 10:33:31.609"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.609" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:31.609" starttime="20170331 10:33:31.609"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:31.609" starttime="20170331 10:33:31.563"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:31.609" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:31.609" starttime="20170331 10:33:31.609"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:31.609" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:31.609" starttime="20170331 10:33:31.609"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.625" starttime="20170331 10:33:31.609"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.625" starttime="20170331 10:33:31.625"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:31.625" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:31.625" starttime="20170331 10:33:31.625"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.625" starttime="20170331 10:33:31.625"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:31.625" starttime="20170331 10:33:31.609"></status>
</kw>
<kw name="GET_TalentPool_Does_Not_Exist" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>404</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.641" starttime="20170331 10:33:31.625"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id+1000 FROM ou WHERE ou.type_id = 131072 ORDER BY ou_id DESC</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170331 10:33:31.641" level="INFO">${SQL_TalentPoolIdToGet} = 13782</msg>
<status status="PASS" endtime="20170331 10:33:31.656" starttime="20170331 10:33:31.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.656" level="INFO">${SQL_TalentPoolIdToGet} = 13782</msg>
<status status="PASS" endtime="20170331 10:33:31.656" starttime="20170331 10:33:31.656"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:31.656" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:31.656" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:31.656" starttime="20170331 10:33:31.656"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.656" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:31.656" starttime="20170331 10:33:31.656"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.656" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20170331 10:33:31.656" starttime="20170331 10:33:31.656"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.656" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:31.656" starttime="20170331 10:33:31.656"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:31.656" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:31.656" starttime="20170331 10:33:31.656"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20170331 10:33:31.656" starttime="20170331 10:33:31.656"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.696" starttime="20170331 10:33:31.656"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.696" level="FAIL">"500 Internal Server Error" does not start with "404", but should have.</msg>
<status status="FAIL" endtime="20170331 10:33:31.696" starttime="20170331 10:33:31.696"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:31.696" starttime="20170331 10:33:31.625"></status>
</kw>
<doc>*Name:*
API_TP_Get_Input_TP_DNE

*Description:*
verify failure when talent pool id provided does not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24437</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:31.696" critical="yes" starttime="20170331 10:33:31.563">"500 Internal Server Error" does not start with "404", but should have.</status>
</test>
<test id="s1-t35" name="GET-API_TPC_GET_Input_User_Does_Not_Exist">
<kw name="REST_NOAUTH_NonExistentUser" library="SMP_Keywords">
<doc>*REST_NOAUTH_NonExistentUser:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.701" starttime="20170331 10:33:31.701"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:31.716" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20170331 10:33:31.716" starttime="20170331 10:33:31.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.716" level="INFO">2347</msg>
<status status="PASS" endtime="20170331 10:33:31.716" starttime="20170331 10:33:31.716"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT 1</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:31.716" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:31.716" starttime="20170331 10:33:31.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.716" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20170331 10:33:31.716" starttime="20170331 10:33:31.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.716" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:31.716" starttime="20170331 10:33:31.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.716" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:31.716" starttime="20170331 10:33:31.716"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:31.716" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:31.716" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:31.716" starttime="20170331 10:33:31.716"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.716" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:31.716" starttime="20170331 10:33:31.716"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.716" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20170331 10:33:31.716" starttime="20170331 10:33:31.716"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.716" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:31.716" starttime="20170331 10:33:31.716"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:31.716" starttime="20170331 10:33:31.701"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:31.732" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:31.732" starttime="20170331 10:33:31.732"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:31.732" level="INFO">Request body set to "{   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_2347",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:31.732" starttime="20170331 10:33:31.732"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.748" starttime="20170331 10:33:31.732"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.748" starttime="20170331 10:33:31.748"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:31.748" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:31.748" starttime="20170331 10:33:31.748"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.748" starttime="20170331 10:33:31.748"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:31.748" starttime="20170331 10:33:31.716"></status>
</kw>
<kw name="GET_User_Does_Not_Exist" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>401</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.763" starttime="20170331 10:33:31.748"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170331 10:33:31.779" level="INFO">${SQL_TalentPoolIdToGet} = 7005</msg>
<status status="PASS" endtime="20170331 10:33:31.779" starttime="20170331 10:33:31.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.779" level="INFO">${SQL_TalentPoolIdToGet} = 7005</msg>
<status status="PASS" endtime="20170331 10:33:31.779" starttime="20170331 10:33:31.779"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:31.779" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:31.779" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:31.779" starttime="20170331 10:33:31.779"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.779" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:31.779" starttime="20170331 10:33:31.779"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.779" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20170331 10:33:31.779" starttime="20170331 10:33:31.779"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.779" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:31.779" starttime="20170331 10:33:31.779"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:31.779" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:31.779" starttime="20170331 10:33:31.779"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20170331 10:33:31.779" starttime="20170331 10:33:31.779"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.826" starttime="20170331 10:33:31.779"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.826" level="FAIL">"500 Internal Server Error" does not start with "401", but should have.</msg>
<status status="FAIL" endtime="20170331 10:33:31.826" starttime="20170331 10:33:31.826"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:31.826" starttime="20170331 10:33:31.748"></status>
</kw>
<doc>*Name:*
API_TP_Get_Input_User_DNE

*Description:*
verify failure when user provided does not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24438</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:31.826" critical="yes" starttime="20170331 10:33:31.701">"500 Internal Server Error" does not start with "401", but should have.</status>
</test>
<test id="s1-t36" name="GET-API_TPC_GET_Input_User_Did_Not_Create">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.843" starttime="20170331 10:33:31.826"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:31.873" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170331 10:33:31.873" starttime="20170331 10:33:31.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.873" level="INFO">514</msg>
<status status="PASS" endtime="20170331 10:33:31.873" starttime="20170331 10:33:31.873"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:31.873" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:31.873" starttime="20170331 10:33:31.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.873" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170331 10:33:31.873" starttime="20170331 10:33:31.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.873" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:31.873" starttime="20170331 10:33:31.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.873" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:31.873" starttime="20170331 10:33:31.873"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:31.873" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:31.873" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:31.873" starttime="20170331 10:33:31.873"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.873" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:31.873" starttime="20170331 10:33:31.873"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.873" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20170331 10:33:31.873" starttime="20170331 10:33:31.873"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.873" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:31.873" starttime="20170331 10:33:31.873"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:31.873" starttime="20170331 10:33:31.826"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:31.873" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:31.873" starttime="20170331 10:33:31.873"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:31.888" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:31.888" starttime="20170331 10:33:31.873"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.888" starttime="20170331 10:33:31.888"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.888" starttime="20170331 10:33:31.888"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:31.888" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:31.888" starttime="20170331 10:33:31.888"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.888" starttime="20170331 10:33:31.888"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:31.888" starttime="20170331 10:33:31.873"></status>
</kw>
<kw name="GET_User_Did_Not_Create" library="SMP_Keywords">
<doc>*GET_User_Did_Not_Create:*</doc>
<arguments>
<arg>Title</arg>
<arg>401</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.920" starttime="20170331 10:33:31.904"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id&lt;&gt; ${SQL_GET_USERID} ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20170331 10:33:31.951" level="INFO">${SQL_TalentPoolIdToGet} = 754</msg>
<status status="PASS" endtime="20170331 10:33:31.951" starttime="20170331 10:33:31.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.951" level="INFO">${SQL_TalentPoolIdToGet} = 754</msg>
<status status="PASS" endtime="20170331 10:33:31.951" starttime="20170331 10:33:31.951"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:31.951" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:31.951" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:31.951" starttime="20170331 10:33:31.951"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.951" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:31.951" starttime="20170331 10:33:31.951"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.951" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20170331 10:33:31.951" starttime="20170331 10:33:31.951"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.951" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:31.951" starttime="20170331 10:33:31.951"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:31.951" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:31.951" starttime="20170331 10:33:31.951"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20170331 10:33:31.951" starttime="20170331 10:33:31.951"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:31.982" starttime="20170331 10:33:31.951"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<msg timestamp="20170331 10:33:31.982" level="FAIL">"500 Internal Server Error" does not start with "401", but should have.</msg>
<status status="FAIL" endtime="20170331 10:33:31.982" starttime="20170331 10:33:31.982"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:31.982" starttime="20170331 10:33:31.904"></status>
</kw>
<doc>*Name:*
API_TP_Get_Input_User_DidNotCreate

*Description:*
verify failure when user provided did not create the talent pool

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24439</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:31.982" critical="yes" starttime="20170331 10:33:31.826">"500 Internal Server Error" does not start with "401", but should have.</status>
</test>
<test id="s1-t37" name="POST-API_TPC_Add_Security_Script">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.013" starttime="20170331 10:33:31.998"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:32.013" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170331 10:33:32.013" starttime="20170331 10:33:32.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.013" level="INFO">1338</msg>
<status status="PASS" endtime="20170331 10:33:32.013" starttime="20170331 10:33:32.013"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:32.013" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:32.013" starttime="20170331 10:33:32.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.013" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170331 10:33:32.013" starttime="20170331 10:33:32.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.013" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:32.013" starttime="20170331 10:33:32.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.013" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:32.013" starttime="20170331 10:33:32.013"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:32.029" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:32.029" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:32.029" starttime="20170331 10:33:32.013"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.029" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:32.029" starttime="20170331 10:33:32.029"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.029" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20170331 10:33:32.029" starttime="20170331 10:33:32.029"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.029" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:32.029" starttime="20170331 10:33:32.029"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:32.029" starttime="20170331 10:33:31.982"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:32.029" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:32.029" starttime="20170331 10:33:32.029"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:32.029" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:32.029" starttime="20170331 10:33:32.029"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.045" starttime="20170331 10:33:32.029"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.045" starttime="20170331 10:33:32.045"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:32.045" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:32.045" starttime="20170331 10:33:32.045"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.045" starttime="20170331 10:33:32.045"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:32.045" starttime="20170331 10:33:32.029"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Add" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.076" starttime="20170331 10:33:32.060"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:32.091" level="INFO">${SQL_TalentPoolId} = 6170</msg>
<status status="PASS" endtime="20170331 10:33:32.091" starttime="20170331 10:33:32.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.091" level="INFO">${SQL_TalentPoolId} = 6170</msg>
<status status="PASS" endtime="20170331 10:33:32.091" starttime="20170331 10:33:32.091"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND name_first LIKE '%&lt;script&gt;alert(123)&lt;/script&gt;%' AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20170331 10:33:32.091" level="INFO">${SQL_UserToAdd1} = 1342</msg>
<status status="PASS" endtime="20170331 10:33:32.091" starttime="20170331 10:33:32.091"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:32.091" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:32.091" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:32.091" starttime="20170331 10:33:32.091"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.091" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:32.107" starttime="20170331 10:33:32.091"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.107" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20170331 10:33:32.107" starttime="20170331 10:33:32.107"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.107" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:32.107" starttime="20170331 10:33:32.107"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:32.107" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:32.107" starttime="20170331 10:33:32.107"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{ \"UserId\": ${SQL_UserToAdd1}, \"Status\": 128 }]</arg>
</arguments>
<msg timestamp="20170331 10:33:32.107" level="INFO">Request body set to "[{ "UserId": 1342, "Status": 128 }]".</msg>
<status status="PASS" endtime="20170331 10:33:32.107" starttime="20170331 10:33:32.107"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170331 10:33:32.107" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20170331 10:33:32.107" starttime="20170331 10:33:32.107"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<msg timestamp="20170331 10:33:32.138" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:32.138" starttime="20170331 10:33:32.107"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:32.138" starttime="20170331 10:33:32.045"></status>
</kw>
<doc>*Name:*
API_TPC_Security_Script

*Description:*
verify script injection is allowed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24440</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:32.138" critical="yes" starttime="20170331 10:33:31.982">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t38" name="POST-API_TPC_Add_Already_Added_Subset">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.170" starttime="20170331 10:33:32.138"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:32.170" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:32.170" starttime="20170331 10:33:32.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.170" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:32.170" starttime="20170331 10:33:32.170"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:32.170" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:32.170" starttime="20170331 10:33:32.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.170" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:32.170" starttime="20170331 10:33:32.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.170" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:32.170" starttime="20170331 10:33:32.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.170" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:32.170" starttime="20170331 10:33:32.170"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:32.170" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:32.170" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:32.170" starttime="20170331 10:33:32.170"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.170" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:32.170" starttime="20170331 10:33:32.170"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.170" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:32.170" starttime="20170331 10:33:32.170"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.185" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:32.185" starttime="20170331 10:33:32.170"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:32.185" starttime="20170331 10:33:32.138"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:32.185" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:32.185" starttime="20170331 10:33:32.185"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:32.185" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:32.185" starttime="20170331 10:33:32.185"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.201" starttime="20170331 10:33:32.185"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.201" starttime="20170331 10:33:32.201"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:32.201" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:32.201" starttime="20170331 10:33:32.201"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.201" starttime="20170331 10:33:32.201"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:32.201" starttime="20170331 10:33:32.185"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Add_SubSet" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.232" starttime="20170331 10:33:32.201"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:32.248" level="INFO">${SQL_TalentPoolId} = 3083</msg>
<status status="PASS" endtime="20170331 10:33:32.248" starttime="20170331 10:33:32.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.248" level="INFO">${SQL_TalentPoolId} = 3083</msg>
<status status="PASS" endtime="20170331 10:33:32.248" starttime="20170331 10:33:32.248"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20170331 10:33:32.279" level="INFO">${SQL_UserToAdd1} = 731</msg>
<status status="PASS" endtime="20170331 10:33:32.279" starttime="20170331 10:33:32.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.279" level="INFO">${SQL_UserToAdd1} = 731</msg>
<status status="PASS" endtime="20170331 10:33:32.279" starttime="20170331 10:33:32.279"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id &lt;&gt; ${SQL_UserToAdd1} AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd2}</var>
</assign>
<msg timestamp="20170331 10:33:32.279" level="INFO">${SQL_UserToAdd2} = 9</msg>
<status status="PASS" endtime="20170331 10:33:32.279" starttime="20170331 10:33:32.279"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:32.295" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:32.295" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:32.295" starttime="20170331 10:33:32.295"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.295" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:32.295" starttime="20170331 10:33:32.295"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.295" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:32.295" starttime="20170331 10:33:32.295"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.295" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:32.295" starttime="20170331 10:33:32.295"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:32.295" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:32.295" starttime="20170331 10:33:32.295"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{\"UserId\": ${SQL_UserToAdd1}},{\"UserId\": ${SQL_UserToAdd2}}]</arg>
</arguments>
<msg timestamp="20170331 10:33:32.295" level="INFO">Request body set to "[{"UserId": 731},{"UserId": 9}]".</msg>
<status status="PASS" endtime="20170331 10:33:32.295" starttime="20170331 10:33:32.295"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170331 10:33:32.295" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20170331 10:33:32.295" starttime="20170331 10:33:32.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.295" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20170331 10:33:32.295" starttime="20170331 10:33:32.295"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<msg timestamp="20170331 10:33:32.326" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:32.326" starttime="20170331 10:33:32.295"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:32.341" starttime="20170331 10:33:32.201"></status>
</kw>
<doc>*Name:*
API_TPC_Add_Already_Added_Subset

*Description:*
Verify success when subset of added users are already added

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24441</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:32.341" critical="yes" starttime="20170331 10:33:32.138">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t39" name="POST-API_TPC_Add_Already_Added_Single">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.341" starttime="20170331 10:33:32.341"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:32.357" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:32.357" starttime="20170331 10:33:32.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.357" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:32.357" starttime="20170331 10:33:32.357"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:32.357" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:32.357" starttime="20170331 10:33:32.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.357" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:32.357" starttime="20170331 10:33:32.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.357" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:32.357" starttime="20170331 10:33:32.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.357" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:32.357" starttime="20170331 10:33:32.357"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:32.357" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:32.357" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:32.357" starttime="20170331 10:33:32.357"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.357" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:32.357" starttime="20170331 10:33:32.357"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.357" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:32.357" starttime="20170331 10:33:32.357"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.357" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:32.357" starttime="20170331 10:33:32.357"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:32.357" starttime="20170331 10:33:32.341"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:32.357" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:32.357" starttime="20170331 10:33:32.357"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:32.373" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:32.373" starttime="20170331 10:33:32.357"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.373" starttime="20170331 10:33:32.373"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.373" starttime="20170331 10:33:32.373"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:32.373" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:32.373" starttime="20170331 10:33:32.373"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.373" starttime="20170331 10:33:32.373"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:32.373" starttime="20170331 10:33:32.357"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Already_Added_Single" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.420" starttime="20170331 10:33:32.388"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:32.435" level="INFO">${SQL_TalentPoolId} = 2314</msg>
<status status="PASS" endtime="20170331 10:33:32.435" starttime="20170331 10:33:32.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.435" level="INFO">${SQL_TalentPoolId} = 2314</msg>
<status status="PASS" endtime="20170331 10:33:32.435" starttime="20170331 10:33:32.435"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20170331 10:33:32.466" level="INFO">${SQL_UserToAdd1} = 800</msg>
<status status="PASS" endtime="20170331 10:33:32.466" starttime="20170331 10:33:32.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.466" level="INFO">${SQL_UserToAdd1} = 800</msg>
<status status="PASS" endtime="20170331 10:33:32.466" starttime="20170331 10:33:32.466"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:32.466" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:32.466" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:32.466" starttime="20170331 10:33:32.466"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.466" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:32.466" starttime="20170331 10:33:32.466"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.466" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:32.466" starttime="20170331 10:33:32.466"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.466" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:32.466" starttime="20170331 10:33:32.466"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:32.466" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:32.466" starttime="20170331 10:33:32.466"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{\"UserId\": ${SQL_UserToAdd1}}]</arg>
</arguments>
<msg timestamp="20170331 10:33:32.466" level="INFO">Request body set to "[{"UserId": 800}]".</msg>
<status status="PASS" endtime="20170331 10:33:32.466" starttime="20170331 10:33:32.466"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170331 10:33:32.466" level="INFO">${SQL_CandidateCountBefore} = 3</msg>
<status status="PASS" endtime="20170331 10:33:32.466" starttime="20170331 10:33:32.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.482" level="INFO">${SQL_CandidateCountBefore} = 3</msg>
<status status="PASS" endtime="20170331 10:33:32.482" starttime="20170331 10:33:32.466"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<msg timestamp="20170331 10:33:32.513" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:32.513" starttime="20170331 10:33:32.482"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:32.513" starttime="20170331 10:33:32.388"></status>
</kw>
<doc>*Name:*
API_TPC_Add_AlreadyAdded_Single

*Description:*
Verify success when single added user is already added

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24442</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:32.513" critical="yes" starttime="20170331 10:33:32.341">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t40" name="POST-API_TPC_Add_Already_Added_All">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.545" starttime="20170331 10:33:32.513"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:32.545" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:32.545" starttime="20170331 10:33:32.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.545" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:32.545" starttime="20170331 10:33:32.545"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:32.545" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:32.545" starttime="20170331 10:33:32.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.545" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:32.545" starttime="20170331 10:33:32.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.545" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:32.545" starttime="20170331 10:33:32.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.545" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:32.545" starttime="20170331 10:33:32.545"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:32.545" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:32.545" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:32.545" starttime="20170331 10:33:32.545"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.560" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:32.560" starttime="20170331 10:33:32.560"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.560" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:32.560" starttime="20170331 10:33:32.560"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.560" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:32.560" starttime="20170331 10:33:32.560"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:32.560" starttime="20170331 10:33:32.513"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:32.560" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:32.560" starttime="20170331 10:33:32.560"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:32.560" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:32.560" starttime="20170331 10:33:32.560"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.576" starttime="20170331 10:33:32.560"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.576" starttime="20170331 10:33:32.576"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:32.576" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:32.576" starttime="20170331 10:33:32.576"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.576" starttime="20170331 10:33:32.576"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:32.576" starttime="20170331 10:33:32.560"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Already_Added_All" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.591" starttime="20170331 10:33:32.576"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 2) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:32.623" level="INFO">${SQL_TalentPoolId} = 2970</msg>
<status status="PASS" endtime="20170331 10:33:32.623" starttime="20170331 10:33:32.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.623" level="INFO">${SQL_TalentPoolId} = 2970</msg>
<status status="PASS" endtime="20170331 10:33:32.623" starttime="20170331 10:33:32.623"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20170331 10:33:32.654" level="INFO">${SQL_UserToAdd1} = 739</msg>
<status status="PASS" endtime="20170331 10:33:32.654" starttime="20170331 10:33:32.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.654" level="INFO">${SQL_UserToAdd1} = 739</msg>
<status status="PASS" endtime="20170331 10:33:32.654" starttime="20170331 10:33:32.654"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id &lt;&gt; ${SQL_UserToAdd1} AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd2}</var>
</assign>
<msg timestamp="20170331 10:33:32.685" level="INFO">${SQL_UserToAdd2} = 729</msg>
<status status="PASS" endtime="20170331 10:33:32.685" starttime="20170331 10:33:32.654"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:32.685" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:32.685" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:32.685" starttime="20170331 10:33:32.685"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.685" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:32.685" starttime="20170331 10:33:32.685"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.685" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:32.685" starttime="20170331 10:33:32.685"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.685" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:32.685" starttime="20170331 10:33:32.685"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:32.685" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:32.685" starttime="20170331 10:33:32.685"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{\"UserId\": ${SQL_UserToAdd1}},{\"UserId\": ${SQL_UserToAdd2}}]</arg>
</arguments>
<msg timestamp="20170331 10:33:32.685" level="INFO">Request body set to "[{"UserId": 739},{"UserId": 729}]".</msg>
<status status="PASS" endtime="20170331 10:33:32.685" starttime="20170331 10:33:32.685"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170331 10:33:32.685" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20170331 10:33:32.685" starttime="20170331 10:33:32.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.701" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20170331 10:33:32.701" starttime="20170331 10:33:32.685"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<msg timestamp="20170331 10:33:32.732" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:32.732" starttime="20170331 10:33:32.701"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:32.732" starttime="20170331 10:33:32.576"></status>
</kw>
<doc>*Name:*
Api_TPC_Add_AlreadyAdded_All

*Description:*
Verify success when multiple added users are already added

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST3</tag>
<tag>testrailid=24443</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:32.732" critical="yes" starttime="20170331 10:33:32.513">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t41" name="POST-API_TPC_Add_2Users">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.748" starttime="20170331 10:33:32.732"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:32.763" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170331 10:33:32.763" starttime="20170331 10:33:32.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.763" level="INFO">1338</msg>
<status status="PASS" endtime="20170331 10:33:32.763" starttime="20170331 10:33:32.763"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:32.763" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:32.763" starttime="20170331 10:33:32.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.763" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170331 10:33:32.763" starttime="20170331 10:33:32.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.763" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:32.763" starttime="20170331 10:33:32.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.763" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:32.763" starttime="20170331 10:33:32.763"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:32.763" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:32.763" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:32.763" starttime="20170331 10:33:32.763"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.763" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:32.763" starttime="20170331 10:33:32.763"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.763" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20170331 10:33:32.763" starttime="20170331 10:33:32.763"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.763" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:32.763" starttime="20170331 10:33:32.763"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:32.763" starttime="20170331 10:33:32.732"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:32.779" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:32.779" starttime="20170331 10:33:32.779"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:32.779" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:32.779" starttime="20170331 10:33:32.779"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.779" starttime="20170331 10:33:32.779"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.795" starttime="20170331 10:33:32.795"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:32.795" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:32.795" starttime="20170331 10:33:32.795"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.795" starttime="20170331 10:33:32.795"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:32.795" starttime="20170331 10:33:32.763"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Add_2Users" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.810" starttime="20170331 10:33:32.795"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:32.826" level="INFO">${SQL_TalentPoolId} = 6949</msg>
<status status="PASS" endtime="20170331 10:33:32.826" starttime="20170331 10:33:32.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.826" level="INFO">${SQL_TalentPoolId} = 6949</msg>
<status status="PASS" endtime="20170331 10:33:32.826" starttime="20170331 10:33:32.826"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20170331 10:33:32.841" level="INFO">${SQL_UserToAdd1} = 774</msg>
<status status="PASS" endtime="20170331 10:33:32.841" starttime="20170331 10:33:32.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.857" level="INFO">${SQL_UserToAdd1} = 774</msg>
<status status="PASS" endtime="20170331 10:33:32.857" starttime="20170331 10:33:32.841"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id &lt;&gt; ${SQL_UserToAdd1} AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd2}</var>
</assign>
<msg timestamp="20170331 10:33:32.873" level="INFO">${SQL_UserToAdd2} = 731</msg>
<status status="PASS" endtime="20170331 10:33:32.873" starttime="20170331 10:33:32.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd2}</arg>
<arg>${SQL_UserToAdd2}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.873" level="INFO">${SQL_UserToAdd2} = 731</msg>
<status status="PASS" endtime="20170331 10:33:32.873" starttime="20170331 10:33:32.873"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:32.873" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:32.873" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:32.873" starttime="20170331 10:33:32.873"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.873" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:32.873" starttime="20170331 10:33:32.873"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.873" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20170331 10:33:32.873" starttime="20170331 10:33:32.873"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.873" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:32.873" starttime="20170331 10:33:32.873"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:32.873" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:32.873" starttime="20170331 10:33:32.873"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_UserToAdd1}},{"UserId": ${SQL_UserToAdd2}}]</arg>
</arguments>
<msg timestamp="20170331 10:33:32.873" level="INFO">Request body set to "[{"UserId": 774},{"UserId": 731}]".</msg>
<status status="PASS" endtime="20170331 10:33:32.873" starttime="20170331 10:33:32.873"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170331 10:33:32.888" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20170331 10:33:32.888" starttime="20170331 10:33:32.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.888" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20170331 10:33:32.888" starttime="20170331 10:33:32.888"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<msg timestamp="20170331 10:33:32.920" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:32.920" starttime="20170331 10:33:32.888"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:32.920" starttime="20170331 10:33:32.795"></status>
</kw>
<doc>*Name:*
API_TPC_Add_2Users

*Description:*
Verify success when adding 2 users

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>testrailid=24445</tag>
<tag>USER</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:32.920" critical="yes" starttime="20170331 10:33:32.732">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t42" name="POST-API_TPC_Add_1Users">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.935" starttime="20170331 10:33:32.920"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:32.951" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170331 10:33:32.951" starttime="20170331 10:33:32.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.951" level="INFO">415</msg>
<status status="PASS" endtime="20170331 10:33:32.951" starttime="20170331 10:33:32.951"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:32.951" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:32.951" starttime="20170331 10:33:32.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.951" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170331 10:33:32.951" starttime="20170331 10:33:32.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.951" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:32.951" starttime="20170331 10:33:32.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.951" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:32.951" starttime="20170331 10:33:32.951"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:32.951" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:32.951" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:32.951" starttime="20170331 10:33:32.951"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.951" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:32.951" starttime="20170331 10:33:32.951"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.951" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170331 10:33:32.951" starttime="20170331 10:33:32.951"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:32.966" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:32.966" starttime="20170331 10:33:32.951"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:32.966" starttime="20170331 10:33:32.920"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:32.966" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:32.966" starttime="20170331 10:33:32.966"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:32.966" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:32.966" starttime="20170331 10:33:32.966"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.982" starttime="20170331 10:33:32.966"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.982" starttime="20170331 10:33:32.982"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:32.982" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:32.982" starttime="20170331 10:33:32.982"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:32.982" starttime="20170331 10:33:32.982"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:32.982" starttime="20170331 10:33:32.966"></status>
</kw>
<kw name="POST_TalentPool_Add_1Users" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.013" starttime="20170331 10:33:32.982"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:33.029" level="INFO">${SQL_TalentPoolId} = 3068</msg>
<status status="PASS" endtime="20170331 10:33:33.029" starttime="20170331 10:33:33.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.029" level="INFO">${SQL_TalentPoolId} = 3068</msg>
<status status="PASS" endtime="20170331 10:33:33.029" starttime="20170331 10:33:33.029"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20170331 10:33:33.061" level="INFO">${SQL_UserToAdd1} = 836</msg>
<status status="PASS" endtime="20170331 10:33:33.061" starttime="20170331 10:33:33.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.061" level="INFO">${SQL_UserToAdd1} = 836</msg>
<status status="PASS" endtime="20170331 10:33:33.061" starttime="20170331 10:33:33.061"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd2}</var>
</assign>
<msg timestamp="20170331 10:33:33.091" level="INFO">${SQL_UserToAdd2} = 5404</msg>
<status status="PASS" endtime="20170331 10:33:33.091" starttime="20170331 10:33:33.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd2}</arg>
<arg>${SQL_UserToAdd2}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.091" level="INFO">${SQL_UserToAdd2} = 5404</msg>
<status status="PASS" endtime="20170331 10:33:33.091" starttime="20170331 10:33:33.091"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:33.091" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:33.091" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:33.091" starttime="20170331 10:33:33.091"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.091" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:33.091" starttime="20170331 10:33:33.091"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.091" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170331 10:33:33.091" starttime="20170331 10:33:33.091"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.091" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:33.091" starttime="20170331 10:33:33.091"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:33.091" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:33.091" starttime="20170331 10:33:33.091"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_UserToAdd1}}]</arg>
</arguments>
<msg timestamp="20170331 10:33:33.091" level="INFO">Request body set to "[{"UserId": 836}]".</msg>
<status status="PASS" endtime="20170331 10:33:33.091" starttime="20170331 10:33:33.091"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170331 10:33:33.091" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20170331 10:33:33.091" starttime="20170331 10:33:33.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.091" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20170331 10:33:33.091" starttime="20170331 10:33:33.091"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<msg timestamp="20170331 10:33:33.138" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:33.138" starttime="20170331 10:33:33.091"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:33.138" starttime="20170331 10:33:32.982"></status>
</kw>
<doc>*Name:*
API_TPC_Add_1Users

*Description:*
Verify success when adding 1 user

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>testrailid=24446</tag>
<tag>USER11</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:33.138" critical="yes" starttime="20170331 10:33:32.920">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t43" name="POST-API_TPC_Add_0Users">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.154" starttime="20170331 10:33:33.138"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:33.154" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170331 10:33:33.154" starttime="20170331 10:33:33.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.170" level="INFO">1338</msg>
<status status="PASS" endtime="20170331 10:33:33.170" starttime="20170331 10:33:33.170"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:33.170" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:33.170" starttime="20170331 10:33:33.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.170" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170331 10:33:33.170" starttime="20170331 10:33:33.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.170" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:33.170" starttime="20170331 10:33:33.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.170" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:33.170" starttime="20170331 10:33:33.170"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:33.170" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:33.170" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:33.170" starttime="20170331 10:33:33.170"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.170" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:33.170" starttime="20170331 10:33:33.170"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.170" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20170331 10:33:33.170" starttime="20170331 10:33:33.170"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.170" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:33.170" starttime="20170331 10:33:33.170"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:33.170" starttime="20170331 10:33:33.138"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:33.170" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:33.170" starttime="20170331 10:33:33.170"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:33.170" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:33.170" starttime="20170331 10:33:33.170"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.185" starttime="20170331 10:33:33.170"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.185" starttime="20170331 10:33:33.185"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:33.185" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:33.185" starttime="20170331 10:33:33.185"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.185" starttime="20170331 10:33:33.185"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:33.185" starttime="20170331 10:33:33.170"></status>
</kw>
<kw name="POST_TalentPool_Add_0Users" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.216" starttime="20170331 10:33:33.202"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:33.216" level="INFO">${SQL_TalentPoolId} = 3136</msg>
<status status="PASS" endtime="20170331 10:33:33.216" starttime="20170331 10:33:33.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.216" level="INFO">${SQL_TalentPoolId} = 3136</msg>
<status status="PASS" endtime="20170331 10:33:33.216" starttime="20170331 10:33:33.216"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:33.216" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:33.216" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:33.216" starttime="20170331 10:33:33.216"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.216" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:33.216" starttime="20170331 10:33:33.216"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.232" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20170331 10:33:33.232" starttime="20170331 10:33:33.232"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.232" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:33.232" starttime="20170331 10:33:33.232"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:33.232" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:33.232" starttime="20170331 10:33:33.232"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{}]</arg>
</arguments>
<msg timestamp="20170331 10:33:33.232" level="INFO">Request body set to "[{}]".</msg>
<status status="PASS" endtime="20170331 10:33:33.232" starttime="20170331 10:33:33.232"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170331 10:33:33.232" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20170331 10:33:33.232" starttime="20170331 10:33:33.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.232" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20170331 10:33:33.232" starttime="20170331 10:33:33.232"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<msg timestamp="20170331 10:33:33.263" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:33.263" starttime="20170331 10:33:33.232"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:33.263" starttime="20170331 10:33:33.185"></status>
</kw>
<doc>*Name:*
API_TPC_Add_0Users

*Description:*
Verify success when adding 0 users

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>testrailid=24447</tag>
<tag>USER12</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:33.263" critical="yes" starttime="20170331 10:33:33.138">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t44" name="POST-API_TPC_Add_BaseCase_Input_Vs_Database">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.279" starttime="20170331 10:33:33.279"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:33.295" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:33.295" starttime="20170331 10:33:33.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.295" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:33.295" starttime="20170331 10:33:33.295"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:33.295" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:33.295" starttime="20170331 10:33:33.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.295" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:33.295" starttime="20170331 10:33:33.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.295" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:33.295" starttime="20170331 10:33:33.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.295" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:33.295" starttime="20170331 10:33:33.295"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:33.295" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:33.295" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:33.295" starttime="20170331 10:33:33.295"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.295" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:33.295" starttime="20170331 10:33:33.295"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.295" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:33.295" starttime="20170331 10:33:33.295"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.295" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:33.295" starttime="20170331 10:33:33.295"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:33.295" starttime="20170331 10:33:33.263"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:33.295" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:33.295" starttime="20170331 10:33:33.295"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:33.295" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:33.295" starttime="20170331 10:33:33.295"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.310" starttime="20170331 10:33:33.295"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.310" starttime="20170331 10:33:33.310"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:33.310" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:33.310" starttime="20170331 10:33:33.310"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.310" starttime="20170331 10:33:33.310"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:33.310" starttime="20170331 10:33:33.295"></status>
</kw>
<kw name="POST_TalentPool_BaseCase_InputVsDataBase" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.326" starttime="20170331 10:33:33.326"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:33.341" level="INFO">${SQL_TalentPoolId} = 5174</msg>
<status status="PASS" endtime="20170331 10:33:33.341" starttime="20170331 10:33:33.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.341" level="INFO">${SQL_TalentPoolId} = 5174</msg>
<status status="PASS" endtime="20170331 10:33:33.341" starttime="20170331 10:33:33.341"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20170331 10:33:33.341" level="INFO">${SQL_UserToAdd1} = 695</msg>
<status status="PASS" endtime="20170331 10:33:33.341" starttime="20170331 10:33:33.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.341" level="INFO">${SQL_UserToAdd1} = 695</msg>
<status status="PASS" endtime="20170331 10:33:33.341" starttime="20170331 10:33:33.341"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:33.341" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:33.341" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:33.357" starttime="20170331 10:33:33.341"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.357" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:33.357" starttime="20170331 10:33:33.357"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.357" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:33.357" starttime="20170331 10:33:33.357"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.357" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:33.357" starttime="20170331 10:33:33.357"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:33.357" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:33.357" starttime="20170331 10:33:33.357"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_UserToAdd1}}]</arg>
</arguments>
<msg timestamp="20170331 10:33:33.357" level="INFO">Request body set to "[{"UserId": 695}]".</msg>
<status status="PASS" endtime="20170331 10:33:33.357" starttime="20170331 10:33:33.357"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170331 10:33:33.357" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20170331 10:33:33.357" starttime="20170331 10:33:33.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.357" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20170331 10:33:33.357" starttime="20170331 10:33:33.357"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<msg timestamp="20170331 10:33:33.388" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:33.388" starttime="20170331 10:33:33.357"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:33.388" starttime="20170331 10:33:33.310"></status>
</kw>
<doc>*Name:*
API_TPC_Add_BaseCase_InputVsDatabase

*Description:*
Verify successful input user ends up in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DB</tag>
<tag>testrailid=24448</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:33.388" critical="yes" starttime="20170331 10:33:33.263">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t45" name="POST-API_TPC_Add_BaseCase_Input_Vs_Output_Value">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.404" starttime="20170331 10:33:33.404"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:33.404" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:33.404" starttime="20170331 10:33:33.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.420" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:33.420" starttime="20170331 10:33:33.404"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:33.420" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:33.420" starttime="20170331 10:33:33.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.420" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:33.420" starttime="20170331 10:33:33.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.420" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:33.420" starttime="20170331 10:33:33.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.420" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:33.420" starttime="20170331 10:33:33.420"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:33.420" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:33.420" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:33.420" starttime="20170331 10:33:33.420"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.420" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:33.420" starttime="20170331 10:33:33.420"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.420" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:33.420" starttime="20170331 10:33:33.420"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.420" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:33.420" starttime="20170331 10:33:33.420"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:33.420" starttime="20170331 10:33:33.404"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:33.420" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:33.420" starttime="20170331 10:33:33.420"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:33.420" level="INFO">Request body set to "{   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:33.420" starttime="20170331 10:33:33.420"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.435" starttime="20170331 10:33:33.420"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.435" starttime="20170331 10:33:33.435"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:33.435" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:33.435" starttime="20170331 10:33:33.435"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.435" starttime="20170331 10:33:33.435"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:33.435" starttime="20170331 10:33:33.420"></status>
</kw>
<kw name="POST_TalentPool_BaseCase_InputVsDataBase_Value" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.451" starttime="20170331 10:33:33.435"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:33.466" level="INFO">${SQL_TalentPoolId} = 2655</msg>
<status status="PASS" endtime="20170331 10:33:33.466" starttime="20170331 10:33:33.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.466" level="INFO">${SQL_TalentPoolId} = 2655</msg>
<status status="PASS" endtime="20170331 10:33:33.466" starttime="20170331 10:33:33.466"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20170331 10:33:33.466" level="INFO">${SQL_UserToAdd1} = 819</msg>
<status status="PASS" endtime="20170331 10:33:33.466" starttime="20170331 10:33:33.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.466" level="INFO">${SQL_UserToAdd1} = 819</msg>
<status status="PASS" endtime="20170331 10:33:33.466" starttime="20170331 10:33:33.466"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:33.466" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:33.466" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:33.466" starttime="20170331 10:33:33.466"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.482" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:33.482" starttime="20170331 10:33:33.466"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.482" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:33.482" starttime="20170331 10:33:33.482"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.482" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:33.482" starttime="20170331 10:33:33.482"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:33.482" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:33.482" starttime="20170331 10:33:33.482"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_UserToAdd1}}]</arg>
</arguments>
<msg timestamp="20170331 10:33:33.482" level="INFO">Request body set to "[{"UserId": 819}]".</msg>
<status status="PASS" endtime="20170331 10:33:33.482" starttime="20170331 10:33:33.482"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<msg timestamp="20170331 10:33:33.513" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:33.513" starttime="20170331 10:33:33.482"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:33.513" starttime="20170331 10:33:33.435"></status>
</kw>
<doc>*Name:*
API_TPC_Add_BC_InputVsOutput_Value

*Description:*
Verify successful input user ends up in output

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DBV</tag>
<tag>testrailid=24449</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:33.513" critical="yes" starttime="20170331 10:33:33.388">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t46" name="POST-API_TP_Grp_Create_UseCase_Elab_AlreadyExists">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.529" starttime="20170331 10:33:33.529"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:33.576" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20170331 10:33:33.576" starttime="20170331 10:33:33.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.576" level="INFO">25</msg>
<status status="PASS" endtime="20170331 10:33:33.576" starttime="20170331 10:33:33.576"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:33.576" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:33.576" starttime="20170331 10:33:33.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.576" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20170331 10:33:33.576" starttime="20170331 10:33:33.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.576" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:33.576" starttime="20170331 10:33:33.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.576" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:33.576" starttime="20170331 10:33:33.576"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:33.576" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:33.576" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:33.576" starttime="20170331 10:33:33.576"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.576" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:33.576" starttime="20170331 10:33:33.576"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.576" level="INFO">Set request header "X-USERID" to "25"</msg>
<status status="PASS" endtime="20170331 10:33:33.576" starttime="20170331 10:33:33.576"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.576" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:33.576" starttime="20170331 10:33:33.576"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:33.576" starttime="20170331 10:33:33.529"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:33.591" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:33.591" starttime="20170331 10:33:33.576"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:33.591" level="INFO">Request body set to "{   "UserId": 25,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_25",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:33.591" starttime="20170331 10:33:33.591"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.591" starttime="20170331 10:33:33.591"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.591" starttime="20170331 10:33:33.591"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:33.591" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:33.591" starttime="20170331 10:33:33.591"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.591" starttime="20170331 10:33:33.591"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:33.591" starttime="20170331 10:33:33.576"></status>
</kw>
<kw name="POST_TalentPool_Group_Create">
<arguments>
<arg>400</arg>
</arguments>
<msg timestamp="20170331 10:33:33.607" level="FAIL">No keyword with name 'POST_TalentPool_Group_Create' found. Did you mean:
    SMP_Keywords.POST TalentPool Create</msg>
<status status="FAIL" endtime="20170331 10:33:33.607" starttime="20170331 10:33:33.607"></status>
</kw>
<doc>*Name:*
API_TPC_Add_BC_InputVsOutput_Value

*Description:*
Verify successful input user ends up in output

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24450</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:33.607" critical="yes" starttime="20170331 10:33:33.513">No keyword with name 'POST_TalentPool_Group_Create' found. Did you mean:
    SMP_Keywords.POST TalentPool Create</status>
</test>
<test id="s1-t47" name="PUT-API_Talent_Pool_Candidate_Search_Set_UseCase_Base_InputVsStatusDatabase">
<kw name="REST_NOAUTH_Random_Active_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.623" starttime="20170331 10:33:33.623"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:33.638" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170331 10:33:33.638" starttime="20170331 10:33:33.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.638" level="INFO">48</msg>
<status status="PASS" endtime="20170331 10:33:33.638" starttime="20170331 10:33:33.638"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:33.638" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:33.638" starttime="20170331 10:33:33.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.638" level="INFO">${SQL_GET_USERID} = 48</msg>
<status status="PASS" endtime="20170331 10:33:33.638" starttime="20170331 10:33:33.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.654" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:33.654" starttime="20170331 10:33:33.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.654" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:33.654" starttime="20170331 10:33:33.654"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:33.654" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:33.654" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:33.654" starttime="20170331 10:33:33.654"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.654" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:33.654" starttime="20170331 10:33:33.654"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.654" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170331 10:33:33.654" starttime="20170331 10:33:33.654"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.654" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:33.654" starttime="20170331 10:33:33.654"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:33.654" starttime="20170331 10:33:33.623"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:33.654" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:33.654" starttime="20170331 10:33:33.654"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:33.654" level="INFO">Request body set to "{   "UserId": 48,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_48",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:33.654" starttime="20170331 10:33:33.654"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.670" starttime="20170331 10:33:33.654"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.670" starttime="20170331 10:33:33.670"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:33.670" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:33.670" starttime="20170331 10:33:33.670"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.670" starttime="20170331 10:33:33.670"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:33.670" starttime="20170331 10:33:33.654"></status>
</kw>
<kw name="PUT_TalentPool_Candidate_Status_Set" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:33.716" level="INFO">${SQL_TalentPoolId} = 11477</msg>
<status status="PASS" endtime="20170331 10:33:33.716" starttime="20170331 10:33:33.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.716" level="INFO">${SQL_TalentPoolId} = 11477</msg>
<status status="PASS" endtime="20170331 10:33:33.716" starttime="20170331 10:33:33.716"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1}</var>
</assign>
<msg timestamp="20170331 10:33:33.716" level="INFO">${SQL_GetCandidateId1} = 572</msg>
<status status="PASS" endtime="20170331 10:33:33.716" starttime="20170331 10:33:33.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1}</arg>
<arg>${SQL_GetCandidateId1}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.716" level="INFO">${SQL_GetCandidateId1} = 572</msg>
<status status="PASS" endtime="20170331 10:33:33.716" starttime="20170331 10:33:33.716"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 status_id FROM ou_user_status WHERE culture_id = 1 AND status_id IN (128,256,512,1024) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1Status}</var>
</assign>
<msg timestamp="20170331 10:33:33.732" level="INFO">${SQL_GetCandidateId1Status} = 128</msg>
<status status="PASS" endtime="20170331 10:33:33.732" starttime="20170331 10:33:33.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1Status}</arg>
<arg>${SQL_GetCandidateId1Status}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.732" level="INFO">${SQL_GetCandidateId1Status} = 128</msg>
<status status="PASS" endtime="20170331 10:33:33.732" starttime="20170331 10:33:33.732"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:33.732" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:33.732" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:33.732" starttime="20170331 10:33:33.732"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.732" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:33.732" starttime="20170331 10:33:33.732"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.732" level="INFO">Set request header "X-USERID" to "48"</msg>
<status status="PASS" endtime="20170331 10:33:33.732" starttime="20170331 10:33:33.732"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.732" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:33.732" starttime="20170331 10:33:33.732"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:33.732" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:33.732" starttime="20170331 10:33:33.732"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_GetCandidateId1},"Status": ${SQL_GetCandidateId1Status}}]</arg>
</arguments>
<msg timestamp="20170331 10:33:33.732" level="INFO">Request body set to "[{"UserId": 572,"Status": 128}]".</msg>
<status status="PASS" endtime="20170331 10:33:33.732" starttime="20170331 10:33:33.732"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates/status</arg>
</arguments>
<msg timestamp="20170331 10:33:33.779" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:33.779" starttime="20170331 10:33:33.732"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:33.779" starttime="20170331 10:33:33.670"></status>
</kw>
<doc>*Name:*
PUT-API_Talent_Pool_Candidate_Search_Set_UseCase_Base_InputVsStatusDatabase

*Description:*
UseCase_Base: Verify provided status matches new entry in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
<tag>testrailid=24452</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:33.779" critical="yes" starttime="20170331 10:33:33.607">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t48" name="PUT-API_TalentPool_Candidate_Status_Set_UseCase_Elaborate_Users_1">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.795" starttime="20170331 10:33:33.779"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:33.826" level="INFO">${SQL_GET_USERID} = 409</msg>
<status status="PASS" endtime="20170331 10:33:33.826" starttime="20170331 10:33:33.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.826" level="INFO">409</msg>
<status status="PASS" endtime="20170331 10:33:33.826" starttime="20170331 10:33:33.826"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:33.826" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:33.826" starttime="20170331 10:33:33.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.826" level="INFO">${SQL_GET_USERID} = 409</msg>
<status status="PASS" endtime="20170331 10:33:33.826" starttime="20170331 10:33:33.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.826" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:33.826" starttime="20170331 10:33:33.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.826" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:33.826" starttime="20170331 10:33:33.826"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:33.826" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:33.826" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:33.826" starttime="20170331 10:33:33.826"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.826" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:33.826" starttime="20170331 10:33:33.826"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.826" level="INFO">Set request header "X-USERID" to "409"</msg>
<status status="PASS" endtime="20170331 10:33:33.826" starttime="20170331 10:33:33.826"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.826" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:33.826" starttime="20170331 10:33:33.826"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:33.826" starttime="20170331 10:33:33.779"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:33.826" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:33.826" starttime="20170331 10:33:33.826"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:33.841" level="INFO">Request body set to "{   "UserId": 409,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_409",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:33.841" starttime="20170331 10:33:33.826"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.841" starttime="20170331 10:33:33.841"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.841" starttime="20170331 10:33:33.841"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:33.841" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:33.841" starttime="20170331 10:33:33.841"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.841" starttime="20170331 10:33:33.841"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:33.841" starttime="20170331 10:33:33.826"></status>
</kw>
<kw name="PUT_TalentPool_Candidate_Status_Set" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:33.873" level="INFO">${SQL_TalentPoolId} = 220</msg>
<status status="PASS" endtime="20170331 10:33:33.873" starttime="20170331 10:33:33.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.873" level="INFO">${SQL_TalentPoolId} = 220</msg>
<status status="PASS" endtime="20170331 10:33:33.873" starttime="20170331 10:33:33.873"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1}</var>
</assign>
<msg timestamp="20170331 10:33:33.888" level="INFO">${SQL_GetCandidateId1} = 409</msg>
<status status="PASS" endtime="20170331 10:33:33.888" starttime="20170331 10:33:33.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1}</arg>
<arg>${SQL_GetCandidateId1}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.888" level="INFO">${SQL_GetCandidateId1} = 409</msg>
<status status="PASS" endtime="20170331 10:33:33.888" starttime="20170331 10:33:33.888"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 status_id FROM ou_user_status WHERE culture_id = 1 AND status_id IN (128,256,512,1024) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1Status}</var>
</assign>
<msg timestamp="20170331 10:33:33.888" level="INFO">${SQL_GetCandidateId1Status} = 256</msg>
<status status="PASS" endtime="20170331 10:33:33.888" starttime="20170331 10:33:33.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1Status}</arg>
<arg>${SQL_GetCandidateId1Status}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.888" level="INFO">${SQL_GetCandidateId1Status} = 256</msg>
<status status="PASS" endtime="20170331 10:33:33.888" starttime="20170331 10:33:33.888"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:33.888" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:33.888" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:33.888" starttime="20170331 10:33:33.888"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.888" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:33.888" starttime="20170331 10:33:33.888"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.888" level="INFO">Set request header "X-USERID" to "409"</msg>
<status status="PASS" endtime="20170331 10:33:33.888" starttime="20170331 10:33:33.888"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.888" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:33.888" starttime="20170331 10:33:33.888"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:33.888" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:33.888" starttime="20170331 10:33:33.888"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_GetCandidateId1},"Status": ${SQL_GetCandidateId1Status}}]</arg>
</arguments>
<msg timestamp="20170331 10:33:33.888" level="INFO">Request body set to "[{"UserId": 409,"Status": 256}]".</msg>
<status status="PASS" endtime="20170331 10:33:33.888" starttime="20170331 10:33:33.888"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates/status</arg>
</arguments>
<msg timestamp="20170331 10:33:33.920" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:33.920" starttime="20170331 10:33:33.888"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:33.935" starttime="20170331 10:33:33.857"></status>
</kw>
<doc>*Name:*
PUT-API_TP_CS_Set_UC_Elab_Users_1

*Description:*
UseCase_Elaborate: Verify success when status passed is identical

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
<tag>testrailid=24453</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:33.935" critical="yes" starttime="20170331 10:33:33.779">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t49" name="PUT-API_TalentPool_Rename_Access_Not_Active">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.951" starttime="20170331 10:33:33.935"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:33.951" level="INFO">${SQL_GET_USERID} = 1</msg>
<status status="PASS" endtime="20170331 10:33:33.951" starttime="20170331 10:33:33.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.951" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:33.951" starttime="20170331 10:33:33.951"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:33.951" level="INFO">${SQL_GET_USER_CULTURE} = 2</msg>
<status status="PASS" endtime="20170331 10:33:33.951" starttime="20170331 10:33:33.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.951" level="INFO">${SQL_GET_USERID} = 1</msg>
<status status="PASS" endtime="20170331 10:33:33.951" starttime="20170331 10:33:33.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.966" level="INFO">${SQL_GET_USER_CULTURE} = 2</msg>
<status status="PASS" endtime="20170331 10:33:33.966" starttime="20170331 10:33:33.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.966" level="INFO">2</msg>
<status status="PASS" endtime="20170331 10:33:33.966" starttime="20170331 10:33:33.966"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:33.966" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:33.966" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:33.966" starttime="20170331 10:33:33.966"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.966" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:33.966" starttime="20170331 10:33:33.966"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.966" level="INFO">Set request header "X-USERID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:33.966" starttime="20170331 10:33:33.966"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:33.966" level="INFO">Set request header "X-CULTUREID" to "2"</msg>
<status status="PASS" endtime="20170331 10:33:33.966" starttime="20170331 10:33:33.966"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:33.966" starttime="20170331 10:33:33.935"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:33.966" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:33.966" starttime="20170331 10:33:33.966"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:33.966" level="INFO">Request body set to "{   "UserId": 1,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:33.966" starttime="20170331 10:33:33.966"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.982" starttime="20170331 10:33:33.966"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.982" starttime="20170331 10:33:33.982"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:33.982" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:33.982" starttime="20170331 10:33:33.982"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:33.982" starttime="20170331 10:33:33.982"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:33.982" starttime="20170331 10:33:33.966"></status>
</kw>
<kw name="PUT_TalentPool_Candidate_Status_Set" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:34.013" level="INFO">${SQL_TalentPoolId} = 1963</msg>
<status status="PASS" endtime="20170331 10:33:34.013" starttime="20170331 10:33:33.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.013" level="INFO">${SQL_TalentPoolId} = 1963</msg>
<status status="PASS" endtime="20170331 10:33:34.013" starttime="20170331 10:33:34.013"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1}</var>
</assign>
<msg timestamp="20170331 10:33:34.029" level="INFO">${SQL_GetCandidateId1} = 43</msg>
<status status="PASS" endtime="20170331 10:33:34.029" starttime="20170331 10:33:34.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1}</arg>
<arg>${SQL_GetCandidateId1}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.029" level="INFO">${SQL_GetCandidateId1} = 43</msg>
<status status="PASS" endtime="20170331 10:33:34.029" starttime="20170331 10:33:34.029"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 status_id FROM ou_user_status WHERE culture_id = 1 AND status_id IN (128,256,512,1024) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1Status}</var>
</assign>
<msg timestamp="20170331 10:33:34.029" level="INFO">${SQL_GetCandidateId1Status} = 256</msg>
<status status="PASS" endtime="20170331 10:33:34.029" starttime="20170331 10:33:34.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1Status}</arg>
<arg>${SQL_GetCandidateId1Status}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.029" level="INFO">${SQL_GetCandidateId1Status} = 256</msg>
<status status="PASS" endtime="20170331 10:33:34.029" starttime="20170331 10:33:34.029"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:34.029" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:34.029" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:34.029" starttime="20170331 10:33:34.029"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.029" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:34.029" starttime="20170331 10:33:34.029"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.029" level="INFO">Set request header "X-USERID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:34.029" starttime="20170331 10:33:34.029"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.029" level="INFO">Set request header "X-CULTUREID" to "2"</msg>
<status status="PASS" endtime="20170331 10:33:34.029" starttime="20170331 10:33:34.029"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:34.029" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:34.029" starttime="20170331 10:33:34.029"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_GetCandidateId1},"Status": ${SQL_GetCandidateId1Status}}]</arg>
</arguments>
<msg timestamp="20170331 10:33:34.029" level="INFO">Request body set to "[{"UserId": 43,"Status": 256}]".</msg>
<status status="PASS" endtime="20170331 10:33:34.029" starttime="20170331 10:33:34.029"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates/status</arg>
</arguments>
<msg timestamp="20170331 10:33:34.076" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:34.076" starttime="20170331 10:33:34.029"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:34.076" starttime="20170331 10:33:33.998"></status>
</kw>
<doc>*Name:*
PUT-API_TP_Rename_Access_NotActive

*Description:*
Access: Verify failure when actor not active

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
<tag>testrailid=24455</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:34.076" critical="yes" starttime="20170331 10:33:33.935">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t50" name="PUT-API_TalentPool_Rename_Not_Active">
<kw name="REST_NOAUTH_Random_Not_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.107" starttime="20170331 10:33:34.076"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id &lt;&gt; 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:34.138" level="INFO">${SQL_GET_USERID} = 1128</msg>
<status status="PASS" endtime="20170331 10:33:34.138" starttime="20170331 10:33:34.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.138" level="INFO">1128</msg>
<status status="PASS" endtime="20170331 10:33:34.138" starttime="20170331 10:33:34.138"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:34.138" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:34.138" starttime="20170331 10:33:34.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.138" level="INFO">${SQL_GET_USERID} = 1128</msg>
<status status="PASS" endtime="20170331 10:33:34.154" starttime="20170331 10:33:34.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.154" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:34.154" starttime="20170331 10:33:34.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.154" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:34.154" starttime="20170331 10:33:34.154"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:34.154" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:34.154" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:34.154" starttime="20170331 10:33:34.154"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.154" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:34.154" starttime="20170331 10:33:34.154"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.154" level="INFO">Set request header "X-USERID" to "1128"</msg>
<status status="PASS" endtime="20170331 10:33:34.154" starttime="20170331 10:33:34.154"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.154" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:34.154" starttime="20170331 10:33:34.154"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:34.154" starttime="20170331 10:33:34.076"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:34.154" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:34.154" starttime="20170331 10:33:34.154"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:34.154" level="INFO">Request body set to "{   "UserId": 1128,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1128",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:34.154" starttime="20170331 10:33:34.154"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.170" starttime="20170331 10:33:34.154"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.170" starttime="20170331 10:33:34.170"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:34.170" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:34.170" starttime="20170331 10:33:34.170"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.170" starttime="20170331 10:33:34.170"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:34.170" starttime="20170331 10:33:34.154"></status>
</kw>
<kw name="PUT_TalentPool_Rename_Access_Not_Active" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>test 2</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID}) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:34.185" level="INFO">${SQL_TalentPoolId} = 2130</msg>
<status status="PASS" endtime="20170331 10:33:34.185" starttime="20170331 10:33:34.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.185" level="INFO">${SQL_TalentPoolId} = 2130</msg>
<status status="PASS" endtime="20170331 10:33:34.185" starttime="20170331 10:33:34.185"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:34.185" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:34.185" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:34.185" starttime="20170331 10:33:34.185"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.185" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:34.185" starttime="20170331 10:33:34.185"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.185" level="INFO">Set request header "X-USERID" to "1128"</msg>
<status status="PASS" endtime="20170331 10:33:34.185" starttime="20170331 10:33:34.185"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.201" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:34.201" starttime="20170331 10:33:34.185"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:34.201" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20170331 10:33:34.201" starttime="20170331 10:33:34.201"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.201" level="INFO">Request body set to "{ "Title":"test 2"}".</msg>
<status status="PASS" endtime="20170331 10:33:34.201" starttime="20170331 10:33:34.201"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.232" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:34.232" starttime="20170331 10:33:34.201"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:34.232" starttime="20170331 10:33:34.185"></status>
</kw>
<doc>*Name:*
PUT-API_TP_Rename_Access_NotActive

*Description:*
Access: Verify failure when actor not active

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
<tag>testrailid=24456</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:34.232" critical="yes" starttime="20170331 10:33:34.076">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t51" name="PUT-API_TalentPool_Candidate_Status_Set_UseCase_Base_InputVsUserDatabase">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.248" starttime="20170331 10:33:34.232"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:34.248" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170331 10:33:34.248" starttime="20170331 10:33:34.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.248" level="INFO">514</msg>
<status status="PASS" endtime="20170331 10:33:34.248" starttime="20170331 10:33:34.248"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:34.248" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:34.248" starttime="20170331 10:33:34.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.263" level="INFO">${SQL_GET_USERID} = 514</msg>
<status status="PASS" endtime="20170331 10:33:34.263" starttime="20170331 10:33:34.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.263" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:34.263" starttime="20170331 10:33:34.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.263" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:34.263" starttime="20170331 10:33:34.263"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:34.263" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:34.263" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:34.263" starttime="20170331 10:33:34.263"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.263" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:34.263" starttime="20170331 10:33:34.263"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.263" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20170331 10:33:34.263" starttime="20170331 10:33:34.263"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.263" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:34.263" starttime="20170331 10:33:34.263"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:34.263" starttime="20170331 10:33:34.232"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:34.263" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:34.263" starttime="20170331 10:33:34.263"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:34.263" level="INFO">Request body set to "{   "UserId": 514,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_514",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:34.263" starttime="20170331 10:33:34.263"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.279" starttime="20170331 10:33:34.263"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.279" starttime="20170331 10:33:34.279"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:34.279" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:34.279" starttime="20170331 10:33:34.279"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.279" starttime="20170331 10:33:34.279"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:34.279" starttime="20170331 10:33:34.263"></status>
</kw>
<kw name="PUT_TalentPool_Candidate_Status_Set" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>test 2</arg>
<arg>Title</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:34.326" level="INFO">${SQL_TalentPoolId} = 10990</msg>
<status status="PASS" endtime="20170331 10:33:34.326" starttime="20170331 10:33:34.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.341" level="INFO">${SQL_TalentPoolId} = 10990</msg>
<status status="PASS" endtime="20170331 10:33:34.341" starttime="20170331 10:33:34.341"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1}</var>
</assign>
<msg timestamp="20170331 10:33:34.341" level="INFO">${SQL_GetCandidateId1} = 815</msg>
<status status="PASS" endtime="20170331 10:33:34.341" starttime="20170331 10:33:34.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1}</arg>
<arg>${SQL_GetCandidateId1}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.341" level="INFO">${SQL_GetCandidateId1} = 815</msg>
<status status="PASS" endtime="20170331 10:33:34.341" starttime="20170331 10:33:34.341"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 status_id FROM ou_user_status WHERE culture_id = 1 AND status_id IN (128,256,512,1024) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1Status}</var>
</assign>
<msg timestamp="20170331 10:33:34.341" level="INFO">${SQL_GetCandidateId1Status} = 512</msg>
<status status="PASS" endtime="20170331 10:33:34.341" starttime="20170331 10:33:34.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1Status}</arg>
<arg>${SQL_GetCandidateId1Status}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.341" level="INFO">${SQL_GetCandidateId1Status} = 512</msg>
<status status="PASS" endtime="20170331 10:33:34.341" starttime="20170331 10:33:34.341"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:34.341" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:34.341" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:34.341" starttime="20170331 10:33:34.341"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.341" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:34.341" starttime="20170331 10:33:34.341"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.341" level="INFO">Set request header "X-USERID" to "514"</msg>
<status status="PASS" endtime="20170331 10:33:34.341" starttime="20170331 10:33:34.341"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.357" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:34.357" starttime="20170331 10:33:34.341"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:34.357" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:34.357" starttime="20170331 10:33:34.357"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_GetCandidateId1},"Status": ${SQL_GetCandidateId1Status}}]</arg>
</arguments>
<msg timestamp="20170331 10:33:34.357" level="INFO">Request body set to "[{"UserId": 815,"Status": 512}]".</msg>
<status status="PASS" endtime="20170331 10:33:34.357" starttime="20170331 10:33:34.357"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates/status</arg>
</arguments>
<msg timestamp="20170331 10:33:34.388" level="FAIL">Request should have succeeded, but was "500 Internal Server Error".</msg>
<status status="FAIL" endtime="20170331 10:33:34.388" starttime="20170331 10:33:34.357"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:34.388" starttime="20170331 10:33:34.295"></status>
</kw>
<doc>*Name:*
PUT-API_TC_Status_Set_UC_Base_InputVsUDB

*Description:*
UseCase_Base: Verify provided user matches the new entry in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
<tag>testrailid=24457</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:34.388" critical="yes" starttime="20170331 10:33:34.232">Request should have succeeded, but was "500 Internal Server Error".</status>
</test>
<test id="s1-t52" name="PUT-API_TPC_Status_Set_UC_Elaborate_Status_Value_Placed">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.420" starttime="20170331 10:33:34.388"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:34.420" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170331 10:33:34.420" starttime="20170331 10:33:34.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.420" level="INFO">1338</msg>
<status status="PASS" endtime="20170331 10:33:34.420" starttime="20170331 10:33:34.420"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:34.420" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:34.420" starttime="20170331 10:33:34.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.420" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170331 10:33:34.420" starttime="20170331 10:33:34.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.420" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:34.420" starttime="20170331 10:33:34.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.420" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:34.420" starttime="20170331 10:33:34.420"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:34.420" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:34.420" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:34.420" starttime="20170331 10:33:34.420"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.435" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:34.435" starttime="20170331 10:33:34.435"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.435" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20170331 10:33:34.435" starttime="20170331 10:33:34.435"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.435" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:34.435" starttime="20170331 10:33:34.435"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:34.435" starttime="20170331 10:33:34.388"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20170331 10:33:34.435" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20170331 10:33:34.435" starttime="20170331 10:33:34.435"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:34.435" level="INFO">Request body set to "{   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20170331 10:33:34.435" starttime="20170331 10:33:34.435"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.451" starttime="20170331 10:33:34.435"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.451" starttime="20170331 10:33:34.451"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20170331 10:33:34.451" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20170331 10:33:34.451" starttime="20170331 10:33:34.451"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.451" starttime="20170331 10:33:34.451"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:34.451" starttime="20170331 10:33:34.435"></status>
</kw>
<kw name="PUT_TalentPool_Candidate_Status_Set_Value_Placed">
<arguments>
<arg>1024</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170331 10:33:34.451" level="FAIL">No keyword with name 'PUT_TalentPool_Candidate_Status_Set_Value_Placed' found.</msg>
<status status="FAIL" endtime="20170331 10:33:34.451" starttime="20170331 10:33:34.451"></status>
</kw>
<tags>
<tag>PUT</tag>
<tag>testrailid=24458</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:34.451" critical="yes" starttime="20170331 10:33:34.388">No keyword with name 'PUT_TalentPool_Candidate_Status_Set_Value_Placed' found.</status>
</test>
<test id="s1-t53" name="PUT-API_TPC_Status_Set_UC_Elab_Users_2">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared_With_2_Candidates">
<msg timestamp="20170331 10:33:34.466" level="FAIL">No keyword with name 'REST_NOAUTH_Random_Active_Owner_OR_Shared_With_2_Candidates' found. Did you mean:
    SMP_Keywords.REST NOAUTH Random Active Owner OR Shared With Candidates</msg>
<status status="FAIL" endtime="20170331 10:33:34.466" starttime="20170331 10:33:34.466"></status>
</kw>
<tags>
<tag>PUT</tag>
<tag>testrailid=24475</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:34.466" critical="yes" starttime="20170331 10:33:34.466">No keyword with name 'REST_NOAUTH_Random_Active_Owner_OR_Shared_With_2_Candidates' found. Did you mean:
    SMP_Keywords.REST NOAUTH Random Active Owner OR Shared With Candidates</status>
</test>
<test id="s1-t54" name="DELETE-API_TPC_Remove1Users">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.482" starttime="20170331 10:33:34.466"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:34.529" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170331 10:33:34.529" starttime="20170331 10:33:34.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.529" level="INFO">415</msg>
<status status="PASS" endtime="20170331 10:33:34.529" starttime="20170331 10:33:34.529"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:34.529" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:34.529" starttime="20170331 10:33:34.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.529" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20170331 10:33:34.529" starttime="20170331 10:33:34.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.529" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:34.529" starttime="20170331 10:33:34.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.529" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:34.529" starttime="20170331 10:33:34.529"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:34.529" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:34.529" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:34.529" starttime="20170331 10:33:34.529"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.529" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:34.529" starttime="20170331 10:33:34.529"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.529" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20170331 10:33:34.529" starttime="20170331 10:33:34.529"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.545" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:34.545" starttime="20170331 10:33:34.529"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:34.545" starttime="20170331 10:33:34.466"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:34.545" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:34.545" starttime="20170331 10:33:34.545"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.545" starttime="20170331 10:33:34.545"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:34.545" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170331 10:33:34.545" starttime="20170331 10:33:34.545"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:34.545" level="INFO">${body} = {   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3":...</msg>
<status status="PASS" endtime="20170331 10:33:34.545" starttime="20170331 10:33:34.545"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:34.545" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:34.560" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 415,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_415",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:34.560" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:34.560" starttime="20170331 10:33:34.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.560" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:34.560" starttime="20170331 10:33:34.560"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170331 10:33:34.560" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170331 10:33:34.560" starttime="20170331 10:33:34.560"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:34.560" starttime="20170331 10:33:34.545"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_1User" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remove_1User:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.576" starttime="20170331 10:33:34.576"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:34.591" level="INFO">${SQL_TalentPoolId} = 10611</msg>
<status status="PASS" endtime="20170331 10:33:34.591" starttime="20170331 10:33:34.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.591" level="INFO">${SQL_TalentPoolId} = 10611</msg>
<status status="PASS" endtime="20170331 10:33:34.607" starttime="20170331 10:33:34.591"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20170331 10:33:34.623" level="INFO">${SQL_UserToRemove1} = 556</msg>
<status status="PASS" endtime="20170331 10:33:34.623" starttime="20170331 10:33:34.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.623" level="INFO">${SQL_UserToRemove1} = 556</msg>
<status status="PASS" endtime="20170331 10:33:34.623" starttime="20170331 10:33:34.623"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:34.623" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=0415 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20170331 10:33:34.623" starttime="20170331 10:33:34.623"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:34.623" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:34.623" starttime="20170331 10:33:34.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20170331 10:33:34.623" level="INFO">${body} = [{"UserId": 556}]</msg>
<status status="PASS" endtime="20170331 10:33:34.623" starttime="20170331 10:33:34.623"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170331 10:33:34.623" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20170331 10:33:34.623" starttime="20170331 10:33:34.623"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:34.623" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:34.654" level="INFO">Delete Request using : alias=http, uri=/talentpools/10611/candidates, data=[{"UserId": 556}],                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'0415', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:34.654" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:34.670" starttime="20170331 10:33:34.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.670" level="INFO">&lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:34.670" starttime="20170331 10:33:34.670"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170331 10:33:34.670" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170331 10:33:34.670" level="FAIL">500 != 200</msg>
<status status="FAIL" endtime="20170331 10:33:34.670" starttime="20170331 10:33:34.670"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:34.670" starttime="20170331 10:33:34.560"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_1Users

*Description:*
Verify success when removing 1 user

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24460</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:34.670" critical="yes" starttime="20170331 10:33:34.466">500 != 200</status>
</test>
<test id="s1-t55" name="DELETE-API_TPC_Remove_Access_DNE">
<kw name="REST_NOAUTH_NonExistentUser" library="SMP_Keywords">
<doc>*REST_NOAUTH_NonExistentUser:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.685" starttime="20170331 10:33:34.670"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:34.685" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20170331 10:33:34.685" starttime="20170331 10:33:34.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.685" level="INFO">2347</msg>
<status status="PASS" endtime="20170331 10:33:34.685" starttime="20170331 10:33:34.685"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT 1</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:34.685" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:34.685" starttime="20170331 10:33:34.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.685" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20170331 10:33:34.685" starttime="20170331 10:33:34.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.701" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:34.701" starttime="20170331 10:33:34.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.701" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:34.701" starttime="20170331 10:33:34.701"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:34.701" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:34.701" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:34.701" starttime="20170331 10:33:34.701"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.701" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:34.701" starttime="20170331 10:33:34.701"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.701" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20170331 10:33:34.701" starttime="20170331 10:33:34.701"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.701" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:34.701" starttime="20170331 10:33:34.701"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:34.701" starttime="20170331 10:33:34.670"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:34.701" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:34.701" starttime="20170331 10:33:34.701"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.701" starttime="20170331 10:33:34.701"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:34.701" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170331 10:33:34.701" starttime="20170331 10:33:34.701"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:34.701" level="INFO">${body} = {   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3"...</msg>
<status status="PASS" endtime="20170331 10:33:34.701" starttime="20170331 10:33:34.701"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:34.701" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:34.716" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_2347",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:34.716" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:34.716" starttime="20170331 10:33:34.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.716" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:34.716" starttime="20170331 10:33:34.716"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170331 10:33:34.716" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170331 10:33:34.716" starttime="20170331 10:33:34.716"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:34.716" starttime="20170331 10:33:34.701"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_Access_DNE" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remove_Access_DNE:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.733" starttime="20170331 10:33:34.716"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:34.748" level="INFO">${SQL_TalentPoolId} = 903</msg>
<status status="PASS" endtime="20170331 10:33:34.748" starttime="20170331 10:33:34.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.748" level="INFO">${SQL_TalentPoolId} = 903</msg>
<status status="PASS" endtime="20170331 10:33:34.748" starttime="20170331 10:33:34.748"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_user.user_id FROM ou_user LEFT JOIN users ON ou_user.user_id = users.user_id WHERE users.user_id &gt; 0 AND ou_user.ou_id = ${SQL_TalentPoolId} AND users.user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND users.status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20170331 10:33:34.763" level="INFO">${SQL_UserToRemove1} = 783</msg>
<status status="PASS" endtime="20170331 10:33:34.763" starttime="20170331 10:33:34.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.763" level="INFO">${SQL_UserToRemove1} = 783</msg>
<status status="PASS" endtime="20170331 10:33:34.763" starttime="20170331 10:33:34.763"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:34.779" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=02347 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20170331 10:33:34.779" starttime="20170331 10:33:34.763"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:34.779" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:34.779" starttime="20170331 10:33:34.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20170331 10:33:34.779" level="INFO">${body} = [{"UserId": 783}]</msg>
<status status="PASS" endtime="20170331 10:33:34.779" starttime="20170331 10:33:34.779"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170331 10:33:34.779" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20170331 10:33:34.779" starttime="20170331 10:33:34.779"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:34.779" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:34.810" level="INFO">Delete Request using : alias=http, uri=/talentpools/903/candidates, data=[{"UserId": 783}],                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'02347', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:34.810" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:34.810" starttime="20170331 10:33:34.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.810" level="INFO">&lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:34.810" starttime="20170331 10:33:34.810"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>401</arg>
</arguments>
<msg timestamp="20170331 10:33:34.810" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170331 10:33:34.810" level="FAIL">500 != 401</msg>
<status status="FAIL" endtime="20170331 10:33:34.810" starttime="20170331 10:33:34.810"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:34.810" starttime="20170331 10:33:34.716"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_Access_DNE

*Description:*
Verify failure when acting user does not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>NEGATIVE</tag>
<tag>testrailid=24461</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:34.810" critical="yes" starttime="20170331 10:33:34.670">500 != 401</status>
</test>
<test id="s1-t56" name="DELETE-API_TPC_Remove_Acc_NOT_TP_Owner">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.826" starttime="20170331 10:33:34.826"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:34.841" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:34.841" starttime="20170331 10:33:34.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.841" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:34.841" starttime="20170331 10:33:34.841"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:34.841" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:34.841" starttime="20170331 10:33:34.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.841" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:34.841" starttime="20170331 10:33:34.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.841" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:34.841" starttime="20170331 10:33:34.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.841" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:34.841" starttime="20170331 10:33:34.841"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:34.841" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:34.841" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:34.841" starttime="20170331 10:33:34.841"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.841" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:34.841" starttime="20170331 10:33:34.841"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.841" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:34.841" starttime="20170331 10:33:34.841"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.841" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:34.841" starttime="20170331 10:33:34.841"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:34.841" starttime="20170331 10:33:34.826"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:34.841" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:34.841" starttime="20170331 10:33:34.841"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.841" starttime="20170331 10:33:34.841"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:34.841" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170331 10:33:34.841" starttime="20170331 10:33:34.841"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:34.857" level="INFO">${body} = {   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3"...</msg>
<status status="PASS" endtime="20170331 10:33:34.857" starttime="20170331 10:33:34.841"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:34.857" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:34.857" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:34.857" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:34.857" starttime="20170331 10:33:34.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.857" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:34.857" starttime="20170331 10:33:34.857"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170331 10:33:34.857" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170331 10:33:34.873" starttime="20170331 10:33:34.857"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:34.873" starttime="20170331 10:33:34.841"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_Not_TP_Owner" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remove_1User:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.888" starttime="20170331 10:33:34.873"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id &lt;&gt; ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:34.904" level="INFO">${SQL_TalentPoolId} = 2741</msg>
<status status="PASS" endtime="20170331 10:33:34.904" starttime="20170331 10:33:34.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.904" level="INFO">${SQL_TalentPoolId} = 2741</msg>
<status status="PASS" endtime="20170331 10:33:34.904" starttime="20170331 10:33:34.904"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_user.user_id FROM ou_user LEFT JOIN users ON ou_user.user_id = users.user_id WHERE users.user_id &gt; 0 AND ou_user.ou_id = ${SQL_TalentPoolId} AND users.user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND users.status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20170331 10:33:34.940" level="INFO">${SQL_UserToRemove1} = 792</msg>
<status status="PASS" endtime="20170331 10:33:34.940" starttime="20170331 10:33:34.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.944" level="INFO">${SQL_UserToRemove1} = 792</msg>
<status status="PASS" endtime="20170331 10:33:34.944" starttime="20170331 10:33:34.940"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:34.944" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=01336 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20170331 10:33:34.944" starttime="20170331 10:33:34.944"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:34.944" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:34.944" starttime="20170331 10:33:34.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20170331 10:33:34.948" level="INFO">${body} = [{"UserId": 792}]</msg>
<status status="PASS" endtime="20170331 10:33:34.948" starttime="20170331 10:33:34.944"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170331 10:33:34.950" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20170331 10:33:34.950" starttime="20170331 10:33:34.948"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:34.950" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:34.981" level="INFO">Delete Request using : alias=http, uri=/talentpools/2741/candidates, data=[{"UserId": 792}],                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'01336', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:34.981" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:34.981" starttime="20170331 10:33:34.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.981" level="INFO">&lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:34.981" starttime="20170331 10:33:34.981"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>401</arg>
</arguments>
<msg timestamp="20170331 10:33:34.981" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170331 10:33:34.981" level="FAIL">500 != 401</msg>
<status status="FAIL" endtime="20170331 10:33:34.981" starttime="20170331 10:33:34.981"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:34.981" starttime="20170331 10:33:34.873"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_Acc_NotTPOwner

*Description:*
Verify failure when acting user is not the talent pool owner

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24462</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:34.981" critical="yes" starttime="20170331 10:33:34.826">500 != 401</status>
</test>
<test id="s1-t57" name="DELETE-API_TPC_Remove_AlreadyRemoved_All">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:34.997" starttime="20170331 10:33:34.981"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:34.997" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170331 10:33:34.997" starttime="20170331 10:33:34.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:34.997" level="INFO">1338</msg>
<status status="PASS" endtime="20170331 10:33:34.997" starttime="20170331 10:33:34.997"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:34.997" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:34.997" starttime="20170331 10:33:34.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.013" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170331 10:33:35.013" starttime="20170331 10:33:35.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.013" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:35.013" starttime="20170331 10:33:35.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.013" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:35.013" starttime="20170331 10:33:35.013"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:35.013" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:35.013" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:35.013" starttime="20170331 10:33:35.013"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.013" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:35.013" starttime="20170331 10:33:35.013"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.013" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20170331 10:33:35.013" starttime="20170331 10:33:35.013"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.013" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:35.013" starttime="20170331 10:33:35.013"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:35.013" starttime="20170331 10:33:34.981"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:35.013" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:35.013" starttime="20170331 10:33:35.013"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:35.013" starttime="20170331 10:33:35.013"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:35.013" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170331 10:33:35.013" starttime="20170331 10:33:35.013"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:35.013" level="INFO">${body} = {   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3"...</msg>
<status status="PASS" endtime="20170331 10:33:35.013" starttime="20170331 10:33:35.013"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:35.028" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:35.028" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:35.028" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.028" starttime="20170331 10:33:35.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.028" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.028" starttime="20170331 10:33:35.028"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170331 10:33:35.028" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.028" starttime="20170331 10:33:35.028"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:35.028" starttime="20170331 10:33:35.013"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_AlreadyRemoved_All" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_AlreadyRemoved_All:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:35.059" starttime="20170331 10:33:35.044"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:35.059" level="INFO">${SQL_TalentPoolId} = 1997</msg>
<status status="PASS" endtime="20170331 10:33:35.059" starttime="20170331 10:33:35.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.075" level="INFO">${SQL_TalentPoolId} = 1997</msg>
<status status="PASS" endtime="20170331 10:33:35.075" starttime="20170331 10:33:35.075"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20170331 10:33:35.091" level="INFO">${SQL_UserToRemove1} = 696</msg>
<status status="PASS" endtime="20170331 10:33:35.091" starttime="20170331 10:33:35.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.091" level="INFO">${SQL_UserToRemove1} = 696</msg>
<status status="PASS" endtime="20170331 10:33:35.091" starttime="20170331 10:33:35.091"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 AND user_id &lt;&gt; ${SQL_UserToRemove1} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove2}</var>
</assign>
<msg timestamp="20170331 10:33:35.106" level="INFO">${SQL_UserToRemove2} = 457</msg>
<status status="PASS" endtime="20170331 10:33:35.106" starttime="20170331 10:33:35.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove2}</arg>
<arg>${SQL_UserToRemove2}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.106" level="INFO">${SQL_UserToRemove2} = 457</msg>
<status status="PASS" endtime="20170331 10:33:35.106" starttime="20170331 10:33:35.106"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:35.106" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=01338 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20170331 10:33:35.106" starttime="20170331 10:33:35.106"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:35.122" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:35.122" starttime="20170331 10:33:35.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}},{"UserId": ${SQL_UserToRemove2}}]</arg>
</arguments>
<msg timestamp="20170331 10:33:35.122" level="INFO">${body} = [{"UserId": 696},{"UserId": 457}]</msg>
<status status="PASS" endtime="20170331 10:33:35.122" starttime="20170331 10:33:35.122"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170331 10:33:35.122" level="INFO">${SQL_CandidateCountBefore} = 4</msg>
<status status="PASS" endtime="20170331 10:33:35.122" starttime="20170331 10:33:35.122"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:35.122" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:35.153" level="INFO">Delete Request using : alias=http, uri=/talentpools/1997/candidates, data=[{"UserId": 696},{"UserId": 457}],                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'01338', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:35.153" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.153" starttime="20170331 10:33:35.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.153" level="INFO">&lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.153" starttime="20170331 10:33:35.153"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170331 10:33:35.153" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170331 10:33:35.153" level="FAIL">500 != 200</msg>
<status status="FAIL" endtime="20170331 10:33:35.153" starttime="20170331 10:33:35.153"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:35.153" starttime="20170331 10:33:35.044"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_AlreadyRemoved_All

*Description:*
Verify success when multiple removed users are already removed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24463</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:35.153" critical="yes" starttime="20170331 10:33:34.981">500 != 200</status>
</test>
<test id="s1-t58" name="DELETE-API_TPC_Remove_AlreadyRemoved_Single">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:35.169" starttime="20170331 10:33:35.153"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:35.184" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20170331 10:33:35.184" starttime="20170331 10:33:35.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.184" level="INFO">55</msg>
<status status="PASS" endtime="20170331 10:33:35.184" starttime="20170331 10:33:35.184"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:35.184" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:35.184" starttime="20170331 10:33:35.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.184" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20170331 10:33:35.184" starttime="20170331 10:33:35.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.184" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:35.184" starttime="20170331 10:33:35.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.184" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:35.184" starttime="20170331 10:33:35.184"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:35.184" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:35.184" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:35.184" starttime="20170331 10:33:35.184"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.184" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:35.184" starttime="20170331 10:33:35.184"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.184" level="INFO">Set request header "X-USERID" to "55"</msg>
<status status="PASS" endtime="20170331 10:33:35.184" starttime="20170331 10:33:35.184"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.184" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:35.184" starttime="20170331 10:33:35.184"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:35.184" starttime="20170331 10:33:35.153"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:35.200" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:35.200" starttime="20170331 10:33:35.184"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:35.200" starttime="20170331 10:33:35.200"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:35.200" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170331 10:33:35.200" starttime="20170331 10:33:35.200"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:35.200" level="INFO">${body} = {   "UserId": 55,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": ...</msg>
<status status="PASS" endtime="20170331 10:33:35.200" starttime="20170331 10:33:35.200"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:35.200" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:35.216" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 55,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_55",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:35.216" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.216" starttime="20170331 10:33:35.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.216" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.216" starttime="20170331 10:33:35.216"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170331 10:33:35.216" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.216" starttime="20170331 10:33:35.216"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:35.216" starttime="20170331 10:33:35.184"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_AlreadyRemoved_Single" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_AlreadyRemoved_Single:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:35.231" starttime="20170331 10:33:35.216"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:35.247" level="INFO">${SQL_TalentPoolId} = 574</msg>
<status status="PASS" endtime="20170331 10:33:35.247" starttime="20170331 10:33:35.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.247" level="INFO">${SQL_TalentPoolId} = 574</msg>
<status status="PASS" endtime="20170331 10:33:35.247" starttime="20170331 10:33:35.247"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20170331 10:33:35.263" level="INFO">${SQL_UserToRemove1} = 815</msg>
<status status="PASS" endtime="20170331 10:33:35.263" starttime="20170331 10:33:35.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.263" level="INFO">${SQL_UserToRemove1} = 815</msg>
<status status="PASS" endtime="20170331 10:33:35.263" starttime="20170331 10:33:35.263"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:35.263" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=055 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20170331 10:33:35.263" starttime="20170331 10:33:35.263"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:35.263" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:35.263" starttime="20170331 10:33:35.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20170331 10:33:35.263" level="INFO">${body} = [{"UserId": 815}]</msg>
<status status="PASS" endtime="20170331 10:33:35.263" starttime="20170331 10:33:35.263"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170331 10:33:35.278" level="INFO">${SQL_CandidateCountBefore} = 15</msg>
<status status="PASS" endtime="20170331 10:33:35.278" starttime="20170331 10:33:35.263"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:35.278" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:35.309" level="INFO">Delete Request using : alias=http, uri=/talentpools/574/candidates, data=[{"UserId": 815}],                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'055', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:35.309" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.309" starttime="20170331 10:33:35.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.309" level="INFO">&lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.309" starttime="20170331 10:33:35.309"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170331 10:33:35.309" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170331 10:33:35.309" level="FAIL">500 != 200</msg>
<status status="FAIL" endtime="20170331 10:33:35.309" starttime="20170331 10:33:35.309"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:35.309" starttime="20170331 10:33:35.216"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_AlreadyRemoved_Single

*Description:*
Verify success when single removed user is already removed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24464</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:35.309" critical="yes" starttime="20170331 10:33:35.153">500 != 200</status>
</test>
<test id="s1-t59" name="DELETE-API_TPC_Remove_AlreadyRemoved_SubSet">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:35.325" starttime="20170331 10:33:35.309"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:35.341" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20170331 10:33:35.341" starttime="20170331 10:33:35.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.341" level="INFO">55</msg>
<status status="PASS" endtime="20170331 10:33:35.341" starttime="20170331 10:33:35.341"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:35.341" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:35.341" starttime="20170331 10:33:35.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.341" level="INFO">${SQL_GET_USERID} = 55</msg>
<status status="PASS" endtime="20170331 10:33:35.341" starttime="20170331 10:33:35.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.341" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:35.341" starttime="20170331 10:33:35.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.341" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:35.341" starttime="20170331 10:33:35.341"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:35.341" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:35.341" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:35.341" starttime="20170331 10:33:35.341"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.341" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:35.341" starttime="20170331 10:33:35.341"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.341" level="INFO">Set request header "X-USERID" to "55"</msg>
<status status="PASS" endtime="20170331 10:33:35.341" starttime="20170331 10:33:35.341"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.341" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:35.341" starttime="20170331 10:33:35.341"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:35.341" starttime="20170331 10:33:35.309"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:35.341" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:35.341" starttime="20170331 10:33:35.341"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:35.341" starttime="20170331 10:33:35.341"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:35.341" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170331 10:33:35.341" starttime="20170331 10:33:35.341"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:35.356" level="INFO">${body} = {   "UserId": 55,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": ...</msg>
<status status="PASS" endtime="20170331 10:33:35.356" starttime="20170331 10:33:35.341"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:35.356" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:35.388" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 55,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_55",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:35.388" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.388" starttime="20170331 10:33:35.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.388" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.388" starttime="20170331 10:33:35.388"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170331 10:33:35.388" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.388" starttime="20170331 10:33:35.388"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:35.388" starttime="20170331 10:33:35.341"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_AlreadyRemoved_SubSet" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_AlreadyRemoved_SubSet:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:35.403" starttime="20170331 10:33:35.388"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:35.419" level="INFO">${SQL_TalentPoolId} = 702</msg>
<status status="PASS" endtime="20170331 10:33:35.419" starttime="20170331 10:33:35.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.419" level="INFO">${SQL_TalentPoolId} = 702</msg>
<status status="PASS" endtime="20170331 10:33:35.419" starttime="20170331 10:33:35.419"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20170331 10:33:35.434" level="INFO">${SQL_UserToRemove1} = 829</msg>
<status status="PASS" endtime="20170331 10:33:35.434" starttime="20170331 10:33:35.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.434" level="INFO">${SQL_UserToRemove1} = 829</msg>
<status status="PASS" endtime="20170331 10:33:35.434" starttime="20170331 10:33:35.434"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove2}</var>
</assign>
<msg timestamp="20170331 10:33:35.450" level="INFO">${SQL_UserToRemove2} = 691</msg>
<status status="PASS" endtime="20170331 10:33:35.450" starttime="20170331 10:33:35.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove2}</arg>
<arg>${SQL_UserToRemove2}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.450" level="INFO">${SQL_UserToRemove2} = 691</msg>
<status status="PASS" endtime="20170331 10:33:35.450" starttime="20170331 10:33:35.450"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:35.450" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=055 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20170331 10:33:35.450" starttime="20170331 10:33:35.450"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:35.450" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:35.450" starttime="20170331 10:33:35.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}},{"UserId": ${SQL_UserToRemove2}}]</arg>
</arguments>
<msg timestamp="20170331 10:33:35.450" level="INFO">${body} = [{"UserId": 829},{"UserId": 691}]</msg>
<status status="PASS" endtime="20170331 10:33:35.450" starttime="20170331 10:33:35.450"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170331 10:33:35.450" level="INFO">${SQL_CandidateCountBefore} = 44</msg>
<status status="PASS" endtime="20170331 10:33:35.450" starttime="20170331 10:33:35.450"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:35.450" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:35.497" level="INFO">Delete Request using : alias=http, uri=/talentpools/702/candidates, data=[{"UserId": 829},{"UserId": 691}],                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'055', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:35.497" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.497" starttime="20170331 10:33:35.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.497" level="INFO">&lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.497" starttime="20170331 10:33:35.497"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170331 10:33:35.497" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170331 10:33:35.497" level="FAIL">500 != 200</msg>
<status status="FAIL" endtime="20170331 10:33:35.497" starttime="20170331 10:33:35.497"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:35.497" starttime="20170331 10:33:35.388"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_AlreadyRemoved_SubSet

*Description:*
Verify success when subset of removed users are already removed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24465</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:35.497" critical="yes" starttime="20170331 10:33:35.309">500 != 200</status>
</test>
<test id="s1-t60" name="DELETE-APIi_TPC_Remove_BaseCase_InputVsDatabase">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:35.513" starttime="20170331 10:33:35.497"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:35.528" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:35.528" starttime="20170331 10:33:35.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.528" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:35.528" starttime="20170331 10:33:35.528"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:35.528" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:35.528" starttime="20170331 10:33:35.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.528" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:35.528" starttime="20170331 10:33:35.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.528" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:35.528" starttime="20170331 10:33:35.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.528" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:35.528" starttime="20170331 10:33:35.528"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:35.528" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:35.528" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:35.528" starttime="20170331 10:33:35.528"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.528" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:35.528" starttime="20170331 10:33:35.528"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.528" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:35.528" starttime="20170331 10:33:35.528"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.528" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:35.528" starttime="20170331 10:33:35.528"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:35.528" starttime="20170331 10:33:35.497"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:35.528" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:35.528" starttime="20170331 10:33:35.528"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:35.544" starttime="20170331 10:33:35.528"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:35.544" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170331 10:33:35.544" starttime="20170331 10:33:35.544"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:35.544" level="INFO">${body} = {   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3"...</msg>
<status status="PASS" endtime="20170331 10:33:35.544" starttime="20170331 10:33:35.544"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:35.544" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:35.544" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:35.544" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.544" starttime="20170331 10:33:35.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.559" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.559" starttime="20170331 10:33:35.559"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170331 10:33:35.559" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.559" starttime="20170331 10:33:35.559"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:35.559" starttime="20170331 10:33:35.528"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_BaseCase_InputVsDatabase" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Api_Remove_BaseCase_InputVsDatabase:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:35.575" starttime="20170331 10:33:35.559"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:35.591" level="INFO">${SQL_TalentPoolId} = 2984</msg>
<status status="PASS" endtime="20170331 10:33:35.591" starttime="20170331 10:33:35.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.591" level="INFO">${SQL_TalentPoolId} = 2984</msg>
<status status="PASS" endtime="20170331 10:33:35.591" starttime="20170331 10:33:35.591"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_user.user_id FROM ou_user LEFT JOIN users ON ou_user.user_id = users.user_id WHERE users.user_id &gt; 0 AND ou_user.ou_id = ${SQL_TalentPoolId} AND users.user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND users.status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20170331 10:33:35.606" level="INFO">${SQL_UserToRemove1} = 799</msg>
<status status="PASS" endtime="20170331 10:33:35.606" starttime="20170331 10:33:35.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.606" level="INFO">${SQL_UserToRemove1} = 799</msg>
<status status="PASS" endtime="20170331 10:33:35.606" starttime="20170331 10:33:35.606"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:35.606" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=01336 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20170331 10:33:35.606" starttime="20170331 10:33:35.606"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:35.606" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:35.606" starttime="20170331 10:33:35.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20170331 10:33:35.606" level="INFO">${body} = [{"UserId": 799}]</msg>
<status status="PASS" endtime="20170331 10:33:35.606" starttime="20170331 10:33:35.606"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170331 10:33:35.606" level="INFO">${SQL_CandidateCountBefore} = 2</msg>
<status status="PASS" endtime="20170331 10:33:35.606" starttime="20170331 10:33:35.606"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:35.606" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:35.638" level="INFO">Delete Request using : alias=http, uri=/talentpools/2984/candidates, data=[{"UserId": 799}],                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'01336', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:35.638" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.638" starttime="20170331 10:33:35.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.638" level="INFO">&lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.638" starttime="20170331 10:33:35.638"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170331 10:33:35.638" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170331 10:33:35.638" level="FAIL">500 != 200</msg>
<status status="FAIL" endtime="20170331 10:33:35.638" starttime="20170331 10:33:35.638"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:35.638" starttime="20170331 10:33:35.559"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_AlreadyRemoved_SubSet

*Description:*
Verify successful input user ends up in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24466</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:35.638" critical="yes" starttime="20170331 10:33:35.497">500 != 200</status>
</test>
<test id="s1-t61" name="DELETE-API_TPC_Remove_BaseCase_InputVsOutput">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:35.653" starttime="20170331 10:33:35.653"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:35.653" level="INFO">${SQL_GET_USERID} = 62</msg>
<status status="PASS" endtime="20170331 10:33:35.653" starttime="20170331 10:33:35.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.669" level="INFO">62</msg>
<status status="PASS" endtime="20170331 10:33:35.669" starttime="20170331 10:33:35.669"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:35.669" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:35.669" starttime="20170331 10:33:35.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.669" level="INFO">${SQL_GET_USERID} = 62</msg>
<status status="PASS" endtime="20170331 10:33:35.669" starttime="20170331 10:33:35.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.669" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:35.669" starttime="20170331 10:33:35.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.669" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:35.669" starttime="20170331 10:33:35.669"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:35.669" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:35.669" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:35.669" starttime="20170331 10:33:35.669"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.669" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:35.669" starttime="20170331 10:33:35.669"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.669" level="INFO">Set request header "X-USERID" to "62"</msg>
<status status="PASS" endtime="20170331 10:33:35.669" starttime="20170331 10:33:35.669"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.669" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:35.669" starttime="20170331 10:33:35.669"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:35.669" starttime="20170331 10:33:35.653"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:35.669" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:35.669" starttime="20170331 10:33:35.669"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:35.669" starttime="20170331 10:33:35.669"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:35.669" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170331 10:33:35.669" starttime="20170331 10:33:35.669"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:35.669" level="INFO">${body} = {   "UserId": 62,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": ...</msg>
<status status="PASS" endtime="20170331 10:33:35.669" starttime="20170331 10:33:35.669"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:35.685" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:35.685" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 62,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_62",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:35.685" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.685" starttime="20170331 10:33:35.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.685" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.685" starttime="20170331 10:33:35.685"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170331 10:33:35.685" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.685" starttime="20170331 10:33:35.685"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:35.685" starttime="20170331 10:33:35.669"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_BaseCase_InputVsOutput" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Remove_BaseCase_InputVsOutput:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:35.700" starttime="20170331 10:33:35.700"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:35.716" level="INFO">${SQL_TalentPoolId} = 6146</msg>
<status status="PASS" endtime="20170331 10:33:35.716" starttime="20170331 10:33:35.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.716" level="INFO">${SQL_TalentPoolId} = 6146</msg>
<status status="PASS" endtime="20170331 10:33:35.716" starttime="20170331 10:33:35.716"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_user.user_id FROM ou_user LEFT JOIN users ON ou_user.user_id = users.user_id WHERE users.user_id &gt; 0 AND ou_user.ou_id = ${SQL_TalentPoolId} AND users.user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND users.status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20170331 10:33:35.747" level="INFO">${SQL_UserToRemove1} = 720</msg>
<status status="PASS" endtime="20170331 10:33:35.747" starttime="20170331 10:33:35.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.747" level="INFO">${SQL_UserToRemove1} = 720</msg>
<status status="PASS" endtime="20170331 10:33:35.747" starttime="20170331 10:33:35.747"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:35.747" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=062 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20170331 10:33:35.747" starttime="20170331 10:33:35.747"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:35.747" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:35.747" starttime="20170331 10:33:35.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20170331 10:33:35.747" level="INFO">${body} = [{"UserId": 720}]</msg>
<status status="PASS" endtime="20170331 10:33:35.747" starttime="20170331 10:33:35.747"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170331 10:33:35.747" level="INFO">${SQL_CandidateCountBefore} = 11</msg>
<status status="PASS" endtime="20170331 10:33:35.747" starttime="20170331 10:33:35.747"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:35.747" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:35.794" level="INFO">Delete Request using : alias=http, uri=/talentpools/6146/candidates, data=[{"UserId": 720}],                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'062', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:35.794" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.794" starttime="20170331 10:33:35.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.794" level="INFO">&lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.794" starttime="20170331 10:33:35.794"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170331 10:33:35.794" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170331 10:33:35.794" level="FAIL">500 != 200</msg>
<status status="FAIL" endtime="20170331 10:33:35.794" starttime="20170331 10:33:35.794"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:35.794" starttime="20170331 10:33:35.700"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_AlreadyRemoved_Single

*Description:*
Verify success when single removed user is already removed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>JSONVFY</tag>
<tag>testrailid=24467</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:35.794" critical="yes" starttime="20170331 10:33:35.638">500 != 200</status>
</test>
<test id="s1-t62" name="DELETE-API_TP_Delete_Access_DoesNotExist">
<kw name="REST_NOAUTH_NonExistentUser" library="SMP_Keywords">
<doc>*REST_NOAUTH_NonExistentUser:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:35.809" starttime="20170331 10:33:35.794"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:35.809" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20170331 10:33:35.809" starttime="20170331 10:33:35.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.809" level="INFO">2347</msg>
<status status="PASS" endtime="20170331 10:33:35.809" starttime="20170331 10:33:35.809"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT 1</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:35.809" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:35.809" starttime="20170331 10:33:35.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.809" level="INFO">${SQL_GET_USERID} = 2347</msg>
<status status="PASS" endtime="20170331 10:33:35.809" starttime="20170331 10:33:35.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.809" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:35.809" starttime="20170331 10:33:35.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.809" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:35.809" starttime="20170331 10:33:35.809"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:35.825" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:35.825" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:35.825" starttime="20170331 10:33:35.809"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.825" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:35.825" starttime="20170331 10:33:35.825"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.825" level="INFO">Set request header "X-USERID" to "2347"</msg>
<status status="PASS" endtime="20170331 10:33:35.825" starttime="20170331 10:33:35.825"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.825" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:35.825" starttime="20170331 10:33:35.825"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:35.825" starttime="20170331 10:33:35.794"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:35.825" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:35.825" starttime="20170331 10:33:35.825"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:35.825" starttime="20170331 10:33:35.825"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:35.825" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170331 10:33:35.825" starttime="20170331 10:33:35.825"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:35.825" level="INFO">${body} = {   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3"...</msg>
<status status="PASS" endtime="20170331 10:33:35.825" starttime="20170331 10:33:35.825"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:35.825" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:35.841" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_2347",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:35.841" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.841" starttime="20170331 10:33:35.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.841" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.841" starttime="20170331 10:33:35.841"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170331 10:33:35.841" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.841" starttime="20170331 10:33:35.841"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:35.841" starttime="20170331 10:33:35.825"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Delete_Access_DoesNotExist" library="SMP_Keywords">
<doc>*DELETE_Api_TP_Delete_Access_DoesNotExist:*</doc>
<arguments>
<arg>401</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:35.856" starttime="20170331 10:33:35.841"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:35.872" level="INFO">${SQL_TalentPoolId} = 10820</msg>
<status status="PASS" endtime="20170331 10:33:35.872" starttime="20170331 10:33:35.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.872" level="INFO">${SQL_TalentPoolId} = 10820</msg>
<status status="PASS" endtime="20170331 10:33:35.872" starttime="20170331 10:33:35.872"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:35.872" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=02347 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20170331 10:33:35.872" starttime="20170331 10:33:35.872"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:35.872" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:35.872" starttime="20170331 10:33:35.872"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT(*) FROM ou WHERE ou.type_id = 131072</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170331 10:33:35.872" level="INFO">${SQL_CandidateCountBefore} = 7862</msg>
<status status="PASS" endtime="20170331 10:33:35.872" starttime="20170331 10:33:35.872"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:35.888" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:35.919" level="INFO">Delete Request using : alias=http, uri=/talentpools/10820, data={   "UserId": 2347,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_2347",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'02347', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:35.919" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.919" starttime="20170331 10:33:35.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.919" level="INFO">&lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.919" starttime="20170331 10:33:35.919"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${RESPONSE_POST}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.919" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170331 10:33:35.919" level="FAIL">500 != 401</msg>
<status status="FAIL" endtime="20170331 10:33:35.919" starttime="20170331 10:33:35.919"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:35.919" starttime="20170331 10:33:35.841"></status>
</kw>
<doc>*Name:*
Api_TP_Delete_Access_DoesNotExist

*Description:*
Access: Verify error when user id is not in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24471</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:35.919" critical="yes" starttime="20170331 10:33:35.794">500 != 401</status>
</test>
<test id="s1-t63" name="DELETE-API_TP_Delete_Access_NotOwner">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:35.935" starttime="20170331 10:33:35.919"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:35.935" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170331 10:33:35.935" starttime="20170331 10:33:35.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.935" level="INFO">1338</msg>
<status status="PASS" endtime="20170331 10:33:35.935" starttime="20170331 10:33:35.935"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:35.935" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:35.950" starttime="20170331 10:33:35.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.950" level="INFO">${SQL_GET_USERID} = 1338</msg>
<status status="PASS" endtime="20170331 10:33:35.950" starttime="20170331 10:33:35.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.950" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:35.950" starttime="20170331 10:33:35.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.950" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:35.950" starttime="20170331 10:33:35.950"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:35.950" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:35.950" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:35.950" starttime="20170331 10:33:35.950"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.950" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:35.950" starttime="20170331 10:33:35.950"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.950" level="INFO">Set request header "X-USERID" to "1338"</msg>
<status status="PASS" endtime="20170331 10:33:35.950" starttime="20170331 10:33:35.950"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.950" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:35.950" starttime="20170331 10:33:35.950"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:35.950" starttime="20170331 10:33:35.919"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:35.950" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:35.950" starttime="20170331 10:33:35.950"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:35.950" starttime="20170331 10:33:35.950"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:35.950" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170331 10:33:35.950" starttime="20170331 10:33:35.950"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:35.950" level="INFO">${body} = {   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3"...</msg>
<status status="PASS" endtime="20170331 10:33:35.950" starttime="20170331 10:33:35.950"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:35.966" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:35.966" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:35.966" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.966" starttime="20170331 10:33:35.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.966" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.966" starttime="20170331 10:33:35.966"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170331 10:33:35.966" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170331 10:33:35.966" starttime="20170331 10:33:35.966"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:35.966" starttime="20170331 10:33:35.950"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Delete_Access_NotOwner" library="SMP_Keywords">
<doc>*DELETE_Api_TP_Delete_Access_NotOwner:*</doc>
<arguments>
<arg>401</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:35.981" starttime="20170331 10:33:35.981"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE owner_id &lt;&gt; ${SQL_GET_USERID} AND type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:35.997" level="INFO">${SQL_TalentPoolId} = 7067</msg>
<status status="PASS" endtime="20170331 10:33:35.997" starttime="20170331 10:33:35.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:35.997" level="INFO">${SQL_TalentPoolId} = 7067</msg>
<status status="PASS" endtime="20170331 10:33:35.997" starttime="20170331 10:33:35.997"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:36.013" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=01338 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20170331 10:33:36.013" starttime="20170331 10:33:35.997"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:36.013" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:36.013" starttime="20170331 10:33:36.013"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT(*) FROM ou WHERE ou.type_id = 131072</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170331 10:33:36.013" level="INFO">${SQL_CandidateCountBefore} = 7862</msg>
<status status="PASS" endtime="20170331 10:33:36.013" starttime="20170331 10:33:36.013"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:36.013" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:36.044" level="INFO">Delete Request using : alias=http, uri=/talentpools/7067, data={   "UserId": 1338,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1338",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'01338', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:36.044" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:36.044" starttime="20170331 10:33:36.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:36.044" level="INFO">&lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:36.044" starttime="20170331 10:33:36.044"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${RESPONSE_POST}</arg>
</arguments>
<msg timestamp="20170331 10:33:36.059" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170331 10:33:36.059" level="FAIL">500 != 401</msg>
<status status="FAIL" endtime="20170331 10:33:36.059" starttime="20170331 10:33:36.044"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:36.059" starttime="20170331 10:33:35.981"></status>
</kw>
<doc>*Name:*
Api_TP_Delete_Access_NotOwner

*Description:*
Access: Verify error when user id is not for talent pool owner

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24472</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:36.059" critical="yes" starttime="20170331 10:33:35.919">500 != 401</status>
</test>
<test id="s1-t64" name="DELETE-API_TP_Del_Input_TPId_DoesNotExist">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:36.075" starttime="20170331 10:33:36.059"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:36.075" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:36.075" starttime="20170331 10:33:36.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:36.075" level="INFO">1336</msg>
<status status="PASS" endtime="20170331 10:33:36.075" starttime="20170331 10:33:36.075"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:36.075" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:36.075" starttime="20170331 10:33:36.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:36.075" level="INFO">${SQL_GET_USERID} = 1336</msg>
<status status="PASS" endtime="20170331 10:33:36.075" starttime="20170331 10:33:36.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:36.075" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:36.075" starttime="20170331 10:33:36.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:36.075" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:36.075" starttime="20170331 10:33:36.075"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:36.075" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:36.075" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:36.075" starttime="20170331 10:33:36.075"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:36.075" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:36.075" starttime="20170331 10:33:36.075"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:36.075" level="INFO">Set request header "X-USERID" to "1336"</msg>
<status status="PASS" endtime="20170331 10:33:36.075" starttime="20170331 10:33:36.075"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:36.075" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:36.075" starttime="20170331 10:33:36.075"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:36.075" starttime="20170331 10:33:36.059"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:36.091" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:36.091" starttime="20170331 10:33:36.075"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:36.091" starttime="20170331 10:33:36.091"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:36.091" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170331 10:33:36.091" starttime="20170331 10:33:36.091"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:36.091" level="INFO">${body} = {   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3"...</msg>
<status status="PASS" endtime="20170331 10:33:36.091" starttime="20170331 10:33:36.091"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:36.091" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:36.106" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:36.106" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:36.106" starttime="20170331 10:33:36.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:36.106" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:36.106" starttime="20170331 10:33:36.106"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170331 10:33:36.106" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170331 10:33:36.106" starttime="20170331 10:33:36.106"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:36.106" starttime="20170331 10:33:36.075"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Delete_Input_TPId_DoesNotExist" library="SMP_Keywords">
<doc>*DELETE_Api_TP_Delete_Access_NotOwner:*</doc>
<arguments>
<arg>404</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:36.122" starttime="20170331 10:33:36.106"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(ou_id)+1000 FROM ou</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20170331 10:33:36.122" level="INFO">${SQL_TalentPoolId} = 13782</msg>
<status status="PASS" endtime="20170331 10:33:36.122" starttime="20170331 10:33:36.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20170331 10:33:36.138" level="INFO">${SQL_TalentPoolId} = 13782</msg>
<status status="PASS" endtime="20170331 10:33:36.138" starttime="20170331 10:33:36.122"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>X-CORP=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>X-USERID=0${SQL_GET_USERID}</arg>
<arg>X-CULTUREID=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:36.138" level="INFO">&amp;{headers} = { Content-Type=application/json | X-CORP=qa052-auto-smp-api | X-USERID=01336 | X-CULTUREID=01 }</msg>
<status status="PASS" endtime="20170331 10:33:36.138" starttime="20170331 10:33:36.138"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:36.138" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:36.138" starttime="20170331 10:33:36.138"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT(*) FROM ou WHERE ou.type_id = 131072</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20170331 10:33:36.138" level="INFO">${SQL_CandidateCountBefore} = 7862</msg>
<status status="PASS" endtime="20170331 10:33:36.138" starttime="20170331 10:33:36.138"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:36.138" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:36.169" level="INFO">Delete Request using : alias=http, uri=/talentpools/13782, data={   "UserId": 1336,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_1336",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json', u'X-CORP': u'qa052-auto-smp-api', u'X-USERID': u'01336', u'X-CULTUREID': u'01'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:36.169" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:36.169" starttime="20170331 10:33:36.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:36.169" level="INFO">&lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:36.169" starttime="20170331 10:33:36.169"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${RESPONSE_POST}</arg>
</arguments>
<msg timestamp="20170331 10:33:36.169" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170331 10:33:36.169" level="FAIL">500 != 404</msg>
<status status="FAIL" endtime="20170331 10:33:36.169" starttime="20170331 10:33:36.169"></status>
</kw>
<status status="FAIL" endtime="20170331 10:33:36.169" starttime="20170331 10:33:36.106"></status>
</kw>
<doc>*Name:*
Api_TP_Del_Input_TPId_DoesNotExist

*Description:*
Input: Verify error when talent pool id is not in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24473</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:36.169" critical="yes" starttime="20170331 10:33:36.059">500 != 404</status>
</test>
<test id="s1-t65" name="DELETE-API_TPC_Remove_BaseCase_InputVsOutput_Value">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared_With_Candidates" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:36.184" starttime="20170331 10:33:36.169"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072 AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1)) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user WHERE ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1))) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20170331 10:33:36.263" level="INFO">${SQL_GET_USERID} = 46</msg>
<status status="PASS" endtime="20170331 10:33:36.263" starttime="20170331 10:33:36.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:36.263" level="INFO">46</msg>
<status status="PASS" endtime="20170331 10:33:36.263" starttime="20170331 10:33:36.263"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20170331 10:33:36.263" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:36.263" starttime="20170331 10:33:36.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:36.263" level="INFO">${SQL_GET_USERID} = 46</msg>
<status status="PASS" endtime="20170331 10:33:36.263" starttime="20170331 10:33:36.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:36.263" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20170331 10:33:36.263" starttime="20170331 10:33:36.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:36.263" level="INFO">1</msg>
<status status="PASS" endtime="20170331 10:33:36.263" starttime="20170331 10:33:36.263"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20170331 10:33:36.278" level="INFO">Host for next HTTP request set to 'laxqarexmt.office.cyberu.com'</msg>
<msg timestamp="20170331 10:33:36.278" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170331 10:33:36.278" starttime="20170331 10:33:36.278"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20170331 10:33:36.278" level="INFO">Set request header "X-CORP" to "qa052-auto-smp-api"</msg>
<status status="PASS" endtime="20170331 10:33:36.278" starttime="20170331 10:33:36.278"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20170331 10:33:36.278" level="INFO">Set request header "X-USERID" to "46"</msg>
<status status="PASS" endtime="20170331 10:33:36.278" starttime="20170331 10:33:36.278"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20170331 10:33:36.278" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20170331 10:33:36.278" starttime="20170331 10:33:36.278"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:36.278" starttime="20170331 10:33:36.169"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20170331 10:33:36.278" level="INFO">Creating Session using : alias=http, url=http://laxqarexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20170331 10:33:36.278" starttime="20170331 10:33:36.278"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20170331 10:33:36.278" starttime="20170331 10:33:36.278"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20170331 10:33:36.278" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20170331 10:33:36.278" starttime="20170331 10:33:36.278"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2019-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20170331 10:33:36.278" level="INFO">${body} = {   "UserId": 46,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": ...</msg>
<status status="PASS" endtime="20170331 10:33:36.278" starttime="20170331 10:33:36.278"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20170331 10:33:36.294" level="INFO">Starting new HTTP connection (1): laxqarexmt.office.cyberu.com</msg>
<msg timestamp="20170331 10:33:36.294" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 46,   "CorpName": "qa052-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa052-auto-smp-api_46",   "expDt": "2019-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170331 10:33:36.294" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:36.294" starttime="20170331 10:33:36.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20170331 10:33:36.294" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20170331 10:33:36.294" starttime="20170331 10:33:36.294"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20170331 10:33:36.294" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170331 10:33:36.294" starttime="20170331 10:33:36.294"></status>
</kw>
<status status="PASS" endtime="20170331 10:33:36.294" starttime="20170331 10:33:36.278"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_2">
<arguments>
<arg>200</arg>
</arguments>
<msg timestamp="20170331 10:33:36.309" level="FAIL">No keyword with name 'DELETE_TalentPool_Candidates_Remove_2' found. Did you mean:
    SMP_Keywords.DELETE TalentPool Candidates Remove
    SMP_Keywords.DELETE TalentPool Candidates Remove 1User
    SMP_Keywords.DELETE TalentPool Candidates Remove 0User
    SMP_Keywords.DELETE TalentPool Candidates Remove Access DNE
    SMP_Keywords.DELETE TalentPool Candidates Remove DNEUser All</msg>
<status status="FAIL" endtime="20170331 10:33:36.309" starttime="20170331 10:33:36.309"></status>
</kw>
<doc>*Name:*
API_TPC_Add_BC_InputVsOutput_Value

*Description:*
Verify successful input user ends up in output

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DBV</tag>
<tag>testrailid=24474</tag>
</tags>
<status status="FAIL" endtime="20170331 10:33:36.309" critical="yes" starttime="20170331 10:33:36.169">No keyword with name 'DELETE_TalentPool_Candidates_Remove_2' found. Did you mean:
    SMP_Keywords.DELETE TalentPool Candidates Remove
    SMP_Keywords.DELETE TalentPool Candidates Remove 1User
    SMP_Keywords.DELETE TalentPool Candidates Remove 0User
    SMP_Keywords.DELETE TalentPool Candidates Remove Access DNE
    SMP_Keywords.DELETE TalentPool Candidates Remove DNEUser All</status>
</test>
<doc>*INSTRUCTIONS: To Run this dynamically add the following line to the Run tab arguments text box area.*



*To Use with TestRail use the following:*

*Patch*
-d TestResults -v RNOAUTH_HOST:QA01 --listener TestRailListener:479

*Release*
-d TestResults -v RNOAUTH_HOST:QA052 --listener TestRailListener:479

*Next Release*
-d TestResults -v RNOAUTH_HOST:QA03 --listener TestRailListener:479</doc>
<status status="FAIL" endtime="20170331 10:33:36.309" starttime="20170331 10:33:26.438"></status>
</suite>
<statistics>
<total>
<stat fail="65" pass="0">Critical Tests</stat>
<stat fail="65" pass="0">All Tests</stat>
</total>
<tag>
<stat fail="7" pass="0">ASCII</stat>
<stat fail="1" pass="0">DB</stat>
<stat fail="2" pass="0">DBV</stat>
<stat fail="11" pass="0">DELETE</stat>
<stat fail="1" pass="0">JSONVFY</stat>
<stat fail="1" pass="0">NEGATIVE</stat>
<stat fail="3" pass="0">NEGATIVETEST</stat>
<stat fail="38" pass="0">POST</stat>
<stat fail="1" pass="0">POST3</stat>
<stat fail="7" pass="0">PUT</stat>
<stat fail="1" pass="0">testrailid=24402</stat>
<stat fail="1" pass="0">testrailid=24403</stat>
<stat fail="1" pass="0">testrailid=24404</stat>
<stat fail="1" pass="0">testrailid=24405</stat>
<stat fail="1" pass="0">testrailid=24406</stat>
<stat fail="1" pass="0">testrailid=24408</stat>
<stat fail="1" pass="0">testrailid=24409</stat>
<stat fail="1" pass="0">testrailid=24410</stat>
<stat fail="1" pass="0">testrailid=24411</stat>
<stat fail="1" pass="0">testrailid=24412</stat>
<stat fail="1" pass="0">testrailid=24413</stat>
<stat fail="1" pass="0">testrailid=24414</stat>
<stat fail="1" pass="0">testrailid=24415</stat>
<stat fail="1" pass="0">testrailid=24416</stat>
<stat fail="1" pass="0">testrailid=24417</stat>
<stat fail="1" pass="0">testrailid=24418</stat>
<stat fail="1" pass="0">testrailid=24419</stat>
<stat fail="1" pass="0">testrailid=24420</stat>
<stat fail="1" pass="0">testrailid=24421</stat>
<stat fail="1" pass="0">testrailid=24422</stat>
<stat fail="1" pass="0">testrailid=24424</stat>
<stat fail="1" pass="0">testrailid=24425</stat>
<stat fail="1" pass="0">testrailid=24426</stat>
<stat fail="1" pass="0">testrailid=24427</stat>
<stat fail="1" pass="0">testrailid=24428</stat>
<stat fail="1" pass="0">testrailid=24429</stat>
<stat fail="1" pass="0">testrailid=24430</stat>
<stat fail="1" pass="0">testrailid=24431</stat>
<stat fail="1" pass="0">testrailid=24432</stat>
<stat fail="1" pass="0">testrailid=24433</stat>
<stat fail="1" pass="0">testrailid=24434</stat>
<stat fail="1" pass="0">testrailid=24435</stat>
<stat fail="1" pass="0">testrailid=24436</stat>
<stat fail="1" pass="0">testrailid=24437</stat>
<stat fail="1" pass="0">testrailid=24438</stat>
<stat fail="1" pass="0">testrailid=24439</stat>
<stat fail="1" pass="0">testrailid=24440</stat>
<stat fail="1" pass="0">testrailid=24441</stat>
<stat fail="1" pass="0">testrailid=24442</stat>
<stat fail="1" pass="0">testrailid=24443</stat>
<stat fail="1" pass="0">testrailid=24445</stat>
<stat fail="1" pass="0">testrailid=24446</stat>
<stat fail="1" pass="0">testrailid=24447</stat>
<stat fail="1" pass="0">testrailid=24448</stat>
<stat fail="1" pass="0">testrailid=24449</stat>
<stat fail="1" pass="0">testrailid=24450</stat>
<stat fail="1" pass="0">testrailid=24452</stat>
<stat fail="1" pass="0">testrailid=24453</stat>
<stat fail="1" pass="0">testrailid=24455</stat>
<stat fail="1" pass="0">testrailid=24456</stat>
<stat fail="1" pass="0">testrailid=24457</stat>
<stat fail="1" pass="0">testrailid=24458</stat>
<stat fail="1" pass="0">testrailid=24460</stat>
<stat fail="1" pass="0">testrailid=24461</stat>
<stat fail="1" pass="0">testrailid=24462</stat>
<stat fail="1" pass="0">testrailid=24463</stat>
<stat fail="1" pass="0">testrailid=24464</stat>
<stat fail="1" pass="0">testrailid=24465</stat>
<stat fail="1" pass="0">testrailid=24466</stat>
<stat fail="1" pass="0">testrailid=24467</stat>
<stat fail="1" pass="0">testrailid=24471</stat>
<stat fail="1" pass="0">testrailid=24472</stat>
<stat fail="1" pass="0">testrailid=24473</stat>
<stat fail="1" pass="0">testrailid=24474</stat>
<stat fail="1" pass="0">testrailid=24475</stat>
<stat fail="1" pass="0">USER</stat>
<stat fail="1" pass="0">USER11</stat>
<stat fail="1" pass="0">USER12</stat>
</tag>
<suite>
<stat fail="65" id="s1" name="SMP-API-Talent Pool" pass="0">SMP-API-Talent Pool</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
