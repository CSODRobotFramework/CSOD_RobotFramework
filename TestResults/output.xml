<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20171002 15:47:49.855" generator="Robot 3.0 (Python 2.7.13 on win32)">
<suite source="C:\Users\gfung\Documents\RobotFrameworkTeam\CSOD_RobotFramework" id="s1" name="CSOD RobotFramework">
<suite source="C:\Users\gfung\Documents\RobotFrameworkTeam\CSOD_RobotFramework\COMP" id="s1-s1" name="COMP">
<suite source="C:\Users\gfung\Documents\RobotFrameworkTeam\CSOD_RobotFramework\COMP\TestSuites" id="s1-s1-s1" name="TestSuites">
<suite source="C:\Users\gfung\Documents\RobotFrameworkTeam\CSOD_RobotFramework\COMP\TestSuites\SMP-API-Talent_Pool.robot" id="s1-s1-s1-s1" name="SMP-API-Talent Pool">
<test id="s1-s1-s1-s1-t1" name="POST-API_TPC_Length_50">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.227" starttime="20171002 15:47:53.802"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:54.252" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20171002 15:47:54.253" starttime="20171002 15:47:54.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.255" level="INFO">25</msg>
<status status="PASS" endtime="20171002 15:47:54.256" starttime="20171002 15:47:54.254"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:54.266" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:54.267" starttime="20171002 15:47:54.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.270" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20171002 15:47:54.270" starttime="20171002 15:47:54.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.272" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:54.273" starttime="20171002 15:47:54.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.274" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:54.275" starttime="20171002 15:47:54.274"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:54.278" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:54.278" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:54.279" starttime="20171002 15:47:54.276"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.282" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:54.282" starttime="20171002 15:47:54.281"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.285" level="INFO">Set request header "X-USERID" to "25"</msg>
<status status="PASS" endtime="20171002 15:47:54.285" starttime="20171002 15:47:54.283"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.287" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:54.289" starttime="20171002 15:47:54.286"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:54.290" starttime="20171002 15:47:53.801"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:54.293" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:54.294" starttime="20171002 15:47:54.293"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:54.300" level="INFO">Request body set to "{   "UserId": 25,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_25",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20171002 15:47:54.300" starttime="20171002 15:47:54.294"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.316" starttime="20171002 15:47:54.301"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.318" starttime="20171002 15:47:54.317"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:54.320" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20171002 15:47:54.320" starttime="20171002 15:47:54.319"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.325" starttime="20171002 15:47:54.321"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:54.329" starttime="20171002 15:47:54.292"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>12345678901234567890123456789012345678901234567890</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:54.339" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:54.340" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:54.341" starttime="20171002 15:47:54.338"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.343" level="INFO">Set request header "x-csod-corp-id" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:54.343" starttime="20171002 15:47:54.342"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.345" level="INFO">Set request header "x-csod-user-id" to "25"</msg>
<status status="PASS" endtime="20171002 15:47:54.346" starttime="20171002 15:47:54.344"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.348" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:54.348" starttime="20171002 15:47:54.347"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:54.351" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:54.351" starttime="20171002 15:47:54.350"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.353" level="INFO">Request body set to "{ "Title":"12345678901234567890123456789012345678901234567890"}".</msg>
<status status="PASS" endtime="20171002 15:47:54.354" starttime="20171002 15:47:54.352"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.436" starttime="20171002 15:47:54.355"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.438" starttime="20171002 15:47:54.437"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:54.440" level="INFO">${resBody} = {"TalentpoolId":15430,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":25,"FirstName":"Julie","LastName":"Hennessy"},"CreatedDate":"2017-10-02T22:47:54.487","ModifierId":...</msg>
<status status="PASS" endtime="20171002 15:47:54.440" starttime="20171002 15:47:54.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.441" level="INFO">{"TalentpoolId":15430,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":25,"FirstName":"Julie","LastName":"Hennessy"},"CreatedDate":"2017-10-02T22:47:54.487","ModifierId":1,"ModifiedDate":"2017-10-02T22:47:54.487","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20171002 15:47:54.442" starttime="20171002 15:47:54.441"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20171002 15:47:54.443" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'TalentpoolId': 15430, u'ModifiedDate': u'2017-10-02T22:47:54.487', u'CreatedDate': u'2017-10-02T22:47:54.487', u...</msg>
<status status="PASS" endtime="20171002 15:47:54.443" starttime="20171002 15:47:54.442"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20171002 15:47:54.445" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'CreatedDate': u'2017-10-02T22:47:54.487', u'ModifiedDate': u'2017-10-02T22:47:54.487', u'TalentpoolId': 15430, u...</msg>
<status status="PASS" endtime="20171002 15:47:54.446" starttime="20171002 15:47:54.444"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20171002 15:47:54.448" level="INFO">${keyValue} = 12345678901234567890123456789012345678901234567890</msg>
<status status="PASS" endtime="20171002 15:47:54.448" starttime="20171002 15:47:54.446"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:54.449" starttime="20171002 15:47:54.335"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Length_50

*Description:*
verify success when title length is 50

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24406</tag>
</tags>
<status status="PASS" endtime="20171002 15:47:54.449" critical="yes" starttime="20171002 15:47:53.786"></status>
</test>
<test id="s1-s1-s1-s1-t2" name="POST-API_TPC_Trim_Space">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.492" starttime="20171002 15:47:54.457"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:54.511" level="INFO">${SQL_GET_USERID} = 43</msg>
<status status="PASS" endtime="20171002 15:47:54.511" starttime="20171002 15:47:54.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.514" level="INFO">43</msg>
<status status="PASS" endtime="20171002 15:47:54.514" starttime="20171002 15:47:54.513"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:54.519" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:54.519" starttime="20171002 15:47:54.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.523" level="INFO">${SQL_GET_USERID} = 43</msg>
<status status="PASS" endtime="20171002 15:47:54.524" starttime="20171002 15:47:54.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.529" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:54.529" starttime="20171002 15:47:54.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.531" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:54.532" starttime="20171002 15:47:54.531"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:54.533" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:54.533" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:54.534" starttime="20171002 15:47:54.532"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.535" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:54.536" starttime="20171002 15:47:54.535"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.538" level="INFO">Set request header "X-USERID" to "43"</msg>
<status status="PASS" endtime="20171002 15:47:54.538" starttime="20171002 15:47:54.537"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.539" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:54.540" starttime="20171002 15:47:54.539"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:54.541" starttime="20171002 15:47:54.455"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:54.544" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:54.545" starttime="20171002 15:47:54.544"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:54.550" level="INFO">Request body set to "{   "UserId": 43,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_43",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20171002 15:47:54.550" starttime="20171002 15:47:54.545"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.562" starttime="20171002 15:47:54.551"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.564" starttime="20171002 15:47:54.563"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:54.566" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20171002 15:47:54.566" starttime="20171002 15:47:54.565"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.567" starttime="20171002 15:47:54.567"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:54.568" starttime="20171002 15:47:54.542"></status>
</kw>
<kw name="POST_TalentPool_Create_Empty_String" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${SPACE * 3}</arg>
<arg>Title</arg>
<arg>400</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:54.579" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:54.579" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:54.579" starttime="20171002 15:47:54.578"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.581" level="INFO">Set request header "x-csod-corp-id" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:54.581" starttime="20171002 15:47:54.580"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.583" level="INFO">Set request header "x-csod-user-id" to "43"</msg>
<status status="PASS" endtime="20171002 15:47:54.583" starttime="20171002 15:47:54.582"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.584" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:54.584" starttime="20171002 15:47:54.583"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:54.585" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20171002 15:47:54.586" starttime="20171002 15:47:54.585"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20171002 15:47:54.587" starttime="20171002 15:47:54.587"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"${KEY_NAME_JSON}\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.590" level="INFO">Request body set to "{ "Title":"   "}".</msg>
<status status="PASS" endtime="20171002 15:47:54.590" starttime="20171002 15:47:54.588"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.615" starttime="20171002 15:47:54.591"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.617" starttime="20171002 15:47:54.616"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:54.619" level="INFO">${resBody} = {"Message":"Title cannot be empty."}</msg>
<status status="PASS" endtime="20171002 15:47:54.619" starttime="20171002 15:47:54.618"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>The ${resBody} message from the API Negative Test Passed.</arg>
</arguments>
<msg timestamp="20171002 15:47:54.620" level="INFO">Set test message to:
The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</msg>
<status status="PASS" endtime="20171002 15:47:54.621" starttime="20171002 15:47:54.620"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:54.621" starttime="20171002 15:47:54.576"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Space

*Description:*
verify trimming with only space

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>NEGATIVETEST</tag>
<tag>POST</tag>
<tag>testrailid=24408</tag>
</tags>
<status status="PASS" endtime="20171002 15:47:54.622" critical="yes" starttime="20171002 15:47:54.451">The {"Message":"Title cannot be empty."} message from the API Negative Test Passed.</status>
</test>
<test id="s1-s1-s1-s1-t3" name="POST-API_TPC_Trim_Leading">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.655" starttime="20171002 15:47:54.625"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:54.662" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20171002 15:47:54.662" starttime="20171002 15:47:54.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.665" level="INFO">415</msg>
<status status="PASS" endtime="20171002 15:47:54.666" starttime="20171002 15:47:54.664"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:54.671" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:54.672" starttime="20171002 15:47:54.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.673" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20171002 15:47:54.674" starttime="20171002 15:47:54.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.675" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:54.676" starttime="20171002 15:47:54.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.677" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:54.677" starttime="20171002 15:47:54.676"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:54.679" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:54.679" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:54.679" starttime="20171002 15:47:54.678"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.681" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:54.681" starttime="20171002 15:47:54.680"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.684" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20171002 15:47:54.684" starttime="20171002 15:47:54.683"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.686" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:54.686" starttime="20171002 15:47:54.685"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:54.686" starttime="20171002 15:47:54.625"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:54.689" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:54.690" starttime="20171002 15:47:54.689"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:54.697" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_415",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20171002 15:47:54.697" starttime="20171002 15:47:54.691"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.717" starttime="20171002 15:47:54.699"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.719" starttime="20171002 15:47:54.718"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:54.720" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20171002 15:47:54.720" starttime="20171002 15:47:54.719"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.721" starttime="20171002 15:47:54.721"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:54.722" starttime="20171002 15:47:54.687"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>${SPACE * 2}Leading</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:54.734" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:54.735" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:54.735" starttime="20171002 15:47:54.734"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.737" level="INFO">Set request header "x-csod-corp-id" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:54.737" starttime="20171002 15:47:54.736"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.739" level="INFO">Set request header "x-csod-user-id" to "415"</msg>
<status status="PASS" endtime="20171002 15:47:54.739" starttime="20171002 15:47:54.738"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.740" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:54.741" starttime="20171002 15:47:54.740"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:54.742" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:54.742" starttime="20171002 15:47:54.741"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.744" level="INFO">Request body set to "{ "Title":"  Leading"}".</msg>
<status status="PASS" endtime="20171002 15:47:54.745" starttime="20171002 15:47:54.743"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<msg timestamp="20171002 15:47:54.755" level="FAIL">Request should have succeeded, but was "503 Service Unavailable".</msg>
<status status="FAIL" endtime="20171002 15:47:54.755" starttime="20171002 15:47:54.745"></status>
</kw>
<status status="FAIL" endtime="20171002 15:47:54.756" starttime="20171002 15:47:54.732"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_Leading

*Description:*
verify trimming leading spaces

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24410</tag>
</tags>
<status status="FAIL" endtime="20171002 15:47:54.757" critical="yes" starttime="20171002 15:47:54.623">Request should have succeeded, but was "503 Service Unavailable".</status>
</test>
<test id="s1-s1-s1-s1-t4" name="POST-API_TPC_Trim_SpaceAnd50">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.785" starttime="20171002 15:47:54.762"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:54.790" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20171002 15:47:54.790" starttime="20171002 15:47:54.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.793" level="INFO">25</msg>
<status status="PASS" endtime="20171002 15:47:54.794" starttime="20171002 15:47:54.792"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:54.798" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:54.799" starttime="20171002 15:47:54.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.801" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20171002 15:47:54.801" starttime="20171002 15:47:54.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.803" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:54.803" starttime="20171002 15:47:54.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.805" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:54.806" starttime="20171002 15:47:54.804"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:54.808" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:54.808" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:54.809" starttime="20171002 15:47:54.807"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.810" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:54.810" starttime="20171002 15:47:54.809"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.811" level="INFO">Set request header "X-USERID" to "25"</msg>
<status status="PASS" endtime="20171002 15:47:54.812" starttime="20171002 15:47:54.811"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.813" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:54.813" starttime="20171002 15:47:54.812"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:54.814" starttime="20171002 15:47:54.761"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:54.816" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:54.817" starttime="20171002 15:47:54.816"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:54.824" level="INFO">Request body set to "{   "UserId": 25,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_25",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20171002 15:47:54.825" starttime="20171002 15:47:54.818"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.836" starttime="20171002 15:47:54.825"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.839" starttime="20171002 15:47:54.837"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:54.840" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20171002 15:47:54.841" starttime="20171002 15:47:54.839"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.842" starttime="20171002 15:47:54.841"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:54.843" starttime="20171002 15:47:54.815"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>12345678901234567890123456789012345678901234567890${SPACE}</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:54.854" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:54.854" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:54.854" starttime="20171002 15:47:54.853"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.856" level="INFO">Set request header "x-csod-corp-id" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:54.857" starttime="20171002 15:47:54.855"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.858" level="INFO">Set request header "x-csod-user-id" to "25"</msg>
<status status="PASS" endtime="20171002 15:47:54.859" starttime="20171002 15:47:54.858"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.860" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:54.860" starttime="20171002 15:47:54.859"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:54.861" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:54.862" starttime="20171002 15:47:54.861"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.863" level="INFO">Request body set to "{ "Title":"12345678901234567890123456789012345678901234567890 "}".</msg>
<status status="PASS" endtime="20171002 15:47:54.863" starttime="20171002 15:47:54.862"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.892" starttime="20171002 15:47:54.864"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.894" starttime="20171002 15:47:54.893"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:54.895" level="INFO">${resBody} = {"TalentpoolId":15431,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":25,"FirstName":"Julie","LastName":"Hennessy"},"CreatedDate":"2017-10-02T22:47:54.97","ModifierId":1...</msg>
<status status="PASS" endtime="20171002 15:47:54.895" starttime="20171002 15:47:54.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.897" level="INFO">{"TalentpoolId":15431,"Title":"12345678901234567890123456789012345678901234567890","Owner":{"UserId":25,"FirstName":"Julie","LastName":"Hennessy"},"CreatedDate":"2017-10-02T22:47:54.97","ModifierId":1,"ModifiedDate":"2017-10-02T22:47:54.97","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20171002 15:47:54.897" starttime="20171002 15:47:54.896"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20171002 15:47:54.898" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'TalentpoolId': 15431, u'ModifiedDate': u'2017-10-02T22:47:54.97', u'CreatedDate': u'2017-10-02T22:47:54.97', u'O...</msg>
<status status="PASS" endtime="20171002 15:47:54.899" starttime="20171002 15:47:54.898"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20171002 15:47:54.902" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'12345678901234567890123456789012345678901234567890', u'CreatedDate': u'2017-10-02T22:47:54.97', u'ModifiedDate': u'2017-10-02T22:47:54.97', u'TalentpoolId': 15431, u'O...</msg>
<status status="PASS" endtime="20171002 15:47:54.902" starttime="20171002 15:47:54.900"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20171002 15:47:54.904" level="INFO">${keyValue} = 12345678901234567890123456789012345678901234567890</msg>
<status status="PASS" endtime="20171002 15:47:54.904" starttime="20171002 15:47:54.903"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:54.904" starttime="20171002 15:47:54.851"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Trim_SpaceAnd50

*Description:*
verify trimming happens before submissions attempt

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24413</tag>
</tags>
<status status="PASS" endtime="20171002 15:47:54.905" critical="yes" starttime="20171002 15:47:54.759"></status>
</test>
<test id="s1-s1-s1-s1-t5" name="POST-API_TPC_Characters_Extended3">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.933" starttime="20171002 15:47:54.914"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:54.941" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20171002 15:47:54.941" starttime="20171002 15:47:54.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.944" level="INFO">25</msg>
<status status="PASS" endtime="20171002 15:47:54.945" starttime="20171002 15:47:54.943"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:54.948" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:54.948" starttime="20171002 15:47:54.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.950" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20171002 15:47:54.950" starttime="20171002 15:47:54.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.951" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:54.952" starttime="20171002 15:47:54.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.953" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:54.953" starttime="20171002 15:47:54.952"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:54.954" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:54.955" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:54.955" starttime="20171002 15:47:54.954"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.956" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:54.956" starttime="20171002 15:47:54.955"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.958" level="INFO">Set request header "X-USERID" to "25"</msg>
<status status="PASS" endtime="20171002 15:47:54.958" starttime="20171002 15:47:54.957"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:54.959" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:54.959" starttime="20171002 15:47:54.958"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:54.960" starttime="20171002 15:47:54.912"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:54.962" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:54.963" starttime="20171002 15:47:54.962"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:54.972" level="INFO">Request body set to "{   "UserId": 25,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_25",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20171002 15:47:54.972" starttime="20171002 15:47:54.964"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.991" starttime="20171002 15:47:54.973"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.993" starttime="20171002 15:47:54.992"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:54.994" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20171002 15:47:54.994" starttime="20171002 15:47:54.993"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:54.995" starttime="20171002 15:47:54.995"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:54.996" starttime="20171002 15:47:54.961"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>\ º¿¬¬½¼¡«»¦¦¦¦¦¦¦++¦¦++++++--+-+¦¦++--¦-+----++++++</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:55.005" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:55.005" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:55.006" starttime="20171002 15:47:55.004"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.007" level="INFO">Set request header "x-csod-corp-id" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:55.008" starttime="20171002 15:47:55.007"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.009" level="INFO">Set request header "x-csod-user-id" to "25"</msg>
<status status="PASS" endtime="20171002 15:47:55.010" starttime="20171002 15:47:55.008"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.011" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:55.012" starttime="20171002 15:47:55.011"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:55.013" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:55.013" starttime="20171002 15:47:55.012"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.014" level="INFO">Request body set to "{ "Title":" º¿¬¬½¼¡«»¦¦¦¦¦¦¦++¦¦++++++--+-+¦¦++--¦-+----++++++"}".</msg>
<status status="PASS" endtime="20171002 15:47:55.015" starttime="20171002 15:47:55.014"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.050" starttime="20171002 15:47:55.015"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.051" starttime="20171002 15:47:55.050"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:55.053" level="INFO">${resBody} = {"TalentpoolId":15432,"Title":"\xc2\xba\xc2\xbf\xc2\xac\xc2\xac\xc2\xbd\xc2\xbc\xc2\xa1\xc2\xab\xc2\xbb\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6++\xc2\xa6\xc2\xa6++++++--+-+\xc2\xa6\xc2...</msg>
<status status="PASS" endtime="20171002 15:47:55.053" starttime="20171002 15:47:55.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.054" level="INFO">{"TalentpoolId":15432,"Title":"\xc2\xba\xc2\xbf\xc2\xac\xc2\xac\xc2\xbd\xc2\xbc\xc2\xa1\xc2\xab\xc2\xbb\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6\xc2\xa6++\xc2\xa6\xc2\xa6++++++--+-+\xc2\xa6\xc2\xa6++--\xc2\xa6-+----++++++","Owner":{"UserId":25,"FirstName":"Julie","LastName":"Hennessy"},"CreatedDate":"2017-10-02T22:47:55.127","ModifierId":1,"ModifiedDate":"2017-10-02T22:47:55.127","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20171002 15:47:55.055" starttime="20171002 15:47:55.054"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20171002 15:47:55.056" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\xba\xbf\xac\xac\xbd\xbc\xa1\xab\xbb\xa6\xa6\xa6\xa6\xa6\xa6\xa6++\xa6\xa6++++++--+-+\xa6\xa6++--\xa6-+----++++++', u'TalentpoolId': 15432, u'ModifiedDate': u'2017-10-...</msg>
<status status="PASS" endtime="20171002 15:47:55.056" starttime="20171002 15:47:55.055"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20171002 15:47:55.059" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\xba\xbf\xac\xac\xbd\xbc\xa1\xab\xbb\xa6\xa6\xa6\xa6\xa6\xa6\xa6++\xa6\xa6++++++--+-+\xa6\xa6++--\xa6-+----++++++', u'CreatedDate': u'2017-10-02T22:47:55.127', u'Modif...</msg>
<status status="PASS" endtime="20171002 15:47:55.059" starttime="20171002 15:47:55.058"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20171002 15:47:55.061" level="INFO">${keyValue} = º¿¬¬½¼¡«»¦¦¦¦¦¦¦++¦¦++++++--+-+¦¦++--¦-+----++++++</msg>
<status status="PASS" endtime="20171002 15:47:55.061" starttime="20171002 15:47:55.060"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:55.063" starttime="20171002 15:47:55.003"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended3

*Description:*
verify ASCII characters 3

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
<tag>testrailid=24417</tag>
</tags>
<status status="PASS" endtime="20171002 15:47:55.063" critical="yes" starttime="20171002 15:47:54.907"></status>
</test>
<test id="s1-s1-s1-s1-t6" name="POST-API_TPC_Characters_Extended4">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.097" starttime="20171002 15:47:55.071"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:55.106" level="INFO">${SQL_GET_USERID} = 43</msg>
<status status="PASS" endtime="20171002 15:47:55.106" starttime="20171002 15:47:55.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.109" level="INFO">43</msg>
<status status="PASS" endtime="20171002 15:47:55.110" starttime="20171002 15:47:55.108"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:55.113" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:55.113" starttime="20171002 15:47:55.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.114" level="INFO">${SQL_GET_USERID} = 43</msg>
<status status="PASS" endtime="20171002 15:47:55.115" starttime="20171002 15:47:55.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.116" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:55.117" starttime="20171002 15:47:55.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.118" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:55.119" starttime="20171002 15:47:55.117"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:55.120" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:55.121" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:55.121" starttime="20171002 15:47:55.120"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.122" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:55.123" starttime="20171002 15:47:55.122"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.124" level="INFO">Set request header "X-USERID" to "43"</msg>
<status status="PASS" endtime="20171002 15:47:55.124" starttime="20171002 15:47:55.123"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.126" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:55.126" starttime="20171002 15:47:55.125"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:55.127" starttime="20171002 15:47:55.070"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:55.129" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:55.129" starttime="20171002 15:47:55.128"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:55.135" level="INFO">Request body set to "{   "UserId": 43,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_43",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20171002 15:47:55.135" starttime="20171002 15:47:55.130"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.147" starttime="20171002 15:47:55.136"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.149" starttime="20171002 15:47:55.148"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:55.150" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20171002 15:47:55.150" starttime="20171002 15:47:55.149"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.152" starttime="20171002 15:47:55.151"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:55.153" starttime="20171002 15:47:55.128"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:55.169" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:55.169" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:55.170" starttime="20171002 15:47:55.168"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.173" level="INFO">Set request header "x-csod-corp-id" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:55.173" starttime="20171002 15:47:55.171"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.175" level="INFO">Set request header "x-csod-user-id" to "43"</msg>
<status status="PASS" endtime="20171002 15:47:55.176" starttime="20171002 15:47:55.174"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.178" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:55.178" starttime="20171002 15:47:55.177"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:55.179" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:55.180" starttime="20171002 15:47:55.179"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.181" level="INFO">Request body set to "{ "Title":"++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ"}".</msg>
<status status="PASS" endtime="20171002 15:47:55.182" starttime="20171002 15:47:55.180"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<msg timestamp="20171002 15:47:55.197" level="FAIL">Request should have succeeded, but was "503 Service Unavailable".</msg>
<status status="FAIL" endtime="20171002 15:47:55.197" starttime="20171002 15:47:55.183"></status>
</kw>
<status status="FAIL" endtime="20171002 15:47:55.199" starttime="20171002 15:47:55.165"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended4

*Description:*
verify ASCII characters 4

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
<tag>testrailid=24418</tag>
</tags>
<status status="FAIL" endtime="20171002 15:47:55.200" critical="yes" starttime="20171002 15:47:55.067">Request should have succeeded, but was "503 Service Unavailable".</status>
</test>
<test id="s1-s1-s1-s1-t7" name="POST-API_TPC_Characters_Extended6">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.232" starttime="20171002 15:47:55.206"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:55.239" level="INFO">${SQL_GET_USERID} = 1</msg>
<status status="PASS" endtime="20171002 15:47:55.240" starttime="20171002 15:47:55.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.242" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:55.242" starttime="20171002 15:47:55.241"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:55.245" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:55.246" starttime="20171002 15:47:55.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.247" level="INFO">${SQL_GET_USERID} = 1</msg>
<status status="PASS" endtime="20171002 15:47:55.248" starttime="20171002 15:47:55.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.251" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:55.251" starttime="20171002 15:47:55.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.253" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:55.253" starttime="20171002 15:47:55.252"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:55.254" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:55.255" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:55.255" starttime="20171002 15:47:55.254"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.256" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:55.257" starttime="20171002 15:47:55.256"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.258" level="INFO">Set request header "X-USERID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:55.258" starttime="20171002 15:47:55.257"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.260" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:55.260" starttime="20171002 15:47:55.259"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:55.261" starttime="20171002 15:47:55.205"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:55.264" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:55.264" starttime="20171002 15:47:55.263"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:55.270" level="INFO">Request body set to "{   "UserId": 1,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_1",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20171002 15:47:55.270" starttime="20171002 15:47:55.265"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.283" starttime="20171002 15:47:55.271"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.285" starttime="20171002 15:47:55.284"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:55.286" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20171002 15:47:55.287" starttime="20171002 15:47:55.286"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.288" starttime="20171002 15:47:55.288"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:55.289" starttime="20171002 15:47:55.262"></status>
</kw>
<kw name="POST_TalentPool_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>ÝÞãðýþ</arg>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:55.299" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:55.299" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:55.300" starttime="20171002 15:47:55.298"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.302" level="INFO">Set request header "x-csod-corp-id" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:55.302" starttime="20171002 15:47:55.301"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.305" level="INFO">Set request header "x-csod-user-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:55.305" starttime="20171002 15:47:55.303"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.306" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:55.306" starttime="20171002 15:47:55.306"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:55.306" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:55.306" starttime="20171002 15:47:55.306"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \"Title\":\"${SUBMITTED_TITLE}\"}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.312" level="INFO">Request body set to "{ "Title":"ÝÞãðýþ"}".</msg>
<status status="PASS" endtime="20171002 15:47:55.313" starttime="20171002 15:47:55.311"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.349" starttime="20171002 15:47:55.314"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.352" starttime="20171002 15:47:55.350"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:55.355" level="INFO">${resBody} = {"TalentpoolId":15433,"Title":"\xc3\x9d\xc3\x9e\xc3\xa3\xc3\xb0\xc3\xbd\xc3\xbe","Owner":{"UserId":1,"FirstName":"Cornerstone","LastName":"Admin"},"CreatedDate":"2017-10-02T22:47:55.423","ModifierId":...</msg>
<status status="PASS" endtime="20171002 15:47:55.355" starttime="20171002 15:47:55.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.357" level="INFO">{"TalentpoolId":15433,"Title":"\xc3\x9d\xc3\x9e\xc3\xa3\xc3\xb0\xc3\xbd\xc3\xbe","Owner":{"UserId":1,"FirstName":"Cornerstone","LastName":"Admin"},"CreatedDate":"2017-10-02T22:47:55.423","ModifierId":1,"ModifiedDate":"2017-10-02T22:47:55.423","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20171002 15:47:55.358" starttime="20171002 15:47:55.356"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20171002 15:47:55.360" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'\xdd\xde\xe3\xf0\xfd\xfe', u'TalentpoolId': 15433, u'ModifiedDate': u'2017-10-02T22:47:55.423', u'CreatedDate': u'2017-10-02T22:47:55.423', u'Owner': {u'LastName': u'A...</msg>
<status status="PASS" endtime="20171002 15:47:55.361" starttime="20171002 15:47:55.359"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20171002 15:47:55.363" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'\xdd\xde\xe3\xf0\xfd\xfe', u'CreatedDate': u'2017-10-02T22:47:55.423', u'ModifiedDate': u'2017-10-02T22:47:55.423', u'TalentpoolId': 15433, u'Owner': {u'LastName': u'A...</msg>
<status status="PASS" endtime="20171002 15:47:55.363" starttime="20171002 15:47:55.362"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20171002 15:47:55.366" level="INFO">${keyValue} = ÝÞãðýþ</msg>
<status status="PASS" endtime="20171002 15:47:55.366" starttime="20171002 15:47:55.364"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:55.367" starttime="20171002 15:47:55.297"></status>
</kw>
<doc>*Name:*
API_TalentPool_Create_Characters_Extended6

*Description:*
verify ASCII characters 6

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>ASCII</tag>
<tag>POST</tag>
<tag>testrailid=24420</tag>
</tags>
<status status="PASS" endtime="20171002 15:47:55.368" critical="yes" starttime="20171002 15:47:55.202"></status>
</test>
<test id="s1-s1-s1-s1-t8" name="GET-API_TPC_GET_Return_ID_Expected">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.410" starttime="20171002 15:47:55.377"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:55.417" level="INFO">${SQL_GET_USERID} = 1</msg>
<status status="PASS" endtime="20171002 15:47:55.417" starttime="20171002 15:47:55.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.419" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:55.419" starttime="20171002 15:47:55.418"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:55.422" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:55.423" starttime="20171002 15:47:55.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.424" level="INFO">${SQL_GET_USERID} = 1</msg>
<status status="PASS" endtime="20171002 15:47:55.425" starttime="20171002 15:47:55.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.426" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:55.426" starttime="20171002 15:47:55.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.428" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:55.428" starttime="20171002 15:47:55.427"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:55.429" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:55.429" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:55.430" starttime="20171002 15:47:55.429"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.431" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:55.432" starttime="20171002 15:47:55.430"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.434" level="INFO">Set request header "X-USERID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:55.435" starttime="20171002 15:47:55.433"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.436" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:55.437" starttime="20171002 15:47:55.435"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:55.437" starttime="20171002 15:47:55.375"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:55.440" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:55.441" starttime="20171002 15:47:55.439"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:55.446" level="INFO">Request body set to "{   "UserId": 1,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_1",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20171002 15:47:55.447" starttime="20171002 15:47:55.441"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.458" starttime="20171002 15:47:55.448"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.460" starttime="20171002 15:47:55.459"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:55.461" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20171002 15:47:55.461" starttime="20171002 15:47:55.460"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.463" starttime="20171002 15:47:55.462"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:55.464" starttime="20171002 15:47:55.438"></status>
</kw>
<kw name="GET_TalentPool" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>TalentpoolId</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.488" starttime="20171002 15:47:55.470"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20171002 15:47:55.497" level="INFO">${SQL_TalentPoolIdToGet} = 4548</msg>
<status status="PASS" endtime="20171002 15:47:55.498" starttime="20171002 15:47:55.488"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:55.500" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:55.500" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:55.501" starttime="20171002 15:47:55.499"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.503" level="INFO">Set request header "x-csod-corp-id" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:55.504" starttime="20171002 15:47:55.502"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.506" level="INFO">Set request header "x-csod-user-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:55.506" starttime="20171002 15:47:55.505"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.509" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:55.509" starttime="20171002 15:47:55.507"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:55.511" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:55.512" starttime="20171002 15:47:55.510"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.531" level="FAIL">Request should have succeeded, but was "503 Service Unavailable".</msg>
<status status="FAIL" endtime="20171002 15:47:55.531" starttime="20171002 15:47:55.513"></status>
</kw>
<status status="FAIL" endtime="20171002 15:47:55.532" starttime="20171002 15:47:55.469"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_ID_Expected

*Description:*
verify the id passed is matching the id returned

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24424</tag>
</tags>
<status status="FAIL" endtime="20171002 15:47:55.532" critical="yes" starttime="20171002 15:47:55.370">Request should have succeeded, but was "503 Service Unavailable".</status>
</test>
<test id="s1-s1-s1-s1-t9" name="GET-API_TPC_GET_Return_Title_Happy">
<kw name="REST_NOAUTH" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.569" starttime="20171002 15:47:55.537"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND users.status_id = 1 AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:55.575" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20171002 15:47:55.575" starttime="20171002 15:47:55.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.576" level="INFO">25</msg>
<status status="PASS" endtime="20171002 15:47:55.577" starttime="20171002 15:47:55.576"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:55.580" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:55.580" starttime="20171002 15:47:55.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.582" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20171002 15:47:55.582" starttime="20171002 15:47:55.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.584" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:55.584" starttime="20171002 15:47:55.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.585" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:55.586" starttime="20171002 15:47:55.585"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:55.590" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:55.591" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:55.592" starttime="20171002 15:47:55.587"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.596" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:55.596" starttime="20171002 15:47:55.595"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.597" level="INFO">Set request header "X-USERID" to "25"</msg>
<status status="PASS" endtime="20171002 15:47:55.598" starttime="20171002 15:47:55.597"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.600" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:55.600" starttime="20171002 15:47:55.599"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:55.601" starttime="20171002 15:47:55.536"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:55.604" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:55.604" starttime="20171002 15:47:55.603"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:55.609" level="INFO">Request body set to "{   "UserId": 25,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_25",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20171002 15:47:55.610" starttime="20171002 15:47:55.605"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.624" starttime="20171002 15:47:55.611"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.626" starttime="20171002 15:47:55.625"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:55.627" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20171002 15:47:55.627" starttime="20171002 15:47:55.626"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.629" starttime="20171002 15:47:55.628"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:55.629" starttime="20171002 15:47:55.602"></status>
</kw>
<kw name="GET_TalentPool_Title_Happy" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.661" starttime="20171002 15:47:55.634"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%InnocentName%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20171002 15:47:55.687" level="INFO">${SQL_TalentPoolIdToGet} = 5806</msg>
<status status="PASS" endtime="20171002 15:47:55.687" starttime="20171002 15:47:55.662"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:55.689" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:55.689" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:55.690" starttime="20171002 15:47:55.688"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.692" level="INFO">Set request header "x-csod-corp-id" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:55.692" starttime="20171002 15:47:55.691"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.695" level="INFO">Set request header "x-csod-user-id" to "25"</msg>
<status status="PASS" endtime="20171002 15:47:55.695" starttime="20171002 15:47:55.694"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.697" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:55.698" starttime="20171002 15:47:55.696"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:55.700" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:55.701" starttime="20171002 15:47:55.699"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.731" starttime="20171002 15:47:55.702"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.733" starttime="20171002 15:47:55.732"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:55.735" level="INFO">${resBody} = {"TalentpoolId":5806,"Title":"InnocentName","Owner":{"UserId":25,"FirstName":"Julie","LastName":"Hennessy"},"CreatedDate":"2017-04-07T16:41:12.063","ModifierId":1,"ModifiedDate":"2017-04-07T16:41:12.0...</msg>
<status status="PASS" endtime="20171002 15:47:55.735" starttime="20171002 15:47:55.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.736" level="INFO">{"TalentpoolId":5806,"Title":"InnocentName","Owner":{"UserId":25,"FirstName":"Julie","LastName":"Hennessy"},"CreatedDate":"2017-04-07T16:41:12.063","ModifierId":1,"ModifiedDate":"2017-04-07T16:41:12.063","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20171002 15:47:55.737" starttime="20171002 15:47:55.735"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20171002 15:47:55.739" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'InnocentName', u'TalentpoolId': 5806, u'ModifiedDate': u'2017-04-07T16:41:12.063', u'CreatedDate': u'2017-04-07T16:41:12.063', u'Owner': {u'LastName': u'Hennessy', u'U...</msg>
<status status="PASS" endtime="20171002 15:47:55.740" starttime="20171002 15:47:55.738"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20171002 15:47:55.742" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'InnocentName', u'CreatedDate': u'2017-04-07T16:41:12.063', u'ModifiedDate': u'2017-04-07T16:41:12.063', u'TalentpoolId': 5806, u'Owner': {u'LastName': u'Hennessy', u'U...</msg>
<status status="PASS" endtime="20171002 15:47:55.742" starttime="20171002 15:47:55.741"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20171002 15:47:55.746" level="INFO">${keyValue} = InnocentName</msg>
<status status="PASS" endtime="20171002 15:47:55.746" starttime="20171002 15:47:55.744"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:55.747" starttime="20171002 15:47:55.633"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Happy

*Description:*
verify a random name matches

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24425</tag>
</tags>
<status status="PASS" endtime="20171002 15:47:55.748" critical="yes" starttime="20171002 15:47:55.534"></status>
</test>
<test id="s1-s1-s1-s1-t10" name="GET-API_TPC_GET_Return_Title_Extended1">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.783" starttime="20171002 15:47:55.753"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:55.802" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20171002 15:47:55.802" starttime="20171002 15:47:55.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.804" level="INFO">25</msg>
<status status="PASS" endtime="20171002 15:47:55.805" starttime="20171002 15:47:55.803"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:55.810" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:55.811" starttime="20171002 15:47:55.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.813" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20171002 15:47:55.813" starttime="20171002 15:47:55.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.815" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:55.815" starttime="20171002 15:47:55.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.817" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:55.817" starttime="20171002 15:47:55.816"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:55.818" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:55.819" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:55.819" starttime="20171002 15:47:55.818"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.821" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:55.822" starttime="20171002 15:47:55.820"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.824" level="INFO">Set request header "X-USERID" to "25"</msg>
<status status="PASS" endtime="20171002 15:47:55.824" starttime="20171002 15:47:55.823"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.826" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:55.826" starttime="20171002 15:47:55.825"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:55.827" starttime="20171002 15:47:55.752"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:55.830" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:55.831" starttime="20171002 15:47:55.830"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:55.838" level="INFO">Request body set to "{   "UserId": 25,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_25",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20171002 15:47:55.839" starttime="20171002 15:47:55.832"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.852" starttime="20171002 15:47:55.840"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.855" starttime="20171002 15:47:55.854"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:55.858" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20171002 15:47:55.858" starttime="20171002 15:47:55.856"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.860" starttime="20171002 15:47:55.859"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:55.860" starttime="20171002 15:47:55.828"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended1" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.891" starttime="20171002 15:47:55.868"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%☺%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20171002 15:47:55.907" level="INFO">${SQL_TalentPoolIdToGet} = 5002</msg>
<status status="PASS" endtime="20171002 15:47:55.907" starttime="20171002 15:47:55.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.910" level="INFO">${SQL_TalentPoolIdToGet} = 5002</msg>
<status status="PASS" endtime="20171002 15:47:55.911" starttime="20171002 15:47:55.909"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20171002 15:47:55.917" level="INFO">${SQL_TalentPoolTitleById} = &lt;=&gt;?@^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20171002 15:47:55.917" starttime="20171002 15:47:55.912"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:55.920" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:55.921" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:55.921" starttime="20171002 15:47:55.918"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.924" level="INFO">Set request header "x-csod-corp-id" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:55.924" starttime="20171002 15:47:55.922"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.926" level="INFO">Set request header "x-csod-user-id" to "25"</msg>
<status status="PASS" endtime="20171002 15:47:55.927" starttime="20171002 15:47:55.925"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.929" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:55.930" starttime="20171002 15:47:55.928"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:55.932" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20171002 15:47:55.932" starttime="20171002 15:47:55.931"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20171002 15:47:55.947" level="FAIL">Request should have succeeded, but was "503 Service Unavailable".</msg>
<status status="FAIL" endtime="20171002 15:47:55.948" starttime="20171002 15:47:55.933"></status>
</kw>
<status status="FAIL" endtime="20171002 15:47:55.949" starttime="20171002 15:47:55.866"></status>
</kw>
<doc>*Name:*
API_TPC_Extended1

*Description:*
verify ASCII characters 1

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24430</tag>
</tags>
<status status="FAIL" endtime="20171002 15:47:55.949" critical="yes" starttime="20171002 15:47:55.749">Request should have succeeded, but was "503 Service Unavailable".</status>
</test>
<test id="s1-s1-s1-s1-t11" name="GET-API_TPC_GET_Return_Title_Extended2">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:55.978" starttime="20171002 15:47:55.954"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:56.003" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20171002 15:47:56.003" starttime="20171002 15:47:55.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.005" level="INFO">25</msg>
<status status="PASS" endtime="20171002 15:47:56.005" starttime="20171002 15:47:56.004"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:56.011" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:56.011" starttime="20171002 15:47:56.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.014" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20171002 15:47:56.014" starttime="20171002 15:47:56.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.017" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:56.018" starttime="20171002 15:47:56.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.020" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:56.020" starttime="20171002 15:47:56.019"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:56.021" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:56.021" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:56.022" starttime="20171002 15:47:56.021"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.025" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:56.027" starttime="20171002 15:47:56.024"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.028" level="INFO">Set request header "X-USERID" to "25"</msg>
<status status="PASS" endtime="20171002 15:47:56.029" starttime="20171002 15:47:56.028"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.030" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:56.030" starttime="20171002 15:47:56.029"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:56.030" starttime="20171002 15:47:55.953"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:56.033" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:56.034" starttime="20171002 15:47:56.033"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:56.040" level="INFO">Request body set to "{   "UserId": 25,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_25",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20171002 15:47:56.040" starttime="20171002 15:47:56.034"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.056" starttime="20171002 15:47:56.041"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.059" starttime="20171002 15:47:56.058"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:56.061" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20171002 15:47:56.062" starttime="20171002 15:47:56.060"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.063" starttime="20171002 15:47:56.063"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:56.064" starttime="20171002 15:47:56.032"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended2" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.095" starttime="20171002 15:47:56.069"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%=%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20171002 15:47:56.111" level="INFO">${SQL_TalentPoolIdToGet} = 5112</msg>
<status status="PASS" endtime="20171002 15:47:56.112" starttime="20171002 15:47:56.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.116" level="INFO">${SQL_TalentPoolIdToGet} = 5112</msg>
<status status="PASS" endtime="20171002 15:47:56.117" starttime="20171002 15:47:56.113"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20171002 15:47:56.122" level="INFO">${SQL_TalentPoolTitleById} = ++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ</msg>
<status status="PASS" endtime="20171002 15:47:56.123" starttime="20171002 15:47:56.118"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:56.125" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:56.125" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:56.126" starttime="20171002 15:47:56.124"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.128" level="INFO">Set request header "x-csod-corp-id" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:56.129" starttime="20171002 15:47:56.127"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.131" level="INFO">Set request header "x-csod-user-id" to "25"</msg>
<status status="PASS" endtime="20171002 15:47:56.132" starttime="20171002 15:47:56.129"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.134" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:56.134" starttime="20171002 15:47:56.132"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:56.137" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:56.137" starttime="20171002 15:47:56.135"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.169" starttime="20171002 15:47:56.139"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.170" starttime="20171002 15:47:56.170"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:56.172" level="INFO">${resBody} = {"TalentpoolId":5112,"Title":"++\xc2\xa6_\xc2\xa6\xc2\xa6\xc2\xafa\xc3\x9fGpSs\xc2\xb5tFTOd8fen=\xc2\xb1==()\xc3\xb7\xcb\x9c\xc2\xb0\xe2\x80\xa2\xc2\xb7vn\xc2\xb2\xc2\xa6\xe2\x82\xac\xe2\x80\x9e\xe2\x...</msg>
<status status="PASS" endtime="20171002 15:47:56.172" starttime="20171002 15:47:56.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.174" level="INFO">{"TalentpoolId":5112,"Title":"++\xc2\xa6_\xc2\xa6\xc2\xa6\xc2\xafa\xc3\x9fGpSs\xc2\xb5tFTOd8fen=\xc2\xb1==()\xc3\xb7\xcb\x9c\xc2\xb0\xe2\x80\xa2\xc2\xb7vn\xc2\xb2\xc2\xa6\xe2\x82\xac\xe2\x80\x9e\xe2\x80\xa6\xe2\x80\xa0\xe2\x80\xa1\xcb\x86\xe2\x80\xb0\xc5\xa0\xe2\x80\xb9\xc5\x92\xc5\xbd","Owner":{"UserId":25,"FirstName":"Julie","LastName":"Hennessy"},"CreatedDate":"2017-03-21T15:12:19.937","ModifierId":1,"ModifiedDate":"2017-03-21T15:12:19.937","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20171002 15:47:56.174" starttime="20171002 15:47:56.173"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20171002 15:47:56.177" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'++\xa6_\xa6\xa6\xafa\xdfGpSs\xb5tFTOd8fen=\xb1==()\xf7\u02dc\xb0\u2022\xb7vn\xb2\xa6\u20ac\u201e\u2026\u2020\u2021\u02c6\u2030\u0160\u2039\u0152\u017d', u'TalentpoolId...</msg>
<status status="PASS" endtime="20171002 15:47:56.177" starttime="20171002 15:47:56.175"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20171002 15:47:56.180" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'++\xa6_\xa6\xa6\xafa\xdfGpSs\xb5tFTOd8fen=\xb1==()\xf7\u02dc\xb0\u2022\xb7vn\xb2\xa6\u20ac\u201e\u2026\u2020\u2021\u02c6\u2030\u0160\u2039\u0152\u017d', u'CreatedDate'...</msg>
<status status="PASS" endtime="20171002 15:47:56.180" starttime="20171002 15:47:56.179"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20171002 15:47:56.183" level="INFO">${keyValue} = ++¦_¦¦¯aßGpSsµtFTOd8fen=±==()÷˜°•·vn²¦€„…†‡ˆ‰Š‹ŒŽ</msg>
<status status="PASS" endtime="20171002 15:47:56.183" starttime="20171002 15:47:56.182"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:56.183" starttime="20171002 15:47:56.068"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended2

*Description:*
verify ASCII characters 2

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24431</tag>
</tags>
<status status="PASS" endtime="20171002 15:47:56.184" critical="yes" starttime="20171002 15:47:55.951"></status>
</test>
<test id="s1-s1-s1-s1-t12" name="GET-API_TPC_GET_Return_Title_Extended3">
<kw name="REST_NOAUTH_User_With_Most_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.216" starttime="20171002 15:47:56.189"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou.owner_id FROM ou JOIN users ON ou.owner_id = users.user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 GROUP BY ou.owner_id ORDER BY COUNT(ou.owner_id) DESC</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:56.222" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20171002 15:47:56.222" starttime="20171002 15:47:56.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.224" level="INFO">25</msg>
<status status="PASS" endtime="20171002 15:47:56.224" starttime="20171002 15:47:56.223"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:56.227" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:56.227" starttime="20171002 15:47:56.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.229" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20171002 15:47:56.230" starttime="20171002 15:47:56.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.231" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:56.231" starttime="20171002 15:47:56.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.233" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:56.233" starttime="20171002 15:47:56.232"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:56.234" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:56.234" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:56.235" starttime="20171002 15:47:56.234"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.236" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:56.237" starttime="20171002 15:47:56.236"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.238" level="INFO">Set request header "X-USERID" to "25"</msg>
<status status="PASS" endtime="20171002 15:47:56.238" starttime="20171002 15:47:56.237"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.240" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:56.241" starttime="20171002 15:47:56.240"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:56.241" starttime="20171002 15:47:56.188"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:56.244" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:56.245" starttime="20171002 15:47:56.244"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:56.250" level="INFO">Request body set to "{   "UserId": 25,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_25",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20171002 15:47:56.250" starttime="20171002 15:47:56.245"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.268" starttime="20171002 15:47:56.251"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.270" starttime="20171002 15:47:56.269"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:56.271" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20171002 15:47:56.272" starttime="20171002 15:47:56.271"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.274" starttime="20171002 15:47:56.272"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:56.274" starttime="20171002 15:47:56.243"></status>
</kw>
<kw name="GET_TalentPool_Title_Char_Extended3" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.305" starttime="20171002 15:47:56.280"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>\ SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id=${SQL_GET_USERID} AND title LIKE '%ú%' ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20171002 15:47:56.328" level="INFO">${SQL_TalentPoolIdToGet} = 3784</msg>
<status status="PASS" endtime="20171002 15:47:56.328" starttime="20171002 15:47:56.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.331" level="INFO">${SQL_TalentPoolIdToGet} = 3784</msg>
<status status="PASS" endtime="20171002 15:47:56.331" starttime="20171002 15:47:56.329"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT title FROM ou WHERE ou_id = ${SQL_TalentPoolIdToGet}</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolTitleById}</var>
</assign>
<msg timestamp="20171002 15:47:56.337" level="INFO">${SQL_TalentPoolTitleById} = &lt;=&gt;?@^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20171002 15:47:56.338" starttime="20171002 15:47:56.333"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:56.340" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:56.340" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:56.341" starttime="20171002 15:47:56.339"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.343" level="INFO">Set request header "x-csod-corp-id" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:56.343" starttime="20171002 15:47:56.342"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.346" level="INFO">Set request header "x-csod-user-id" to "25"</msg>
<status status="PASS" endtime="20171002 15:47:56.346" starttime="20171002 15:47:56.344"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.348" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:56.348" starttime="20171002 15:47:56.347"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:56.350" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:56.350" starttime="20171002 15:47:56.349"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.378" starttime="20171002 15:47:56.351"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.381" starttime="20171002 15:47:56.380"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:56.383" level="INFO">${resBody} = {"TalentpoolId":3784,"Title":"&lt;=&gt;?@^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb6\x...</msg>
<status status="PASS" endtime="20171002 15:47:56.384" starttime="20171002 15:47:56.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.386" level="INFO">{"TalentpoolId":3784,"Title":"&lt;=&gt;?@^_`{|}~\xe2\x8c\x82\xc3\x87\xc3\xbc\xc3\xa9\xc3\xa2\xc3\xa4\xc3\xa0\xc3\xa5\xc3\xa7\xc3\xaa\xc3\xab\xc3\xa8\xc3\xaf\xc3\xae\xc3\xac\xc3\xa6\xc3\x86\xc3\xb4\xc3\xb6\xc3\xb2\xc3\xbb\xc3\xb9\xc3\xbf\xc2\xa2\xc2\xa3\xc2\xa5\xe2\x82\xa7\xc6\x92\xc3\xa1\xc3\xad\xc3\xb3\xc3\xba\xc3\xb1\xc3\x91\xc2\xaa","Owner":{"UserId":25,"FirstName":"Julie","LastName":"Hennessy"},"CreatedDate":"2017-02-13T16:12:43.307","ModifierId":1,"ModifiedDate":"2017-02-13T16:12:43.307","IsShared":false,"UserCount":0,"LatestUsers":[]}</msg>
<status status="PASS" endtime="20171002 15:47:56.386" starttime="20171002 15:47:56.384"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20171002 15:47:56.389" level="INFO">${response} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'Tale...</msg>
<status status="PASS" endtime="20171002 15:47:56.389" starttime="20171002 15:47:56.387"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${responseDict}</var>
</assign>
<msg timestamp="20171002 15:47:56.391" level="INFO">${responseDict} = {u'LatestUsers': [], u'Title': u'&lt;=&gt;?@^_`{|}~\u2302\xc7\xfc\xe9\xe2\xe4\xe0\xe5\xe7\xea\xeb\xe8\xef\xee\xec\xe6\xc6\xf4\xf6\xf2\xfb\xf9\xff\xa2\xa3\xa5\u20a7\u0192\xe1\xed\xf3\xfa\xf1\xd1\xaa', u'Crea...</msg>
<status status="PASS" endtime="20171002 15:47:56.392" starttime="20171002 15:47:56.390"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDict}</arg>
<arg>${KEY_NAME_JSON}</arg>
</arguments>
<assign>
<var>${keyValue}</var>
</assign>
<msg timestamp="20171002 15:47:56.394" level="INFO">${keyValue} = &lt;=&gt;?@^_`{|}~⌂ÇüéâäàåçêëèïîìæÆôöòûùÿ¢£¥₧ƒáíóúñÑª</msg>
<status status="PASS" endtime="20171002 15:47:56.395" starttime="20171002 15:47:56.393"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:56.396" starttime="20171002 15:47:56.278"></status>
</kw>
<doc>*Name:*
API_TalentPool_Get_Return_Title_Characters_Extended3

*Description:*
verify ASCII characters 3

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24432</tag>
</tags>
<status status="PASS" endtime="20171002 15:47:56.397" critical="yes" starttime="20171002 15:47:56.186"></status>
</test>
<test id="s1-s1-s1-s1-t13" name="GET-API_TPC_GET_Input_TP_Does_Not_Exist">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.430" starttime="20171002 15:47:56.403"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:56.459" level="INFO">${SQL_GET_USERID} = 1</msg>
<status status="PASS" endtime="20171002 15:47:56.459" starttime="20171002 15:47:56.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.461" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:56.461" starttime="20171002 15:47:56.460"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:56.475" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:56.475" starttime="20171002 15:47:56.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.477" level="INFO">${SQL_GET_USERID} = 1</msg>
<status status="PASS" endtime="20171002 15:47:56.478" starttime="20171002 15:47:56.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.480" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:56.480" starttime="20171002 15:47:56.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.481" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:56.482" starttime="20171002 15:47:56.481"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:56.483" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:56.483" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:56.484" starttime="20171002 15:47:56.482"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.485" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:56.485" starttime="20171002 15:47:56.484"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.486" level="INFO">Set request header "X-USERID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:56.487" starttime="20171002 15:47:56.486"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.490" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:56.492" starttime="20171002 15:47:56.489"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:56.493" starttime="20171002 15:47:56.402"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:56.496" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:56.496" starttime="20171002 15:47:56.495"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:56.505" level="INFO">Request body set to "{   "UserId": 1,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_1",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20171002 15:47:56.506" starttime="20171002 15:47:56.497"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.519" starttime="20171002 15:47:56.507"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.520" starttime="20171002 15:47:56.520"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:56.522" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20171002 15:47:56.523" starttime="20171002 15:47:56.521"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.524" starttime="20171002 15:47:56.523"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:56.524" starttime="20171002 15:47:56.494"></status>
</kw>
<kw name="GET_TalentPool_Does_Not_Exist" library="SMP_Keywords">
<doc>*GET_TalentPool:*</doc>
<arguments>
<arg>Title</arg>
<arg>404</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.558" starttime="20171002 15:47:56.530"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id+1000 FROM ou WHERE ou.type_id = 131072 ORDER BY ou_id DESC</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20171002 15:47:56.567" level="INFO">${SQL_TalentPoolIdToGet} = 16433</msg>
<status status="PASS" endtime="20171002 15:47:56.568" starttime="20171002 15:47:56.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.571" level="INFO">${SQL_TalentPoolIdToGet} = 16433</msg>
<status status="PASS" endtime="20171002 15:47:56.571" starttime="20171002 15:47:56.569"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:56.573" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:56.573" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:56.574" starttime="20171002 15:47:56.572"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.576" level="INFO">Set request header "x-csod-corp-id" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:56.576" starttime="20171002 15:47:56.575"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.577" level="INFO">Set request header "x-csod-user-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:56.578" starttime="20171002 15:47:56.577"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.580" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:56.580" starttime="20171002 15:47:56.579"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:56.582" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:56.582" starttime="20171002 15:47:56.581"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20171002 15:47:56.585" starttime="20171002 15:47:56.583"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.613" starttime="20171002 15:47:56.587"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.616" starttime="20171002 15:47:56.614"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:56.618" level="INFO">${resBody} = {"Message":"Talent pool not found."}</msg>
<status status="PASS" endtime="20171002 15:47:56.618" starttime="20171002 15:47:56.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.620" level="INFO">{"Message":"Talent pool not found."}</msg>
<status status="PASS" endtime="20171002 15:47:56.620" starttime="20171002 15:47:56.618"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:56.622" starttime="20171002 15:47:56.529"></status>
</kw>
<doc>*Name:*
API_TP_Get_Input_TP_DNE

*Description:*
verify failure when talent pool id provided does not exist

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24437</tag>
</tags>
<status status="PASS" endtime="20171002 15:47:56.623" critical="yes" starttime="20171002 15:47:56.399"></status>
</test>
<test id="s1-s1-s1-s1-t14" name="GET-API_TPC_GET_Input_User_Did_Not_Create">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.653" starttime="20171002 15:47:56.627"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:56.681" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20171002 15:47:56.681" starttime="20171002 15:47:56.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.683" level="INFO">25</msg>
<status status="PASS" endtime="20171002 15:47:56.683" starttime="20171002 15:47:56.682"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:56.686" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:56.686" starttime="20171002 15:47:56.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.687" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20171002 15:47:56.688" starttime="20171002 15:47:56.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.689" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:56.690" starttime="20171002 15:47:56.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.691" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:56.691" starttime="20171002 15:47:56.690"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:56.692" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:56.693" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:56.693" starttime="20171002 15:47:56.692"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.694" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:56.694" starttime="20171002 15:47:56.694"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.696" level="INFO">Set request header "X-USERID" to "25"</msg>
<status status="PASS" endtime="20171002 15:47:56.696" starttime="20171002 15:47:56.695"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.697" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:56.698" starttime="20171002 15:47:56.696"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:56.698" starttime="20171002 15:47:56.626"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:56.701" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:56.701" starttime="20171002 15:47:56.700"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:56.706" level="INFO">Request body set to "{   "UserId": 25,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_25",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20171002 15:47:56.707" starttime="20171002 15:47:56.702"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.724" starttime="20171002 15:47:56.708"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.726" starttime="20171002 15:47:56.725"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:56.727" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20171002 15:47:56.727" starttime="20171002 15:47:56.727"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.729" starttime="20171002 15:47:56.728"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:56.730" starttime="20171002 15:47:56.699"></status>
</kw>
<kw name="GET_User_Did_Not_Create" library="SMP_Keywords">
<doc>*GET_User_Did_Not_Create:*</doc>
<arguments>
<arg>Title</arg>
<arg>401</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.761" starttime="20171002 15:47:56.735"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id&lt;&gt; ${SQL_GET_USERID} ORDER BY newid()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolIdToGet}</var>
</assign>
<msg timestamp="20171002 15:47:56.775" level="INFO">${SQL_TalentPoolIdToGet} = 3572</msg>
<status status="PASS" endtime="20171002 15:47:56.775" starttime="20171002 15:47:56.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolIdToGet}</arg>
<arg>${SQL_TalentPoolIdToGet}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.778" level="INFO">${SQL_TalentPoolIdToGet} = 3572</msg>
<status status="PASS" endtime="20171002 15:47:56.778" starttime="20171002 15:47:56.776"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:56.780" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:56.780" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:56.781" starttime="20171002 15:47:56.779"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.782" level="INFO">Set request header "x-csod-corp-id" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:56.783" starttime="20171002 15:47:56.781"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.784" level="INFO">Set request header "x-csod-user-id" to "25"</msg>
<status status="PASS" endtime="20171002 15:47:56.785" starttime="20171002 15:47:56.783"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.786" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:56.787" starttime="20171002 15:47:56.786"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:56.788" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:56.789" starttime="20171002 15:47:56.788"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20171002 15:47:56.790" starttime="20171002 15:47:56.790"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolIdToGet}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.825" starttime="20171002 15:47:56.792"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.827" starttime="20171002 15:47:56.826"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:56.829" level="INFO">${resBody} = {"Message":"You don't have access to the talentpool."}</msg>
<status status="PASS" endtime="20171002 15:47:56.830" starttime="20171002 15:47:56.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.832" level="INFO">{"Message":"You don't have access to the talentpool."}</msg>
<status status="PASS" endtime="20171002 15:47:56.832" starttime="20171002 15:47:56.831"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:56.834" starttime="20171002 15:47:56.733"></status>
</kw>
<doc>*Name:*
API_TP_Get_Input_User_DidNotCreate

*Description:*
verify failure when user provided did not create the talent pool

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>GET</tag>
<tag>testrailid=24439</tag>
</tags>
<status status="PASS" endtime="20171002 15:47:56.835" critical="yes" starttime="20171002 15:47:56.624"></status>
</test>
<test id="s1-s1-s1-s1-t15" name="POST-API_TPC_Add_2Users">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.877" starttime="20171002 15:47:56.841"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:56.885" level="INFO">${SQL_GET_USERID} = 43</msg>
<status status="PASS" endtime="20171002 15:47:56.886" starttime="20171002 15:47:56.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.887" level="INFO">43</msg>
<status status="PASS" endtime="20171002 15:47:56.888" starttime="20171002 15:47:56.887"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:56.890" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:56.890" starttime="20171002 15:47:56.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.892" level="INFO">${SQL_GET_USERID} = 43</msg>
<status status="PASS" endtime="20171002 15:47:56.894" starttime="20171002 15:47:56.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.896" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:56.897" starttime="20171002 15:47:56.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.898" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:56.898" starttime="20171002 15:47:56.897"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:56.899" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:56.900" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:56.900" starttime="20171002 15:47:56.899"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.901" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:56.902" starttime="20171002 15:47:56.901"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.903" level="INFO">Set request header "X-USERID" to "43"</msg>
<status status="PASS" endtime="20171002 15:47:56.903" starttime="20171002 15:47:56.902"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.904" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:56.905" starttime="20171002 15:47:56.904"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:56.905" starttime="20171002 15:47:56.840"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:56.908" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:56.908" starttime="20171002 15:47:56.907"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:56.914" level="INFO">Request body set to "{   "UserId": 43,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_43",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20171002 15:47:56.914" starttime="20171002 15:47:56.909"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.933" starttime="20171002 15:47:56.915"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.934" starttime="20171002 15:47:56.934"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:56.936" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20171002 15:47:56.936" starttime="20171002 15:47:56.935"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.937" starttime="20171002 15:47:56.936"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:56.937" starttime="20171002 15:47:56.906"></status>
</kw>
<kw name="POST_TalentPool_Candidates_Add_2Users" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:56.971" starttime="20171002 15:47:56.942"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20171002 15:47:56.983" level="INFO">${SQL_TalentPoolId} = 8755</msg>
<status status="PASS" endtime="20171002 15:47:56.984" starttime="20171002 15:47:56.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20171002 15:47:56.987" level="INFO">${SQL_TalentPoolId} = 8755</msg>
<status status="PASS" endtime="20171002 15:47:56.988" starttime="20171002 15:47:56.985"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20171002 15:47:57.008" level="INFO">${SQL_UserToAdd1} = 562</msg>
<status status="PASS" endtime="20171002 15:47:57.008" starttime="20171002 15:47:56.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.011" level="INFO">${SQL_UserToAdd1} = 562</msg>
<status status="PASS" endtime="20171002 15:47:57.011" starttime="20171002 15:47:57.009"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id &lt;&gt; ${SQL_UserToAdd1} AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd2}</var>
</assign>
<msg timestamp="20171002 15:47:57.027" level="INFO">${SQL_UserToAdd2} = 882</msg>
<status status="PASS" endtime="20171002 15:47:57.028" starttime="20171002 15:47:57.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd2}</arg>
<arg>${SQL_UserToAdd2}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.030" level="INFO">${SQL_UserToAdd2} = 882</msg>
<status status="PASS" endtime="20171002 15:47:57.030" starttime="20171002 15:47:57.029"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:57.032" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:57.032" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:57.032" starttime="20171002 15:47:57.031"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.034" level="INFO">Set request header "x-csod-corp-id" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:57.034" starttime="20171002 15:47:57.033"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.037" level="INFO">Set request header "x-csod-user-id" to "43"</msg>
<status status="PASS" endtime="20171002 15:47:57.037" starttime="20171002 15:47:57.035"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.039" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:57.039" starttime="20171002 15:47:57.038"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:57.040" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:57.041" starttime="20171002 15:47:57.040"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_UserToAdd1}},{"UserId": ${SQL_UserToAdd2}}]</arg>
</arguments>
<msg timestamp="20171002 15:47:57.042" level="INFO">Request body set to "[{"UserId": 562},{"UserId": 882}]".</msg>
<status status="PASS" endtime="20171002 15:47:57.043" starttime="20171002 15:47:57.042"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20171002 15:47:57.050" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20171002 15:47:57.051" starttime="20171002 15:47:57.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.052" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20171002 15:47:57.053" starttime="20171002 15:47:57.051"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:57.449" starttime="20171002 15:47:57.053"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:57.451" starttime="20171002 15:47:57.450"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:57.452" level="INFO">${resBody} = [{"UserId":562,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"P...</msg>
<status status="PASS" endtime="20171002 15:47:57.453" starttime="20171002 15:47:57.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resBody}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.454" level="INFO">[{"UserId":562,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":0},{"UserId":882,"FirstName":"","LastName":"","Ref":"","TypeId":0,"UserStatusId":0,"CandidateStatusId":128,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"CreatedDate":null,"Photo":null,"SmpMetricValue":null,"ErrorCode":0}]</msg>
<status status="PASS" endtime="20171002 15:47:57.455" starttime="20171002 15:47:57.453"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidatesCountAfter}</var>
</assign>
<msg timestamp="20171002 15:47:57.459" level="INFO">${SQL_CandidatesCountAfter} = 2</msg>
<status status="PASS" endtime="20171002 15:47:57.459" starttime="20171002 15:47:57.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidatesCountAfter}</arg>
<arg>${SQL_CandidatesCountAfter}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.461" level="INFO">${SQL_CandidatesCountAfter} = 2</msg>
<status status="PASS" endtime="20171002 15:47:57.461" starttime="20171002 15:47:57.460"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+2</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20171002 15:47:57.468" level="INFO">${SQL_NUM} = 2</msg>
<status status="PASS" endtime="20171002 15:47:57.469" starttime="20171002 15:47:57.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.470" level="INFO">2</msg>
<status status="PASS" endtime="20171002 15:47:57.471" starttime="20171002 15:47:57.470"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'== '${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidatesCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.478" level="INFO">Set test message to:
The 2 matches with 2</msg>
<status status="PASS" endtime="20171002 15:47:57.479" starttime="20171002 15:47:57.477"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:57.480" starttime="20171002 15:47:57.476"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:57.480" starttime="20171002 15:47:57.471"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidatesCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidatesCountAfter} did not match ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:57.487" starttime="20171002 15:47:57.481"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:57.488" starttime="20171002 15:47:56.939"></status>
</kw>
<doc>*Name:*
API_TPC_Add_2Users

*Description:*
Verify success when adding 2 users

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24445</tag>
</tags>
<status status="PASS" endtime="20171002 15:47:57.488" critical="yes" starttime="20171002 15:47:56.837">The 2 matches with 2</status>
</test>
<test id="s1-s1-s1-s1-t16" name="POST-API_TPC_Add_1Users">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:57.514" starttime="20171002 15:47:57.492"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:57.522" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20171002 15:47:57.523" starttime="20171002 15:47:57.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.525" level="INFO">415</msg>
<status status="PASS" endtime="20171002 15:47:57.526" starttime="20171002 15:47:57.524"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:57.531" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:57.531" starttime="20171002 15:47:57.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.534" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20171002 15:47:57.534" starttime="20171002 15:47:57.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.536" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:57.537" starttime="20171002 15:47:57.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.538" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:57.539" starttime="20171002 15:47:57.538"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:57.541" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:57.541" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:57.542" starttime="20171002 15:47:57.539"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.543" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:57.543" starttime="20171002 15:47:57.542"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.545" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20171002 15:47:57.546" starttime="20171002 15:47:57.544"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.547" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:57.548" starttime="20171002 15:47:57.546"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:57.548" starttime="20171002 15:47:57.492"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:57.551" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:57.551" starttime="20171002 15:47:57.550"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:57.556" level="INFO">Request body set to "{   "UserId": 415,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_415",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20171002 15:47:57.557" starttime="20171002 15:47:57.552"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:57.568" starttime="20171002 15:47:57.557"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:57.569" starttime="20171002 15:47:57.568"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:57.572" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20171002 15:47:57.573" starttime="20171002 15:47:57.571"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:57.574" starttime="20171002 15:47:57.574"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:57.575" starttime="20171002 15:47:57.549"></status>
</kw>
<kw name="POST_TalentPool_Add_1Users" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:57.607" starttime="20171002 15:47:57.580"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20171002 15:47:57.627" level="INFO">${SQL_TalentPoolId} = 2972</msg>
<status status="PASS" endtime="20171002 15:47:57.627" starttime="20171002 15:47:57.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.630" level="INFO">${SQL_TalentPoolId} = 2972</msg>
<status status="PASS" endtime="20171002 15:47:57.630" starttime="20171002 15:47:57.628"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd1}</var>
</assign>
<msg timestamp="20171002 15:47:57.647" level="INFO">${SQL_UserToAdd1} = 689</msg>
<status status="PASS" endtime="20171002 15:47:57.648" starttime="20171002 15:47:57.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd1}</arg>
<arg>${SQL_UserToAdd1}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.650" level="INFO">${SQL_UserToAdd1} = 689</msg>
<status status="PASS" endtime="20171002 15:47:57.651" starttime="20171002 15:47:57.648"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToAdd2}</var>
</assign>
<msg timestamp="20171002 15:47:57.676" level="INFO">${SQL_UserToAdd2} = 4779</msg>
<status status="PASS" endtime="20171002 15:47:57.677" starttime="20171002 15:47:57.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToAdd2}</arg>
<arg>${SQL_UserToAdd2}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.679" level="INFO">${SQL_UserToAdd2} = 4779</msg>
<status status="PASS" endtime="20171002 15:47:57.679" starttime="20171002 15:47:57.678"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:57.681" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:57.681" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:57.681" starttime="20171002 15:47:57.680"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.683" level="INFO">Set request header "x-csod-corp-id" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:57.683" starttime="20171002 15:47:57.682"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.685" level="INFO">Set request header "x-csod-user-id" to "415"</msg>
<status status="PASS" endtime="20171002 15:47:57.685" starttime="20171002 15:47:57.684"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.686" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:57.687" starttime="20171002 15:47:57.685"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:57.688" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:57.688" starttime="20171002 15:47:57.687"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_UserToAdd1}}]</arg>
</arguments>
<msg timestamp="20171002 15:47:57.690" level="INFO">Request body set to "[{"UserId": 689}]".</msg>
<status status="PASS" endtime="20171002 15:47:57.690" starttime="20171002 15:47:57.689"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20171002 15:47:57.694" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20171002 15:47:57.694" starttime="20171002 15:47:57.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}</arg>
<arg>${SQL_CandidateCountBefore}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.696" level="INFO">${SQL_CandidateCountBefore} = 0</msg>
<status status="PASS" endtime="20171002 15:47:57.696" starttime="20171002 15:47:57.695"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates</arg>
</arguments>
<msg timestamp="20171002 15:47:57.708" level="FAIL">Request should have succeeded, but was "503 Service Unavailable".</msg>
<status status="FAIL" endtime="20171002 15:47:57.708" starttime="20171002 15:47:57.698"></status>
</kw>
<status status="FAIL" endtime="20171002 15:47:57.709" starttime="20171002 15:47:57.579"></status>
</kw>
<doc>*Name:*
API_TPC_Add_1Users

*Description:*
Verify success when adding 1 user

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24446</tag>
</tags>
<status status="FAIL" endtime="20171002 15:47:57.710" critical="yes" starttime="20171002 15:47:57.490">Request should have succeeded, but was "503 Service Unavailable".</status>
</test>
<test id="s1-s1-s1-s1-t17" name="POST-API_TP_Grp_Create_UseCase_Elab_AlreadyExists">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:57.747" starttime="20171002 15:47:57.715"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:57.793" level="INFO">${SQL_GET_USERID} = 35</msg>
<status status="PASS" endtime="20171002 15:47:57.793" starttime="20171002 15:47:57.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.795" level="INFO">35</msg>
<status status="PASS" endtime="20171002 15:47:57.795" starttime="20171002 15:47:57.794"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:57.798" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:57.799" starttime="20171002 15:47:57.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.801" level="INFO">${SQL_GET_USERID} = 35</msg>
<status status="PASS" endtime="20171002 15:47:57.801" starttime="20171002 15:47:57.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.802" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:57.803" starttime="20171002 15:47:57.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.804" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:57.804" starttime="20171002 15:47:57.803"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:57.806" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:57.806" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:57.806" starttime="20171002 15:47:57.805"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.808" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:57.809" starttime="20171002 15:47:57.807"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.810" level="INFO">Set request header "X-USERID" to "35"</msg>
<status status="PASS" endtime="20171002 15:47:57.811" starttime="20171002 15:47:57.809"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.812" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:57.812" starttime="20171002 15:47:57.811"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:57.813" starttime="20171002 15:47:57.714"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:57.815" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:57.816" starttime="20171002 15:47:57.815"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:57.821" level="INFO">Request body set to "{   "UserId": 35,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_35",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20171002 15:47:57.822" starttime="20171002 15:47:57.816"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:57.832" starttime="20171002 15:47:57.822"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:57.833" starttime="20171002 15:47:57.832"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:57.834" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20171002 15:47:57.835" starttime="20171002 15:47:57.834"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:57.836" starttime="20171002 15:47:57.835"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:57.836" starttime="20171002 15:47:57.814"></status>
</kw>
<kw name="POST_TalentPool_Group_Create" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>400</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:57.865" starttime="20171002 15:47:57.842"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou.type_id = 131072 AND ou_id IN (SELECT related_ou_id FROM ou_relation WHERE type_id = 16) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20171002 15:47:57.893" level="INFO">${SQL_TalentPoolId} = 556</msg>
<status status="PASS" endtime="20171002 15:47:57.894" starttime="20171002 15:47:57.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.896" level="INFO">${SQL_TalentPoolId} = 556</msg>
<status status="PASS" endtime="20171002 15:47:57.896" starttime="20171002 15:47:57.895"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT CONVERT(varchar(255), NEWID())</arg>
</arguments>
<assign>
<var>${SQL_RandomName}</var>
</assign>
<msg timestamp="20171002 15:47:57.899" level="INFO">${SQL_RandomName} = F53863F7-4335-43F1-885A-2FBA66044B94</msg>
<status status="PASS" endtime="20171002 15:47:57.900" starttime="20171002 15:47:57.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_RandomName}</arg>
<arg>${SQL_RandomName}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.902" level="INFO">${SQL_RandomName} = F53863F7-4335-43F1-885A-2FBA66044B94</msg>
<status status="PASS" endtime="20171002 15:47:57.903" starttime="20171002 15:47:57.901"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:57.905" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:57.905" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:57.906" starttime="20171002 15:47:57.904"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.907" level="INFO">Set request header "x-csod-corp-id" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:57.907" starttime="20171002 15:47:57.906"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.909" level="INFO">Set request header "x-csod-user-id" to "35"</msg>
<status status="PASS" endtime="20171002 15:47:57.909" starttime="20171002 15:47:57.908"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.910" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:57.911" starttime="20171002 15:47:57.910"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:57.912" level="INFO">Set request header "content-type" to "application/json"</msg>
<status status="PASS" endtime="20171002 15:47:57.912" starttime="20171002 15:47:57.911"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{"Title": '${SQL_RandomName}'}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.913" level="INFO">Request body set to "{"Title": 'F53863F7-4335-43F1-885A-2FBA66044B94'}".</msg>
<status status="PASS" endtime="20171002 15:47:57.914" starttime="20171002 15:47:57.913"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT(ou_id) FROM ou_relation WHERE type_id = 16 AND ou_id = ${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CountBefore}</var>
</assign>
<msg timestamp="20171002 15:47:57.925" level="INFO">${SQL_CountBefore} = 0</msg>
<status status="PASS" endtime="20171002 15:47:57.925" starttime="20171002 15:47:57.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CountBefore}</arg>
<arg>${SQL_CountBefore}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.927" level="INFO">${SQL_CountBefore} = 0</msg>
<status status="PASS" endtime="20171002 15:47:57.928" starttime="20171002 15:47:57.926"></status>
</kw>
<kw name="Next Request May Not Succeed" library="HttpLibrary.HTTP">
<doc>Don't fail the next request if it's status code is &gt;= 400</doc>
<status status="PASS" endtime="20171002 15:47:57.929" starttime="20171002 15:47:57.928"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/groups</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:57.943" starttime="20171002 15:47:57.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/groups</arg>
</arguments>
<msg timestamp="20171002 15:47:57.944" level="INFO">/talentpool-api/talentpools/556/groups</msg>
<status status="PASS" endtime="20171002 15:47:57.945" starttime="20171002 15:47:57.944"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<msg timestamp="20171002 15:47:57.947" level="FAIL">"503 Service Unavailable" does not start with "400", but should have.</msg>
<status status="FAIL" endtime="20171002 15:47:57.947" starttime="20171002 15:47:57.945"></status>
</kw>
<status status="FAIL" endtime="20171002 15:47:57.948" starttime="20171002 15:47:57.841"></status>
</kw>
<doc>*Name:*
API_TPC_Add_BC_InputVsOutput_Value

*Description:*
Verify successful input user ends up in output

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>POST</tag>
<tag>testrailid=24450</tag>
</tags>
<status status="FAIL" endtime="20171002 15:47:57.949" critical="yes" starttime="20171002 15:47:57.711">"503 Service Unavailable" does not start with "400", but should have.</status>
</test>
<test id="s1-s1-s1-s1-t18" name="PUT-API_TalentPool_Rename_Access_Not_Active">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:57.975" starttime="20171002 15:47:57.954"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:58.022" level="INFO">${SQL_GET_USERID} = 1</msg>
<status status="PASS" endtime="20171002 15:47:58.022" starttime="20171002 15:47:57.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.024" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:58.024" starttime="20171002 15:47:58.023"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:58.028" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:58.028" starttime="20171002 15:47:58.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.030" level="INFO">${SQL_GET_USERID} = 1</msg>
<status status="PASS" endtime="20171002 15:47:58.030" starttime="20171002 15:47:58.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.032" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:58.032" starttime="20171002 15:47:58.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.035" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:58.035" starttime="20171002 15:47:58.033"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:58.038" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:58.038" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:58.039" starttime="20171002 15:47:58.037"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.040" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:58.041" starttime="20171002 15:47:58.039"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.042" level="INFO">Set request header "X-USERID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:58.043" starttime="20171002 15:47:58.042"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.044" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:58.044" starttime="20171002 15:47:58.043"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:58.045" starttime="20171002 15:47:57.953"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:58.047" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:58.048" starttime="20171002 15:47:58.047"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:58.053" level="INFO">Request body set to "{   "UserId": 1,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_1",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20171002 15:47:58.054" starttime="20171002 15:47:58.048"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:58.066" starttime="20171002 15:47:58.054"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:58.070" starttime="20171002 15:47:58.068"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:58.072" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20171002 15:47:58.072" starttime="20171002 15:47:58.071"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:58.075" starttime="20171002 15:47:58.074"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:58.076" starttime="20171002 15:47:58.046"></status>
</kw>
<kw name="PUT_TalentPool_Candidate_Status_Set" library="SMP_Keywords">
<doc>*POST_TalentPool_Create:*</doc>
<arguments>
<arg>Title</arg>
<arg>200</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20171002 15:47:58.133" level="INFO">${SQL_TalentPoolId} = 4764</msg>
<status status="PASS" endtime="20171002 15:47:58.133" starttime="20171002 15:47:58.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.137" level="INFO">${SQL_TalentPoolId} = 4764</msg>
<status status="PASS" endtime="20171002 15:47:58.137" starttime="20171002 15:47:58.135"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1}</var>
</assign>
<msg timestamp="20171002 15:47:58.145" level="INFO">${SQL_GetCandidateId1} = 669</msg>
<status status="PASS" endtime="20171002 15:47:58.145" starttime="20171002 15:47:58.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1}</arg>
<arg>${SQL_GetCandidateId1}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.148" level="INFO">${SQL_GetCandidateId1} = 669</msg>
<status status="PASS" endtime="20171002 15:47:58.148" starttime="20171002 15:47:58.146"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 status_id FROM ou_user_status WHERE culture_id = 1 AND status_id IN (128,256,512,1024) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1Status}</var>
</assign>
<msg timestamp="20171002 15:47:58.157" level="INFO">${SQL_GetCandidateId1Status} = 512</msg>
<status status="PASS" endtime="20171002 15:47:58.158" starttime="20171002 15:47:58.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1Status}</arg>
<arg>${SQL_GetCandidateId1Status}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.161" level="INFO">${SQL_GetCandidateId1Status} = 512</msg>
<status status="PASS" endtime="20171002 15:47:58.161" starttime="20171002 15:47:58.159"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:58.163" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:58.163" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:58.163" starttime="20171002 15:47:58.162"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.165" level="INFO">Set request header "x-csod-corp-id" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:58.165" starttime="20171002 15:47:58.164"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.167" level="INFO">Set request header "x-csod-user-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:58.168" starttime="20171002 15:47:58.166"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.169" level="INFO">Set request header "x-csod-default-culture-id" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:58.170" starttime="20171002 15:47:58.168"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:58.172" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:58.172" starttime="20171002 15:47:58.171"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_GetCandidateId1},"Status": ${SQL_GetCandidateId1Status}}]</arg>
</arguments>
<msg timestamp="20171002 15:47:58.174" level="INFO">Request body set to "[{"UserId": 669,"Status": 512}]".</msg>
<status status="PASS" endtime="20171002 15:47:58.175" starttime="20171002 15:47:58.173"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates/status</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:58.293" starttime="20171002 15:47:58.176"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:58.295" level="INFO">${resBody} = [{"UserId":669,"FirstName":"Devin","LastName":"Harrison","Ref":"Dharrison","TypeId":0,"UserStatusId":0,"CandidateStatusId":512,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null...</msg>
<status status="PASS" endtime="20171002 15:47:58.295" starttime="20171002 15:47:58.294"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT status_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} AND user_id = ${SQL_GetCandidateId1} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidate1Status_After}</var>
</assign>
<msg timestamp="20171002 15:47:58.303" level="INFO">${SQL_GetCandidate1Status_After} = 512</msg>
<status status="PASS" endtime="20171002 15:47:58.303" starttime="20171002 15:47:58.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidate1Status_After}</arg>
<arg>${SQL_GetCandidate1Status_After}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.305" level="INFO">${SQL_GetCandidate1Status_After} = 512</msg>
<status status="PASS" endtime="20171002 15:47:58.305" starttime="20171002 15:47:58.304"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'== '${SQL_GetCandidateId1Status}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.314" level="INFO">Set test message to:
The 512 matches with 512</msg>
<status status="PASS" endtime="20171002 15:47:58.314" starttime="20171002 15:47:58.313"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:58.315" starttime="20171002 15:47:58.311"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:58.315" starttime="20171002 15:47:58.306"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'&lt;&gt; '${SQL_GetCandidateId1Status}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_GetCandidate1Status_After} did not match ${SQL_GetCandidateId1Status}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:58.320" starttime="20171002 15:47:58.316"></status>
</kw>
<kw name="Close" library="SQLlibrary">
<status status="PASS" endtime="20171002 15:47:58.327" starttime="20171002 15:47:58.320"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:58.327" starttime="20171002 15:47:58.086"></status>
</kw>
<doc>*Name:*
PUT-API_TP_Rename_Access_NotActive

*Description:*
Access: Verify failure when actor not active

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>PUT</tag>
<tag>testrailid=24455</tag>
</tags>
<status status="PASS" endtime="20171002 15:47:58.328" critical="yes" starttime="20171002 15:47:57.950">The 512 matches with 512</status>
</test>
<test id="s1-s1-s1-s1-t19" name="PUT-API_TPC_Status_Set_UC_Elaborate_Status_Value_Placed">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:58.354" starttime="20171002 15:47:58.332"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user)) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:58.363" level="INFO">${SQL_GET_USERID} = 39</msg>
<status status="PASS" endtime="20171002 15:47:58.364" starttime="20171002 15:47:58.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.365" level="INFO">39</msg>
<status status="PASS" endtime="20171002 15:47:58.365" starttime="20171002 15:47:58.364"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:58.369" level="INFO">${SQL_GET_USER_CULTURE} = 2</msg>
<status status="PASS" endtime="20171002 15:47:58.369" starttime="20171002 15:47:58.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.371" level="INFO">${SQL_GET_USERID} = 39</msg>
<status status="PASS" endtime="20171002 15:47:58.371" starttime="20171002 15:47:58.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.374" level="INFO">${SQL_GET_USER_CULTURE} = 2</msg>
<status status="PASS" endtime="20171002 15:47:58.374" starttime="20171002 15:47:58.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.376" level="INFO">2</msg>
<status status="PASS" endtime="20171002 15:47:58.376" starttime="20171002 15:47:58.375"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:58.379" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:58.380" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:58.380" starttime="20171002 15:47:58.378"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.381" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:58.382" starttime="20171002 15:47:58.381"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.383" level="INFO">Set request header "X-USERID" to "39"</msg>
<status status="PASS" endtime="20171002 15:47:58.383" starttime="20171002 15:47:58.382"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.385" level="INFO">Set request header "X-CULTUREID" to "2"</msg>
<status status="PASS" endtime="20171002 15:47:58.385" starttime="20171002 15:47:58.384"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:58.385" starttime="20171002 15:47:58.332"></status>
</kw>
<kw name="REST_AuthToken" library="SMP_Keywords">
<doc>*REST_AuthToken:*</doc>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:58.389" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:58.389" starttime="20171002 15:47:58.388"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:58.394" level="INFO">Request body set to "{   "UserId": 39,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_39",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 }".</msg>
<status status="PASS" endtime="20171002 15:47:58.394" starttime="20171002 15:47:58.390"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/cornerstone-auth-api/v1</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:58.410" starttime="20171002 15:47:58.395"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:58.412" starttime="20171002 15:47:58.411"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:58.413" level="INFO">${resBody} = </msg>
<status status="PASS" endtime="20171002 15:47:58.413" starttime="20171002 15:47:58.412"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:58.414" starttime="20171002 15:47:58.414"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:58.415" starttime="20171002 15:47:58.386"></status>
</kw>
<kw name="PUT_TalentPool_Candidate_Status_Set_Value_Placed" library="SMP_Keywords">
<doc>*PUT_TalentPool_Candidate_Status_Set_Value_Placed:*</doc>
<arguments>
<arg>1024</arg>
<arg>200</arg>
</arguments>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE (owner_id = ${SQL_GET_USERID} OR ou_id IN (SELECT ou_id FROM talent_pool_shared_user WHERE user_id = ${SQL_GET_USERID})) AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1) AND ou.type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20171002 15:47:58.467" level="INFO">${SQL_TalentPoolId} = 550</msg>
<status status="PASS" endtime="20171002 15:47:58.467" starttime="20171002 15:47:58.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.469" level="INFO">${SQL_TalentPoolId} = 550</msg>
<status status="PASS" endtime="20171002 15:47:58.470" starttime="20171002 15:47:58.468"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1}</var>
</assign>
<msg timestamp="20171002 15:47:58.477" level="INFO">${SQL_GetCandidateId1} = 39</msg>
<status status="PASS" endtime="20171002 15:47:58.477" starttime="20171002 15:47:58.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1}</arg>
<arg>${SQL_GetCandidateId1}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.480" level="INFO">${SQL_GetCandidateId1} = 39</msg>
<status status="PASS" endtime="20171002 15:47:58.480" starttime="20171002 15:47:58.479"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT 1024</arg>
</arguments>
<assign>
<var>${SQL_GetCandidateId1Status}</var>
</assign>
<msg timestamp="20171002 15:47:58.483" level="INFO">${SQL_GetCandidateId1Status} = 1024</msg>
<status status="PASS" endtime="20171002 15:47:58.483" starttime="20171002 15:47:58.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidateId1Status}</arg>
<arg>${SQL_GetCandidateId1Status}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.485" level="INFO">${SQL_GetCandidateId1Status} = 1024</msg>
<status status="PASS" endtime="20171002 15:47:58.485" starttime="20171002 15:47:58.484"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:58.486" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:58.486" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:58.487" starttime="20171002 15:47:58.485"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_corpid}</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.488" level="INFO">Set request header "x-csod-corp-id" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:58.489" starttime="20171002 15:47:58.488"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_userid}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.490" level="INFO">Set request header "x-csod-user-id" to "39"</msg>
<status status="PASS" endtime="20171002 15:47:58.490" starttime="20171002 15:47:58.489"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${api_global_parameter_cultureid}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.492" level="INFO">Set request header "x-csod-default-culture-id" to "2"</msg>
<status status="PASS" endtime="20171002 15:47:58.492" starttime="20171002 15:47:58.491"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>content-type</arg>
<arg>\ application/json</arg>
</arguments>
<msg timestamp="20171002 15:47:58.493" level="INFO">Set request header "content-type" to " application/json"</msg>
<status status="PASS" endtime="20171002 15:47:58.493" starttime="20171002 15:47:58.493"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>[{"UserId": ${SQL_GetCandidateId1},"Status": ${SQL_GetCandidateId1Status}}]</arg>
</arguments>
<msg timestamp="20171002 15:47:58.495" level="INFO">Request body set to "[{"UserId": 39,"Status": 1024}]".</msg>
<status status="PASS" endtime="20171002 15:47:58.495" starttime="20171002 15:47:58.495"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>/talentpool-api/talentpools/${SQL_TalentPoolId}/candidates/status</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:58.624" starttime="20171002 15:47:58.496"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>${RESPONSE_POST}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:58.626" starttime="20171002 15:47:58.625"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${resBody}</var>
</assign>
<msg timestamp="20171002 15:47:58.628" level="INFO">${resBody} = [{"UserId":39,"FirstName":"Pat","LastName":"Kelly","Ref":"PKelly","TypeId":0,"UserStatusId":0,"CandidateStatusId":1024,"CandidateStatus":null,"Position":null,"Division":null,"ManagerName":null,"Create...</msg>
<status status="PASS" endtime="20171002 15:47:58.628" starttime="20171002 15:47:58.626"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT status_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId} AND user_id = ${SQL_GetCandidateId1} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GetCandidate1Status_After}</var>
</assign>
<msg timestamp="20171002 15:47:58.637" level="INFO">${SQL_GetCandidate1Status_After} = 1024</msg>
<status status="PASS" endtime="20171002 15:47:58.637" starttime="20171002 15:47:58.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GetCandidate1Status_After}</arg>
<arg>${SQL_GetCandidate1Status_After}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.639" level="INFO">${SQL_GetCandidate1Status_After} = 1024</msg>
<status status="PASS" endtime="20171002 15:47:58.640" starttime="20171002 15:47:58.638"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'== '${SQL_GetCandidateId1Status}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_GetCandidate1Status_After} matches with ${SQL_GetCandidateId1Status}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.646" level="INFO">Set test message to:
The 1024 matches with 1024</msg>
<status status="PASS" endtime="20171002 15:47:58.647" starttime="20171002 15:47:58.646"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:58.647" starttime="20171002 15:47:58.644"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:58.648" starttime="20171002 15:47:58.640"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_GetCandidate1Status_After}'&lt;&gt; '${SQL_GetCandidateId1Status}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_GetCandidate1Status_After} did not match ${SQL_GetCandidateId1Status}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:58.652" starttime="20171002 15:47:58.648"></status>
</kw>
<kw name="Close" library="SQLlibrary">
<status status="PASS" endtime="20171002 15:47:58.660" starttime="20171002 15:47:58.653"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:58.660" starttime="20171002 15:47:58.423"></status>
</kw>
<tags>
<tag>PUT</tag>
<tag>testrailid=24458</tag>
</tags>
<status status="PASS" endtime="20171002 15:47:58.661" critical="yes" starttime="20171002 15:47:58.329">The 1024 matches with 1024</status>
</test>
<test id="s1-s1-s1-s1-t20" name="DELETE-API_TPC_Remove_AlreadyRemoved_All">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:58.687" starttime="20171002 15:47:58.665"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:58.694" level="INFO">${SQL_GET_USERID} = 1</msg>
<status status="PASS" endtime="20171002 15:47:58.695" starttime="20171002 15:47:58.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.696" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:58.696" starttime="20171002 15:47:58.695"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:58.700" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:58.700" starttime="20171002 15:47:58.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.702" level="INFO">${SQL_GET_USERID} = 1</msg>
<status status="PASS" endtime="20171002 15:47:58.702" starttime="20171002 15:47:58.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.704" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:58.704" starttime="20171002 15:47:58.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.705" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:58.706" starttime="20171002 15:47:58.704"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:58.707" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:58.707" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:58.707" starttime="20171002 15:47:58.706"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.709" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:58.709" starttime="20171002 15:47:58.708"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.710" level="INFO">Set request header "X-USERID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:58.710" starttime="20171002 15:47:58.709"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.711" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:58.712" starttime="20171002 15:47:58.711"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:58.712" starttime="20171002 15:47:58.664"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20171002 15:47:58.716" level="INFO">Creating Session using : alias=http, url=http://laxqapexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20171002 15:47:58.718" starttime="20171002 15:47:58.715"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:58.719" starttime="20171002 15:47:58.719"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20171002 15:47:58.722" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20171002 15:47:58.722" starttime="20171002 15:47:58.720"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:58.731" level="INFO">${body} = {   "UserId": 1,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": tr...</msg>
<status status="PASS" endtime="20171002 15:47:58.731" starttime="20171002 15:47:58.723"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20171002 15:47:58.736" level="INFO">Starting new HTTP connection (1): laxqapexmt.office.cyberu.com</msg>
<msg timestamp="20171002 15:47:58.763" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 1,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_1",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20171002 15:47:58.764" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20171002 15:47:58.764" starttime="20171002 15:47:58.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.765" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20171002 15:47:58.765" starttime="20171002 15:47:58.765"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20171002 15:47:58.767" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20171002 15:47:58.767" starttime="20171002 15:47:58.766"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:58.769" starttime="20171002 15:47:58.713"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_AlreadyRemoved_All" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_AlreadyRemoved_All:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:58.797" starttime="20171002 15:47:58.773"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20171002 15:47:58.816" level="INFO">${SQL_TalentPoolId} = 4315</msg>
<status status="PASS" endtime="20171002 15:47:58.817" starttime="20171002 15:47:58.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.819" level="INFO">${SQL_TalentPoolId} = 4315</msg>
<status status="PASS" endtime="20171002 15:47:58.820" starttime="20171002 15:47:58.818"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20171002 15:47:58.848" level="INFO">${SQL_UserToRemove1} = 715</msg>
<status status="PASS" endtime="20171002 15:47:58.848" starttime="20171002 15:47:58.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.850" level="INFO">${SQL_UserToRemove1} = 715</msg>
<status status="PASS" endtime="20171002 15:47:58.850" starttime="20171002 15:47:58.849"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 AND user_id &lt;&gt; ${SQL_UserToRemove1} ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove2}</var>
</assign>
<msg timestamp="20171002 15:47:58.879" level="INFO">${SQL_UserToRemove2} = 760</msg>
<status status="PASS" endtime="20171002 15:47:58.880" starttime="20171002 15:47:58.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove2}</arg>
<arg>${SQL_UserToRemove2}</arg>
</arguments>
<msg timestamp="20171002 15:47:58.882" level="INFO">${SQL_UserToRemove2} = 760</msg>
<status status="PASS" endtime="20171002 15:47:58.882" starttime="20171002 15:47:58.881"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20171002 15:47:58.885" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa01-auto-smp-api | x-csod-user-id=01 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20171002 15:47:58.885" starttime="20171002 15:47:58.883"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20171002 15:47:58.887" level="INFO">Creating Session using : alias=http, url=http://laxqapexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20171002 15:47:58.888" starttime="20171002 15:47:58.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}},{"UserId": ${SQL_UserToRemove2}}]</arg>
</arguments>
<msg timestamp="20171002 15:47:58.889" level="INFO">${body} = [{"UserId": 715},{"UserId": 760}]</msg>
<status status="PASS" endtime="20171002 15:47:58.890" starttime="20171002 15:47:58.888"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20171002 15:47:58.894" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20171002 15:47:58.894" starttime="20171002 15:47:58.890"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20171002 15:47:58.898" level="INFO">Starting new HTTP connection (1): laxqapexmt.office.cyberu.com</msg>
<msg timestamp="20171002 15:47:59.030" level="INFO">Delete Request using : alias=http, uri=/talentpools/4315/candidates, data=[{"UserId": 715},{"UserId": 760}],                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa01-auto-smp-api', u'x-csod-user-id': u'01', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20171002 15:47:59.031" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20171002 15:47:59.031" starttime="20171002 15:47:58.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.033" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20171002 15:47:59.034" starttime="20171002 15:47:59.032"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20171002 15:47:59.035" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20171002 15:47:59.036" starttime="20171002 15:47:59.034"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20171002 15:47:59.040" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20171002 15:47:59.040" starttime="20171002 15:47:59.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.042" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20171002 15:47:59.042" starttime="20171002 15:47:59.041"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20171002 15:47:59.047" level="INFO">${SQL_NUM} = 1</msg>
<status status="PASS" endtime="20171002 15:47:59.047" starttime="20171002 15:47:59.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.048" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:59.049" starttime="20171002 15:47:59.048"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.055" level="INFO">Set test message to:
The 1 matches with 1</msg>
<status status="PASS" endtime="20171002 15:47:59.055" starttime="20171002 15:47:59.054"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:59.055" starttime="20171002 15:47:59.053"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:59.056" starttime="20171002 15:47:59.049"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:59.061" starttime="20171002 15:47:59.057"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:59.062" starttime="20171002 15:47:58.772"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_AlreadyRemoved_All

*Description:*
Verify success when multiple removed users are already removed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24463</tag>
</tags>
<status status="PASS" endtime="20171002 15:47:59.062" critical="yes" starttime="20171002 15:47:58.662">The 1 matches with 1</status>
</test>
<test id="s1-s1-s1-s1-t21" name="DELETE-API_TPC_Remove_AlreadyRemoved_Single">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:59.087" starttime="20171002 15:47:59.067"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:59.099" level="INFO">${SQL_GET_USERID} = 43</msg>
<status status="PASS" endtime="20171002 15:47:59.100" starttime="20171002 15:47:59.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.101" level="INFO">43</msg>
<status status="PASS" endtime="20171002 15:47:59.102" starttime="20171002 15:47:59.100"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:59.104" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:59.105" starttime="20171002 15:47:59.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.106" level="INFO">${SQL_GET_USERID} = 43</msg>
<status status="PASS" endtime="20171002 15:47:59.106" starttime="20171002 15:47:59.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.108" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:59.108" starttime="20171002 15:47:59.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.109" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:59.110" starttime="20171002 15:47:59.109"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:59.111" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:59.112" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:59.112" starttime="20171002 15:47:59.111"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.113" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:59.114" starttime="20171002 15:47:59.113"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.115" level="INFO">Set request header "X-USERID" to "43"</msg>
<status status="PASS" endtime="20171002 15:47:59.115" starttime="20171002 15:47:59.114"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.116" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:59.117" starttime="20171002 15:47:59.116"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:59.117" starttime="20171002 15:47:59.066"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20171002 15:47:59.122" level="INFO">Creating Session using : alias=http, url=http://laxqapexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20171002 15:47:59.123" starttime="20171002 15:47:59.121"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:59.125" starttime="20171002 15:47:59.125"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20171002 15:47:59.127" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20171002 15:47:59.128" starttime="20171002 15:47:59.126"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:59.133" level="INFO">${body} = {   "UserId": 43,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": t...</msg>
<status status="PASS" endtime="20171002 15:47:59.133" starttime="20171002 15:47:59.128"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20171002 15:47:59.137" level="INFO">Starting new HTTP connection (1): laxqapexmt.office.cyberu.com</msg>
<msg timestamp="20171002 15:47:59.146" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 43,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_43",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20171002 15:47:59.147" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20171002 15:47:59.147" starttime="20171002 15:47:59.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.149" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20171002 15:47:59.150" starttime="20171002 15:47:59.148"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20171002 15:47:59.152" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20171002 15:47:59.154" starttime="20171002 15:47:59.151"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:59.154" starttime="20171002 15:47:59.120"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_AlreadyRemoved_Single" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_AlreadyRemoved_Single:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:59.179" starttime="20171002 15:47:59.159"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20171002 15:47:59.202" level="INFO">${SQL_TalentPoolId} = 3189</msg>
<status status="PASS" endtime="20171002 15:47:59.202" starttime="20171002 15:47:59.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.204" level="INFO">${SQL_TalentPoolId} = 3189</msg>
<status status="PASS" endtime="20171002 15:47:59.204" starttime="20171002 15:47:59.203"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE user_id &gt; 0 AND user_id NOT IN (SELECT user_id FROM ou_user WHERE ou_id = ${SQL_TalentPoolId}) AND user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20171002 15:47:59.226" level="INFO">${SQL_UserToRemove1} = 20</msg>
<status status="PASS" endtime="20171002 15:47:59.227" starttime="20171002 15:47:59.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.229" level="INFO">${SQL_UserToRemove1} = 20</msg>
<status status="PASS" endtime="20171002 15:47:59.230" starttime="20171002 15:47:59.228"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20171002 15:47:59.232" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa01-auto-smp-api | x-csod-user-id=043 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20171002 15:47:59.233" starttime="20171002 15:47:59.231"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20171002 15:47:59.234" level="INFO">Creating Session using : alias=http, url=http://laxqapexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20171002 15:47:59.236" starttime="20171002 15:47:59.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20171002 15:47:59.238" level="INFO">${body} = [{"UserId": 20}]</msg>
<status status="PASS" endtime="20171002 15:47:59.238" starttime="20171002 15:47:59.237"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20171002 15:47:59.242" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20171002 15:47:59.242" starttime="20171002 15:47:59.239"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20171002 15:47:59.248" level="INFO">Starting new HTTP connection (1): laxqapexmt.office.cyberu.com</msg>
<msg timestamp="20171002 15:47:59.351" level="INFO">Delete Request using : alias=http, uri=/talentpools/3189/candidates, data=[{"UserId": 20}],                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa01-auto-smp-api', u'x-csod-user-id': u'043', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20171002 15:47:59.351" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20171002 15:47:59.351" starttime="20171002 15:47:59.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.353" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20171002 15:47:59.354" starttime="20171002 15:47:59.352"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20171002 15:47:59.356" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20171002 15:47:59.356" starttime="20171002 15:47:59.354"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20171002 15:47:59.360" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20171002 15:47:59.360" starttime="20171002 15:47:59.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.362" level="INFO">${SQL_CandidateCountAfter} = 1</msg>
<status status="PASS" endtime="20171002 15:47:59.362" starttime="20171002 15:47:59.361"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}+0</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20171002 15:47:59.367" level="INFO">${SQL_NUM} = 1</msg>
<status status="PASS" endtime="20171002 15:47:59.368" starttime="20171002 15:47:59.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.370" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:59.371" starttime="20171002 15:47:59.370"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.383" level="INFO">Set test message to:
The 1 matches with 1</msg>
<status status="PASS" endtime="20171002 15:47:59.383" starttime="20171002 15:47:59.381"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:59.384" starttime="20171002 15:47:59.379"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:59.385" starttime="20171002 15:47:59.372"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:59.392" starttime="20171002 15:47:59.386"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:59.394" starttime="20171002 15:47:59.158"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_AlreadyRemoved_Single

*Description:*
Verify success when single removed user is already removed

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24464</tag>
</tags>
<status status="PASS" endtime="20171002 15:47:59.394" critical="yes" starttime="20171002 15:47:59.064">The 1 matches with 1</status>
</test>
<test id="s1-s1-s1-s1-t22" name="DELETE-APIi_TPC_Remove_BaseCase_InputVsDatabase">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:59.430" starttime="20171002 15:47:59.403"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:59.439" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20171002 15:47:59.439" starttime="20171002 15:47:59.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.442" level="INFO">415</msg>
<status status="PASS" endtime="20171002 15:47:59.442" starttime="20171002 15:47:59.441"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:59.445" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:59.445" starttime="20171002 15:47:59.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.447" level="INFO">${SQL_GET_USERID} = 415</msg>
<status status="PASS" endtime="20171002 15:47:59.447" starttime="20171002 15:47:59.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.449" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:59.450" starttime="20171002 15:47:59.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.451" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:59.451" starttime="20171002 15:47:59.450"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:59.452" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:59.452" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:59.453" starttime="20171002 15:47:59.452"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.454" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:59.454" starttime="20171002 15:47:59.453"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.456" level="INFO">Set request header "X-USERID" to "415"</msg>
<status status="PASS" endtime="20171002 15:47:59.456" starttime="20171002 15:47:59.455"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.458" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:59.458" starttime="20171002 15:47:59.457"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:59.459" starttime="20171002 15:47:59.401"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20171002 15:47:59.461" level="INFO">Creating Session using : alias=http, url=http://laxqapexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20171002 15:47:59.462" starttime="20171002 15:47:59.461"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:59.463" starttime="20171002 15:47:59.463"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20171002 15:47:59.465" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20171002 15:47:59.465" starttime="20171002 15:47:59.464"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:59.469" level="INFO">${body} = {   "UserId": 415,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": ...</msg>
<status status="PASS" endtime="20171002 15:47:59.470" starttime="20171002 15:47:59.465"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20171002 15:47:59.473" level="INFO">Starting new HTTP connection (1): laxqapexmt.office.cyberu.com</msg>
<msg timestamp="20171002 15:47:59.491" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 415,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_415",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20171002 15:47:59.492" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20171002 15:47:59.492" starttime="20171002 15:47:59.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.494" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20171002 15:47:59.494" starttime="20171002 15:47:59.493"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20171002 15:47:59.496" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20171002 15:47:59.496" starttime="20171002 15:47:59.495"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:59.497" starttime="20171002 15:47:59.460"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_BaseCase_InputVsDatabase" library="SMP_Keywords">
<doc>*DELETE_TalentPool_Candidates_Api_Remove_BaseCase_InputVsDatabase:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:59.522" starttime="20171002 15:47:59.502"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND owner_id = ${SQL_GET_USERID} AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20171002 15:47:59.544" level="INFO">${SQL_TalentPoolId} = 7007</msg>
<status status="PASS" endtime="20171002 15:47:59.544" starttime="20171002 15:47:59.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.546" level="INFO">${SQL_TalentPoolId} = 7007</msg>
<status status="PASS" endtime="20171002 15:47:59.546" starttime="20171002 15:47:59.545"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_user.user_id FROM ou_user LEFT JOIN users ON ou_user.user_id = users.user_id WHERE users.user_id &gt; 0 AND ou_user.ou_id = ${SQL_TalentPoolId} AND users.user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND users.status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20171002 15:47:59.566" level="INFO">${SQL_UserToRemove1} = 884</msg>
<status status="PASS" endtime="20171002 15:47:59.567" starttime="20171002 15:47:59.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.570" level="INFO">${SQL_UserToRemove1} = 884</msg>
<status status="PASS" endtime="20171002 15:47:59.570" starttime="20171002 15:47:59.568"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20171002 15:47:59.575" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa01-auto-smp-api | x-csod-user-id=0415 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20171002 15:47:59.575" starttime="20171002 15:47:59.571"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20171002 15:47:59.577" level="INFO">Creating Session using : alias=http, url=http://laxqapexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20171002 15:47:59.605" starttime="20171002 15:47:59.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{"UserId": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20171002 15:47:59.608" level="INFO">${body} = [{"UserId": 884}]</msg>
<status status="PASS" endtime="20171002 15:47:59.608" starttime="20171002 15:47:59.606"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20171002 15:47:59.613" level="INFO">${SQL_CandidateCountBefore} = 1</msg>
<status status="PASS" endtime="20171002 15:47:59.614" starttime="20171002 15:47:59.609"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20171002 15:47:59.620" level="INFO">Starting new HTTP connection (1): laxqapexmt.office.cyberu.com</msg>
<msg timestamp="20171002 15:47:59.718" level="INFO">Delete Request using : alias=http, uri=/talentpools/7007/candidates, data=[{"UserId": 884}],                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa01-auto-smp-api', u'x-csod-user-id': u'0415', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20171002 15:47:59.718" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20171002 15:47:59.718" starttime="20171002 15:47:59.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.720" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20171002 15:47:59.721" starttime="20171002 15:47:59.719"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20171002 15:47:59.722" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20171002 15:47:59.723" starttime="20171002 15:47:59.721"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT (user_id) FROM ou_user WHERE ou_id=${SQL_TalentPoolId}</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountAfter}</var>
</assign>
<msg timestamp="20171002 15:47:59.726" level="INFO">${SQL_CandidateCountAfter} = 0</msg>
<status status="PASS" endtime="20171002 15:47:59.726" starttime="20171002 15:47:59.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_CandidateCountAfter}</arg>
<arg>${SQL_CandidateCountAfter}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.728" level="INFO">${SQL_CandidateCountAfter} = 0</msg>
<status status="PASS" endtime="20171002 15:47:59.728" starttime="20171002 15:47:59.727"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${SQL_CandidateCountBefore}-1</arg>
</arguments>
<assign>
<var>${SQL_NUM}</var>
</assign>
<msg timestamp="20171002 15:47:59.735" level="INFO">${SQL_NUM} = 0</msg>
<status status="PASS" endtime="20171002 15:47:59.735" starttime="20171002 15:47:59.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_NUM}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.737" level="INFO">0</msg>
<status status="PASS" endtime="20171002 15:47:59.737" starttime="20171002 15:47:59.736"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'=='${SQL_NUM}'</arg>
<arg>Utility Set Test Message</arg>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Utility Set Test Message" library="UtilityKeywords">
<arguments>
<arg>The ${SQL_CandidateCountAfter} matches with ${SQL_NUM}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>${testMsg}</arg>
<arg>${append}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.743" level="INFO">Set test message to:
The 0 matches with 0</msg>
<status status="PASS" endtime="20171002 15:47:59.743" starttime="20171002 15:47:59.742"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:59.744" starttime="20171002 15:47:59.741"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:59.744" starttime="20171002 15:47:59.738"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SQL_CandidateCountAfter}'&lt;&gt;'${SQL_NUM}'</arg>
<arg>Fail</arg>
<arg>The ${SQL_CandidateCountAfter} did NOT matches with ${SQL_NUM}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:59.751" starttime="20171002 15:47:59.745"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:59.751" starttime="20171002 15:47:59.501"></status>
</kw>
<doc>*Name:*
Api_TPC_Remove_AlreadyRemoved_SubSet

*Description:*
Verify successful input user ends up in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24466</tag>
</tags>
<status status="PASS" endtime="20171002 15:47:59.752" critical="yes" starttime="20171002 15:47:59.398">The 0 matches with 0</status>
</test>
<test id="s1-s1-s1-s1-t23" name="DELETE-API_TP_Delete_Access_DoesNotExist">
<kw name="REST_NOAUTH_NonExistentUser" library="SMP_Keywords">
<doc>*REST_NOAUTH_NonExistentUser:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:59.776" starttime="20171002 15:47:59.756"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(user_id)+1000 FROM users</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:59.784" level="INFO">${SQL_GET_USERID} = 1886</msg>
<status status="PASS" endtime="20171002 15:47:59.784" starttime="20171002 15:47:59.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.787" level="INFO">1886</msg>
<status status="PASS" endtime="20171002 15:47:59.787" starttime="20171002 15:47:59.785"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT 1</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:59.788" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:59.788" starttime="20171002 15:47:59.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.791" level="INFO">${SQL_GET_USERID} = 1886</msg>
<status status="PASS" endtime="20171002 15:47:59.791" starttime="20171002 15:47:59.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.793" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:59.793" starttime="20171002 15:47:59.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.794" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:59.796" starttime="20171002 15:47:59.794"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:59.796" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:59.797" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:59.797" starttime="20171002 15:47:59.796"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.799" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:59.799" starttime="20171002 15:47:59.798"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.802" level="INFO">Set request header "X-USERID" to "1886"</msg>
<status status="PASS" endtime="20171002 15:47:59.802" starttime="20171002 15:47:59.801"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.803" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:59.803" starttime="20171002 15:47:59.802"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:59.804" starttime="20171002 15:47:59.755"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20171002 15:47:59.806" level="INFO">Creating Session using : alias=http, url=http://laxqapexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20171002 15:47:59.808" starttime="20171002 15:47:59.805"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:59.809" starttime="20171002 15:47:59.808"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20171002 15:47:59.810" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20171002 15:47:59.811" starttime="20171002 15:47:59.810"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:47:59.816" level="INFO">${body} = {   "UserId": 1886,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3":...</msg>
<status status="PASS" endtime="20171002 15:47:59.816" starttime="20171002 15:47:59.811"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20171002 15:47:59.820" level="INFO">Starting new HTTP connection (1): laxqapexmt.office.cyberu.com</msg>
<msg timestamp="20171002 15:47:59.831" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 1886,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_1886",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20171002 15:47:59.832" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20171002 15:47:59.834" starttime="20171002 15:47:59.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.835" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20171002 15:47:59.836" starttime="20171002 15:47:59.835"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20171002 15:47:59.838" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20171002 15:47:59.839" starttime="20171002 15:47:59.837"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:59.839" starttime="20171002 15:47:59.805"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Delete_Access_DoesNotExist" library="SMP_Keywords">
<doc>*DELETE_Api_TP_Delete_Access_DoesNotExist:*</doc>
<arguments>
<arg>401</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:59.871" starttime="20171002 15:47:59.844"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE type_id = 131072 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20171002 15:47:59.887" level="INFO">${SQL_TalentPoolId} = 9481</msg>
<status status="PASS" endtime="20171002 15:47:59.887" starttime="20171002 15:47:59.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.890" level="INFO">${SQL_TalentPoolId} = 9481</msg>
<status status="PASS" endtime="20171002 15:47:59.890" starttime="20171002 15:47:59.888"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20171002 15:47:59.894" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa01-auto-smp-api | x-csod-user-id=01886 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20171002 15:47:59.894" starttime="20171002 15:47:59.891"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20171002 15:47:59.896" level="INFO">Creating Session using : alias=http, url=http://laxqapexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20171002 15:47:59.897" starttime="20171002 15:47:59.895"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT(*) FROM ou WHERE ou.type_id = 131072</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20171002 15:47:59.907" level="INFO">${SQL_CandidateCountBefore} = 6599</msg>
<status status="PASS" endtime="20171002 15:47:59.907" starttime="20171002 15:47:59.899"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20171002 15:47:59.912" level="INFO">Starting new HTTP connection (1): laxqapexmt.office.cyberu.com</msg>
<msg timestamp="20171002 15:47:59.919" level="INFO">Delete Request using : alias=http, uri=/talentpools/9481, data={   "UserId": 1886,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_1886",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa01-auto-smp-api', u'x-csod-user-id': u'01886', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20171002 15:47:59.920" level="INFO">${resp} = &lt;Response [503]&gt;</msg>
<status status="PASS" endtime="20171002 15:47:59.921" starttime="20171002 15:47:59.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.923" level="INFO">&lt;Response [503]&gt;</msg>
<status status="PASS" endtime="20171002 15:47:59.923" starttime="20171002 15:47:59.922"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${RESPONSE_POST}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.925" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20171002 15:47:59.926" level="FAIL">503 != 401</msg>
<status status="FAIL" endtime="20171002 15:47:59.927" starttime="20171002 15:47:59.924"></status>
</kw>
<status status="FAIL" endtime="20171002 15:47:59.927" starttime="20171002 15:47:59.843"></status>
</kw>
<doc>*Name:*
Api_TP_Delete_Access_DoesNotExist

*Description:*
Access: Verify error when user id is not in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24471</tag>
</tags>
<status status="FAIL" endtime="20171002 15:47:59.928" critical="yes" starttime="20171002 15:47:59.754">503 != 401</status>
</test>
<test id="s1-s1-s1-s1-t24" name="DELETE-API_TP_Del_Input_TPId_DoesNotExist">
<kw name="REST_NOAUTH_Random_Users_with_Talent_Pools" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:59.955" starttime="20171002 15:47:59.933"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 owner_id FROM ou JOIN users ON owner_id = user_id WHERE users.culture_lang_id IS NOT NULL AND ou.type_id = 131072 AND culture_lang_id = 1 GROUP BY owner_id HAVING COUNT(*) &gt; 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:47:59.964" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20171002 15:47:59.964" starttime="20171002 15:47:59.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.965" level="INFO">25</msg>
<status status="PASS" endtime="20171002 15:47:59.966" starttime="20171002 15:47:59.965"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:47:59.969" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:59.969" starttime="20171002 15:47:59.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.972" level="INFO">${SQL_GET_USERID} = 25</msg>
<status status="PASS" endtime="20171002 15:47:59.972" starttime="20171002 15:47:59.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.974" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:47:59.974" starttime="20171002 15:47:59.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.976" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:47:59.976" starttime="20171002 15:47:59.975"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:47:59.979" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:47:59.979" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:47:59.980" starttime="20171002 15:47:59.977"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.981" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:47:59.981" starttime="20171002 15:47:59.980"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.983" level="INFO">Set request header "X-USERID" to "25"</msg>
<status status="PASS" endtime="20171002 15:47:59.983" starttime="20171002 15:47:59.982"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:47:59.985" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:47:59.986" starttime="20171002 15:47:59.984"></status>
</kw>
<status status="PASS" endtime="20171002 15:47:59.987" starttime="20171002 15:47:59.932"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20171002 15:47:59.991" level="INFO">Creating Session using : alias=http, url=http://laxqapexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20171002 15:47:59.992" starttime="20171002 15:47:59.990"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20171002 15:47:59.994" starttime="20171002 15:47:59.994"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20171002 15:47:59.997" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20171002 15:47:59.997" starttime="20171002 15:47:59.995"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:48:00.006" level="INFO">${body} = {   "UserId": 25,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": t...</msg>
<status status="PASS" endtime="20171002 15:48:00.006" starttime="20171002 15:47:59.998"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20171002 15:48:00.013" level="INFO">Starting new HTTP connection (1): laxqapexmt.office.cyberu.com</msg>
<msg timestamp="20171002 15:48:00.025" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 25,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_25",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20171002 15:48:00.027" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20171002 15:48:00.027" starttime="20171002 15:48:00.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20171002 15:48:00.029" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20171002 15:48:00.030" starttime="20171002 15:48:00.028"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20171002 15:48:00.034" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20171002 15:48:00.034" starttime="20171002 15:48:00.030"></status>
</kw>
<status status="PASS" endtime="20171002 15:48:00.035" starttime="20171002 15:47:59.989"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Delete_Input_TPId_DoesNotExist" library="SMP_Keywords">
<doc>*DELETE_Api_TP_Delete_Access_NotOwner:*</doc>
<arguments>
<arg>404</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:48:00.084" starttime="20171002 15:48:00.052"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT MAX(ou_id)+1000 FROM ou</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20171002 15:48:00.099" level="INFO">${SQL_TalentPoolId} = 16433</msg>
<status status="PASS" endtime="20171002 15:48:00.101" starttime="20171002 15:48:00.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20171002 15:48:00.105" level="INFO">${SQL_TalentPoolId} = 16433</msg>
<status status="PASS" endtime="20171002 15:48:00.105" starttime="20171002 15:48:00.101"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20171002 15:48:00.111" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa01-auto-smp-api | x-csod-user-id=025 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20171002 15:48:00.112" starttime="20171002 15:48:00.107"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20171002 15:48:00.114" level="INFO">Creating Session using : alias=http, url=http://laxqapexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20171002 15:48:00.116" starttime="20171002 15:48:00.113"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT COUNT(*) FROM ou WHERE ou.type_id = 131072</arg>
</arguments>
<assign>
<var>${SQL_CandidateCountBefore}</var>
</assign>
<msg timestamp="20171002 15:48:00.132" level="INFO">${SQL_CandidateCountBefore} = 6599</msg>
<status status="PASS" endtime="20171002 15:48:00.132" starttime="20171002 15:48:00.117"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20171002 15:48:00.140" level="INFO">Starting new HTTP connection (1): laxqapexmt.office.cyberu.com</msg>
<msg timestamp="20171002 15:48:00.149" level="INFO">Delete Request using : alias=http, uri=/talentpools/16433, data={   "UserId": 25,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_25",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa01-auto-smp-api', u'x-csod-user-id': u'025', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20171002 15:48:00.150" level="INFO">${resp} = &lt;Response [503]&gt;</msg>
<status status="PASS" endtime="20171002 15:48:00.152" starttime="20171002 15:48:00.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20171002 15:48:00.154" level="INFO">&lt;Response [503]&gt;</msg>
<status status="PASS" endtime="20171002 15:48:00.155" starttime="20171002 15:48:00.153"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${RESPONSE_POST}</arg>
</arguments>
<msg timestamp="20171002 15:48:00.157" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20171002 15:48:00.158" level="FAIL">503 != 404</msg>
<status status="FAIL" endtime="20171002 15:48:00.159" starttime="20171002 15:48:00.156"></status>
</kw>
<status status="FAIL" endtime="20171002 15:48:00.160" starttime="20171002 15:48:00.051"></status>
</kw>
<doc>*Name:*
Api_TP_Del_Input_TPId_DoesNotExist

*Description:*
Input: Verify error when talent pool id is not in database

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24473</tag>
</tags>
<status status="FAIL" endtime="20171002 15:48:00.160" critical="yes" starttime="20171002 15:47:59.930">503 != 404</status>
</test>
<test id="s1-s1-s1-s1-t25" name="DELETE-API_TPC_Remove_BaseCase_InputVsOutput_Value">
<kw name="REST_NOAUTH_Random_Active_Owner_OR_Shared_With_Candidates" library="SMP_Keywords">
<doc>*REST_NOAUTH:*</doc>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:48:00.206" starttime="20171002 15:48:00.168"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 user_id FROM users WHERE culture_lang_id IS NOT NULL AND status_id = 1 AND (user_id IN (SELECT DISTINCT owner_id FROM ou WHERE type_id = 131072 AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1)) OR user_id IN (SELECT DISTINCT user_id FROM talent_pool_shared_user WHERE ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt;= 1))) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_GET_USERID}</var>
</assign>
<msg timestamp="20171002 15:48:00.305" level="INFO">${SQL_GET_USERID} = 46</msg>
<status status="PASS" endtime="20171002 15:48:00.305" starttime="20171002 15:48:00.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:48:00.310" level="INFO">46</msg>
<status status="PASS" endtime="20171002 15:48:00.310" starttime="20171002 15:48:00.308"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT culture_lang_id FROM users WHERE user_id = ${SQL_GET_USERID}</arg>
</arguments>
<assign>
<var>${SQL_GET_USER_CULTURE}</var>
</assign>
<msg timestamp="20171002 15:48:00.315" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:48:00.317" starttime="20171002 15:48:00.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USERID}</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:48:00.318" level="INFO">${SQL_GET_USERID} = 46</msg>
<status status="PASS" endtime="20171002 15:48:00.319" starttime="20171002 15:48:00.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:48:00.321" level="INFO">${SQL_GET_USER_CULTURE} = 1</msg>
<status status="PASS" endtime="20171002 15:48:00.321" starttime="20171002 15:48:00.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:48:00.326" level="INFO">1</msg>
<status status="PASS" endtime="20171002 15:48:00.326" starttime="20171002 15:48:00.324"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${HTTP_CONTEXT}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20171002 15:48:00.329" level="INFO">Host for next HTTP request set to 'laxqapexmt.office.cyberu.com'</msg>
<msg timestamp="20171002 15:48:00.329" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20171002 15:48:00.330" starttime="20171002 15:48:00.327"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CORP</arg>
<arg>${RNOAUTH_CUSTOM_CORP}</arg>
</arguments>
<msg timestamp="20171002 15:48:00.332" level="INFO">Set request header "X-CORP" to "qa01-auto-smp-api"</msg>
<status status="PASS" endtime="20171002 15:48:00.332" starttime="20171002 15:48:00.331"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-USERID</arg>
<arg>${SQL_GET_USERID}</arg>
</arguments>
<msg timestamp="20171002 15:48:00.334" level="INFO">Set request header "X-USERID" to "46"</msg>
<status status="PASS" endtime="20171002 15:48:00.335" starttime="20171002 15:48:00.333"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>X-CULTUREID</arg>
<arg>${SQL_GET_USER_CULTURE}</arg>
</arguments>
<msg timestamp="20171002 15:48:00.337" level="INFO">Set request header "X-CULTUREID" to "1"</msg>
<status status="PASS" endtime="20171002 15:48:00.337" starttime="20171002 15:48:00.335"></status>
</kw>
<status status="PASS" endtime="20171002 15:48:00.339" starttime="20171002 15:48:00.167"></status>
</kw>
<kw name="REST_AuthToken_RequestsLibrary" library="SMP_Keywords">
<doc>*REST_AuthToken_RequestsLibrary:*</doc>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_CSOD_AUTH}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20171002 15:48:00.343" level="INFO">Creating Session using : alias=http, url=http://laxqapexmt.office.cyberu.com/cornerstone-auth-api/v1, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20171002 15:48:00.344" starttime="20171002 15:48:00.341"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Create Session</arg>
<arg>http</arg>
<arg>${HTTP_CONTEXT}</arg>
<arg>debug=3</arg>
</arguments>
<status status="PASS" endtime="20171002 15:48:00.347" starttime="20171002 15:48:00.345"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20171002 15:48:00.349" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" endtime="20171002 15:48:00.349" starttime="20171002 15:48:00.347"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${body}</arg>
<arg>{ \ \ \"UserId\": ${SQL_GET_USERID}, \ \ \"CorpName\": \"${RNOAUTH_CUSTOM_CORP}\", \ \ \"Permissions\": [ \ \ \ \ { \ \ \ \ \ \ \"Id\": -157, \ \ \ \ \ \ \"Constraints\": [ \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 73, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 2, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": true \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 87, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 32, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 111, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 4, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ }, \ \ \ \ \ \ \ \ { \ \ \ \ \ \ \ \ \ \ \"m_Item1\": 150, \ \ \ \ \ \ \ \ \ \ \"m_Item2\": 8, \ \ \ \ \ \ \ \ \ \ \"m_Item3\": false \ \ \ \ \ \ \ \ } \ \ \ \ \ \ ] \ \ \ \ } \ \ ], \ \ \"Token\": \"${RNOAUTH_CUSTOM_CORP}_${SQL_GET_USERID}\", \ \ \"expDt\": \"2018-08-17T16:16:19.550Z\", \ \ \"CultureId\": 0 }</arg>
</arguments>
<msg timestamp="20171002 15:48:00.357" level="INFO">${body} = {   "UserId": 46,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": t...</msg>
<status status="PASS" endtime="20171002 15:48:00.358" starttime="20171002 15:48:00.350"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20171002 15:48:00.362" level="INFO">Starting new HTTP connection (1): laxqapexmt.office.cyberu.com</msg>
<msg timestamp="20171002 15:48:00.373" level="INFO">Put Request using : alias=http, uri=/, data={   "UserId": 46,   "CorpName": "qa01-auto-smp-api",   "Permissions": [     {       "Id": -157,       "Constraints": [         {           "m_Item1": 73,           "m_Item2": 2,           "m_Item3": true         },         {           "m_Item1": 87,           "m_Item2": 32,           "m_Item3": false         },         {           "m_Item1": 111,           "m_Item2": 4,           "m_Item3": false         },         {           "m_Item1": 150,           "m_Item2": 8,           "m_Item3": false         }       ]     }   ],   "Token": "qa01-auto-smp-api_46",   "expDt": "2018-08-17T16:16:19.550Z",   "CultureId": 0 },                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20171002 15:48:00.374" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20171002 15:48:00.374" starttime="20171002 15:48:00.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20171002 15:48:00.377" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20171002 15:48:00.377" starttime="20171002 15:48:00.375"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20171002 15:48:00.380" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20171002 15:48:00.380" starttime="20171002 15:48:00.378"></status>
</kw>
<status status="PASS" endtime="20171002 15:48:00.381" starttime="20171002 15:48:00.340"></status>
</kw>
<kw name="DELETE_TalentPool_Candidates_Remove_2" library="SMP_Keywords">
<doc>*POST_TalentPool_Candidates_Add:*</doc>
<arguments>
<arg>200</arg>
</arguments>
<kw name="Connect" library="SQLlibrary">
<arguments>
<arg>${RNOAUTH_CUSTOM_SERVER}</arg>
<arg>${SQL_DB}</arg>
</arguments>
<status status="PASS" endtime="20171002 15:48:00.413" starttime="20171002 15:48:00.388"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_id FROM ou WHERE ou.type_id = 131072 AND ou_id IN (SELECT ou_id FROM ou_user GROUP BY ou_id HAVING COUNT(ou_id) &gt; 0) ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_TalentPoolId}</var>
</assign>
<msg timestamp="20171002 15:48:00.430" level="INFO">${SQL_TalentPoolId} = 5118</msg>
<status status="PASS" endtime="20171002 15:48:00.430" starttime="20171002 15:48:00.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_TalentPoolId}</arg>
<arg>${SQL_TalentPoolId}</arg>
</arguments>
<msg timestamp="20171002 15:48:00.433" level="INFO">${SQL_TalentPoolId} = 5118</msg>
<status status="PASS" endtime="20171002 15:48:00.434" starttime="20171002 15:48:00.432"></status>
</kw>
<kw name="Execute Raw" library="SQLlibrary">
<arguments>
<arg>SELECT TOP 1 ou_user.user_id FROM ou_user LEFT JOIN users ON ou_user.user_id = users.user_id WHERE users.user_id &gt; 0 AND ou_user.ou_id = ${SQL_TalentPoolId} AND users.user_id NOT IN (SELECT owner_id FROM ou WHERE ou_id = ${SQL_TalentPoolId}) AND users.status_id = 1 ORDER BY NEWID()</arg>
</arguments>
<assign>
<var>${SQL_UserToRemove1}</var>
</assign>
<msg timestamp="20171002 15:48:00.457" level="INFO">${SQL_UserToRemove1} = 635</msg>
<status status="PASS" endtime="20171002 15:48:00.457" starttime="20171002 15:48:00.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SQL_UserToRemove1}</arg>
<arg>${SQL_UserToRemove1}</arg>
</arguments>
<msg timestamp="20171002 15:48:00.460" level="INFO">${SQL_UserToRemove1} = 635</msg>
<status status="PASS" endtime="20171002 15:48:00.461" starttime="20171002 15:48:00.459"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>${api_global_parameter_corpid}=${RNOAUTH_CUSTOM_CORP}</arg>
<arg>${api_global_parameter_userid}=0${SQL_GET_USERID}</arg>
<arg>${api_global_parameter_cultureid}=0${SQL_GET_USER_CULTURE}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20171002 15:48:00.465" level="INFO">&amp;{headers} = { Content-Type=application/json | x-csod-corp-id=qa01-auto-smp-api | x-csod-user-id=046 | x-csod-default-culture-id=01 }</msg>
<status status="PASS" endtime="20171002 15:48:00.465" starttime="20171002 15:48:00.461"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>http</arg>
<arg>${HTTP_CONTEXT_NORMAL}</arg>
<arg>debug=3</arg>
</arguments>
<msg timestamp="20171002 15:48:00.468" level="INFO">Creating Session using : alias=http, url=http://laxqapexmt.office.cyberu.com/talentpool-api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=3 </msg>
<status status="PASS" endtime="20171002 15:48:00.469" starttime="20171002 15:48:00.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${body}</arg>
<arg>[{\"UserId\": ${SQL_UserToRemove1}}]</arg>
</arguments>
<msg timestamp="20171002 15:48:00.471" level="INFO">${body} = [{"UserId": 635}]</msg>
<status status="PASS" endtime="20171002 15:48:00.472" starttime="20171002 15:48:00.470"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>http</arg>
<arg>/talentpools/${SQL_TalentPoolId}/candidates</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20171002 15:48:00.478" level="INFO">Starting new HTTP connection (1): laxqapexmt.office.cyberu.com</msg>
<msg timestamp="20171002 15:48:00.511" level="INFO">Delete Request using : alias=http, uri=/talentpools/5118/candidates, data=[{"UserId": 635}],                     headers={u'Content-Type': u'application/json', u'x-csod-corp-id': u'qa01-auto-smp-api', u'x-csod-user-id': u'046', u'x-csod-default-culture-id': u'01'}, allow_redirects=True </msg>
<msg timestamp="20171002 15:48:00.512" level="INFO">${resp} = &lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20171002 15:48:00.512" starttime="20171002 15:48:00.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20171002 15:48:00.516" level="INFO">&lt;Response [401]&gt;</msg>
<status status="PASS" endtime="20171002 15:48:00.516" starttime="20171002 15:48:00.515"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${RESPONSE_POST}</arg>
</arguments>
<msg timestamp="20171002 15:48:00.519" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20171002 15:48:00.519" level="FAIL">401 != 200</msg>
<status status="FAIL" endtime="20171002 15:48:00.519" starttime="20171002 15:48:00.517"></status>
</kw>
<status status="FAIL" endtime="20171002 15:48:00.521" starttime="20171002 15:48:00.387"></status>
</kw>
<doc>*Name:*
API_TPC_Add_BC_InputVsOutput_Value

*Description:*
Verify successful input user ends up in output

*Run Arguments:*
-d TestResults -v RNOAUTH_HOST:QA01


*NOTE:* The Run Arguments will select what set of data to run durning run time by providing QA01 or QA052 or QA03 as the environment after the scaler RNOAUTH_HOST:
-d TestResults will put the output report.html and log.html in a folder named TestResults.</doc>
<tags>
<tag>DELETE</tag>
<tag>testrailid=24474</tag>
</tags>
<status status="FAIL" endtime="20171002 15:48:00.522" critical="yes" starttime="20171002 15:48:00.163">401 != 200</status>
</test>
<doc>*INSTRUCTIONS: To Run this dynamically add the following line to the Run tab arguments text box area.*



*To Use with TestRail use the following:*

*Patch*
-d TestResults -v RNOAUTH_HOST:QA01 --listener TestRailListener:2386
-d TestResults -v RNOAUTH_HOST:QA01 -v api_global_parameter_profile:qa01  --listener TestRailListener:2386

*Release*
-d TestResults -v RNOAUTH_HOST:QA052 --listener TestRailListener:479
-d TestResults -v RNOAUTH_HOST:QA052_RL -v api_global_parameter_profile:qa052  --listener TestRailListener:479

*Next Release*
-d TestResults -v RNOAUTH_HOST:QA03 --listener TestRailListener:479</doc>
<status status="FAIL" endtime="20171002 15:48:00.528" starttime="20171002 15:47:50.289"></status>
</suite>
<status status="FAIL" endtime="20171002 15:48:00.560" starttime="20171002 15:47:50.286"></status>
</suite>
<status status="FAIL" endtime="20171002 15:48:00.586" starttime="20171002 15:47:50.283"></status>
</suite>
<status status="FAIL" endtime="20171002 15:48:00.610" starttime="20171002 15:47:50.143"></status>
</suite>
<statistics>
<total>
<stat fail="9" pass="16">Critical Tests</stat>
<stat fail="9" pass="16">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="2">ASCII</stat>
<stat fail="3" pass="3">DELETE</stat>
<stat fail="2" pass="5">GET</stat>
<stat fail="0" pass="1">NEGATIVETEST</stat>
<stat fail="4" pass="6">POST</stat>
<stat fail="0" pass="2">PUT</stat>
<stat fail="0" pass="1">testrailid=24406</stat>
<stat fail="0" pass="1">testrailid=24408</stat>
<stat fail="1" pass="0">testrailid=24410</stat>
<stat fail="0" pass="1">testrailid=24413</stat>
<stat fail="0" pass="1">testrailid=24417</stat>
<stat fail="1" pass="0">testrailid=24418</stat>
<stat fail="0" pass="1">testrailid=24420</stat>
<stat fail="1" pass="0">testrailid=24424</stat>
<stat fail="0" pass="1">testrailid=24425</stat>
<stat fail="1" pass="0">testrailid=24430</stat>
<stat fail="0" pass="1">testrailid=24431</stat>
<stat fail="0" pass="1">testrailid=24432</stat>
<stat fail="0" pass="1">testrailid=24437</stat>
<stat fail="0" pass="1">testrailid=24439</stat>
<stat fail="0" pass="1">testrailid=24445</stat>
<stat fail="1" pass="0">testrailid=24446</stat>
<stat fail="1" pass="0">testrailid=24450</stat>
<stat fail="0" pass="1">testrailid=24455</stat>
<stat fail="0" pass="1">testrailid=24458</stat>
<stat fail="0" pass="1">testrailid=24463</stat>
<stat fail="0" pass="1">testrailid=24464</stat>
<stat fail="0" pass="1">testrailid=24466</stat>
<stat fail="1" pass="0">testrailid=24471</stat>
<stat fail="1" pass="0">testrailid=24473</stat>
<stat fail="1" pass="0">testrailid=24474</stat>
</tag>
<suite>
<stat fail="9" id="s1" name="CSOD RobotFramework" pass="16">CSOD RobotFramework</stat>
<stat fail="9" id="s1-s1" name="COMP" pass="16">CSOD RobotFramework.COMP</stat>
<stat fail="9" id="s1-s1-s1" name="TestSuites" pass="16">CSOD RobotFramework.COMP.TestSuites</stat>
<stat fail="9" id="s1-s1-s1-s1" name="SMP-API-Talent Pool" pass="16">CSOD RobotFramework.COMP.TestSuites.SMP-API-Talent Pool</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
